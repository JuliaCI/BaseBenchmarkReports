cset: moving following pidspec: 10847
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.22527849 seconds)
loading group "string"... done (took 0.704327682 seconds)
loading group "linalg"... done (took 7.62493889 seconds)
loading group "parallel"... done (took 0.155965139 seconds)
loading group "find"... done (took 1.210104773 seconds)
loading group "tuple"... done (took 1.80844081 seconds)
loading group "dates"... done (took 1.266616365 seconds)
loading group "micro"... done (took 0.220279443 seconds)
loading group "io"... done (took 0.911096455 seconds)
loading group "scalar"... done (took 38.38312961 seconds)
loading group "sparse"... done (took 12.409230414 seconds)
loading group "broadcast"... done (took 1.01055828 seconds)
loading group "union"... done (took 13.025054182 seconds)
loading group "simd"... done (took 4.868033486 seconds)
loading group "random"... done (took 9.71431313 seconds)
loading group "problem"... done (took 1.909368635 seconds)
loading group "array"... done (took 22.843241161 seconds)
loading group "misc"... done (took 1.857726702 seconds)
loading group "sort"... done (took 3.6726194 seconds)
loading group "collection"... done (took 18.677740286 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.528091208 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124533748 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.133710491 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119807458 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147744143 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118178874 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.126239137 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087431825 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.866575897 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147041623 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11685635 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.399647944 seconds)
done (took 5.398596208 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175389058 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08484007 seconds)
    (2/2) benchmarking "String"...
    done (took 0.085360147 seconds)
  done (took 1.320310324 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.069588987 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127720075 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.070214135 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070691662 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.071317173 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.070747022 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.071364661 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.072112676 seconds)
  done (took 1.70672156 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075708718 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.07274162 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069438983 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.072124546 seconds)
  done (took 1.442596317 seconds)
done (took 5.878510328 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.750817654 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.215245346 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187008568 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.385713215 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128328888 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.169650354 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.653300442 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.314195788 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.187940146 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.077980051 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108301262 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.33859315 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.121167878 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.640942298 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077651712 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091550095 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141975249 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.423690347 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.069996953 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085403868 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091360052 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131621371 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087349733 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076927511 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.146024097 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070645908 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.1328439 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083348522 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068762884 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.215440234 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175464728 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.668950708 seconds)
  done (took 10.300481044 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100991833 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100291734 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07195934 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12838252 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100271994 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072230223 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077905313 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070929409 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092190805 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.131522446 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.093674957 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107543055 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068736371 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072058497 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086341502 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210526907 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082736892 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084061552 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073349396 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081207604 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110935989 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080886187 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.083171615 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082637262 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.131744089 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.185842458 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098839128 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100507907 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069445546 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084981807 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117564583 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131178865 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069405918 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070876826 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128016126 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098278602 seconds)
  done (took 4.742775622 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.963528716 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.14080003 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090403447 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.132459852 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068188978 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108275522 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069198336 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082738118 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.205511638 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.427110031 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.576639233 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.13057895 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112369327 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104956423 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070988978 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071269603 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.071040826 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.45428259 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.100342862 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108726032 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084270809 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073355715 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071957738 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.068682418 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071012133 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067443364 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071121521 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.117335982 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079381702 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.309602404 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121230164 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071415976 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.906237077 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.163904536 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068426094 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.235574915 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.165703116 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091539083 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138155915 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071222463 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068462775 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.156246884 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067673571 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07268197 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.06946158 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085699969 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107819056 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119797546 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06825621 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068913397 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16534533 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067464445 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080713406 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.126421045 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.158658224 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071844114 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.265638102 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.091658366 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073225132 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068638877 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.172686904 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.127741285 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.073273661 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.072051494 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07374019 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07400968 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.393879539 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069151936 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.990174897 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.073637887 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.083426861 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.097727301 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072349564 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072693037 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074819341 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075298923 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.090695735 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068864216 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076458753 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068769369 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069378829 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069751208 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084965516 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067867748 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.06749498 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.480827197 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069706115 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070715548 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068002731 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.092051817 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09839297 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069735804 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068120713 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101723105 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070949119 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.069236385 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069344098 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.085834442 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.072030351 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115881932 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.071599995 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.099787542 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.102003779 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.072002484 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10099067 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083883189 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07068654 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.406795708 seconds)
    (108/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067367331 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.072785976 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.070407502 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068010587 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070432198 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068855509 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080327479 seconds)
  done (took 21.91437869 seconds)
done (took 39.072282694 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.252894001 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079948795 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08028559 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079930106 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.076562293 seconds)
  done (took 1.804933717 seconds)
done (took 3.032922621 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121250755 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098948926 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067424099 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097126821 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067267967 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103507757 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100637014 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.079333449 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099166003 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067914305 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097005335 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.068061654 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067296656 seconds)
  done (took 2.368161704 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086868269 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087063363 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073252136 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085116569 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066233083 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085597148 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084512659 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094263 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086623432 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077064134 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068971743 seconds)
  done (took 2.115250035 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08609206 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08842698 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073650252 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086209647 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06713629 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084540958 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086233998 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090348719 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087403402 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07854644 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068488811 seconds)
  done (took 2.111105288 seconds)
done (took 7.808211952 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.08058806 seconds)
  done (took 1.278880646 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.524991568 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.667738456 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082484458 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.107291334 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.185414938 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.114405734 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.247559286 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087685185 seconds)
  done (took 8.391716504 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.091740246 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071744615 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.083729257 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074327731 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072472141 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.073186993 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073927912 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.074739343 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071967686 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071183609 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072127418 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071346949 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.075261904 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072344517 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07473243 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073501289 seconds)
  done (took 2.479543432 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093545495 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092722549 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075719513 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076857405 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074458639 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074201764 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076596923 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075771218 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073338553 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074912958 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077341866 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075493912 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.074049896 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067701885 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076413196 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078366016 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073604217 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076482913 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077582492 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078094406 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077657664 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068309353 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.076367289 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.078132018 seconds)
  done (took 3.149105222 seconds)
done (took 16.514138281 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.106926425 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070180317 seconds)
  done (took 1.382503688 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082821957 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084224544 seconds)
  done (took 1.384715021 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084020608 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.068270839 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090185322 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079436478 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068927393 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068625533 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089072815 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06860999 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.068184629 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068483797 seconds)
  done (took 1.972731193 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071281549 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078965329 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071783144 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.083477284 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07821607 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.068383058 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076304527 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.072338188 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080289507 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065736999 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073893279 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084664954 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073289441 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086697188 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073774642 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.07166697 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072990735 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070880156 seconds)
  done (took 2.575868645 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068902899 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069346425 seconds)
  done (took 1.36445009 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070889283 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067768573 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070775401 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069732485 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.067750277 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066667293 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.067876771 seconds)
  done (took 1.703253019 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.365881985 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120137743 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.308663696 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07615468 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.085688367 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256088215 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068849861 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.075524943 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.076085047 seconds)
  done (took 2.69589342 seconds)
done (took 14.308136179 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.083218802 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.089096641 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097571372 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.369411333 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.094234969 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069427841 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115835578 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.179165987 seconds)
done (took 2.338539156 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.21197661 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.658630123 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.417616317 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.208615301 seconds)
  done (took 2.513927142 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.330082286 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090264376 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.063568601 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.071899336 seconds)
  done (took 1.796623945 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069030782 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071350878 seconds)
  done (took 1.384316246 seconds)
done (took 7.144505499 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069628959 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.087462647 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.070352687 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.068559308 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.070840421 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.068246467 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.068313633 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.070901335 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.071258701 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.070839592 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.0707759 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070662466 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068261761 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068814554 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069801597 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.069027156 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.068338403 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.18374979 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068763406 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067177756 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068738421 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070048289 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067232353 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067956625 seconds)
  done (took 3.063899352 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085138409 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068759292 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074322163 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.07362809 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072978654 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.075842295 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075897223 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.071324553 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.076291741 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.072711675 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073870631 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073778124 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.072597837 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073771546 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071963029 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073919632 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.074588923 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070196031 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072605459 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073998238 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.075885192 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071268761 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.074010606 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075716051 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073559752 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07389877 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.073404827 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.07078514 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075832514 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.074075812 seconds)
  done (took 3.46293011 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07466399 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.067162606 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.068518696 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074638806 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.067569773 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068345121 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06787387 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.067680977 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068855149 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.068075738 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.070068302 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.067933353 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.068326069 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.068988205 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068882246 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.071527391 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083229144 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067984256 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.068096568 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067807659 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.071006708 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.070895803 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.067829447 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.068385398 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.067921814 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.068230875 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.068374945 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.067990774 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06946339 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.068384952 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.071598971 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.072063567 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.067941283 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.075182603 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.071844729 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.068209585 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.072105723 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.067614176 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068747593 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.068036987 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.067940613 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.068097439 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.067801884 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.075315673 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.068482044 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.069442395 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.068420863 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.069291688 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.069017639 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070606476 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.068124482 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.068109909 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069949403 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.069400606 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.072395718 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.067998873 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.068652741 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.067872688 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.068804091 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067865283 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.067509916 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06843554 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.07068997 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068553177 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.083234406 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.075479192 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.068086953 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069407179 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068698685 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.071306366 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069786819 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.081994326 seconds)
  done (took 6.283487338 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089753424 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087847254 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06817423 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067772677 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06501407 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066939139 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072005304 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067057038 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068499201 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084650712 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066933677 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068083046 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068064205 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070613808 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067579933 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068289928 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075363954 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064678837 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067157945 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070739171 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067130166 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072084863 seconds)
  done (took 2.83014037 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.151262795 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072659123 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10675109 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077929354 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072711186 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077556967 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072695415 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072768865 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072398154 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07018424 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070525394 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073289105 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073435853 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070725561 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070411673 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072384705 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074692887 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072590315 seconds)
  done (took 2.678093885 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07962141 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068779451 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08820837 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068529721 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068823651 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070626177 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072892365 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076975506 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.07325014 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.071052743 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.078808387 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073256661 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.073211972 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070603001 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072788809 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070787277 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.072892921 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070830818 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078712129 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075464407 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074936176 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078256021 seconds)
  done (took 2.886306576 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083736712 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072185323 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08453034 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072124492 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065967756 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068743344 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.074092921 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.070468996 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.074396576 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.072638176 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070951896 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.069204488 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073080862 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070185218 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073199646 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070412638 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072376735 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070366073 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072474648 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066587139 seconds)
  done (took 2.704880227 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089185221 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072623621 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072421435 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07876 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07276212 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072661925 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079085096 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071017718 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071105094 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.091039409 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071032867 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070808692 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077062559 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077744062 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070335865 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077499594 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077527081 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077973043 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071271407 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070510642 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.091191053 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070844706 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077353049 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070882368 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071468857 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070578763 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070643001 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074790813 seconds)
  done (took 3.369485748 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07141916 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069966831 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.067897644 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.068336986 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06750775 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.067666994 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.068340873 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.068307106 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070764538 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.0683924 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.070708365 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.070497854 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07112055 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.071066437 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071025515 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.071354331 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070747387 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06833994 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068302108 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068425565 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06994378 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070097068 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.070658082 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068512879 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068163873 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.070642536 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068402967 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068477796 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070605259 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068349639 seconds)
  done (took 3.346543134 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078168549 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075004236 seconds)
  done (took 1.416305063 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066350455 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082239328 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.065854646 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072908395 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071933557 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071275991 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077147392 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074566619 seconds)
  done (took 1.838157323 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085723218 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080520072 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.071141924 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080960716 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079994863 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086075244 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.138266787 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.071491098 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076385951 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.068641643 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08162513 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068280581 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075575433 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069664791 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074826988 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075688202 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067027226 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.074669832 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070029588 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.067586186 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.0696921 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07730094 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071940227 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.066041454 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071793822 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092932736 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.08047992 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069938282 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07319128 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076365114 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074837907 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.065281115 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070907747 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070374073 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068860524 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.079437109 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085352472 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07421972 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079447197 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071705752 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0797417 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.065896915 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075074699 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.078058663 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081254929 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070641847 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.071563183 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065933611 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.068978564 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.073255752 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066681869 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071045496 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.065999108 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077997735 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074678247 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080103758 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.068872103 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.07114524 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071845134 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072224609 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076413115 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071017175 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071988961 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068618891 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079143187 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074224854 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07731168 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064582743 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.06376246 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.067251456 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078008916 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091210591 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074724182 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.069391637 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069423311 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067194564 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072321841 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069595555 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073877326 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075365551 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.069034613 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073282114 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077256122 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069454943 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072036466 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075544753 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.069057488 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.073873372 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.069099566 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086664401 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067079118 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.070937154 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.068410678 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080245985 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072263418 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067797936 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066944705 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075883121 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06307631 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.0681533 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068767708 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068659465 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077593571 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071628745 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071313478 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075840754 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075183087 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068278487 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070566178 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065190006 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06831934 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06751306 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074291542 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062140719 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071209142 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06904484 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068492069 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075595083 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066218423 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067530173 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075026432 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073220647 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066033024 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064888512 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070840292 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067627893 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069925412 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075188922 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066654538 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062958952 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063176165 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071189466 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066953388 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07110341 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071655927 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070332321 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062709963 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066159323 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071069816 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075786097 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067760658 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068894548 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073525612 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069215094 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067268071 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073988123 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070371828 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067486601 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072038166 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067871305 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062276439 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06877665 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069453071 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065390001 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070352701 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069047245 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068435034 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066999061 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064880326 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071256502 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06713251 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066278104 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067194397 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065711593 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076457315 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068668295 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06237582 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064105717 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.072302654 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065547639 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066087181 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066223188 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.06895428 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066365553 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064636776 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066215341 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069613554 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073130825 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068928646 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066722746 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071162206 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077419562 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065847467 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.0692494 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06612077 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067663865 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066651691 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074904886 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072574271 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069918746 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06858673 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064153675 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071259525 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073619065 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066143058 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064656574 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066360865 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.068961795 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072292045 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069463891 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066592088 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065474656 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068003062 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068876997 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068655969 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065965238 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066137287 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070679036 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065484254 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071191122 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066768362 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076209437 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070041947 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062473169 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068264843 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064337649 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07291694 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062056932 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064690897 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066447356 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066235137 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065775368 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.30221842 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06531579 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078046233 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078736257 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.072260802 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.071617162 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.071478805 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079195328 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.073183628 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075315317 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.075441955 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.077222592 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082030889 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.0708227 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.074717988 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.083832185 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070811911 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065212812 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076551092 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069077486 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.068904725 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070228558 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068813312 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073702773 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077624258 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076239221 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064508401 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072628422 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.068511771 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.070512661 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06543016 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.075124592 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.074292756 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.07148408 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077277779 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07089454 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070251778 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074817545 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069772969 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070928609 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.07113621 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073455096 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.070670078 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072092432 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.070297535 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.073733518 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069929291 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068221869 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071986569 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069709518 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070840856 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074620825 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.069073788 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070467997 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072183101 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070138932 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071197223 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.070550762 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069677575 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072859797 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071289595 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070055438 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072004454 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065682357 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076416399 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.069351891 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076865818 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069796141 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066689147 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074669304 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071901384 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074108702 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06974714 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069793188 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070642216 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069231952 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071927101 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076223784 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067569896 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080252001 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076109679 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070181321 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071933217 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070382454 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070813154 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06890945 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.071633966 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.072032314 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071594966 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.071211669 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075890349 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073831604 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.071539629 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073021606 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071862706 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.072229137 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.072106011 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065635103 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.070305404 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.070471442 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070429224 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080442487 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.071011277 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.070915491 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069297861 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071226806 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069891767 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067491012 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075436697 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075929425 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06856736 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075238452 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068918861 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070432012 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.0786872 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.199953963 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.069205121 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.069766162 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.070738067 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078362282 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.071716283 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079945278 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070522745 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.070096662 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.067554978 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.071006257 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.069457544 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.065371285 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.068687825 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07482506 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.0704617 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070545204 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.071291911 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.074237078 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072061654 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080636183 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.069183369 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070644495 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069447474 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066789403 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068885155 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068608278 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072133926 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070064125 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.068084755 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066651157 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06860595 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070437527 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070819824 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069226562 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071053587 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076197311 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069067116 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072412123 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071792566 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064218478 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072328343 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.069038022 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.069054542 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069267702 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072688883 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074597472 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069693431 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07806283 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068712574 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070300627 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069246838 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067751135 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068385989 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068859943 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069145087 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068865957 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070031274 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0765337 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067324339 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072347001 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069615826 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.070153353 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07498228 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069357175 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072157111 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074202786 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069739061 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070674313 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07681936 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072699085 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072291199 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069497712 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070636354 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074870278 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068276068 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075472635 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069813709 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069543525 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070710129 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067615195 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068660176 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069317063 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068370848 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075212342 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071261377 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.070571119 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.070906474 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.069083203 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.072056575 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073274287 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078951938 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073634602 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074663719 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065755486 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.068353237 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071639315 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.069675493 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.073401109 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073334515 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076773663 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072949815 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071434293 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.070454832 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080311125 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075964198 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074308985 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06849782 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072893933 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070381481 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072213519 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.072166197 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071276758 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071421437 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074097177 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.07216963 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069460777 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.213616255 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072516143 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070002799 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070633591 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.07067074 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069710876 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064577049 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069414266 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070781071 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073948142 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071100506 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06873565 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07948741 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067866901 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069529283 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071646777 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069107765 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07378544 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064442585 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070856505 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06968817 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069710114 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064753636 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068895315 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06742324 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071133186 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068731524 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064575306 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079484715 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078734025 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072638682 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068641272 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067868366 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06462031 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064824458 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069600749 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070352799 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071107148 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078922644 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069321136 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068850016 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064958614 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071270763 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074017335 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074746971 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.068455741 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066488215 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.070760315 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.075104294 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076724386 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069894713 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070644456 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074770255 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.073315731 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068964584 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074052894 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.068021209 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074929205 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083746341 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.071430489 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072397671 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.077515538 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078238846 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071559108 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.066344739 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071581424 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.074703803 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071947499 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.072305722 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.07160837 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085807362 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074380403 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.070938846 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.070280702 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072265394 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.071047901 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076957012 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070071787 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06984069 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073427903 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.07066417 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076302759 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072239134 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076058275 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072479088 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072607443 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.068134743 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069930873 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067051539 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.0687728 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06970077 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06897173 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073360056 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075245132 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069007532 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079629482 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078145023 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070293921 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066415028 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067863955 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068479295 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064174945 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068959737 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06657068 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066983029 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066519036 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067267079 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069624508 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073132533 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069772446 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068665644 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068255962 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062924268 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070720367 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.086358225 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.207864987 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066261269 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068959077 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06991365 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073253058 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071200243 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067618731 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070504967 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070924871 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06976946 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064062792 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075680146 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068189036 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070860049 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068392195 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069019937 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069273887 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072403255 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072910733 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070149497 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.07125344 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073607661 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070519123 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066847523 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066976259 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074038639 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067534716 seconds)
  done (took 44.405221152 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10525022 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068118179 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066849267 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067187325 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078159931 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067731405 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067011096 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067958029 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068115315 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069541862 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066877644 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066874812 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074782738 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082154317 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077434449 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071693755 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066989005 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067775123 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066691284 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068601237 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074929283 seconds)
  done (took 2.91187805 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077343317 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.081467445 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079312649 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086642262 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074122898 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073336323 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077389222 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072604932 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080206772 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07467722 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080492332 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073079884 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074781075 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075035704 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075053265 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073198489 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.080861922 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073844921 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.073372036 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077414213 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073321661 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077800979 seconds)
  done (took 3.065744789 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069707275 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.069423381 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071124975 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064418033 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.070288617 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065993017 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073240248 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.068689979 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073536479 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.070428273 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.070106332 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.070208738 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.07233221 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.066515067 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.071112183 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.068919725 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110485449 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073607956 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.07062561 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.071982382 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.066467689 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072893538 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.066710645 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065954681 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069969489 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072969459 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.069620142 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067302131 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.068528844 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068478637 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068602498 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.066887108 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070454819 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069317139 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.068356197 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068240867 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.068511026 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.071376925 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064864267 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.067782737 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069381419 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.066158325 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069704452 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072193544 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.068720808 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.069004093 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072525646 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070570429 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065910009 seconds)
  done (took 4.822189919 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.082783763 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112473328 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.071896893 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092710234 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.084163925 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.077285653 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.074661517 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091930623 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.068158613 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.069025774 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.086126714 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.08348178 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069097526 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073111144 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07546759 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068662276 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069255743 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067657917 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071821691 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067954248 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071944112 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075323819 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083948173 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082798686 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073477866 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067358287 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068306786 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074128878 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081449825 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072499228 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073186848 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074019824 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082981892 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.073501022 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067815627 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070909881 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083432995 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068112384 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070609102 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067826294 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.072622953 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.074639704 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.077911185 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.086139954 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070523748 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.075438433 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070020881 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.067924795 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.082175605 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.072358449 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077693965 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.083463604 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074048001 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.070195896 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.075183278 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.084944223 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.070450376 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068589389 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071431537 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079305054 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066569046 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071940304 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081064532 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070872253 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074856521 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.081079866 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073569481 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072586558 seconds)
  done (took 6.659862046 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08084917 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.099631871 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087450048 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087239286 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081072113 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.078581564 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.078035656 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.077737778 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077488636 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081577835 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07812518 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116176807 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.074059333 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080265189 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.087479594 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079185088 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.079382611 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078562767 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.078082357 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077644019 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.078042443 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08418977 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.077936553 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.084764221 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08136179 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.073555598 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.077584959 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078151609 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084789013 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078010883 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081512524 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.078101111 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078023928 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.084493219 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.081353901 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.077729744 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068377214 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077968763 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07794246 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.080175228 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.075655299 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087289586 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.080175038 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.07591678 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079869297 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080126492 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.086809691 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.08377082 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082700447 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.084222178 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07981578 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087163958 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080240684 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079619299 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.085314038 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.087152026 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084451214 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.085114915 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078075178 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08463871 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08468842 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087428598 seconds)
  done (took 6.478396604 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086915343 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077974193 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.086297835 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06630825 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072154733 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07677316 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069884264 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.069109617 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078084778 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.07877846 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080827398 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076617398 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079460279 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080522657 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075091074 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077297525 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074745666 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074413193 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076094888 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074386243 seconds)
  done (took 2.948705117 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.079269628 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086754342 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071619771 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075481833 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072724578 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073895343 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.071474419 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07250416 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069869152 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072443986 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.078135724 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078544278 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070105587 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073912912 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.078074976 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.0742003 seconds)
  done (took 2.601691665 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08714725 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.077410665 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083269255 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.07045129 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.071469673 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.067711451 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.070614911 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.066439861 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.067257433 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083330672 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.07055104 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.08140983 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.070855642 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06990375 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.067881644 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.07641021 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.067719909 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.068322458 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.071301374 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.082627122 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075321013 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.069875702 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.074429788 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070357762 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.073299077 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.075056 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069980443 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.071355995 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067837939 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070706561 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.071588429 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072817574 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065821976 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066650889 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.067966592 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066250658 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068716691 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.069231664 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.073929482 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.068896185 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067308101 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070911086 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069074901 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069782086 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.065364563 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069248991 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065846033 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.072883585 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068456661 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.07354254 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.071077674 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.073384514 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.071191586 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07744464 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072601338 seconds)
  done (took 5.343263113 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082113604 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073557787 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066073353 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068426094 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.073328496 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071774997 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074849441 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07143415 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072464275 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068544715 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072192465 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074004482 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072385545 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074271073 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072742317 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07456447 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06652992 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071985658 seconds)
  done (took 2.71661297 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074620189 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07017191 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.077911792 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071522436 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.070462606 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073265007 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066734307 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.069267898 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069138367 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070970226 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070948739 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.072814142 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069780861 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.073026227 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071228743 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070977719 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.073290508 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069221718 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069232654 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065124263 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073625934 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069677658 seconds)
  done (took 2.969935328 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.09532259 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.086487839 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.140651115 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.082487861 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089615308 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.074877042 seconds)
  done (took 1.979376099 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093636201 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104123459 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070707607 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073797199 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080452878 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074793691 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075047933 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074791122 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082316987 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079996804 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075051757 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085130866 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082187334 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082052468 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078667713 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077936257 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072902488 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074106204 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069243731 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085094489 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07356566 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08036325 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073440123 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072830975 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072975983 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079449679 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08018465 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078064522 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072888541 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080471748 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078172245 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073342223 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080870658 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078265676 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072329302 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080347748 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073040209 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084987748 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078301537 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080457203 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071717185 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077985698 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080506333 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07679775 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080838747 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073113204 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076906725 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073101192 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072927962 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087178738 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078225956 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079901118 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078367181 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081400416 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08052643 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086800201 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078035614 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080112242 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078551608 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078532029 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079409201 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078049638 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079589441 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078083055 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078177384 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079785137 seconds)
  done (took 6.592704807 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106331982 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071626384 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074703596 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079972298 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081387017 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075242018 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075240719 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075526054 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075397621 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072383604 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112017803 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075884813 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082116877 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082108921 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075942028 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075226957 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075288455 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081920962 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07021449 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087125895 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073397035 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079854361 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079435562 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079588951 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079102603 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078034534 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07311768 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073359382 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07273104 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072945186 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077133499 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073176086 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079810446 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069723698 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080094615 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073304902 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072844363 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077337254 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072806187 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078224044 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079430565 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085940441 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072380529 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073243541 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078029918 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072710822 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072667362 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069708785 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072809127 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071149053 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080390237 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080453856 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080063124 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080589576 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073317381 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073498507 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072767877 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073055762 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073126822 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077906184 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079950394 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072926093 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087708764 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073218019 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07331673 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080144891 seconds)
  done (took 6.53520864 seconds)
done (took 135.153104074 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.197081134 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.173110124 seconds)
  done (took 1.766754944 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071573981 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09906269 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080349787 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132671912 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.068941243 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102753955 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102045255 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079449807 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068878806 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069809328 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071210831 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073861737 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.137945973 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069336801 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.06876099 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071196253 seconds)
  done (took 2.785981346 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099480276 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.161774606 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105514015 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070451522 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10038401 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074691682 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068207036 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079559482 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073310159 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068703517 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075124319 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073246619 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06813319 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072851366 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07308017 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075036508 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068204354 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075064525 seconds)
  done (took 2.903563703 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.097811393 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092739434 seconds)
  done (took 1.615333182 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.16120764 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.13714554 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.204511311 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.33187502 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.157449676 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.147830405 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.145012212 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.14352383 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.118931201 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.138376686 seconds)
  done (took 3.10403231 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100920475 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.150853968 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.267139953 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116197302 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075206583 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093509188 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118728599 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081166938 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.082799425 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081858624 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081864012 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07934641 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100590809 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075977507 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.077054198 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078491262 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104350017 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075954029 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077289142 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078327128 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.102854028 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.07017791 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076041073 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076030344 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07923492 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079511887 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068843932 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069217294 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078325919 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077811083 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07881265 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092545584 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.079720921 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105311256 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07371409 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105729264 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079423342 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076012868 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077846504 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076347852 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080306506 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079965858 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07556235 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078780839 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069535555 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079034212 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069471921 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068867941 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07973375 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070577662 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079687637 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078460904 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105452145 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069945147 seconds)
  done (took 6.150533233 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.11015396 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.108022568 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073177659 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113525956 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105181952 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071932045 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.107000953 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100005166 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.109264559 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072960419 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070628841 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072984422 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082343282 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083505421 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.117711712 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.109643982 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074557477 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072296408 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109541902 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.109488706 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072283094 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103744865 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098958663 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108953376 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.070498118 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072655795 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071556285 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072779009 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079052723 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080280901 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071553925 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082026279 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.086084547 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079777879 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070523502 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07096312 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071183939 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.08081189 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080622598 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080774137 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.079267812 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070917902 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07141376 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072187339 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071871879 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070813303 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.08032981 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082094011 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07970841 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070936858 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073019136 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.071249173 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072219163 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080899928 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079207369 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081634935 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080878366 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071246189 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071666121 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073935324 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081365423 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081159371 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080692865 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07234139 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.08109314 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073615572 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081966433 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085075179 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071382649 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072080769 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071240751 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071016071 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072288195 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079718455 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079000765 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073001487 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071130073 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071267298 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081689183 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080091369 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071369239 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079017003 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07030992 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070665811 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072291495 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071919954 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078001644 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080465315 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072268027 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070915215 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070530688 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070236493 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069507049 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077470578 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080441576 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080291818 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078925111 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071534352 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07933531 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.212497434 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073652905 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.082414281 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071272828 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07288529 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07278481 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080343822 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078783588 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080896473 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071134891 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071804939 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079363496 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08145089 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071719587 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079144173 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080850187 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079146563 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069956919 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082607309 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071737971 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081534129 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071492435 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082192104 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071536807 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080456435 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070735081 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070778036 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070874517 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079574472 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07296026 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07094335 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071894963 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071176235 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080219026 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083107874 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072709208 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079260166 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079222571 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072266171 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079252176 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070954674 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080454724 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071225865 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072220439 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070964861 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082574674 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071602352 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.07121692 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071016618 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081709733 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071349234 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081697272 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079439922 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07043968 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082736326 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081382994 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079579578 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081687594 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072446576 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070732017 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071385007 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07149165 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078517697 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080699821 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072474134 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070765445 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078787423 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.081127031 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070085274 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079588544 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079687198 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080214365 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071408867 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071524437 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081901323 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081945474 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079131724 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079786389 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079897228 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071273727 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079369537 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079883609 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07118302 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084780027 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071172757 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083746532 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080278215 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077828938 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079531126 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081214891 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080739249 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081074219 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083447886 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069987305 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070387569 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079043526 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070386709 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070814866 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078247318 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072083044 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072005925 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.218899228 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07226918 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.081745851 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.071038512 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080793612 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070465847 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072603523 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085054691 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071464678 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072383286 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080143762 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074031012 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079498784 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081616746 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079465237 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071218933 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072133767 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080359021 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080722345 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071355157 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071052999 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072909669 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079328743 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.079587768 seconds)
  done (took 19.194456783 seconds)
done (took 38.956393857 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.198021877 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.14496642 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.157730043 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.112369317 seconds)
  done (took 2.118668108 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.115342421 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.1015124 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094186982 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.070362846 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099348846 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068151547 seconds)
  done (took 2.009407897 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.270637707 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.188240962 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170765264 seconds)
  done (took 2.085385127 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.196110291 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.181107384 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.423400172 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.257819019 seconds)
  done (took 2.623158683 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140150123 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.086745006 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069582481 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085814766 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.128249983 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.154739683 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.098118655 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.121769061 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.081194996 seconds)
  done (took 2.475795707 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.142864734 seconds)
done (took 12.910312656 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.096267478 seconds)
    (2/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086136418 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.124772141 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.073974231 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.0707081 seconds)
    (6/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100437825 seconds)
    (7/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.082707555 seconds)
    (8/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.077093519 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.099710353 seconds)
    (10/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.212579509 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.100625298 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.089407733 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07848166 seconds)
    (14/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.180634427 seconds)
    (15/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077816524 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.135697675 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.126413545 seconds)
    (18/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.200537931 seconds)
    (19/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.173706074 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.15857442 seconds)
    (21/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.182390781 seconds)
    (22/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.136977027 seconds)
    (23/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.227259704 seconds)
    (24/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.077175784 seconds)
    (25/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.075361297 seconds)
    (26/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.159698433 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.069639042 seconds)
    (28/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076695361 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089937344 seconds)
    (30/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.079205241 seconds)
    (31/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.199082681 seconds)
    (32/309) benchmarking ("sort", Float32, false)...
    done (took 0.131518857 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.075305665 seconds)
    (34/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083436627 seconds)
    (35/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.075104854 seconds)
    (36/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.09192104 seconds)
    (37/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.232010848 seconds)
    (38/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.383823435 seconds)
    (39/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.158177018 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075729493 seconds)
    (41/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.198251119 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.067114363 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.112185346 seconds)
    (44/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.181641134 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.12365118 seconds)
    (46/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07020854 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.088896543 seconds)
    (48/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140448874 seconds)
    (49/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.113234936 seconds)
    (50/309) benchmarking ("sort", Bool, false)...
    done (took 0.145444702 seconds)
    (51/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07923757 seconds)
    (52/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.095190595 seconds)
    (53/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.054757372 seconds)
    (54/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.159418956 seconds)
    (55/309) benchmarking ("sort", Int64, false)...
    done (took 0.06940751 seconds)
    (56/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067339206 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075208405 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092526192 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.099648424 seconds)
    (60/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068580848 seconds)
    (61/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.068486 seconds)
    (62/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076890857 seconds)
    (63/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.07023959 seconds)
    (64/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.056842378 seconds)
    (65/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.068702277 seconds)
    (66/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076621411 seconds)
    (67/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.076296281 seconds)
    (68/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.141656475 seconds)
    (69/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.077526938 seconds)
    (70/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066703924 seconds)
    (71/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077942221 seconds)
    (72/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081780783 seconds)
    (73/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.192307334 seconds)
    (74/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.200059773 seconds)
    (75/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.055206883 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06816098 seconds)
    (77/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.164520549 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.11997142 seconds)
    (79/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.099770992 seconds)
    (80/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.065670745 seconds)
    (81/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075088288 seconds)
    (82/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.091676704 seconds)
    (83/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.190274673 seconds)
    (84/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.307052892 seconds)
    (85/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.111225328 seconds)
    (86/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.079546763 seconds)
    (87/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07965737 seconds)
    (88/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.176475057 seconds)
    (89/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.075587172 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.068274844 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.098748535 seconds)
    (92/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083203715 seconds)
    (93/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.057929516 seconds)
    (94/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075171044 seconds)
    (95/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.110573187 seconds)
    (96/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.055128744 seconds)
    (97/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.056122404 seconds)
    (98/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.157398694 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089116145 seconds)
    (100/309) benchmarking ("sort", Float64, false)...
    done (took 0.129861172 seconds)
    (101/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07481021 seconds)
    (102/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07908643 seconds)
    (103/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074520074 seconds)
    (104/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.185571607 seconds)
    (105/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.094997224 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.069088011 seconds)
    (107/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.144975506 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.131183203 seconds)
    (109/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.109290563 seconds)
    (110/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.079635331 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08883706 seconds)
    (112/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.055923555 seconds)
    (113/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.074025994 seconds)
    (114/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082733122 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.068897316 seconds)
    (116/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.054413994 seconds)
    (117/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.08182796 seconds)
    (118/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.079292979 seconds)
    (119/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.179017569 seconds)
    (120/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.054131783 seconds)
    (121/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.079914713 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075562057 seconds)
    (123/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.179093737 seconds)
    (124/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081147212 seconds)
    (125/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076766611 seconds)
    (126/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.190594091 seconds)
    (127/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076873679 seconds)
    (128/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.054612016 seconds)
    (129/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.157278198 seconds)
    (130/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.071997291 seconds)
    (131/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.152272127 seconds)
    (132/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075110504 seconds)
    (133/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.113116077 seconds)
    (134/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.105201481 seconds)
    (135/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.102322982 seconds)
    (136/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.179185504 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.103884979 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.071583394 seconds)
    (139/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.072340837 seconds)
    (140/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.115074482 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070513915 seconds)
    (142/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.080174556 seconds)
    (143/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.06921029 seconds)
    (144/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.05653798 seconds)
    (145/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.073216623 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.078030148 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.094197721 seconds)
    (148/309) benchmarking ("sort", BigInt, false)...
    done (took 0.195751806 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.070894606 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.139589656 seconds)
    (151/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.10365357 seconds)
    (152/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077198089 seconds)
    (153/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.074396909 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078806967 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.114718501 seconds)
    (156/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.07219154 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.124051998 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087538786 seconds)
    (159/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.191360214 seconds)
    (160/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.058403256 seconds)
    (161/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.070099052 seconds)
    (162/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.055053042 seconds)
    (163/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.076042691 seconds)
    (164/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.069858543 seconds)
    (165/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.057443699 seconds)
    (166/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.067686918 seconds)
    (167/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.190335584 seconds)
    (168/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.070218027 seconds)
    (169/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.074151935 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088461223 seconds)
    (171/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.075009377 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093339134 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088439735 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141963007 seconds)
    (175/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.074666345 seconds)
    (176/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054362562 seconds)
    (177/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.171511686 seconds)
    (178/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.0559091 seconds)
    (179/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075683743 seconds)
    (180/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076983606 seconds)
    (181/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.066832683 seconds)
    (182/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055268831 seconds)
    (183/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.188575434 seconds)
    (184/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.110931216 seconds)
    (185/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067738844 seconds)
    (186/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075892321 seconds)
    (187/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.354079653 seconds)
    (188/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.157531732 seconds)
    (189/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.082069924 seconds)
    (190/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.056458495 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.096611858 seconds)
    (192/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077988103 seconds)
    (193/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.055591844 seconds)
    (194/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.065543019 seconds)
    (195/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.075074116 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087989108 seconds)
    (197/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077484401 seconds)
    (198/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.05638651 seconds)
    (199/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.055213864 seconds)
    (200/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.077063009 seconds)
    (201/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.054582275 seconds)
    (202/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.068546456 seconds)
    (203/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.156119059 seconds)
    (204/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.067618616 seconds)
    (205/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.056907957 seconds)
    (206/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.057357653 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.094569998 seconds)
    (208/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.056729058 seconds)
    (209/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.069573643 seconds)
    (210/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094927962 seconds)
    (211/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.069642008 seconds)
    (212/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090435038 seconds)
    (213/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076883793 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.075534588 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.118270177 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090026284 seconds)
    (217/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120488105 seconds)
    (218/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.181254133 seconds)
    (219/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.074377384 seconds)
    (220/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.082132696 seconds)
    (221/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.077509634 seconds)
    (222/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.07197904 seconds)
    (223/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.056723661 seconds)
    (224/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.056662821 seconds)
    (225/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.068885447 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095952749 seconds)
    (227/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072419673 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.068433163 seconds)
    (229/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.076005623 seconds)
    (230/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.070598137 seconds)
    (231/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.057140526 seconds)
    (232/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077714642 seconds)
    (233/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075514156 seconds)
    (234/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.101471693 seconds)
    (235/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075974095 seconds)
    (236/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083398681 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13772056 seconds)
    (238/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.056490609 seconds)
    (239/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.170397597 seconds)
    (240/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.054603453 seconds)
    (241/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.067376166 seconds)
    (242/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.148376343 seconds)
    (243/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.07585754 seconds)
    (244/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.067469469 seconds)
    (245/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075538451 seconds)
    (246/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090903583 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068665302 seconds)
    (248/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081220927 seconds)
    (249/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.066656618 seconds)
    (250/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.078489778 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.114164913 seconds)
    (252/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076326484 seconds)
    (253/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.069818757 seconds)
    (254/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.054331736 seconds)
    (255/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.05498354 seconds)
    (256/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.071063204 seconds)
    (257/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055705321 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.091336167 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.06868808 seconds)
    (260/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.176154462 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.168242412 seconds)
    (262/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.067155821 seconds)
    (263/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074479072 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.122072596 seconds)
    (265/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.067736023 seconds)
    (266/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.089988561 seconds)
    (267/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.05469865 seconds)
    (268/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.055387306 seconds)
    (269/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055847951 seconds)
    (270/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.055253678 seconds)
    (271/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.056330815 seconds)
    (272/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.054789128 seconds)
    (273/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076099217 seconds)
    (274/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075799 seconds)
    (275/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054528261 seconds)
    (276/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067968051 seconds)
    (277/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075980048 seconds)
    (278/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.066121994 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068323121 seconds)
    (280/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073959858 seconds)
    (281/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068362166 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.12837914 seconds)
    (283/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.144307614 seconds)
    (284/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073067293 seconds)
    (285/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054566207 seconds)
    (286/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.054645271 seconds)
    (287/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054633222 seconds)
    (288/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.054539229 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075249207 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.109207291 seconds)
    (291/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.068697322 seconds)
    (292/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.056020264 seconds)
    (293/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.142849071 seconds)
    (294/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070524725 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067794235 seconds)
    (296/309) benchmarking ("sort", Int8, false)...
    done (took 0.143393956 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091218474 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074329359 seconds)
    (299/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.053829322 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090540302 seconds)
    (301/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069817166 seconds)
    (302/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.055775407 seconds)
    (303/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.168577552 seconds)
    (304/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071628803 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067935835 seconds)
    (306/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.054662791 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.227550341 seconds)
    (308/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072047093 seconds)
    (309/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.056660349 seconds)
  done (took 31.689223008 seconds)
done (took 33.164783733 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087926658 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09748709 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078667511 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09493011 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083020831 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.0774233 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075688514 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080799228 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082919447 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084207545 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.08132005 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058253121 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077679165 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077341529 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07764628 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093192654 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081992532 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076437687 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076410471 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067623952 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076428531 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068903414 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070089761 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058194969 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.081303236 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075052126 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.077438303 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.0772979 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068983299 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069001789 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072672601 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077692941 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068237175 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082393754 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076727093 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076357254 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078637927 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079783536 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070624003 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068667333 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078030184 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068675967 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076400839 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077174272 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.075186892 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074227545 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076138035 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080174437 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092440696 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070573678 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077898115 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07907422 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079983582 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.076569125 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073293899 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07623988 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073733574 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092701486 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076821141 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070516122 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.077523864 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07724779 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074351779 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076067131 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076363038 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078937269 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079956622 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074541058 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077979646 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075078408 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069027448 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076540556 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072469356 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06857406 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079085575 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.082946814 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06744695 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074655344 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075918635 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076866964 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06782463 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070516788 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070435614 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074934546 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070816389 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.058086675 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07300928 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075498572 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067845599 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076795088 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075609647 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075934471 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070542272 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079857138 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068494244 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074511159 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068720062 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068999276 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071039423 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073390825 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068344164 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070570211 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078772399 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070062252 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075391917 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080729896 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068343503 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075039197 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067258931 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067949874 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081722001 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07798766 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068543482 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070552312 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067725167 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075383306 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067455538 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068289912 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067571917 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068159628 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074455978 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068235856 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070729313 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.214548638 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.083516102 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.069393947 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073025058 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071529842 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068815725 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074705694 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068932014 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068983325 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070578788 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065604145 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070604239 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068658886 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.076211646 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070669274 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076531399 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070070969 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076937804 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07365188 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074903555 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074031649 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067707841 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.0625283 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070401566 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07022437 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069977793 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069044338 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069889685 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068206929 seconds)
done (took 12.995835449 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.07162705 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.135763606 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098532111 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098059558 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.088287804 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070768623 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079442302 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.096865801 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070599212 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.098905002 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089058625 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086645152 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110828387 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067721212 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068821393 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.07314044 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070123846 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082303063 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097782507 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087892293 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.112734704 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068862358 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093203494 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090799443 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088260674 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.102766197 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069896466 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072880795 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072820546 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.092033861 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089083141 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072997564 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069893253 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098290993 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093016423 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08440228 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06947223 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084188983 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069488892 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069250071 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070595849 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097106777 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.081468298 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081856288 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.073341117 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.078640272 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070134367 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084052726 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089957037 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079912933 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086120866 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.09987057 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071773314 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.084830211 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067558877 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086158039 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.078092167 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.07170535 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069659372 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.076445454 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06929638 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072164299 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081868849 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.08178541 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073073793 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.08493643 seconds)
  done (took 6.994493021 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.090257968 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.095509481 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087517367 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.090536756 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.070689401 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.071433214 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.071133101 seconds)
  done (took 2.150294317 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.07212502 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091558086 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092337982 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092462636 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085440294 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091720392 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080538053 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.071679076 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092891914 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.072900399 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088980682 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099217624 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072642524 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076180604 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091499544 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069706079 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091575326 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069743468 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072417715 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091147631 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071904198 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.099156334 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072950431 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070135571 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082762861 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070579864 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113298952 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073621024 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071634532 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072827957 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068490493 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107303826 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08272435 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077485397 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07008441 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084274207 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084135794 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068528337 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085858655 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077526434 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08247966 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070597768 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071345131 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067846566 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073741954 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079075028 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070706587 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070410254 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072288379 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089224136 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071246641 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083722934 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073468545 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.075054002 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071351256 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076053644 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079398569 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070946641 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087821267 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072371002 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086732258 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086757919 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084893551 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086831429 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073829832 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08432435 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084725126 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.074446897 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073777706 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.075335476 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085518996 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069583329 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072014705 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079486494 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071879734 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090924344 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091055738 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071611534 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.082725934 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070333962 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070660366 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.07006868 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090677247 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074926021 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069689044 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07404702 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073581169 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069095743 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069522626 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073616236 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06809901 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.07176995 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072837207 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072709068 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072785452 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084536374 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072526306 seconds)
  done (took 9.188503189 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.075008907 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.07332427 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072963763 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070600256 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070606017 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070581478 seconds)
  done (took 2.032299583 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094946695 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.074037161 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084173139 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.076622932 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105797426 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.090669669 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.092224858 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.082733167 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086723763 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080344461 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087671687 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089436178 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092991229 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.074434967 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.088894756 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.074642945 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.088390858 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077328834 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079760788 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07475501 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08716582 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.075354045 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075304342 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.083638545 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.077917905 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07411886 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081243511 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080782989 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080199988 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.080118766 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074546738 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.077859925 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073407511 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079871595 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088848047 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073276609 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073778725 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.079682115 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075160934 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.080676077 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.089338292 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075476336 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07630825 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.079575958 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079640487 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073320843 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.079868309 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.081265578 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.088225608 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.079292444 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.079315773 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07373683 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.078397063 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.079374838 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073694696 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079590305 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.079249911 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.088739122 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074502981 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073476587 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.07134853 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.078336735 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079324342 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.078225831 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079760632 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.080019317 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.073384238 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075078861 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07512619 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074178466 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.079513429 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071450792 seconds)
  done (took 7.334492238 seconds)
done (took 29.260671707 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.560459001 seconds)
  done (took 2.108819795 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.604842854 seconds)
  done (took 2.187324251 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.502569986 seconds)
  done (took 8.085294984 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.37366293 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.469788754 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.705245803 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.136444558 seconds)
  done (took 3.293888712 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.714721155 seconds)
  done (took 2.300625153 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.238351227 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.222161603 seconds)
  done (took 2.053137479 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.382704889 seconds)
  done (took 1.964747906 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.108582145 seconds)
  done (took 2.692612593 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.238910899 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.178393311 seconds)
  done (took 2.007575628 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.469314613 seconds)
  done (took 2.055039952 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.810695658 seconds)
  done (took 6.400685454 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.22084942 seconds)
  done (took 1.844842259 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239513478 seconds)
  done (took 1.824781399 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.748644777 seconds)
  done (took 3.336647108 seconds)
done (took 43.751434313 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.088007546 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.088108095 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086218032 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.083165709 seconds)
  done (took 1.914424926 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082049818 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078257375 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.081308242 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.076411157 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.079228527 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075453331 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07628644 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077904407 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.075139526 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.075360429 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075082956 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.075185507 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077314693 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076774928 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073583161 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077673801 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07814961 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075481398 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.078496944 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075083774 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073416501 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.077489212 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077496229 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.074008058 seconds)
  done (took 3.433235761 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.083136918 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.0773851 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.0768309 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073762405 seconds)
  done (took 1.911181145 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082902816 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.093962496 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.092558714 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.083874069 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.094640939 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087292952 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.071374933 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071787014 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072532693 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080198132 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.071190355 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095917136 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089954722 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080652817 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.082605885 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06867413 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070535924 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.089159834 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.081481531 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.081545625 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073140673 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080892007 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.07110963 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090274253 seconds)
  done (took 3.553481834 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.091211461 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104621649 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085413236 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094319441 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096541712 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069937135 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.088269659 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093517472 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125733684 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068341488 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074054544 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06833036 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.076289961 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068203805 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.083283987 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110839394 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112425492 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071769756 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099467547 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068242891 seconds)
  done (took 3.355100209 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077160999 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07445796 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.074990292 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070630804 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081512526 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.077729387 seconds)
  done (took 2.061031014 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072778738 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.072551168 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.072077653 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071446446 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076610264 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.072083672 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070524637 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.072186276 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.071380622 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069841057 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069512641 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068663887 seconds)
  done (took 2.456865366 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.192768904 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073197519 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071059334 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06853494 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073025974 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.069234435 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082805805 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070781172 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.093263003 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06924052 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069681935 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.07137484 seconds)
  done (took 2.605184807 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198297393 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079702316 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223374669 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149683612 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109959505 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11232277 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111390328 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110773891 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.13620499 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09974426 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160262967 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161361084 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106142173 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134531335 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090052376 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100562181 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149416255 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160052666 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106256012 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159674882 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140163071 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124357592 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142337668 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101258818 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105204199 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118563682 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073879337 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081681682 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163599505 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129992434 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140328392 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110941699 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096590121 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169234081 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163580456 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136371861 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143901144 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085412511 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102488052 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.130286981 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189974009 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088781068 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.299290367 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109978924 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082165043 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130418979 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116343207 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.117538411 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.104122374 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090733314 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141105323 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174465254 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.130956661 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087559216 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121515883 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110997437 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.110502528 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111378919 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170123426 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153357847 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125386859 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073942555 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110076401 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146765892 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129717374 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.106727439 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.121939888 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095031962 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130345373 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148576244 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120246453 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138733194 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.114511576 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090181059 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118132095 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134238039 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124875441 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156004037 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12243148 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074740133 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120318376 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100020867 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082229272 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144042351 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077348039 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167566752 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099770574 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105523045 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121306059 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10595839 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106360126 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151176168 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.287065429 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103606337 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.069213213 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104600867 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.117426941 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140021345 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088530782 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106057445 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115301064 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079164947 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131830992 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077487255 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120638179 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078653848 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120851442 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127110582 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079111424 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119900905 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102656397 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100019517 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128772016 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152981642 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08881323 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082785786 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161028169 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121020494 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102412736 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138001843 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151018291 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.100735638 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099468173 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143557873 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165607572 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090078995 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156962396 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105008483 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084379723 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088090513 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121538492 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109725182 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12133538 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083656736 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116829745 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160419774 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076368084 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095565929 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131039581 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079972429 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081675204 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104547876 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10351151 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096185478 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098207467 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101938245 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132619594 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121436136 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105623182 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120672437 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097311542 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157152717 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087267885 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100596401 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101279203 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071150556 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.12636522 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145784474 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078803885 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150325546 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.115292264 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110748972 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113538452 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082987051 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129640784 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078507475 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071101406 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134181299 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106841612 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104972922 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.140562371 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111188497 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.117425059 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.112710182 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123678391 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122492428 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.12323428 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103276853 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086440199 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107643543 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121042905 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07351096 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.088203576 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.07937783 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101724892 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092571673 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082332837 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13223694 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116726958 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107986639 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107032181 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094622585 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138009683 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076132474 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120177751 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.114246286 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093414045 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.139047482 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136362769 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122292443 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.356367915 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135138822 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074580071 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078378274 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090665843 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121969087 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086405158 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086111314 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114017404 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142668682 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125907483 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133713337 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121515183 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11880933 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14906072 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073134213 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.120053814 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141070033 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11999004 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102568882 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092309058 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100438907 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138997617 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106269843 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172700684 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112950023 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122542288 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150736779 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101990166 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081308897 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102356245 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130276429 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103483931 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138716529 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098734247 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089653716 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108312375 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.080004637 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098676529 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124556954 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116870154 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132702033 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.112896271 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132802018 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079795076 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113832465 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118572319 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119361052 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.0666758 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115735544 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153343505 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095300043 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114857008 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301812136 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080316061 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.133350497 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165564179 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139481753 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086532361 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105672698 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117312756 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122995311 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11679712 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133512357 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104707216 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133105519 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10833386 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086327219 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08909554 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096606989 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103497084 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094454663 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.104261917 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112041152 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096989651 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1291873 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104351646 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109184595 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116392396 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099539037 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.093295458 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097152956 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167682949 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117827461 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163782674 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100077639 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.137937521 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156134376 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07687224 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080838655 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079488992 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134400807 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086218242 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128545775 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.109109057 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115123908 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121417155 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136838592 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095809358 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.07190753 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10626403 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1298968 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121165625 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098091679 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.101375762 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15456145 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.25085126 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080455866 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110025533 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11507566 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102519318 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161830697 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064365728 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104681779 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07800143 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080847208 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122081937 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144083421 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082200811 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100014588 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116860582 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110521421 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122740864 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101744925 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111450216 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12330519 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144072586 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125634367 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091250546 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110385721 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126460466 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150474694 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102305891 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097578308 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168394338 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146781734 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.152887605 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087357093 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112381873 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112685786 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107821849 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135561632 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084857063 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156228771 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083807031 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132916382 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102596531 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089651601 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12612644 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.110815672 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089581755 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14048589 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114981159 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083741824 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079320702 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114166278 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116587599 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103550286 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076308561 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291133228 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07749695 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130683479 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155651825 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082326696 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1033259 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095306037 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081364925 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103897195 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101947997 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087926455 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099433458 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163180467 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.086807125 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142861823 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131008229 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110963271 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132870781 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102715057 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639700555 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079676497 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146253016 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114519296 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164917871 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099558243 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116027985 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108484819 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119323715 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139613017 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102531047 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176000123 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128715102 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11445723 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080782648 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102258246 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103737525 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087924624 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106547866 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112084215 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114514241 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093448818 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114482045 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122549819 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083802757 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09682415 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148787386 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113074107 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139246157 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134098757 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085784511 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11540077 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.289296578 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082650418 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.116759636 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145591825 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10547161 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099426124 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082142971 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099076285 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15388484 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075384238 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151683117 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120399367 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107596444 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11121317 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.109474088 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128793859 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10514276 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120316583 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09230405 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.107055826 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112302263 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083031435 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079051403 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104260078 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109656044 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098002257 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097349724 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100043133 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146276719 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.075042215 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098574738 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11412446 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139442235 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166375197 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087885214 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084450834 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1181768 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113893131 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111286168 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119824825 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080606104 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083457744 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082001561 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.082834938 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.106747033 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112436844 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113201301 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108722199 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15678011 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083773328 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223808152 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095986575 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103124608 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.07107606 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079421684 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096561172 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250746831 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104961971 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111266929 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154238413 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095318623 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090635682 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091732041 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077421013 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084569286 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122634908 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107368823 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116152794 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100378032 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06499314 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105405502 seconds)
  done (took 58.055386924 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.112308715 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.084080467 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097825785 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143737078 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122369755 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.201229274 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156539079 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189533443 seconds)
  done (took 2.847956807 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07035613 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094951144 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103384861 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084170368 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069584861 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071064354 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.218887001 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082204081 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06896139 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.095311376 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079498113 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071517436 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.416158797 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068514298 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070858732 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065307823 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069886339 seconds)
  done (took 3.520335469 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.377887016 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.618692595 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.333627711 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.078874414 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.947891064 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.096537335 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.168152033 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138836493 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080217941 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.545586811 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.414755307 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130827378 seconds)
  done (took 18.664881041 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.083287652 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077131964 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.089774439 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.090030443 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.079258243 seconds)
  done (took 2.146455505 seconds)
done (took 108.144492779 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083512221 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.584857678 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05700735 seconds)
  done (took 2.391045597 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088296577 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086665633 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086444542 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084042752 seconds)
  done (took 2.076922059 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075729194 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077943097 seconds)
  done (took 1.879342583 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.222375001 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166270519 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096633254 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083843936 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080994913 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081914569 seconds)
  done (took 1.977842848 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073792164 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076773362 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074466085 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078039213 seconds)
  done (took 2.029603264 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078624422 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055177723 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057850293 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.060776073 seconds)
  done (took 1.979084513 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087781202 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083418067 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080184393 seconds)
  done (took 1.979092085 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.099553988 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.088102814 seconds)
  done (took 1.914415159 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083034955 seconds)
  done (took 1.810900737 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092883503 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099211866 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.127364661 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109365321 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135368056 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107140363 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085824294 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086527446 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078176732 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08763638 seconds)
  done (took 2.734921995 seconds)
done (took 23.069892928 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079625218 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.364678592 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361794935 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091130235 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672720188 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.361981715 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.972071212 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095387931 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.139636768 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070100162 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086378329 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651738924 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.960820753 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.325408231 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.94738327 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325012015 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650946182 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070621374 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070274625 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070673272 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.957444273 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070383418 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070523734 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071734735 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650587237 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373050162 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070843353 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324400585 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071290155 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072510475 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357746607 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071462969 seconds)
  done (took 16.234764787 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.088768748 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119790298 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074408798 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086259791 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072271273 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071556888 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07358321 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071318452 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120979541 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.0701989 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08696158 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07051368 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07461311 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070913708 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08910349 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070767729 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070983723 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071645691 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073174557 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070723834 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088898775 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070802411 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070938967 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07163393 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071492964 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082369871 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071582258 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071517786 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071346611 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072969769 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073961476 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071733639 seconds)
  done (took 4.230392042 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115186864 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124404918 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075792728 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104918813 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112686705 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072489447 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.141896619 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095267354 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127808633 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07032448 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087248944 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070756868 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103210721 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071351544 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090341551 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071746852 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072036131 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07117068 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071553418 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071182451 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089991615 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071159183 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071011552 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072710939 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07125793 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084222153 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07163032 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071670027 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071716816 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073162625 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074606966 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072389865 seconds)
  done (took 4.460678565 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074559003 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07740081 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.085153327 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086058178 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.072075161 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074360679 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075052196 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.07171625 seconds)
  done (took 2.363307172 seconds)
done (took 29.025656472 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080383519 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071268828 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074811199 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.089699914 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075130756 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079111554 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069053575 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07736106 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074967911 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075413223 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076507028 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069845085 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073742813 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069368759 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076328654 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070573899 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081431716 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074106329 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.08116914 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081186986 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072828365 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075787402 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.077912675 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081286247 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081173584 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081418338 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080806739 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.075928872 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071408295 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073312074 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079893491 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.086150109 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073183549 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081480918 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070998774 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070739031 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074806932 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070918913 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081458278 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079493656 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072757737 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079311772 seconds)
  done (took 4.92954062 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088711411 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092489109 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.086018609 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064021976 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067960466 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06777951 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090223226 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.062438629 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062456037 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088810453 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058846196 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061740759 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065388543 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057023662 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062391584 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060247857 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.064212273 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058919177 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062094062 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.062599082 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089790836 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057247546 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.079451021 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065430546 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059110551 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064927418 seconds)
  done (took 3.556497746 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075968309 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084796422 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.0905421 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142476768 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111719659 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.07967961 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080687911 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.094156839 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.095614772 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069390164 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073232954 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095636754 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090192038 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.076097757 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070165825 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086939801 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.087343711 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071954555 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07558807 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093254808 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087500099 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087205112 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093087371 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085977757 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070027094 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072129562 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073764955 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083089591 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072261045 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078662833 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072850016 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073616376 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.07170683 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081436988 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073451589 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.071764387 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.095902014 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079695532 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081076995 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070949791 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077870333 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071605709 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093562322 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.124659155 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069566301 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075966922 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074308678 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079436999 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069784105 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095320198 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080803259 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070017661 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073054696 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069550856 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070216865 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.072706477 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072078043 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072445579 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078003209 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075555068 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093583253 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074704042 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085845716 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06974833 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07770106 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069524256 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071115299 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069663105 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094162259 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071667064 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108969725 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070676193 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071253837 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078833077 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078166101 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07620164 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069873993 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085587522 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.081549631 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072942031 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077679496 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073215797 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07240613 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.098059297 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.072800664 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071893676 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071035892 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075360338 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072370389 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071187662 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082379727 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069763808 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072457588 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086158815 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070099801 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071327717 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075817908 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074557845 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069513199 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080534557 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074137029 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071518264 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079335535 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070208233 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072628701 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081600726 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076029439 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068655834 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074312523 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075022833 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070628962 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.07164669 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072279095 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071624493 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07847785 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076330464 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074202762 seconds)
  done (took 10.985913139 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.159249923 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.150474578 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072897104 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.142457587 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07827173 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081212658 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.144547078 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094121644 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070753819 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071150281 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070898119 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109665488 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104898336 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115230098 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.080602149 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070781556 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092498364 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113213564 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.146501199 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142974453 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093226263 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078201146 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073893024 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071995838 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072672066 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079646383 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086650533 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.079208372 seconds)
  done (took 4.542139116 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081765088 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.10316379 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07650017 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091421831 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091202318 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.07018841 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072193191 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071980638 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086280604 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080384295 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070570164 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074877748 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076616936 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073196234 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071512971 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.077105733 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076771659 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072136998 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074259165 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075646421 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080295472 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093525971 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073673798 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072790908 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075168544 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070238598 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066522992 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086014527 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.0710251 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.094427515 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06859836 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075285549 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083590975 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071202638 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070875832 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070995177 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071033 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070613584 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072781846 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069174557 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069312666 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060903578 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069709649 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.081065046 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082962055 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.059895627 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074968194 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075728439 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075391926 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067949969 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073445678 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073471696 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073262657 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077627256 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074126343 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075953328 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071609379 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.076143383 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.0783672 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070270856 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06815074 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069302575 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075029419 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068223281 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085455545 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075015694 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069473765 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070184661 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072114924 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082980347 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070329395 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075111618 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068802421 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073148553 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.075156569 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072436766 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071815354 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069209792 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070241718 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071194663 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058859483 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070564383 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057213393 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072674122 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068531764 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069049094 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070169119 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074958402 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081213456 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071643437 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075988198 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071402152 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069777213 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072997532 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06334458 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072993685 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080421658 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.084199952 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070938992 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068901703 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082231127 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075085976 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069572297 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059229732 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074256313 seconds)
  done (took 9.561648221 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092238112 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071681135 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083880924 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090270261 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087324823 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077157486 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080054844 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071847046 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085654352 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075843399 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078926151 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070583908 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080299342 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079724168 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072486132 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079850938 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074075841 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084597674 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083920851 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070568206 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078374197 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082567643 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090900684 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082856915 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081304379 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082417344 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091477142 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079083533 seconds)
  done (took 4.060049374 seconds)
done (took 39.378181126 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.852102022 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.998380117 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.825370826 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.134354717 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.015779869 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.849439193 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.020206343 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.823324169 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.152176529 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.861481805 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.190563802 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.927512755 seconds)
done (took 66.541352863 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.849737603 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.959008759 seconds)
    (2/2) benchmarking "String"...
    done (took 2.055208709 seconds)
  done (took 5.766042756 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.061017804 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.399188627 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.068432498 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.819396166 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.827561458 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.12034821 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.617195794 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.33363885 seconds)
  done (took 30.938060437 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.009611276 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.046701507 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.527784277 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.56123014 seconds)
  done (took 15.946814168 seconds)
done (took 64.408434953 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.819169447 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.8728628 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.865195766 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.806044 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.880014264 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.836023896 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.289824834 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.930723835 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.820776106 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.810971819 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.821242157 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.242731881 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.834428557 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.208694581 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.81301413 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.819685524 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.872582892 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.407855597 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.968522539 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.834736228 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.827547238 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.856275547 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.813944589 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.978717613 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.859451666 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.814463661 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.223497163 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.812624643 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.425877935 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.811942925 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.841145888 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.34099213 seconds)
  done (took 206.111391846 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.809520208 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.601125106 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.694699124 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.840261728 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.124629284 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.990843464 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.902868224 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.205437214 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.813077112 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.833090556 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.944802378 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.811820477 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.97451508 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.782960893 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.836967961 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.907176521 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.966230932 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.998888813 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.847435913 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.975795409 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.834491038 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.791214225 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.735691058 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.941934783 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.847855309 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.81647488 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.812979134 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.833496013 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.999232845 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.945044138 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.844530351 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.853750205 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.012041714 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.676426379 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.815459495 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.82556534 seconds)
  done (took 170.189192932 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.9915292 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.805210348 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.803709533 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.805211918 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.81039585 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.80577154 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.929698014 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.930996322 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.429956971 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.594273534 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.85684903 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.801168689 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.603048945 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.801242157 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.869305359 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.814652656 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.80157852 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.815875539 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.829060402 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.80166932 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.803371705 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.928392881 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.813745094 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.800316182 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.808394749 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.802994958 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.806850924 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.172058717 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.801608448 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.81624464 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.805911293 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.807718398 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.042220603 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.803893724 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.802263992 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.655593988 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.369290853 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.893220792 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.803591202 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.807679606 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.802237976 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.020143071 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.802661536 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.801615651 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.803626254 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.807707079 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.950028275 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.802510343 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.928802721 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.804817741 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.284760005 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.803190061 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.803091011 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.516877541 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.408639137 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.806223294 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.806089264 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.8034944 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.803611839 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.811256846 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.499389254 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.881313061 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.804993374 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.805603266 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.80930667 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.803576732 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.87866553 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.803792731 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.344790213 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.866390875 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.039816094 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.803190801 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.925863866 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.8074413 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.872188027 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.898367292 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.80600601 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.804526626 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.804752679 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.804205832 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.886199687 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.804470247 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.93037713 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.804860246 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.806089747 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.812462621 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.806593106 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.856901477 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.875262167 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.808767642 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.664288746 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.808762733 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.805089177 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.076124511 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.8707951 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.806812405 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.805929193 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.933883937 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.927670291 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.523436151 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.808770415 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.543783756 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.943353027 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.808817347 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.960364432 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.808729367 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.887876715 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.810519596 seconds)
    (108/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.806490917 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.807446845 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.83863831 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.806497405 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.866077916 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.806776646 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.178323745 seconds)
  done (took 405.743475575 seconds)
done (took 785.845732417 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.397475172 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.372108615 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.463923027 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.387376004 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.364691342 seconds)
  done (took 13.722890788 seconds)
done (took 15.461472345 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.893377028 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.898932117 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.828345385 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.896451534 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.825448025 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.893532677 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.876313331 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.830108668 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.863544102 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.829586063 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.865710707 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.830209746 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.818214875 seconds)
  done (took 25.88742899 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.053504873 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.047678992 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.878221414 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.070705158 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.854459627 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.04780215 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.970647688 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.971495126 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.963007413 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.825846502 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.822248097 seconds)
  done (took 23.24481264 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.048540178 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.059408927 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.884738433 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.048204988 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.858617543 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.05921655 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.974742559 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.968423269 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.962419907 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.826542366 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.82114138 seconds)
  done (took 23.25146196 seconds)
done (took 74.123439623 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.817165539 seconds)
  done (took 3.556430846 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.845117552 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.007677262 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.821576707 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.830414746 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.819294503 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.818477646 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.829720515 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.817472786 seconds)
  done (took 16.532090822 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.814469063 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.813558798 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.815541383 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.816886473 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.81293677 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.816294931 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.818577703 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.816566225 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.813426868 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.813994655 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.813637587 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.814108956 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.816911367 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.814567211 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.817686479 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.816572828 seconds)
  done (took 30.786091 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.817932966 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.813574672 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.81435244 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.815007359 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.813992349 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.815766899 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.816533038 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.814539386 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.814126036 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.814084462 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.814988172 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.816621589 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.814136646 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.814750999 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.814917834 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.815936674 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.814744457 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.816466381 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.819825061 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.81440374 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.814618949 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.814792463 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.816200987 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.815937813 seconds)
  done (took 45.311217937 seconds)
done (took 97.926329005 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.578594564 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.731923482 seconds)
  done (took 10.052408559 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.828124367 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.825646034 seconds)
  done (took 5.478481778 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.825046692 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.825477553 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.825440866 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.825222215 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.82674439 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.82570051 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.825540359 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.825808021 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.8246999 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.825659766 seconds)
  done (took 20.005703818 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.825234412 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.825804327 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.823853415 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.826063612 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.827228454 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.823347987 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.825843725 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.826084197 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.826032768 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.8232379 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.827418346 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.823612199 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.826606264 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.8243653 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.826997925 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.826177442 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.824060593 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.824274361 seconds)
  done (took 34.606568208 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.826661882 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.827301584 seconds)
  done (took 5.403836215 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.824421319 seconds)
    (2/7) benchmarking "second"...
    done (took 1.824735686 seconds)
    (3/7) benchmarking "month"...
    done (took 1.824844582 seconds)
    (4/7) benchmarking "year"...
    done (took 1.824702968 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.825159786 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.826085266 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.824169268 seconds)
  done (took 14.525906786 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.828287178 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.970219748 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.032706716 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.457513898 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.829155595 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.831321079 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.767444685 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.831489002 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.833125526 seconds)
  done (took 20.131757375 seconds)
done (took 111.948312011 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.730426031 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.82335453 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.078171333 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.891994826 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.873104966 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.120284769 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.848480076 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.093690154 seconds)
done (took 43.212155069 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.852901871 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.515289064 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.531192675 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.851472343 seconds)
  done (took 15.649695338 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.808313125 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.112495937 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.840385006 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.665484924 seconds)
  done (took 22.181838149 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.192167142 seconds)
    (2/2) benchmarking "read"...
    done (took 2.175224274 seconds)
  done (took 6.124233177 seconds)
done (took 52.563029277 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.829457295 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.82631895 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.830246618 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.827979405 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.829725056 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.827527397 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.826714835 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.829528122 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.831364402 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.829538581 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.829560751 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.831498827 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.827518427 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.827823078 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.830844066 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.830237116 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.828415073 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.828451429 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.827287757 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.829715472 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.830607762 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.8303806 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.828126266 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.827882626 seconds)
  done (took 45.650238888 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.831812724 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.828472191 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.830751388 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.831618784 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.827166303 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.831634391 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.831418979 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.828849003 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.831084655 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.831503285 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.82826438 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.829917404 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.831736022 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.828513911 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.831220489 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.828701816 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.83149102 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.829647456 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.831444374 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.828810224 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.831969257 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829406188 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.83054967 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.832170891 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.828642569 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.829281191 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.831628938 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.831490765 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.831888816 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.82951501 seconds)
  done (took 56.664872828 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.836857735 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.839372525 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.834077287 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.832218432 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.83171199 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.832170965 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.832443273 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.83721315 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.834210169 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.833633359 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.834209963 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.83507738 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.834748598 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.837174789 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.834498395 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.834539841 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.834898209 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.834467894 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.834973582 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.834129527 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.834423036 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.834027528 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.834346683 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.834649858 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.834835171 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.834382416 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.834641622 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.834293419 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.835226499 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.835310684 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.834316303 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.835515423 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.835516393 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.835290208 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.836056602 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.834875356 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.839349391 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.841821315 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.834672262 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.835244808 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.835980246 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.835072734 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.835786883 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.835493035 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.835143384 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.837048048 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.835415918 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.83562704 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.836421353 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.836374491 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.836978767 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.836539252 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.835864214 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.835366002 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.836733764 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.836621718 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.837546186 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.836483498 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.836514234 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.835598281 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.837161464 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.838116209 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.838959585 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.836644858 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.83837072 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.837188758 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.836563343 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.837409728 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.83658244 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.836408475 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.836538268 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.836813293 seconds)
  done (took 133.928485667 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.837896812 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.834839112 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.835010713 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.833650706 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.833549384 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.837573693 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.834600641 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.837254384 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.834016751 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.836942195 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.838283434 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.835850569 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.834929147 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.838014921 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.837608472 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.834660707 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.83887556 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.83481558 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.838256376 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.838045261 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.83789403 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.836273887 seconds)
  done (took 42.157763782 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.837841196 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.838493377 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.836000269 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.838509646 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.836242725 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.837767864 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.839522703 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.839679438 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.838405843 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.836949017 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.83637316 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.838982223 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.837378606 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.836475807 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.836235003 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.836198639 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.838922711 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.836028189 seconds)
  done (took 34.837230125 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.836894582 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.838363704 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.839292863 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.836825533 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.836541143 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.83931361 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.83791772 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.841914088 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.83970905 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.836795313 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.839729851 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.839731414 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.839973418 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.836854758 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.839030697 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.837354376 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.838819988 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.83817848 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.840735765 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.838959089 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.838303432 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.840397584 seconds)
  done (took 42.213624651 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.840180098 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.841261247 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.838034805 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.83820957 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.837949389 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.840297204 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.840930502 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.838757849 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.841668324 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.841367806 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.839163171 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.840734928 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.838650715 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.839095621 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.839149253 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.838440225 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.841528643 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.839179128 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.841953386 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.839384411 seconds)
  done (took 38.559970099 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.843222899 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.845025985 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.843198725 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.843866484 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.843892202 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.844606032 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.84480339 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.84388414 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.844475132 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.84463045 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.844273206 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.845128 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.845261237 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.844548527 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.844521577 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.845146913 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.844091793 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.844233512 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.845664323 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.844787678 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.844642082 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.845964116 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.845035946 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.844660484 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.844435084 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.84451108 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.844754676 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.844960396 seconds)
  done (took 53.414120968 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.843887858 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.84478378 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.841092281 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.841523335 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.843143955 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.840652642 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.840687212 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.840756274 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.84450164 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.840924661 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.844879967 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.843369526 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.843323248 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.843940988 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.843703281 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.844739804 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.843678902 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.841400154 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.84180704 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.841552275 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.844324512 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.84523785 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.844872426 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.841637886 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.840986093 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.844471286 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.843596288 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.841974951 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.845782758 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.842559528 seconds)
  done (took 57.057574489 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.864071732 seconds)
    (2/2) benchmarking "in"...
    done (took 1.862877692 seconds)
  done (took 5.493661027 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.842895981 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.84495869 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.845556252 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.843722912 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.843230473 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.845848389 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.844823221 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.842233305 seconds)
  done (took 16.520549359 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.845160354 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.845883868 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.844767101 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.845673443 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.846411222 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.845966298 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.851729572 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.846112876 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.846336297 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.846658272 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.853050599 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.852738123 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.84800964 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.847783248 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.845847791 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.847128526 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.846700952 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.847654069 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.847762059 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.846155306 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.848167356 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.849148564 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.849113334 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.843232733 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.848307132 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.856519098 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.850453805 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.847326241 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.848051576 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.850090009 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.846853081 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.84468651 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.850270989 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.84761766 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.847876915 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.849495467 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.856677287 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.848429535 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.853813529 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.848816765 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.848042879 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.845598329 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.848791914 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.85035167 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.848431352 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.849857933 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.848883174 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.845870507 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.850378325 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.852669121 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.854677007 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.848321347 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.84754874 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.85398807 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.850773652 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.856745823 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.85092644 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.852117806 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.858403665 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.859214336 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.861933386 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.857681432 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.850744875 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.851626835 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.859935278 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.871747606 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.857127827 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.84784326 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.848156791 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.850505606 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.857446379 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.863711593 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.85917574 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.851497728 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.851392774 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.851066044 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.85150174 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.851217868 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.858702378 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.854223716 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.851857484 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.852776994 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.859291059 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.871384595 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.850214475 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.851992582 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.851686648 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.852036875 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.852051338 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.860940447 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.853488408 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.851802319 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.851921238 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.851610147 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.854055907 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.854268163 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.85074216 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.853594464 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.849805902 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.852956209 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.852928216 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.854889923 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.860945432 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.853622292 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.852939076 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.860588295 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.852543401 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.852632338 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.859805616 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.852660615 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.853475734 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.852923491 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.857624035 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.850527408 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.855339928 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.860973737 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.85426395 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.854275214 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.854982055 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.853603169 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.86205696 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.876792486 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.852997047 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.852329456 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.857748711 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.864828824 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.854739909 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.855957391 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.853446467 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.851052171 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.850541199 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.855688026 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.853562128 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.854527252 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.854834213 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.854135025 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.853784792 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.853927908 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.855416623 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.855257655 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.856311102 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.855587406 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.85636232 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.856171005 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.856998812 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.856256742 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.860834224 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.854364481 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.856483025 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.855472992 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.851811776 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.855687693 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.855850932 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.856389436 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.855324572 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.85624307 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.854103792 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.856193984 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.85505167 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.856003417 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.855441818 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.856467437 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.85816878 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.856977955 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.858560885 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.853803426 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.853494795 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.855902087 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.855469133 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.856320725 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.85589832 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.855232327 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.859018564 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.864025465 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.857529027 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.85699035 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.858574733 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.858178296 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.857737099 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.857936377 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.859329032 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.863736556 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.857499037 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.86366161 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.856965954 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.858995853 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.857441267 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.856694024 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.856836904 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.857660321 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.859628172 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.864207482 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.870454377 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.86503451 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.857950677 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.860297568 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.858413359 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.861171678 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.860855783 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.85924631 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.858248712 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.859896843 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.857708483 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.859633597 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.859903949 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.858919843 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.857791217 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.858456261 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.858476092 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.860301514 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.859168651 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.859200598 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.858896616 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.856194299 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.858532467 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.860531613 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.857927495 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.855766294 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.857906239 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.858968967 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.858666439 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.860251135 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.864175159 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.856499129 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.859894748 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.860010818 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.859506718 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.856948034 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.859549153 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.860131364 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.857436378 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.866703222 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.860502812 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.860285584 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.865709374 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.858999776 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.859031803 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.862776806 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.859517771 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.857252038 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.862333123 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.866227598 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.859638093 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.861699832 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.860926018 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.860022894 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.860462856 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.86669203 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.85735309 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.859216271 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.862133705 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.860976546 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.85728006 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.862145879 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.861919435 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.861589995 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.863803514 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.862036673 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.863092347 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.862286999 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.862479389 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.862780193 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.861918522 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.864696272 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.870030432 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.865519863 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.860892793 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.863568414 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.862712587 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.86507057 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.862088519 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.863022394 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.861342837 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.87417936 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.871906619 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.867873298 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.862957306 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.861866997 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.866730969 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.864087661 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.866775618 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.861510941 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.862254067 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.862213472 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.860862427 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.859504174 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.862269822 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.862265132 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.863975851 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.86363905 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.865984999 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.862153827 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.861918409 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.864127058 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.863883249 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.863544336 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.862594975 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.862447052 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.864976345 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.865107109 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.862197401 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.863803164 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.868503578 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.863391153 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.864503189 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.863393514 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.864305892 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.862831726 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.864474611 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.864024322 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.866703149 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.872644169 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.868659754 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.872075422 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.864667951 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.872676009 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.866047409 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.868366779 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.873033037 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.861699259 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.863657978 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.864277429 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.865705597 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.872317427 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.866425026 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.865659503 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.869730002 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.865553514 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.867246037 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.863864629 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.86538717 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.864257335 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.866169902 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.874246497 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.865654148 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.868074386 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.867259601 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.862658789 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.86735176 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.864792685 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.86494429 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.868505459 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.866500063 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.866389802 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.866622046 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.865400712 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.8656605 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.866386234 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.866126092 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.864074847 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.866168982 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.872341188 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.866577997 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.870543571 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.866613708 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.874192983 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.867082391 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.87374571 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.869109891 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.867312086 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.86812156 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.866490294 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.868019457 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.866711014 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.867190579 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.870154183 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.867585886 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.86977058 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.868606395 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.869165086 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.867622736 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.87022165 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.866497307 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.876606779 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.890650207 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.868457549 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.871911042 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.864569815 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.868149807 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.873189618 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.86878939 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.869286033 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.870225934 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.876188733 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.875299396 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.86811533 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.869013912 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.870306064 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.868869552 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.869150622 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.868153154 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.869316131 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.86943458 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.86996568 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.869619691 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.871272503 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.869080826 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.87067237 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.86907168 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.869914741 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.878672004 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.870354223 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.870395851 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.870955674 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.868525211 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.869319258 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.869512083 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.870466276 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.869592437 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.86968267 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.870466674 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.875039822 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.876217413 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.875336688 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.869811821 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.871282392 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.870732202 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.870228913 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.8708609 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.873144837 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.87094537 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.871320062 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.870806243 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.87140186 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.86985169 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.869776757 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.870635462 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.870495948 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.872446971 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.877398858 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.87097843 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.868428907 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.8710693 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.870256555 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.870141747 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.871288329 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.878384109 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.873730962 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.880373374 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.879303597 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.87603851 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.870441243 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.8742005 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.879612392 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.870038631 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.873508154 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.872621454 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.871857733 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.872001009 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.875218673 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.873037557 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.878660772 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.871293421 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.871001399 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.879376451 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.873743556 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.874357614 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.872782691 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.875505612 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.872148687 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.869081032 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.873014482 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.871387732 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.879540654 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.873664894 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.873386649 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.874146218 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.872043412 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.873596774 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.878675319 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.873410541 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.874180359 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.870922971 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.874369917 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.874712898 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.872811137 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.869960247 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.873634697 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.872534664 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.87656817 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.879446872 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.870781915 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.875265448 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.874233542 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.874090804 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.876086057 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.874087817 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.872770871 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.871077005 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.873362656 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.874441386 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.873212726 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.875968475 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.874367024 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.875028729 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.875069603 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.875470075 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.87697242 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.883879201 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.881762526 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.871668232 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.873870396 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.87413323 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.876892977 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.874897654 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.875834068 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.874471285 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.875890869 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.874190656 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.875772795 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.874380594 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.876956806 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.889954717 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.875724471 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.874163374 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.876143104 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.878392141 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.87482059 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.872135389 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.876197273 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.878257147 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.87834859 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.884156959 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.877582954 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.882365534 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.876491615 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.878077341 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.880110149 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.879062241 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.883963131 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.879414565 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.8777812 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.877204996 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.880352755 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.891140524 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.876654338 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.885350081 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.904942051 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.876853991 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.877435955 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.878488411 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.876655042 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.877430298 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.878206586 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.877921915 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.876335593 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.877995428 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.878250874 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.87690282 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.883084723 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.877626232 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.877304033 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.877395672 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.876957007 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.877752664 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.874092961 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.878693921 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.877779092 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.878547286 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.879802262 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.879060837 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.876976238 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.88882054 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.888115894 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.878124965 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.879086514 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.875652051 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.881228305 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.880367395 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.887571802 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.88473962 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.880353383 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.879492874 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.879658645 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.879688327 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.875495209 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.878265652 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.87802621 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.878452525 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.876388456 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.891062146 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.888243888 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.883903243 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.879628932 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.880697789 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.879230152 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.880387438 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.879919239 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.880317814 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.880322925 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.879827739 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.884454009 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.880123591 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.879470504 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.882268297 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.886954359 seconds)
  done (took 1113.357818221 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.877637118 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.87734799 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.877289179 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.877147401 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.877710964 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.877193315 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.876233343 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.877503251 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.877751496 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.877243796 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.877602385 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.878279287 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.877255282 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.879299291 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.878760254 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.877095501 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.87772785 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.877981212 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.879184262 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.878369227 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.8775495 seconds)
  done (took 41.232799344 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.880444199 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.877752311 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.879389259 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.88096014 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.877276472 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.880769859 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.878279698 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.881098706 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.882059929 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.878787211 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.882303025 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.881353492 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.879111394 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.880546669 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.879340646 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.883117934 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.881867523 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.879666455 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.883121786 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.880889539 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.882105078 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.879309926 seconds)
  done (took 43.171864459 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.883341039 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.885560059 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.881807369 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.879407249 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.882186938 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.879461378 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.884535278 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.882936186 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.883028645 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.883618804 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.880683452 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.883398231 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.888780087 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.88767433 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.884587084 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.882883721 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.027658294 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.883925116 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.884353877 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.884855185 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.880448061 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.887889634 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.882142364 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.881440134 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.882155985 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.883863167 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.883685763 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.883316449 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.885145293 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.884458468 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.888049416 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.882832428 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.884228606 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.885106392 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.883278849 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.88428264 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.887699437 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.885338785 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.882126052 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.885924027 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.894404297 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.903177544 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.88526338 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.891559872 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.884840893 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.884344585 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.88772787 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.892740505 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.882774127 seconds)
  done (took 94.309654938 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.884168467 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.885205266 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.882426407 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.884465448 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.885198043 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.885864422 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.885095991 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.884715666 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.882059893 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.883940615 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.885869796 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.882286746 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.883705811 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.885562332 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.884899234 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.881738025 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.882916212 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.881896899 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.8819351 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.883167559 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.883205031 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.885917681 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.886152505 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.883617432 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.886547014 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.883722259 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.882904801 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.885376465 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.882458649 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.882756331 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.886500778 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.886333872 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.886002178 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.884121565 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.883962694 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.886758662 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.887629349 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.883370226 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.885895198 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.883879593 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.885775303 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.886669008 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.885894683 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.886137703 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.884455251 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.885615113 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.885842162 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.885023553 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.886215254 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.887167461 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.887017129 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.885788319 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.88696259 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.884872996 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.88769614 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.888544515 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.885929422 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.88712175 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.888290316 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.887239689 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.884933223 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.887122272 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.885400666 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.886699857 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.887616866 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.885756328 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.88582632 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.889419558 seconds)
  done (took 130.003825254 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.890039732 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.889670787 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.890219565 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.88995217 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.890785638 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.88903893 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.889323425 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.889779333 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.889370542 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.889639221 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.889985159 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.889485031 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.890821652 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.889156584 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.891695783 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.891692176 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.889933255 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.890822605 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.889976134 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.890175834 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.890540043 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.890660601 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.891278742 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.890602143 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.890584992 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.892207565 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.89142043 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.892933675 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.891078665 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.890305807 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.891711385 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.890960553 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.890336596 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.892126067 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.893597312 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.892764687 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.892367927 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.893186351 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.892077156 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.892027174 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.89333248 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.892607549 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.891186763 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.891419611 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.89153801 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.892477519 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.892157097 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.893411216 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.892084043 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.891601771 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.892441455 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.892089239 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.891838904 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.891298908 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.892111303 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.890944161 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.892154287 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.893979277 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.893786748 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.894396589 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.892973687 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.892659718 seconds)
  done (took 119.07824713 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.890613947 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.891730453 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.888911777 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.887793603 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.890960224 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.888808872 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.891433209 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.892382323 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.892284895 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.893138547 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.891764814 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.889217421 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.890542711 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.89204937 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.88976895 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.890431769 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.889701084 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.889751553 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.893541097 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.890601566 seconds)
  done (took 39.627706302 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.891821182 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.892701595 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.889811601 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.890910239 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.893639631 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.889996038 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.892618175 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.893281865 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.891775561 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.894193395 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.894663875 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.894418231 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.891556777 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.891153746 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.893694146 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.89108231 seconds)
  done (took 32.090643677 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.890504863 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.893072155 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.894593559 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.895949122 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.891213758 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.892195453 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.894634144 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.891237795 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.89164883 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.894654514 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.893683574 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.894933301 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.893544631 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.895062113 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.892691331 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.894952659 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.892066803 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.892162329 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.894788576 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.895757501 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.893321313 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.89123915 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.893101865 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.893814687 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.892632123 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.891899405 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.892265885 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.893380796 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.892801408 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.895751801 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.893750339 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.892832344 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.892569201 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.892427068 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.896936019 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.892210849 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.895057638 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.89553622 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.896198807 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.896536864 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.895929178 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.894365559 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.897395607 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.896864112 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.893115382 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.895424138 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.892874521 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.894096935 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.89381745 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.894593768 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.897461786 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.898726668 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.896837616 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.896924697 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.896971996 seconds)
  done (took 105.993085928 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.896220508 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.895619167 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.892884253 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.895093422 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.89625359 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.894552321 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.896897937 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.894477435 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.894654591 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.896884884 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.894747271 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.896318043 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.893942191 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.896910655 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.894887048 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.896535381 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.894719673 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.896177684 seconds)
  done (took 35.934058547 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.895137184 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.896797934 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.89860141 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.893266107 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.894647284 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.897193169 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.893965707 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.896490691 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.897526693 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.895188022 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.896049031 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.900041681 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.898943232 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.899158226 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.896801125 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.895357075 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.897822628 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.897742252 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.896146735 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.895264767 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.897829985 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.899207324 seconds)
  done (took 43.547357838 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.89817682 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.89778147 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.914356338 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.918597288 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.919943747 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.932932003 seconds)
  done (took 13.301115539 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896168787 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.89764041 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.895916534 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.899491564 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.899973862 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.896329244 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896927913 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.898029065 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.89996509 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.897863136 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.895987331 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.899454538 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.899380236 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.897130367 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.901692081 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.899989372 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.897959778 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.899602135 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.898316131 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.901020182 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898611881 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.900204393 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.897446965 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.897278683 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.897304933 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.897555385 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.90099541 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.89836006 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.899449943 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.901340975 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.902235302 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898245962 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.899723371 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.897883826 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.899689466 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.899771964 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.897196451 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.90091702 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.902070968 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.89989825 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.901982906 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.902735518 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.902896325 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.899691301 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.901879951 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.898942844 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.898497044 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898494234 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.898659409 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.902271336 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.903043017 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.900141598 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.903082717 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.903012387 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.901817432 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.902453743 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.899709502 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898340644 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.901969121 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.898870652 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.900006435 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.903395782 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.90048659 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.900993799 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.903054287 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.900739765 seconds)
  done (took 127.203107113 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.899545312 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.899263059 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.899432343 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.899925653 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.899677942 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.899904043 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.901100088 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.90093364 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.900743665 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.900841647 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.903458778 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.900940702 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.900277941 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.899849872 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.900534772 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.90117972 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.900248091 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.900147056 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.901836675 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.905188804 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.902524018 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.90274988 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.901436486 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.902226869 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.901454108 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.904192295 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.901850227 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.900688483 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.900944767 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.902263706 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.903029042 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.902605699 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.902958354 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.902364399 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.903318191 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.901993973 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.901769016 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.901060832 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.902451063 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.904371055 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.901821769 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.90541776 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.903261231 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.902469374 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.903444187 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.903200568 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.901803852 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.902761183 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.902109726 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.902011061 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.902374844 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.902652765 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.903500521 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.904166592 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.903281373 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.903541088 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.903825225 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.902889079 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.90226878 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.90510712 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.90309628 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.902270745 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.905532521 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.904068794 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.903300359 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.904476897 seconds)
  done (took 127.370309999 seconds)
done (took 2594.478448656 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.95371205 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.942720291 seconds)
  done (took 15.72289146 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.068613205 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.020325279 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.905225771 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.905583581 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.904981319 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.901600493 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.925963765 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.907146972 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.906808863 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.905318557 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.904616299 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.089985893 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.96003873 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.905786232 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.906166044 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.998292036 seconds)
  done (took 52.94628935 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.90964598 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.909898508 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.919374137 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.911540186 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.908821765 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.922425013 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.944626206 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.913317439 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.943740667 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.926889327 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.980022361 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.920163022 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.908711311 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.957891364 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.924155582 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.924520074 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.001464005 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.986326981 seconds)
  done (took 36.641835186 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.986851866 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.917000336 seconds)
  done (took 10.739325664 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.906616742 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.910433108 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.979563823 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.933274952 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.905264209 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.936757791 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.914472227 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.919917569 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.918641096 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.974395729 seconds)
  done (took 71.129673753 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.914629738 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.910384535 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.909928355 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.908208969 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.90347066 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.906635908 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.910156653 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.909154665 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.568424057 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.945236388 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.916343799 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.915644403 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.910389374 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.911114827 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.907919844 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.932803459 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.018904311 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.908594342 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.908546104 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.916633096 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.91135175 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.969676448 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.925128015 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.913067521 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.940199798 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.571223815 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.919311799 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.916977595 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.013416946 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.908873651 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.910897544 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.910784474 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.913234438 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.312815539 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.195268533 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.912572638 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.924122926 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.918289693 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.908090257 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.04815292 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.912508486 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.918236422 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.609122554 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.173129742 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.018144036 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.955838369 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.221236477 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.92960834 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.913133891 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.942219346 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.915653456 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.913755323 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.926452395 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.404219659 seconds)
  done (took 134.564587048 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.910593599 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.259555329 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.079140092 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.908849384 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.197525289 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.118061039 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.910506535 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.95755313 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.910618902 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.144309293 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.168673342 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.01623762 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.909733556 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.909396111 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.909261399 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.9082114 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.06807112 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.983782504 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.911708112 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.907235749 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.940318815 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.155810498 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.034127266 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.91309961 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.940168623 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.12397821 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.028159413 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.01688816 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.707316377 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.9083651 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.975864591 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.911337004 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.912112123 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.909557153 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.071022789 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.007389942 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.9986216 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.911373585 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.909082531 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.909308986 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.580320647 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.112373194 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.008578919 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.052824941 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.110077315 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.117635165 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.694033508 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.908687549 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.654802707 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.076252268 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.141786698 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.148029015 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.035581453 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.9131834 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.449052011 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.909556426 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.910166315 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.163399467 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.055884128 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.011921975 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.911860479 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.911967278 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.90980652 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.157496175 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.913410496 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.009661398 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.914549688 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.912586268 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.010721106 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.01257022 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.051794477 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.127298602 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.943802914 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.804119241 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.451883924 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.161998198 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.980096732 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.165309249 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.915295049 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.911228046 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.992984862 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.755014166 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.168453731 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.163994728 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.166870454 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.950253228 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.640391584 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.910773473 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.142995804 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.135838323 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.176050971 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.121609795 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.154777748 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.232265452 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.911599063 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.911833618 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.145438542 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.051059245 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.915683283 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.260849566 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.147165698 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.465761418 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.93533 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.222810456 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.047526826 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.915829233 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.554873175 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.915172546 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.146155747 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.957490706 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.916056427 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.913907277 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.136737681 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.904767891 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.914695583 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.563509102 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.97897526 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.918625455 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.150023321 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.916438954 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.185441259 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.91677434 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.153962336 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.923558755 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.948942137 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.146679678 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.122143348 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.917592895 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.162344887 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.162715752 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.032706071 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.138801354 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.620815409 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.916207612 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.206609393 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.916139041 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.91504622 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.088321774 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.916240004 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.062285379 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.918670115 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.211791045 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.941056967 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.152468803 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.918321753 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.175728033 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.951826342 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.968995636 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.917327452 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.049725142 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.918615104 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.844228135 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.081068781 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.920116941 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.915912927 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.729703231 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.917011176 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.068266581 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.151737283 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.941228432 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.992145683 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.589591349 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.916447287 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.999181255 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.942460716 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.310328184 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.918090636 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.171845174 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.919332572 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.91729064 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.916921598 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.159603768 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.103658023 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.9201041 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.917225495 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.82863418 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.916575665 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.917475365 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.103849614 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.350179174 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.917541374 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.123092485 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.917780242 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.047772845 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.92015043 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.995966342 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.262371636 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.916772333 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.916451724 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.917936201 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.917629517 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.919033706 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.182280808 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.946764707 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.450996233 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.059287179 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.195996989 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.231712109 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.169050763 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.965864506 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.923045825 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.176306341 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.920869544 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.983793361 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.921469406 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.941373481 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.151943986 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.920947311 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.131150191 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.200485806 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.781251517 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.969476602 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.920618125 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.918471448 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.917877914 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.067594238 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.010192362 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.920990023 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.918786949 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.037053534 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.043484291 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.132384399 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.920310508 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.991058675 seconds)
  done (took 913.732748151 seconds)
done (took 1237.306601701 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.918385333 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.920235895 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.910465686 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.922039905 seconds)
  done (took 29.516089065 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.929799566 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.924096065 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.927044954 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.924653819 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.926582879 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 2.365825148 seconds)
  done (took 13.843426269 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.97772691 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.918908408 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.923258871 seconds)
  done (took 21.665050309 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.993972132 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.307103951 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.031102976 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.348377782 seconds)
  done (took 10.525741089 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.928913347 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.927499622 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.928019761 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.928523465 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.932861947 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.932126107 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.926989817 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.928171603 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.932422645 seconds)
  done (took 19.212730146 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.992974615 seconds)
done (took 100.602826536 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.013098204 seconds)
    (2/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.244898768 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.60384633 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.992219082 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.025183946 seconds)
    (6/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.588319953 seconds)
    (7/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.927017625 seconds)
    (8/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.112394468 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.245147461 seconds)
    (10/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.106878861 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.269235056 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.281333372 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.943553864 seconds)
    (14/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.232437251 seconds)
    (15/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.949993132 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.993245901 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.912679677 seconds)
    (18/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.059304038 seconds)
    (19/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.058429995 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.927837716 seconds)
    (21/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.371383248 seconds)
    (22/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.911891278 seconds)
    (23/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.425215605 seconds)
    (24/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.162888865 seconds)
    (25/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.133279621 seconds)
    (26/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.015513345 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.218363044 seconds)
    (28/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.951263168 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.036730951 seconds)
    (30/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.01357455 seconds)
    (31/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.283187902 seconds)
    (32/309) benchmarking ("sort", Float32, false)...
    done (took 5.62822793 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.018433024 seconds)
    (34/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.504206384 seconds)
    (35/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.319744902 seconds)
    (36/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.9241311 seconds)
    (37/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.152062373 seconds)
    (38/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.092276754 seconds)
    (39/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.014481938 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.099729605 seconds)
    (41/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.211916915 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.033294718 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.125636255 seconds)
    (44/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 3.139978962 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.039111066 seconds)
    (46/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.031221606 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.226050041 seconds)
    (48/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.926031605 seconds)
    (49/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.92794006 seconds)
    (50/309) benchmarking ("sort", Bool, false)...
    done (took 2.25197231 seconds)
    (51/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.011795743 seconds)
    (52/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.951510537 seconds)
    (53/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.155841235 seconds)
    (54/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.457975397 seconds)
    (55/309) benchmarking ("sort", Int64, false)...
    done (took 5.65724965 seconds)
    (56/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.912566349 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.795729523 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.852786701 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.325442077 seconds)
    (60/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.178717753 seconds)
    (61/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.084632086 seconds)
    (62/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.948271993 seconds)
    (63/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.175823579 seconds)
    (64/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.993293844 seconds)
    (65/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.564120944 seconds)
    (66/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.953011165 seconds)
    (67/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.026663568 seconds)
    (68/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.242934207 seconds)
    (69/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.926544038 seconds)
    (70/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 3.415682774 seconds)
    (71/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.966704428 seconds)
    (72/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.817403324 seconds)
    (73/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.838313336 seconds)
    (74/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.351900676 seconds)
    (75/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.217799645 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.326496032 seconds)
    (77/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.020758446 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.91622043 seconds)
    (79/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.140584217 seconds)
    (80/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.270639133 seconds)
    (81/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.953198553 seconds)
    (82/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.932225773 seconds)
    (83/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.350589319 seconds)
    (84/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.081564879 seconds)
    (85/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.853367693 seconds)
    (86/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.088694382 seconds)
    (87/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.10267145 seconds)
    (88/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.565693368 seconds)
    (89/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.202311971 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.318280826 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.918002944 seconds)
    (92/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.371764089 seconds)
    (93/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.904493973 seconds)
    (94/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.94526089 seconds)
    (95/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.071901661 seconds)
    (96/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.932992256 seconds)
    (97/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.344803807 seconds)
    (98/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.128804324 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.07999328 seconds)
    (100/309) benchmarking ("sort", Float64, false)...
    done (took 5.716397461 seconds)
    (101/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.95543331 seconds)
    (102/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.927852882 seconds)
    (103/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.059002627 seconds)
    (104/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.214330009 seconds)
    (105/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.932002914 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.366154656 seconds)
    (107/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.113187815 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.949683132 seconds)
    (109/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.058494283 seconds)
    (110/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.953094747 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.886336387 seconds)
    (112/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.938067842 seconds)
    (113/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.380223083 seconds)
    (114/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.45730989 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.257914326 seconds)
    (116/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.068820251 seconds)
    (117/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.115386799 seconds)
    (118/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.936724869 seconds)
    (119/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.330029782 seconds)
    (120/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.102523368 seconds)
    (121/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.946467523 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.12752528 seconds)
    (123/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.929699681 seconds)
    (124/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.443986023 seconds)
    (125/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.966131806 seconds)
    (126/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.348305965 seconds)
    (127/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.957988798 seconds)
    (128/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.554890233 seconds)
    (129/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.03099362 seconds)
    (130/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.919061116 seconds)
    (131/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 7.581504669 seconds)
    (132/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.15395031 seconds)
    (133/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.123470321 seconds)
    (134/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.218832259 seconds)
    (135/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.334646936 seconds)
    (136/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.933570371 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.00330693 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.930258505 seconds)
    (139/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.009171397 seconds)
    (140/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.133250727 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.175193784 seconds)
    (142/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.966933973 seconds)
    (143/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.175950453 seconds)
    (144/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.117228025 seconds)
    (145/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.071299012 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.184737362 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.270329397 seconds)
    (148/309) benchmarking ("sort", BigInt, false)...
    done (took 6.936546802 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.200133648 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.936016275 seconds)
    (151/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.025007716 seconds)
    (152/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.188562683 seconds)
    (153/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.994720019 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.95573595 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.916897562 seconds)
    (156/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 3.167160831 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.029487135 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.877277914 seconds)
    (159/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.326985557 seconds)
    (160/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.055644249 seconds)
    (161/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.277790083 seconds)
    (162/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.9988184 seconds)
    (163/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.935273011 seconds)
    (164/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.408726151 seconds)
    (165/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.839783735 seconds)
    (166/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.021570638 seconds)
    (167/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.28979171 seconds)
    (168/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.083864272 seconds)
    (169/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.411140977 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.962792388 seconds)
    (171/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.052877381 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.583289221 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.876246431 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.943640723 seconds)
    (175/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.098200064 seconds)
    (176/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.099679213 seconds)
    (177/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.90251146 seconds)
    (178/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.218553606 seconds)
    (179/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.962920231 seconds)
    (180/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.026909708 seconds)
    (181/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.014286881 seconds)
    (182/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.918883777 seconds)
    (183/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.26550968 seconds)
    (184/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.119174224 seconds)
    (185/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.283654177 seconds)
    (186/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.040602283 seconds)
    (187/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.918582678 seconds)
    (188/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.162202472 seconds)
    (189/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.075752466 seconds)
    (190/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.001312846 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.05718266 seconds)
    (192/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.949378036 seconds)
    (193/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.221251655 seconds)
    (194/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.43134988 seconds)
    (195/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.355774331 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.87503062 seconds)
    (197/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.956315609 seconds)
    (198/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.919737554 seconds)
    (199/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 3.291952901 seconds)
    (200/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.095831242 seconds)
    (201/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 3.342484286 seconds)
    (202/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.038505838 seconds)
    (203/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.175557779 seconds)
    (204/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.928853719 seconds)
    (205/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.77021396 seconds)
    (206/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.015068477 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.653834403 seconds)
    (208/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.388442247 seconds)
    (209/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.944646975 seconds)
    (210/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.086510539 seconds)
    (211/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.019050679 seconds)
    (212/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.94991428 seconds)
    (213/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.943023261 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.003691106 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.961770408 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.886389551 seconds)
    (217/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.941003177 seconds)
    (218/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.936876496 seconds)
    (219/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.001495705 seconds)
    (220/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.935988972 seconds)
    (221/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.249156215 seconds)
    (222/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.941774408 seconds)
    (223/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.580719603 seconds)
    (224/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.048796936 seconds)
    (225/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.489339835 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.589737906 seconds)
    (227/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.010849707 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.276349897 seconds)
    (229/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.09435743 seconds)
    (230/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.940138575 seconds)
    (231/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.122658264 seconds)
    (232/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.859046729 seconds)
    (233/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.140522166 seconds)
    (234/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.03706087 seconds)
    (235/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.970046605 seconds)
    (236/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.787797359 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.841465204 seconds)
    (238/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.928567393 seconds)
    (239/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.025718334 seconds)
    (240/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.047591473 seconds)
    (241/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.179727958 seconds)
    (242/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.003304726 seconds)
    (243/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.089321059 seconds)
    (244/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.183793132 seconds)
    (245/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.972800685 seconds)
    (246/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.175626842 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.564279316 seconds)
    (248/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.660923278 seconds)
    (249/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.195855421 seconds)
    (250/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.947323707 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.114267128 seconds)
    (252/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.960476078 seconds)
    (253/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.124829279 seconds)
    (254/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 3.171188141 seconds)
    (255/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 4.006429008 seconds)
    (256/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.080854612 seconds)
    (257/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.322015972 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.057572682 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.344390629 seconds)
    (260/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.940855919 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.091446073 seconds)
    (262/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.080816468 seconds)
    (263/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.092032097 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.060419829 seconds)
    (265/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.01904611 seconds)
    (266/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.95191945 seconds)
    (267/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.122400157 seconds)
    (268/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.025266519 seconds)
    (269/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.450025204 seconds)
    (270/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.013282843 seconds)
    (271/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.234598988 seconds)
    (272/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.146366034 seconds)
    (273/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.96413544 seconds)
    (274/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.96444161 seconds)
    (275/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.107048493 seconds)
    (276/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.132108504 seconds)
    (277/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.286848068 seconds)
    (278/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.096907084 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.637611661 seconds)
    (280/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.960305759 seconds)
    (281/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.94032681 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.160768145 seconds)
    (283/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.937937853 seconds)
    (284/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.047068119 seconds)
    (285/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.245694865 seconds)
    (286/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.326500994 seconds)
    (287/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.252230325 seconds)
    (288/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.233053602 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.759702989 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.063187024 seconds)
    (291/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.940356703 seconds)
    (292/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.449374821 seconds)
    (293/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.944427972 seconds)
    (294/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.009051211 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.250095248 seconds)
    (296/309) benchmarking ("sort", Int8, false)...
    done (took 4.846931795 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.776878952 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.979185093 seconds)
    (299/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.182400181 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.773266358 seconds)
    (301/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.393519937 seconds)
    (302/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.020516225 seconds)
    (303/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.941746251 seconds)
    (304/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.961669086 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.205161097 seconds)
    (306/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.930269462 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.166895845 seconds)
    (308/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.944446763 seconds)
    (309/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.62772108 seconds)
  done (took 1028.827820846 seconds)
done (took 1030.732483693 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.972755579 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.964774483 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.948481207 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.971071776 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.060844127 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.976064037 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.95881862 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.951792607 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.996802988 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.99885798 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.94685468 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.974111978 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.950608207 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.948838002 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.949076627 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.962760026 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.263208316 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.983469526 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.965693605 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.958961229 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.966498069 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.947052729 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.999265626 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.974934774 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.953447828 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.951773979 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.951865553 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.969489124 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.061927579 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.9524293 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.953592543 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.962270666 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.266853791 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.984941882 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.946010593 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.969406067 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.961711765 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.960770869 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.954685246 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.981819263 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.351175152 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.992359388 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.952985925 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.950184034 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.95196526 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.955841188 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.951937883 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.959539318 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.963592635 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.96543659 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.342857252 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.008967803 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.953120016 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.951640563 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.962070022 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.951165139 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.954910987 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.96687487 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.971422736 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.968168027 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.248872371 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.991135257 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.953959801 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.969630233 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.96080215 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.379327394 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.990426252 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.957335086 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.353534765 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.000245773 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.379316877 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.005057387 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.95364285 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.965967477 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.985218016 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.266782592 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.981072939 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.952922128 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.961431141 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.950198179 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.963653905 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.965948912 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.95849467 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.955187664 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.967959996 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.980696693 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.965002322 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.954876432 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.963093972 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.973062992 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.96177641 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.965026856 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.958189786 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.950254263 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.964248099 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.958043045 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.956958528 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.956489814 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.959840707 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.963728331 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.35197925 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.013509323 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.951764459 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.951524075 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.953797918 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.966894058 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.351975922 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.998247852 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.976558033 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.002900645 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.956121797 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.24948346 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.990659646 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.969919246 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.963934325 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.958011066 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.950511548 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.249949195 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.380659631 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.013355489 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.957198839 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.952479838 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.97114184 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.956897321 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.951906106 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.27006738 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.991692004 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.970483706 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.076830745 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.966649609 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.988788966 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.954061872 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.959319358 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.988572714 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.972248269 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.988033475 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.958920203 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.972455124 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.973598771 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.954431966 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.967834404 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.967575581 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.960293801 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.962080791 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.951894605 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.988289142 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.970197065 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.969093703 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.977598058 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.078334975 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.955539329 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.251653925 seconds)
done (took 306.705696599 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.03495372 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.949676511 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.061691379 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.955624475 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.042693799 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.043165268 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.953468697 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.953022682 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.952838126 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.326676286 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.952275745 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.953396635 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.957394739 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.953626326 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.044834221 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.954815952 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.952628117 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.290164931 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.95778995 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.032694562 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.954449092 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.953852681 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.956063782 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.328670751 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.958495467 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.949208736 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.028037727 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.957176317 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.293899876 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.955881849 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.959235442 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.293496441 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.047236688 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.974572519 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.967183471 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.963944653 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.039508336 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.962651291 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.037582485 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.044902355 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.056169765 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.99800986 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.950837766 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.953743147 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.960799923 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.958822303 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.953791515 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.985656256 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.95286585 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.954882892 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.291544319 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.967353255 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.95628567 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.956463639 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.95538928 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.990727581 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.955673503 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.960807625 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.054639901 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.960816832 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.021177757 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.330082176 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.329126837 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.958559021 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.958571336 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.956155739 seconds)
  done (took 190.151932181 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.023791703 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.04062358 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.02350177 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.963124696 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.006851969 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.025232129 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.962866404 seconds)
  done (took 15.921543783 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.964166699 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.958684749 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.009712835 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.009350924 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.958934534 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.107293187 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.958899278 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.969465538 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.956369211 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.011177161 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.960556962 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.959635848 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.966621116 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.959932648 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.009723904 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.97007179 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.075833803 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.961335974 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.962054877 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.110855242 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.957659531 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.966536403 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.014510255 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.971624616 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.961347957 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.965926629 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.546177318 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.961678173 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.957611305 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.959971839 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.958608232 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.001622246 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.961343373 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.95587005 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.958412069 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.076181594 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.96248787 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.958596147 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.960554135 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.955231254 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.960489963 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.961311904 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.960470758 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.958889899 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.960999897 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.983182772 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.961834385 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.960689178 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.960557678 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.961836058 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.011739694 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.962041845 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.957827379 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.959321047 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.016371091 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.968823908 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.962681391 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.958970001 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.960959021 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.959422084 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.113235281 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.011714301 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.961929136 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.01336248 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.96186331 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.962363085 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.961444663 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.962482355 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.058050631 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.962375704 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.014543667 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.960526217 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.121702017 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.985547157 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.964248667 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.965666018 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.964930469 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.964869276 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.964667505 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.96937097 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.960818375 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.964225139 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.968513803 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.960789307 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.961345949 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.0757674 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.069950596 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.961145929 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.976191891 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.970672628 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.960779239 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.016125764 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.962918747 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.961273388 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.019167008 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.079425272 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.019738498 seconds)
  done (took 214.814051458 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.967885359 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.971958814 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.964853366 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.980761929 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.96432496 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.964056262 seconds)
  done (took 13.693857848 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.965867647 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.965786381 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.964348967 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.965581276 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.965700103 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.96564208 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.965706561 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.966206203 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.96975669 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.964380005 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.965980183 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.968296383 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.966503463 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.966143766 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.967139293 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.965557401 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.96830476 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.964040835 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.966221807 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.967641249 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.120193548 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.965639185 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.966922709 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.966795753 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.970420106 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.966554109 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.973644032 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.965428085 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.966568699 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.972676907 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.970647292 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.967093423 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.966325448 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.971947286 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.971158232 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.966933837 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.970225299 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.969250847 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.963239327 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.966561544 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.970054384 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.968054551 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.965786747 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.970774938 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.968779985 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.971738643 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.974341098 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.974965856 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.969711922 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.970102221 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.970360014 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.967261514 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.967757058 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.972333114 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.969752112 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.974279066 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.975194525 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.969079337 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.968818076 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.969222262 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.968403475 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.968855562 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.969573821 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.973749435 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.965264687 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.970412387 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.969230471 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.974366245 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.970339364 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.967888342 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.971787022 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.965646852 seconds)
  done (took 144.769613771 seconds)
done (took 581.243724203 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.078382485 seconds)
  done (took 8.963051423 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.117923442 seconds)
  done (took 9.037790371 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.512756971 seconds)
  done (took 10.400132235 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.989313121 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.987169985 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.973542339 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.970435603 seconds)
  done (took 29.830052806 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.350192774 seconds)
  done (took 9.235196999 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.986133529 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.961084121 seconds)
  done (took 15.890708856 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.099787633 seconds)
  done (took 8.985785484 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.058170243 seconds)
  done (took 8.981548691 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.977869468 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.993986715 seconds)
  done (took 15.869823195 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.949311176 seconds)
  done (took 8.833780158 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.55418736 seconds)
  done (took 11.514267201 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.978862011 seconds)
  done (took 8.953692977 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.984758215 seconds)
  done (took 8.870195411 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.032092817 seconds)
  done (took 8.917190095 seconds)
done (took 166.170377803 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.967037993 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.963121604 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.963035673 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.963001582 seconds)
  done (took 29.741144775 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 2.001977375 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 2.001902131 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 2.004252053 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 2.014116105 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 2.008772502 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 2.002890703 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.995581455 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.994930115 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 2.014372881 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 2.005741611 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 2.004253492 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.005086091 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 2.002277858 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.996391461 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.006763722 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 2.005101379 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 2.014135379 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 2.005232 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.996846215 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 2.007176016 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.971253986 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 2.015235109 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 2.007103907 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.972448959 seconds)
  done (took 49.940065442 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.166946078 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.042679862 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.124797988 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.023778706 seconds)
  done (took 10.245799521 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.023646661 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.024244522 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.037394099 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.07576139 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.098262082 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.033985459 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.998154548 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.993329211 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.980129485 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.025312994 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.100377599 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 2.021317797 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.111585965 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.972881294 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.158988532 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.97299809 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.973525517 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.024352698 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.075872233 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.0918784 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.972351723 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.023520854 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.027476448 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.019723921 seconds)
  done (took 50.7253842 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.97158022 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.981101474 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.978650746 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.972182843 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.97204236 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.971504296 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.978751229 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.972745992 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.993160865 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.973664068 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.970936464 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.971862624 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.971253479 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.97233054 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.971504303 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.984623985 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.98624977 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.972102825 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.978023814 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.979846585 seconds)
  done (took 41.413275736 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.967801522 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.820217621 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.319142729 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.221973757 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.968980743 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.967930834 seconds)
  done (took 32.156055744 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.989490851 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.98097638 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.97351167 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.032550603 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.116889613 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.982121006 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.974211042 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.986481099 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.023914629 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.041171362 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.996172611 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.00460239 seconds)
  done (took 25.993589917 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.971697816 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.974891902 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.972522996 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.989233461 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.986130983 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.982380955 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.98177174 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.970181103 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.989486167 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.994337086 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.982783624 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.987377715 seconds)
  done (took 45.678405649 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059348851 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.857368511 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.594026182 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.680595215 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.505192756 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.180892315 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.490910343 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.145587275 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.973100626 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.244471781 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.494647166 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199448538 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.224398275 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.972779 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.047960303 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.423433239 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.258209268 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.202922962 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.993232687 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.635105536 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.077004741 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.580292273 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.704061727 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.083213976 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.182181971 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.10156692 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.232398891 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.936978769 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100937472 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.000314229 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981837841 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.97324012 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.245061928 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178537408 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099977893 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982895591 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.624398315 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.688133215 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.964916432 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.689710029 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.531479813 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.090729546 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981216079 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.974311901 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.907019535 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.583402249 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152270334 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.978344648 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.675878332 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.975077782 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.98380259 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065305402 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.976740809 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.790403578 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.924053266 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.251002527 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.97249638 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980281444 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.545470178 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.028729459 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.660988703 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.914336397 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.066456733 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.672703729 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.42796442 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.121292046 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.978367264 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.977571984 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.908815485 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.633640978 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.081945704 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.119372492 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.993971876 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.62394511 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269518568 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.557302749 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.039863866 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.259176798 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.845343241 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.91586188 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.202788667 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.930204714 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.908576571 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.83175771 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.907998684 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.233003916 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006089996 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.618928488 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007742588 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.146241417 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.986022352 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997298726 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98236098 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.200244079 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.85657773 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.976978168 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.443303491 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.246337455 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998147693 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.148809171 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.910064684 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.980778832 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.229882413 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.187171549 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.301411936 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.435313732 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124732029 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.976512447 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.065135418 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.977908787 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.987343507 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.246415229 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032364082 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.023649687 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092596262 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.928825633 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.26819352 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.99900064 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.153726068 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.510433787 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.224081453 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.289456262 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.222821972 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060793688 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.980472684 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.979498311 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.695419315 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.586407783 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.201140843 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.978014118 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.552503273 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.990766947 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.980687859 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.912769633 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.611228194 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.506902405 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.065504845 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.200842543 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.025498795 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.25239641 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.911515049 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.122132985 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.092342234 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.200694566 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.618379094 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.040182846 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.242396744 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.549818441 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.306236745 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992312724 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997982411 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102962296 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002410448 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.51375887 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.235218313 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.983204404 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.98341959 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.684115775 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.042412541 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.985951256 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.98416322 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.775424158 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260135513 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.003118176 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.981978978 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.913149116 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.9941635 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065372004 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.98492935 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.989797696 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.510938541 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.731344123 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.990832159 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.649228402 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208892855 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990161105 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.626384548 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.15351814 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.06453489 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.251822224 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.038961401 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.914410691 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.683687096 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.684107901 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.981804483 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.915987427 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.982352187 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990434643 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99082854 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.177799005 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.255720531 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.024538357 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.678894519 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.081125384 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991752948 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.986473985 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.983094776 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.508601997 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.044439789 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.542438234 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.124772511 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118194229 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.996028172 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.914748981 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.985616467 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.986385304 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.982787178 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.936265594 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.035410279 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.675236523 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298387152 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.242057442 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.629301849 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.999253923 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.645609742 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.097379836 seconds)
    (217/481) benchmarking "4d"...
    done (took 3.006506943 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.454441327 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.016405684 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.096589836 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065067182 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.993707901 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.62642662 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.749938202 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.558191411 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289384414 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.298358249 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418898109 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.443323387 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.32028169 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.157070501 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.218214135 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.511316492 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.045495155 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.16129145 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.927701971 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068849201 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.623324837 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.321862087 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003844366 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211516351 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369547514 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.505538485 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.129931516 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.195306262 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020014266 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.879094445 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.026575409 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.507068022 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138669336 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.44415908 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.196268955 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159165233 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.457975607 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.077735653 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.986164236 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.432353746 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061340378 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.694044632 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.34483454 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.605905021 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.512842835 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340702496 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.987613873 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.430059771 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.337712437 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.407681783 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.077679574 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.92035288 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.996915206 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.996943013 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.986359869 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.970149875 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.851489242 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.242234589 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997963052 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.220292541 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.340372518 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.256595584 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.887935576 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.991741871 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.987120841 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.278162149 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.717713158 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.23076357 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.392542972 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.582291104 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.998942303 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.921377165 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.920650923 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.690759967 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.988660637 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.962144555 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.206828824 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.090395315 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.941342068 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.433397861 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312054977 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.241843115 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.00265639 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.262455272 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.260609644 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.721510927 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0162823 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.08889531 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.455163353 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.722305375 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.209317706 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.223036239 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.784772884 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.217757952 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.610606062 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.95389554 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.989005332 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.201982004 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.210208214 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.512144034 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221266141 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.709707967 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.005737308 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36849672 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047425091 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.516498426 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.193390498 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.087753534 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004746327 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074694149 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003791552 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.005034259 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.006112787 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.041412151 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.544957109 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.114734912 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.009143956 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087693179 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.053544398 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.571758218 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.005985718 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274682579 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345602804 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.323239413 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.054558033 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.996360403 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.000521377 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.929091654 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137476788 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.44129787 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.270502098 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.12700836 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.137063941 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022092208 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.462719336 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.345725734 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322526358 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.272890931 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.891586187 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.998755429 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.089808912 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.221350101 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007735246 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.207229828 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.223514173 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.30847879 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.462013996 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.201794505 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.283737619 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.271489613 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.364909989 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.998783673 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.58718154 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.011811799 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.523065475 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.032157156 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.529322018 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.272983141 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008766388 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.205599032 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.017490799 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.193956034 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.451314784 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.69792665 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.347188192 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.98167199 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.043036513 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.274169678 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.387294792 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309193351 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08075035 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.009457094 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.697918996 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136929683 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.892325593 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.239170435 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.999410599 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208989631 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.711577321 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.008674628 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275069232 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30729805 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.99830349 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.918659978 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031623462 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 2.008499211 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.223098237 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.273659211 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.245973201 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009692726 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.002468307 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.817514332 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.27461165 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.056279676 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.932906588 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.005129329 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095718471 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.244532799 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.021383503 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.517579686 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.703039636 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.295767531 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.912078536 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023489795 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.478391752 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.454166126 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327754609 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.527208025 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.237834136 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.552934094 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.930919612 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.387428766 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.00590185 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.477364243 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.393312172 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.005334933 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.567362432 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125791059 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.273482245 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.324874577 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.015410233 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77980705 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.032786633 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.225343269 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.593813429 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.943173203 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.007797065 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.062843756 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.003448846 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.131991389 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.013623491 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.95572317 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925245369 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.854677141 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.494126454 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.007899905 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.999622562 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.4899697 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.615211817 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.123914015 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158654354 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.007548572 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.726905675 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.297560137 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.258548803 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.567550593 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.088648968 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.008691012 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.005965286 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.930972901 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.201681162 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.200554365 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.303814776 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.41804922 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.127381946 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.007100893 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.219736051 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.214798034 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.534346295 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147684599 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.464666288 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.128889055 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.932679856 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.717145716 seconds)
  done (took 1732.852590992 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.033674746 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.031408857 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.038325758 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.104223296 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.061647074 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.037670787 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.073425054 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.044157339 seconds)
  done (took 58.348944006 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.005214245 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.2005274 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.013929219 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.006273621 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.038514849 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.00575651 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.219946893 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.017870478 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.027909897 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.015256532 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.007792493 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.010940414 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.284254164 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.030445037 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.006240782 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.545471897 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.021473868 seconds)
  done (took 77.444052506 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.007987763 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.408078929 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.027875985 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.023518009 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.090997744 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.016054168 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.172735543 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.033999758 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.011733329 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.185203082 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.349102106 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.016947917 seconds)
  done (took 92.271744158 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.022563347 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.012542845 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.013579165 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.01256127 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.012633728 seconds)
  done (took 12.009465165 seconds)
done (took 2260.724892451 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.242442497 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.19419685 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.228138258 seconds)
  done (took 6.351290809 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.153672375 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.204411124 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.320715078 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.342623722 seconds)
  done (took 10.951942631 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.309306682 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.379486426 seconds)
  done (took 6.615600974 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.337121533 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.033723574 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.425051106 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.011674971 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.010585458 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.011436949 seconds)
  done (took 22.965179443 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.009836155 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.013998911 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.01103284 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.016473668 seconds)
  done (took 9.978964245 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.994405457 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.709375279 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.997719136 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.013925231 seconds)
  done (took 21.642602439 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.759371932 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.135494041 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.759830311 seconds)
  done (took 9.5817443 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.618841012 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.232961958 seconds)
  done (took 9.779519125 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.168847895 seconds)
  done (took 4.095687627 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.040068846 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.285982883 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.536480619 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.540803149 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.641137812 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.840201245 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.345189868 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.242841068 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.468548153 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.474844782 seconds)
  done (took 26.344455897 seconds)
done (took 144.275319231 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.361255139 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.03991161 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.211468147 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.374737756 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.253664734 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.213920723 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.23036162 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.373925931 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.076364471 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.057166499 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.398902294 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.254590424 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.147260177 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.032196147 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.147668175 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.033050202 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.253236375 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.40355493 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.067981717 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.292089487 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.215936439 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.024237262 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.219769785 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.043135882 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.246654168 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.1618966 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.570844618 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.038486281 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.200413288 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.581673234 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.1667643 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.441859418 seconds)
  done (took 173.063170846 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.011718001 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.011856549 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.010365444 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.010978461 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.54027044 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.013938136 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.012042061 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.012564521 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.415197768 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.40890652 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.014377903 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.530996816 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.015824587 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.013473936 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.01204385 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.012706127 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.575866516 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.013352252 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.013333385 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.012969302 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.012234579 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.355993382 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.014059636 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.366436166 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.569255709 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.014786085 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.014095246 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.013252557 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.012584562 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.013501599 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.015456161 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.013489256 seconds)
  done (took 214.011593336 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.012037286 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.014675601 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.015915263 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.014753461 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.015446185 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.014323537 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.01462677 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.014187669 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.62001679 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.610268734 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.015654045 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.016057847 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.011874697 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.015320745 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.016865986 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.014206053 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.014720088 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.015880217 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.015718307 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.016663065 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.018410521 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.614978497 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.015534577 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.635915701 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.01478444 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.016870883 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.014741223 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.01332033 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.014562271 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.015134829 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.016544017 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.014556732 seconds)
  done (took 224.836872163 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.269450404 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.019305751 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.020238791 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.949853195 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.020439947 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.018652201 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.012233381 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.271367619 seconds)
  done (took 20.515843097 seconds)
done (took 634.367751837 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.445555031 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.304936852 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.198379248 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.044607573 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.288530779 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.078610422 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.039856886 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.107604545 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.661389529 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.112378294 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.691905506 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.064277238 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.777141266 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.070431551 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.16203078 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.100692208 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.625935187 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.724920578 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.21564731 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.117626179 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.210853126 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.962381855 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.122850008 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.69798993 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.801139072 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.013823504 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.102792425 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.631469353 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.052511944 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.198705047 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.788314358 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.345847372 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.056450639 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.040472495 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.095662695 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.075488763 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.310346508 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.055131847 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.16471464 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.76668919 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.117142394 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.570065563 seconds)
  done (took 108.948012142 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.013144892 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.010102459 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.00906035 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.010097794 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.010015707 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.011397861 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.008882321 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.010106773 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.011744878 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.00875459 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.008847873 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.009517173 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.009806724 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.009538238 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.009620545 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.008771047 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.010249757 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.011069085 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.010100666 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.01023931 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.010861912 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.01047239 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.026043476 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.01021936 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.011695303 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.011396092 seconds)
  done (took 54.228224285 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.02554744 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.17714039 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.264077795 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.046144758 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.023661742 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.027486709 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.043794359 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.030188984 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.027073789 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.026998944 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.132322812 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.03173488 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.045174112 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.264678895 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.044465091 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.027562029 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.026126208 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.026398363 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.18505156 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.043046715 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.044812876 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.030794424 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.044810882 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.039940264 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.02711114 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.026404609 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.029231078 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.474628814 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.036701821 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.13090463 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.072579218 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.051311969 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.391459469 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.275034061 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.084154151 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.035418673 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.026502393 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.133441813 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.032687856 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.02641613 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.044295913 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.032172841 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.263414452 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.513023549 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.042160531 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.028492439 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.479978818 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.145172365 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.069262642 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.038956049 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.267154489 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.0445264 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.028652578 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.027940564 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.064424143 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.034638602 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.026858622 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.32455449 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.040683409 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.045882236 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.033386583 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.027718832 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.183821827 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.037337913 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.175846029 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.038705116 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.033795886 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.029675574 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.266262621 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.047465641 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.511968356 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.043980133 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.028844896 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.133782223 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.184067422 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.509684546 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.0422938 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.187229354 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.409310572 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.054806321 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.036268544 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.461136238 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.058490331 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.036625404 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.031500921 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.030957652 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.029421898 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.074404191 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.04518571 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.451396154 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.519106349 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.341328446 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.058321894 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.044096965 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.03040953 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.322617646 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.039720945 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.030763864 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.262486536 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.525819632 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.045602496 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.037707658 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.500664058 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.047548372 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.04985376 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.039161611 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.273241453 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.048866373 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.075599542 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.032861455 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.038005934 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.033651482 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.049694702 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.038444915 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.032083623 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.49723993 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.157523137 seconds)
  done (took 250.445923189 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.025530809 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.029231609 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.024403701 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.030629792 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.024555685 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.031133075 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.024941643 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.025717411 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.02985726 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.025938569 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.025673179 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.026163071 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.028619896 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.027635621 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.035595328 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.03222233 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.630056856 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.026939563 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.045994436 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.026846008 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.682381311 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.032931533 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.027345277 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.02768725 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.025996828 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.026243642 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.031500157 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.030986766 seconds)
  done (took 172.009375252 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.032812772 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.15140192 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.053674397 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.060328123 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.041864906 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.03073098 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.056233668 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.05121614 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.037857007 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.031036258 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.031559112 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.095313266 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.045084478 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.130187331 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.063819783 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.064939039 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.134713537 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.040941726 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.031474703 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.030665162 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.061243818 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.027789957 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.094883046 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.160575382 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.053447432 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.149829619 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.039598743 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.034341835 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.033256375 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.151093768 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.050194148 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.094630549 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.062106106 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.051356253 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.155520764 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.14909279 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.137299353 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.062336839 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.037924694 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.033097536 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.032756573 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.021163087 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.150325301 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.053651676 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.035023939 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.139659536 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.054104961 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.035271679 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.04351468 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.032754723 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.048897534 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.053104362 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.102728044 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.16594399 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.068252232 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.05957052 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.059088675 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.314382473 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.043607545 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.132412099 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.027558463 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.152715719 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.056942436 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.022887273 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.035685631 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.041251296 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.064167582 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.065904333 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.138123101 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.042361636 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.132853979 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.069977069 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.042009056 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.034063311 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.037742506 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.152366681 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.154885017 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.069231076 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.072819579 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.066894741 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.031380428 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.035861197 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.023734533 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.053369094 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.038996447 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.151699502 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.153050603 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.044411197 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.037188227 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.038070958 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.038170786 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.062173596 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.162796608 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.074360298 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.127991629 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.103298836 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.112099586 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.051629532 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.050813929 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.040039723 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.099328606 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.052299437 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.049009563 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.364475679 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.10672223 seconds)
  done (took 220.034788664 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.518886361 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.0882117 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.095355526 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.351194723 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.39637204 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.970863682 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.084986588 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.086901009 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.110810111 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.27730981 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.150169758 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.105711872 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.072721487 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.060004906 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.08493674 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.109816118 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.095726169 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.4255667 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.188409791 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.255984236 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.066737296 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.367284273 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.358976316 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.481477946 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.120784078 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.429508591 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.755226015 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.232745467 seconds)
  done (took 66.301622304 seconds)
done (took 873.903571898 seconds)
SAVING RESULT...
DONE!
