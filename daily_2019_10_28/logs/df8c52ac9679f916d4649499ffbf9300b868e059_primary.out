cset: moving following pidspec: 19501
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.340313426 seconds)
loading group "string"... done (took 0.544056936 seconds)
loading group "linalg"... done (took 7.005173262 seconds)
loading group "parallel"... done (took 0.150459881 seconds)
loading group "find"... done (took 1.085456788 seconds)
loading group "tuple"... done (took 1.765169038 seconds)
loading group "dates"... done (took 1.205265202 seconds)
loading group "micro"... done (took 0.218083098 seconds)
loading group "io"... done (took 0.986832064 seconds)
loading group "scalar"... done (took 36.414858262 seconds)
loading group "sparse"... done (took 11.388522005 seconds)
loading group "broadcast"... done (took 0.903321651 seconds)
loading group "union"... done (took 11.964636221 seconds)
loading group "simd"... done (took 4.332582984 seconds)
loading group "random"... done (took 8.437420273 seconds)
loading group "problem"... done (took 1.854190936 seconds)
loading group "array"... done (took 19.665299341 seconds)
loading group "misc"... done (took 1.623733547 seconds)
loading group "sort"... done (took 3.0597045 seconds)
loading group "collection"... done (took 16.063819567 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.499798893 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126440881 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.117489197 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121546955 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147522665 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.116897571 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125774936 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085349588 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.823906964 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.151080236 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.120395546 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.416549306 seconds)
done (took 5.271506144 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.178958576 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086275256 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082902338 seconds)
  done (took 1.418357586 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066209506 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125178219 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067333977 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06720283 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067508855 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066514321 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065934213 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066359424 seconds)
  done (took 1.775115073 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074553335 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069146602 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068593555 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068302684 seconds)
  done (took 1.530931946 seconds)
done (took 6.232380914 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.770606294 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.202162044 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.184126694 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.399143981 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.129019501 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.154152324 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.649328879 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.325109759 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.18324345 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081316285 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104464082 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.317179358 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106928794 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.640967371 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073870303 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090082551 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137344701 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.41101672 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067201584 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085464381 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088806289 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127852715 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085373262 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074242205 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143542894 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067596713 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.13314858 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079814707 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066155305 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.207306121 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172310977 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.647072738 seconds)
  done (took 10.293900059 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098672935 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097039842 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068356081 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135877583 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095886643 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069361227 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071179071 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067301043 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086439593 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127385203 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088281916 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100908446 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064919665 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068571201 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084536189 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.20427187 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081622695 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080891938 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070430723 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074958706 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.118345954 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077911727 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077147649 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077589375 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128528768 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180266908 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098066793 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097678626 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06650416 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08035301 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114837686 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126562179 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065682442 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066264982 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123764626 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09414461 seconds)
  done (took 4.720905192 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.291066572 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139515792 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090293681 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.132047617 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065178192 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106433653 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065569551 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080951979 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.199116423 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.288142788 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.573390652 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110829451 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10305072 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067729753 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068568275 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067011517 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.351090591 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107886706 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105263331 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081398128 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070267371 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068732121 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.356295939 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068101921 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063964347 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068338659 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057712833 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123886684 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068120745 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.928557881 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124633404 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066586334 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100504173 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161998138 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088293208 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.274512587 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068498682 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064266792 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.149491608 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070243294 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065649581 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.08362737 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102791764 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.111900765 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065734994 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066600401 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162262727 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064842378 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078473597 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.006709213 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152728618 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.095053031 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064808743 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.245761918 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086658204 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069192782 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064904305 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.182379628 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135617848 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06801122 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066311541 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068155651 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069155649 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.366060203 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068329626 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.006689067 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067388833 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075845768 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068693275 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069769582 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072501087 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072708889 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085383522 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068716829 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07478885 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065907648 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065732889 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066437763 seconds)
    (78/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.089826303 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083546382 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.06388124 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.356090555 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066776349 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064534225 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068076813 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064318729 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085955316 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096608962 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.06625296 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064849618 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099780086 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.171675489 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066118552 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105265003 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066962814 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083993369 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069644786 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114119136 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067188301 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.091241648 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067844611 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.101847127 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069752105 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099117525 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081651719 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06830959 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.398104369 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064266064 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065342687 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065152286 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068165055 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065303913 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066781493 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066212667 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078850179 seconds)
  done (took 21.291727225 seconds)
done (took 38.846679046 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.232856752 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074860715 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074708019 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075067265 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074774937 seconds)
  done (took 1.872703909 seconds)
done (took 3.197108405 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.11954434 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097792533 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064595118 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095299707 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063987268 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099663927 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099227058 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080370191 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098235232 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064291138 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095437789 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064219039 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064341122 seconds)
  done (took 2.448991907 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083708738 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082721553 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068964241 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081933477 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064146932 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081679079 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080217275 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088733076 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080112015 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071739859 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063311743 seconds)
  done (took 2.167051426 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082495728 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083077807 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069197176 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080787044 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065614164 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080899289 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080431297 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08484253 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080594358 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07306766 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063314161 seconds)
  done (took 2.157143429 seconds)
done (took 8.085673146 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07769974 seconds)
  done (took 1.379194407 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.583919418 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.025017931 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081409756 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110935223 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183119995 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118825116 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.276678339 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086371333 seconds)
  done (took 8.953561138 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.10147097 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071470128 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071045453 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068197527 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070311522 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069113145 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071859928 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068422625 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070158648 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070681769 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069553191 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071234125 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069307025 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067630828 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069284449 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067893323 seconds)
  done (took 2.52559984 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091226574 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090375589 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073377845 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074443221 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072390826 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07164741 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073601385 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073241418 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070471304 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072362264 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074302184 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073311587 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07094292 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064615274 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074147957 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074972989 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07062674 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07401691 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074352081 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074260854 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074220847 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063916621 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070971082 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073664637 seconds)
  done (took 3.18823887 seconds)
done (took 17.358734253 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115348083 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072010603 seconds)
  done (took 1.498500873 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084032103 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083298802 seconds)
  done (took 1.487295298 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085047115 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066077026 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090858741 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078558389 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066365568 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065276117 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.08853972 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065964492 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065511721 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066045882 seconds)
  done (took 2.058691296 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070374463 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078178463 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070258234 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080922246 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07392167 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063917973 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072393176 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068129238 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078062119 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062816369 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071537735 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082344464 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070940875 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08383129 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072373067 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068322838 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070616836 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067477655 seconds)
  done (took 2.629861662 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066754163 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066571365 seconds)
  done (took 1.459000832 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068740484 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063434593 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066889101 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067926902 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06338544 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062253243 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063165659 seconds)
  done (took 1.77659045 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.381035229 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110166115 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.296897048 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070144281 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081085801 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247617855 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065202598 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070235444 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069994518 seconds)
  done (took 2.755682329 seconds)
done (took 14.996752338 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079222056 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084312454 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094856924 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.359260519 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091047625 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065212644 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113196466 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.18877366 seconds)
done (took 2.415955659 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.215684117 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.608349524 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.386128169 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.196575453 seconds)
  done (took 2.519098005 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328406825 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086131916 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058755401 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066504093 seconds)
  done (took 1.878656243 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066934596 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068611221 seconds)
  done (took 1.4734654 seconds)
done (took 7.423665012 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067465473 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082117605 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063211588 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065820515 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065171652 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.062959577 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065763856 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.063459755 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063202299 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06569884 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068169638 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.065529095 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065494103 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065644113 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063031033 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063080811 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065229738 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065303361 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062953766 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063021747 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063034519 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06492654 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063159748 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063172974 seconds)
  done (took 2.935140131 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08381557 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066666259 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071236668 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070866252 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.06962567 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073584636 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071242479 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065774498 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071291171 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067730673 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069508564 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069406618 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067709238 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069474504 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068033023 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069580737 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070849813 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065985477 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067211138 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.06956152 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070172545 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066438512 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069275033 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070098041 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069020981 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070592444 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067852109 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065659895 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070347252 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068957759 seconds)
  done (took 3.435559718 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071050333 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063287303 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064554087 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069729495 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064008809 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064312548 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062957658 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063532033 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064196811 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063224235 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064499044 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062718794 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063413916 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063814295 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064044689 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066509269 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078101757 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063321704 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063125867 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06373419 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066292693 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063806051 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063366287 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062738192 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062692119 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062710737 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063712146 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063129358 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064016404 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062952534 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.178386684 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066432293 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063274013 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069682819 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066283905 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06256974 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066781842 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062780907 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063673607 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062591187 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062770021 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062788573 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06296594 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069642694 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063549759 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064895977 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063134279 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06391971 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063441878 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065544814 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062656982 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062921429 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064390874 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063947914 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066998871 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062581064 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063626146 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062517379 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063613196 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063006815 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062549799 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.0624409 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065172953 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063542135 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077031178 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069461141 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062513322 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06470113 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064025513 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065728583 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064625356 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076159923 seconds)
  done (took 6.130087456 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091261356 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08646513 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065489174 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064997451 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061410263 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06351112 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067118562 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063536521 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064890809 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069311179 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063825857 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064764463 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065119607 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076370866 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064107678 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065046824 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.06946912 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061295156 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064008597 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067151204 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063834309 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067216422 seconds)
  done (took 2.846757898 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154274651 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070032317 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.103985916 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073237513 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066827345 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072208688 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069205062 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06936851 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069495435 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067893076 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067477197 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069403147 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066761683 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067228192 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06810009 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067970984 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069578098 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067887385 seconds)
  done (took 2.713662659 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077724536 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065769158 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086208196 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065828004 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065484106 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067779206 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069874214 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073456592 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067963154 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065588555 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073396641 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067988152 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067722664 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065319047 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068201905 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065343336 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067614897 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065303581 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073400403 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06993448 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07002423 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073577041 seconds)
  done (took 2.888249771 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081187852 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068425015 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08147154 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067960336 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061328543 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064943794 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069371201 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065237797 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069839684 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067277283 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065458779 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06387113 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068726123 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065689191 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069101908 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065177846 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067109701 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065566673 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067189221 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061178575 seconds)
  done (took 2.711578799 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087392526 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067980643 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068103194 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076420049 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066919518 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066771571 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074780891 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066992602 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066742887 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086750971 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066999459 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067006604 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074619843 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071437123 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066998945 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074433878 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074646207 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07458529 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066685298 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066439982 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086148136 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066971934 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074677062 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066906582 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066908792 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066776057 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066449842 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072061432 seconds)
  done (took 3.359255619 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067658359 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065560385 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062809633 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063232546 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063674013 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062972145 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063456891 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063317672 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065782004 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063195065 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065913041 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065562437 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065210872 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065295782 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065413494 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065572004 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065494723 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063239472 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063421518 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063169863 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065576547 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065471313 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06541324 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062945947 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063111905 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06558393 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063333441 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062928074 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065241879 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06300959 seconds)
  done (took 3.296480632 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075466058 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071850495 seconds)
  done (took 1.510394867 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064317041 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079485622 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063217134 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069667539 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069028624 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066618569 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072792056 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069136321 seconds)
  done (took 1.911668639 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081714046 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076811767 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067092784 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079500262 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075815911 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082201317 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131357593 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066534435 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072724483 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064039078 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.07939515 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065036457 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071956339 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066325573 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071196921 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072477032 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064184757 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071890326 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06790693 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064592696 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066862419 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074393992 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068163765 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061897784 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067340878 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088119255 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077031626 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065458606 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068973904 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073118271 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071611119 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059890166 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065840212 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066496476 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064029067 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075172918 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080493075 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068922132 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074452134 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066281153 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075995302 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060821428 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069856964 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072157388 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075488177 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066028144 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066154104 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060769119 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063466622 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067808893 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061210484 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065678017 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060290703 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075336838 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068937019 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076014771 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064576817 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066948319 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068352525 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069146344 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072231833 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067376127 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067971062 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065488478 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075008608 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.06992772 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074447128 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060725737 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059855802 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063324625 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074951729 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087700611 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072183387 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066157991 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066550309 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06389035 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06886189 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066604476 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071453155 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071919876 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066310812 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071164475 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073105091 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065662582 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068039237 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073690631 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063710982 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068211393 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063961558 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081952314 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064928864 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064203275 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064095366 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076646922 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069448829 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065919126 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064240685 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072780195 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060099411 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066683056 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066858041 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066381192 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076948442 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070460903 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070850571 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074967864 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073265166 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066255704 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069035724 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063025972 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066766988 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065285308 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073065845 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060187415 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06891806 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067586575 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065931786 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.200381569 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064900241 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066505595 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073537466 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07230736 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065409263 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064211162 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069697655 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066996624 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069660016 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074150337 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065701113 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061365876 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061721305 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070187254 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06673239 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070556127 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071254197 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069860568 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061479174 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06478504 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072258367 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074749423 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066643218 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067681982 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072381392 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067332316 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065763363 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072417626 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069039062 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066101634 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072124336 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066874674 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061403863 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069553779 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068910374 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065458856 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070667548 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069615819 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068379952 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067326825 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065150187 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073307235 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066699033 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065201212 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065974013 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065139746 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076616411 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068065674 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061209602 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063240144 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075961511 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063977214 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065059304 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065739552 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068372517 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066886978 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064784439 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066030583 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068646327 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076884345 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070320053 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067197311 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071136817 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077581931 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066558911 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068794116 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066428734 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067010873 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06668382 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074417324 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071610095 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070233628 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068608988 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062931674 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07178967 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073453884 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065538558 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063792883 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066191759 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070373061 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071475852 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06976033 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066763484 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064116517 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066478363 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068756984 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068149317 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065611847 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064849807 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072037205 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063829566 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072733852 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066464078 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075463567 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.06909314 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061325158 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069059954 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064254209 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071932505 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061093691 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063890296 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065327458 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066881215 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065052448 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068337587 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060284364 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073244348 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073611975 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066122451 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065434614 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06553935 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072324458 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06760938 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06970699 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069359407 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072179263 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076625253 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065199592 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069087498 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075974561 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.194956966 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060772974 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071177618 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065267469 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065097134 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065056754 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064170036 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069805 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075227395 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073079929 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060719457 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068870849 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06564202 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065692914 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061803926 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071761495 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069724132 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067319557 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073872792 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067936252 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067095989 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070357283 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066211743 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067222509 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067629851 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069309993 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06763895 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068342988 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065395741 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069698991 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065695233 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064505488 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068196911 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066964334 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066609339 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071943993 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.0665546 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066478718 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068525715 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06696307 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066917011 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067121046 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065501512 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07004754 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06686283 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066627823 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068740666 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061291701 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074116697 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.0664381 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074250163 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067259985 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063362785 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07323076 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.06911493 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072075372 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067356299 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066867643 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067732441 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066410998 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070056917 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073600925 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06491904 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076863464 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074102188 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067056477 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069026694 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06682006 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068193496 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065646291 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06712328 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067113785 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066466592 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066417603 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070825266 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068543817 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066563312 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067588623 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066707212 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066680898 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06755024 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061395405 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065607903 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065770163 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066232288 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075876147 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066617904 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065545038 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064965546 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066930977 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064985924 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062960799 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073686223 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074887339 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066267694 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072794659 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065078798 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066919827 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076056011 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060430583 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064065886 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063667163 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063657102 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073039092 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066736238 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075192524 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066120205 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065601172 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063188145 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066678091 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064202301 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060554096 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064057915 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069296941 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064876932 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065160277 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066235247 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068382039 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066983509 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07607426 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06540134 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067151532 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065947954 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.194967355 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06580686 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06517624 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.06899507 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067366373 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06429851 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064172519 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065396675 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067352979 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068661894 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067021073 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069071122 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076229828 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066094954 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069519901 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070197289 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061680137 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070365693 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066695773 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066553963 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065390615 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069735458 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070010902 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068202203 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075569962 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067305425 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06748301 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06642781 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064109373 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065844887 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066353261 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065946717 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066242536 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068140998 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07389584 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064827554 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069112951 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067195604 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067625257 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072948349 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067409116 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069071432 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072659996 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066870214 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068792405 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074213852 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071368282 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069935389 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067145704 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068050114 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072291942 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065613615 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073176081 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066962993 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067223182 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067905407 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064405471 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066204877 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066677515 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065731276 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072172361 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067063707 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066343331 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065579334 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064086287 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066802651 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069528704 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073089728 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068621819 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069191225 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061063465 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06324345 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067512862 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064700904 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067508395 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068945442 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071608725 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068066531 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066634545 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064689464 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074663543 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071863987 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069923146 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064305124 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069660724 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066942119 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068229692 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067338235 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066698917 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067578578 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070763029 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06782303 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065347733 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073063575 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069233063 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066475062 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067473627 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066558077 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066279398 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061558744 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066621923 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067682319 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070956655 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068359984 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066145413 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076489797 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063870316 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066522957 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069296563 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065624844 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070685043 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061294928 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067146479 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067148398 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067358089 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061360608 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066023711 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063926137 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067947324 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065619475 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061482536 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076072208 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075088753 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068680903 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064474922 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.196507901 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061650735 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062035077 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065372867 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067862935 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068093681 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076622093 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065508645 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065792887 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062224301 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066751804 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069794288 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071057728 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063711853 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061587028 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066376444 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.06954004 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07206926 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065274211 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066850898 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069432496 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068855954 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064296169 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069614717 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063841514 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070325647 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078834689 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067413067 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067349549 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07315975 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07437335 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067418522 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061427281 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06660441 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069491763 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06674973 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066939648 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067099249 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081561969 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069877833 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065739719 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065006267 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068652577 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065414139 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074758867 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067785207 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067202068 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071118857 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067878059 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075489116 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069505032 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074154902 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069900515 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069310367 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065430073 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068249583 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064427912 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065225901 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06723236 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06678504 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071104112 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074274922 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065936433 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076498771 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075504078 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068868425 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064072766 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066322522 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065852925 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061787748 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067383762 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064154889 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064113695 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063955715 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065356901 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067079131 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071689484 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067016282 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066983535 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065901622 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06022271 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068372761 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068207603 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066559525 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062648517 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065747033 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06621852 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070128553 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069156767 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063880806 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068013803 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067435244 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067362219 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061386376 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072789446 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06519974 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.06794289 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065458231 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066615924 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067635559 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069717935 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070870329 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066979775 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068342028 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069581281 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068165632 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063675131 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063228842 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071579656 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063939478 seconds)
  done (took 42.565219818 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101605764 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062743764 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062143562 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062079698 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073403043 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062802815 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061445864 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062640369 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062692403 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065148476 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061693511 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061488275 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070862515 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077398034 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073553023 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066365328 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062078623 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063179139 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061797546 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062706426 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070471512 seconds)
  done (took 2.855049395 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074826931 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070238141 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072368952 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07587722 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06655444 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070727086 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071953659 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070096898 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07566097 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066465918 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075113706 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070315997 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066995674 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066694584 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066782443 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070448407 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075514406 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0671616 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070017688 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07195324 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070323372 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071892886 seconds)
  done (took 2.978547604 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06788591 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06554708 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067716078 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061101027 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066147988 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.069571346 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069187398 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063979398 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068810106 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065200668 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064715925 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064985332 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067128103 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060764251 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065293287 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063184063 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107400547 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.06844334 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065644884 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066180669 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060890075 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067388728 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061333692 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061560152 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065097035 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069285125 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066199997 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063880872 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065384491 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064926824 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065224825 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063587922 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067179587 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066234254 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064953303 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065333186 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065528114 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066100122 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061086474 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063803397 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066499416 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061586183 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06560947 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067022681 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063787886 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063164878 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066934088 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065555707 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060846446 seconds)
  done (took 4.659770196 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081984324 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107398487 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067814268 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087657667 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079541989 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075229602 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068972351 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088613572 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063222592 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063730684 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080956614 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079475584 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065574862 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069889397 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068851264 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065507555 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066236655 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064436807 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069406293 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065024971 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.06956503 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071686737 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079455076 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078121525 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068802017 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064304121 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064442636 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069615566 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077855725 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069563343 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069560564 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070828586 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079904103 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071108904 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064620239 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067372427 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080883206 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065433571 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067155822 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06279195 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067096678 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.06911296 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071286453 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080863195 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065445022 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.06982477 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065198489 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062341209 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077319655 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067396469 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072692131 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.07944236 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068651906 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065867551 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06917364 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079455093 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065357106 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06338288 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067969088 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076805645 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062796669 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068628915 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078753075 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066887297 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072022197 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078910556 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070333292 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068942669 seconds)
  done (took 6.429584318 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076263513 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071728922 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080603354 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079438326 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072135587 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072552684 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071590817 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071568311 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071372599 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076561056 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07169137 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092701535 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067582302 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074258777 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071710457 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072033155 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071678882 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072836734 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071814787 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072145558 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072014403 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079740765 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071904388 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079774792 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09798337 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.0670456 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071639879 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071615022 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079825283 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071845994 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078758329 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071555505 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072038415 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079474052 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078842749 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071416687 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064570261 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071433255 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071692778 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.0713556 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066655448 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079476117 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071656522 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066695434 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071457282 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070966818 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078842422 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078237612 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073845286 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07575867 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071331357 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079375283 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071225741 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071760317 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078706161 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104328132 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078958284 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078794796 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071367498 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078787245 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078825699 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085304555 seconds)
  done (took 6.111397547 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085191129 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074068158 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075258633 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061342145 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063697004 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069724841 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063556481 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063958515 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073900429 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073989559 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07635205 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069262953 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072250259 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076073356 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069472288 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07202966 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069218671 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068962571 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073705445 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06960383 seconds)
  done (took 2.873079623 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076063247 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082450907 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067145564 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071192032 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.06807049 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071310772 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068127332 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068307647 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066968451 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068585128 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075139467 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075404692 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066106995 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070961846 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075236992 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070943301 seconds)
  done (took 2.583499801 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075774322 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071864144 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078336289 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066791038 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063853948 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061936276 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065499895 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060928465 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061943471 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077410154 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065479574 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067909983 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065601395 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063984804 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062700726 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067899203 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062311494 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063044948 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06533306 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077319088 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075849309 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063967591 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06693252 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066037827 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065563735 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070835213 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065076592 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063312433 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062707352 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065806126 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065954074 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068942997 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062759211 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063600563 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064473534 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063678271 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064985158 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065739997 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068222625 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065454992 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063414372 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06515054 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065173852 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06661696 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061971692 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066015929 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061844607 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06775947 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063664108 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065686525 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065385311 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06804894 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066155122 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072297167 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06848979 seconds)
  done (took 5.097070209 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079928324 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06933597 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062721829 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063807998 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069139302 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067491095 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069089878 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067254479 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067663789 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063836681 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068081333 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068366388 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0675885 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069472944 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067708867 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06905902 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06181039 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06748062 seconds)
  done (took 2.675075331 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072673561 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06579553 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07280021 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066177795 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065790515 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067716287 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061852895 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064773772 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064578708 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065750555 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065553605 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067725438 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0644586 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068440884 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065997007 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065588542 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068314045 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064441664 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065413497 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061856502 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06796309 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064129973 seconds)
  done (took 2.905734488 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093915554 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081102293 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.137414844 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078308964 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082868 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071654738 seconds)
  done (took 1.994959979 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092095053 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078646287 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066074284 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088474157 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073436225 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067574004 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067176042 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067489447 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07583007 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075466441 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067389433 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075951286 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075554143 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075161084 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072840629 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073026814 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067387419 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067246438 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066093331 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083614162 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067247893 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075431857 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067451011 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06685607 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066995752 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074955985 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075678024 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075657599 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066875555 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075694725 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073263482 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067070073 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075714289 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075374979 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068635293 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075543616 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067044044 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083222408 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072465287 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0748033 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068537178 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073046127 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075371269 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071461598 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075474969 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067127405 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071858857 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066820948 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067114161 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085181951 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072387382 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074316759 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072889437 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075302666 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075255838 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084887061 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075429871 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074701951 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072692853 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07805734 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074556839 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072592845 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074867072 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075391095 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072726453 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074521271 seconds)
  done (took 6.30065727 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084131415 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085132363 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067701505 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075992436 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075011971 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06711286 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067340835 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0673248 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067333528 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066632048 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106541019 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067472446 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075172229 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075061383 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067592025 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06777777 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067445292 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07522204 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067404879 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085924911 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067305676 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074724265 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075243628 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074823175 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075672855 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073120932 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067370549 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067196877 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067068523 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067155594 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071849124 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067633837 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075525881 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066831034 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074718401 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067459218 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067317068 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072427561 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06701887 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072771146 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075058062 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083325688 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067740742 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067043951 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076199963 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067409944 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067069768 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066842155 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067213785 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066610617 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075350678 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075315589 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075425524 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074230693 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06698581 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06721872 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066953657 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066745595 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067241961 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072497773 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074704628 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066895219 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08500314 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066996051 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067080527 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074745335 seconds)
  done (took 6.213291975 seconds)
done (took 131.316537315 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.183817179 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165244133 seconds)
  done (took 1.794033374 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07040016 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097534777 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.07613193 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129084864 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066405827 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100238246 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099057215 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077363311 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066230166 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065871953 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06634947 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068295329 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130858093 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066625987 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065904984 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068447406 seconds)
  done (took 2.776755374 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097582911 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157425272 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099017855 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064594854 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096409373 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072431037 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064947116 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074637423 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07072128 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065224002 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072993097 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070240406 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065101608 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070570058 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070888124 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072575551 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065234454 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072470653 seconds)
  done (took 2.887252958 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102268141 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091044465 seconds)
  done (took 1.656862955 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156062625 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105734416 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.148503794 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.342519915 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165901888 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.22980101 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126762613 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127669315 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117460801 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122666719 seconds)
  done (took 3.100958661 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099642181 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.150755876 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255504291 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114835198 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07211324 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094795893 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116031287 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077869236 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080639289 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080287698 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080067812 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07586573 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.0980993 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073142319 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073288175 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075832953 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10208705 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072030104 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073924753 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076375273 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099028384 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065458028 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073337601 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071884848 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077010376 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077654276 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065201093 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065642837 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076463535 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07372865 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07642335 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09345619 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076785528 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106229835 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07034164 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107607198 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076340158 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073436868 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073989507 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074155939 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078504772 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078220014 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072116668 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075727828 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.0652034 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076152966 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065224742 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065382633 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078114165 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066669477 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077899453 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077332752 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106719887 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.06719433 seconds)
  done (took 6.061446247 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103464098 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104259841 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072563815 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110667226 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099894027 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072416395 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101181087 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093237508 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102437869 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069972566 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068131933 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070347503 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082298672 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083069878 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111943604 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104287209 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073486937 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071349514 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.103882716 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102634529 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068294863 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094348838 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089710565 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101777816 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067476391 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070495214 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067954523 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069959359 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076975952 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078431761 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069872985 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080612128 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08494712 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07793839 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06738907 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06799827 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06788487 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080044948 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079468126 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078907992 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077361206 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06837696 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069448023 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069449 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070039913 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067482043 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078667493 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079986161 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078849352 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069522079 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069709199 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068169592 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06944481 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08023562 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07797319 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081080857 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080020917 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068671599 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068254037 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072376908 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081560978 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078860634 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079073497 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069536191 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079056851 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067926174 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079866848 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084997633 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068099762 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069641658 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068119886 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069824833 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069728821 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077756856 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079025596 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069987224 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069179986 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068112322 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079636915 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078388467 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067848853 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076598033 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067269436 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068067482 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069229901 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069894932 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077665899 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.08008368 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069323083 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067780368 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06887464 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068446673 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067006239 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076883274 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080896517 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079315141 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078908777 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07004245 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079302064 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079253443 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070326399 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079634901 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068371398 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.199160268 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069818047 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079087983 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078386336 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080140623 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070164821 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068854472 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079280788 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081785685 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06932807 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079960565 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081033564 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080231449 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.06871168 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082566179 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069079262 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080092868 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069712745 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080868271 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068824894 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079797147 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068671236 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068147328 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069209119 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079774204 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070964413 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068853977 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070387431 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069898433 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080274701 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08311621 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070823627 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081965343 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079129946 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071374551 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07934565 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068477438 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079190631 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069734786 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.0696409 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067374608 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082382977 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069126003 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069285157 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069343477 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081625529 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068945636 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080524516 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078467995 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068334179 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081402272 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081404607 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078597138 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080098791 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070667142 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068845189 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068252466 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068971883 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078083445 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079245369 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070608811 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068933797 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078676612 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079811503 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067472596 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079174627 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078370492 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078720176 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068411182 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069440529 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080384689 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080744039 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078029195 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077899671 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077977044 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068118661 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077120436 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078115227 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067935515 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084746124 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067997413 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082490326 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07875 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077042766 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078676006 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080253827 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080431107 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080172254 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083344714 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068381657 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067849803 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079753879 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067743232 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069069816 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078430784 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069410395 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069266953 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083675659 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068646715 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079301008 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067496401 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079209994 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066779154 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069729462 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083853992 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068876417 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.200845237 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080034937 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070024619 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.07868615 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080630114 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079298696 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068243179 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07096435 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080320431 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079931057 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068770436 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06901674 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071274134 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079108498 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078200715 seconds)
  done (took 18.787323152 seconds)
done (took 38.538815379 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207413409 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150011223 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.200360904 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117800029 seconds)
  done (took 2.236550765 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.12242291 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100841785 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094777612 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064905641 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101325043 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064844034 seconds)
  done (took 2.053129587 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312051635 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210246768 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181655488 seconds)
  done (took 2.199908123 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.205650963 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187125073 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.39218823 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.251464559 seconds)
  done (took 2.6428548 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14185241 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089165072 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066922216 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082703966 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133788751 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159954046 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100853369 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125119679 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07748923 seconds)
  done (took 2.53137934 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146784233 seconds)
done (took 13.310784928 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.196146236 seconds)
    (2/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.092375649 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.121785116 seconds)
    (4/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073216604 seconds)
    (5/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.082093813 seconds)
    (6/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.197041185 seconds)
    (7/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.16658528 seconds)
    (8/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.199370695 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.08149391 seconds)
    (10/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.087924051 seconds)
    (11/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.187819548 seconds)
    (12/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071506154 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077888321 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092376976 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073436673 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.134382551 seconds)
    (17/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.205843282 seconds)
    (18/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077500824 seconds)
    (19/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.098973179 seconds)
    (20/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.153232683 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092281198 seconds)
    (22/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.139015865 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.126756715 seconds)
    (24/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.156949971 seconds)
    (25/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.193632384 seconds)
    (26/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.159981051 seconds)
    (27/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.074936335 seconds)
    (28/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.179050491 seconds)
    (29/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.149122712 seconds)
    (30/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078325393 seconds)
    (31/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.17677621 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.096142904 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071143392 seconds)
    (34/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.165890444 seconds)
    (35/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.107202972 seconds)
    (36/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.201590369 seconds)
    (37/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.134574339 seconds)
    (38/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.156714661 seconds)
    (39/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072680401 seconds)
    (40/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.146820424 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.146409459 seconds)
    (42/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.07101488 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087309753 seconds)
    (44/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071536026 seconds)
    (45/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.149961035 seconds)
    (46/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079124051 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.100002582 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072251927 seconds)
    (49/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066099111 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.084916248 seconds)
    (51/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074216937 seconds)
    (52/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064427818 seconds)
    (53/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051284276 seconds)
    (54/309) benchmarking ("sort", Float32, false)...
    done (took 0.125646844 seconds)
    (55/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079158474 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066277395 seconds)
    (57/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.193112613 seconds)
    (58/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.093949602 seconds)
    (59/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074657289 seconds)
    (60/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.106109811 seconds)
    (61/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072334188 seconds)
    (62/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087253906 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088997484 seconds)
    (64/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061584905 seconds)
    (65/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.184522134 seconds)
    (66/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051984552 seconds)
    (67/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.08143309 seconds)
    (68/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.136744882 seconds)
    (69/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.105866363 seconds)
    (70/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.167327784 seconds)
    (71/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066579006 seconds)
    (72/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050787338 seconds)
    (73/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.167516468 seconds)
    (74/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052011069 seconds)
    (75/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.202047394 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 0.065734887 seconds)
    (77/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053244345 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065308941 seconds)
    (79/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073438896 seconds)
    (80/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052100809 seconds)
    (81/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.150100944 seconds)
    (82/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.179284127 seconds)
    (83/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.138758055 seconds)
    (84/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.218650855 seconds)
    (85/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.16627585 seconds)
    (86/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077125472 seconds)
    (87/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.10210385 seconds)
    (88/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068885499 seconds)
    (89/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.325420087 seconds)
    (90/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.0741833 seconds)
    (91/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073329497 seconds)
    (92/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.151080796 seconds)
    (93/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.185446497 seconds)
    (94/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051088502 seconds)
    (95/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071607152 seconds)
    (96/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077908714 seconds)
    (97/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071875512 seconds)
    (98/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.06055583 seconds)
    (99/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.176979261 seconds)
    (100/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.052185818 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089350174 seconds)
    (102/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.207976805 seconds)
    (103/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.093165029 seconds)
    (104/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.141143342 seconds)
    (105/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065454256 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.111219276 seconds)
    (107/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.157490385 seconds)
    (108/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051541757 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.139332999 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.089875127 seconds)
    (111/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088834425 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.085938712 seconds)
    (113/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.150766214 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065705466 seconds)
    (115/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.073984513 seconds)
    (116/309) benchmarking ("sort", Int8, false)...
    done (took 0.138587943 seconds)
    (117/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063454312 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.134760805 seconds)
    (119/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073613352 seconds)
    (120/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052295232 seconds)
    (121/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06543493 seconds)
    (122/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051330046 seconds)
    (123/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072102947 seconds)
    (124/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.061741996 seconds)
    (125/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.172284302 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090356102 seconds)
    (127/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.064792274 seconds)
    (128/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061796388 seconds)
    (129/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.069862578 seconds)
    (130/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072678496 seconds)
    (131/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053039107 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 0.132691945 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072805625 seconds)
    (134/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075402368 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071064998 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.108717478 seconds)
    (137/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051758787 seconds)
    (138/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.074620235 seconds)
    (139/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.136603674 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.131439969 seconds)
    (141/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087777692 seconds)
    (142/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067317859 seconds)
    (143/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074908917 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070245096 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.084739639 seconds)
    (146/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050990521 seconds)
    (147/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083119211 seconds)
    (148/309) benchmarking ("sort", BigInt, false)...
    done (took 0.182717679 seconds)
    (149/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075343653 seconds)
    (150/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066776179 seconds)
    (151/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050626797 seconds)
    (152/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070749885 seconds)
    (153/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071805394 seconds)
    (154/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071413404 seconds)
    (155/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068320318 seconds)
    (156/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052815921 seconds)
    (157/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.17290684 seconds)
    (158/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.149307731 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128100323 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066085164 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.075384486 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064584612 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065119039 seconds)
    (164/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.165089848 seconds)
    (165/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072243314 seconds)
    (166/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051547336 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065878172 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064876224 seconds)
    (169/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.145753168 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085422744 seconds)
    (171/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052305529 seconds)
    (172/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072898564 seconds)
    (173/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.174091732 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.078070285 seconds)
    (175/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052264595 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.117025797 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.118952382 seconds)
    (178/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.098574302 seconds)
    (179/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.108856115 seconds)
    (180/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071493893 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.094701769 seconds)
    (182/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066076858 seconds)
    (183/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075000244 seconds)
    (184/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052284294 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093989646 seconds)
    (186/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065146596 seconds)
    (187/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072417418 seconds)
    (188/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051070185 seconds)
    (189/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050910623 seconds)
    (190/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07222875 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.228236331 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074250247 seconds)
    (193/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051526952 seconds)
    (194/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.06262209 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089702141 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.08956381 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089543407 seconds)
    (198/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073082143 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087287631 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064559626 seconds)
    (201/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061140372 seconds)
    (202/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.175068286 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.124841152 seconds)
    (204/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053752973 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.131557629 seconds)
    (206/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053519652 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.175228642 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.111328641 seconds)
    (209/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.053009917 seconds)
    (210/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051945358 seconds)
    (211/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066607061 seconds)
    (212/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062721397 seconds)
    (213/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052983188 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089066861 seconds)
    (215/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051609393 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067871115 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091360648 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074111868 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.074906362 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072299301 seconds)
    (221/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050974277 seconds)
    (222/309) benchmarking ("sort", Float64, false)...
    done (took 0.124948845 seconds)
    (223/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051028676 seconds)
    (224/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051080847 seconds)
    (225/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052190432 seconds)
    (226/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051331779 seconds)
    (227/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051472763 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091327708 seconds)
    (229/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066949043 seconds)
    (230/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066595045 seconds)
    (231/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.109295609 seconds)
    (232/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051150045 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071108717 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087740731 seconds)
    (235/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051167077 seconds)
    (236/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071101024 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065000666 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065140518 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065498915 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065263932 seconds)
    (241/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173660032 seconds)
    (242/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073721864 seconds)
    (243/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064296352 seconds)
    (244/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052743666 seconds)
    (245/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088107314 seconds)
    (246/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069149255 seconds)
    (247/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.148622403 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.131763191 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.164418055 seconds)
    (250/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072105043 seconds)
    (251/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051709477 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.106318734 seconds)
    (253/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078599698 seconds)
    (254/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066125797 seconds)
    (255/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051005584 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064728303 seconds)
    (257/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068780999 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064440458 seconds)
    (259/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052190843 seconds)
    (260/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064885635 seconds)
    (261/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050916466 seconds)
    (262/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050775504 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071391232 seconds)
    (264/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069380109 seconds)
    (265/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064404479 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072281344 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.136779398 seconds)
    (268/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064294052 seconds)
    (269/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051385241 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064884354 seconds)
    (271/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050996909 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06487672 seconds)
    (273/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051882825 seconds)
    (274/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.076594121 seconds)
    (275/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067598663 seconds)
    (276/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065880378 seconds)
    (277/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.05249235 seconds)
    (278/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070199218 seconds)
    (279/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.05141168 seconds)
    (280/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071023425 seconds)
    (281/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134341658 seconds)
    (282/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067859946 seconds)
    (283/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051718762 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072241822 seconds)
    (285/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065027064 seconds)
    (286/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.086888104 seconds)
    (287/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071362187 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063528649 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063417345 seconds)
    (290/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.115717799 seconds)
    (291/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079553383 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071494858 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064838258 seconds)
    (294/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.05077756 seconds)
    (295/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064763083 seconds)
    (296/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.066975436 seconds)
    (297/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052120961 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070470397 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088948563 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.094591848 seconds)
    (301/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079070553 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070178483 seconds)
    (303/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063784532 seconds)
    (304/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051342991 seconds)
    (305/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066288787 seconds)
    (306/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060781594 seconds)
    (307/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052172486 seconds)
    (308/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062920479 seconds)
    (309/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054667511 seconds)
  done (took 30.398166876 seconds)
done (took 31.907534516 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084617587 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091464862 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073540144 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091992506 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079993336 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075967402 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071539744 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077250627 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078829205 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080524302 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077822725 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054542024 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073449983 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073126597 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073877274 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09006827 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077720241 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072109006 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072650122 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064258767 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072521117 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065409236 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066690958 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054378155 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076985079 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071418054 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071495782 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073267414 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064746536 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065077689 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068619841 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072371445 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065087741 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07737798 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07153217 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072700945 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074338361 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076281221 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066810977 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065268615 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073703124 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065500722 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071923133 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072844692 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071665763 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071233849 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072377411 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077210248 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090423823 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067407837 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073586537 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075447695 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075850531 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071869219 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069099383 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072434006 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070242704 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090043473 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072588751 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067693065 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072921986 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073238772 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07066427 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072109594 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072209474 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074143718 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074525579 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070782971 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073735916 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070371155 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064802167 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072162075 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06797433 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065174824 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074875821 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076162501 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063894913 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070135454 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071697503 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070487871 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064021295 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067164666 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066996351 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070797322 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067095172 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054394211 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068093899 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070963782 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064013734 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072608764 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070607525 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071403484 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066828067 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074344746 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064249175 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069945461 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064962758 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064920868 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066706783 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068205679 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064353646 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066776153 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072906793 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066157993 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070586997 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078253134 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064703562 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070972169 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063451357 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064287689 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078481868 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074160146 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064741215 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067228277 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063805887 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071548718 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064178729 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064949222 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065024809 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064714765 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070114471 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065227913 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066885993 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071869092 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076979262 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064552381 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067740577 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067076787 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064392543 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069676581 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06441605 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.198942777 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066774541 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061296406 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067180838 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065594425 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07223277 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067729525 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072150242 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067122442 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073312629 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069742253 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071133419 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071067535 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064026964 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059023358 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067628483 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067578757 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066490722 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065344145 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066655578 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065151725 seconds)
done (took 12.447212561 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068063887 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143019756 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099142618 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094600832 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085178837 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066137895 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075544502 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101349588 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067134554 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101974224 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087623968 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084301026 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111730852 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06414053 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065771019 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069938927 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067065455 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081443935 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100512003 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085780795 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115168502 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065392597 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094025778 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089215264 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086525658 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101011231 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066274021 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069499475 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069017605 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090443301 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085597758 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069212818 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066183626 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099779813 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091767503 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082787113 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065923677 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081850864 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065939283 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065500706 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066627641 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097072617 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079771177 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079513938 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069522124 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068605539 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066693878 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083201259 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088372812 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078245545 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086168337 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102106463 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068311757 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065036514 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063886675 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085271994 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065161834 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068009972 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065979483 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068116833 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065412246 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068748695 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080481804 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.08114369 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069315824 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.07971122 seconds)
  done (took 6.856410788 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084312988 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089932208 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082300497 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083254279 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065467295 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065970402 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.06581439 seconds)
  done (took 2.134116224 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068457792 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087520657 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08895351 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08864492 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083963573 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087563358 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074938755 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066307124 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080008951 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067049233 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086487088 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101335527 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066503992 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072704592 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090447931 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066407584 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089854569 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066170159 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069063742 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089431599 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068117492 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081441691 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069615992 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066825578 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080297128 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066220541 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112751377 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070042042 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067790876 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.06927361 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063867174 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106361846 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079549886 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075263562 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066526245 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080631682 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080625842 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065065019 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08242833 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071565281 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080529862 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067166616 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067330143 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064472835 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070860323 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076609516 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067230607 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066762018 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068244504 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08604297 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067166261 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.07916543 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069580642 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068558033 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067247439 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069722094 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075676847 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066974872 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085539407 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067619821 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082393456 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081949873 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079928166 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081970095 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068383123 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079713025 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079206222 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068515953 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067944892 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069627589 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08227893 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064459276 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06796233 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076546215 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067848091 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089250813 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088749631 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068044309 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075456003 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067334198 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066734596 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06619174 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088902132 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068622588 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066514781 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070676042 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069329351 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064776115 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065553189 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069913867 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064537794 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068306089 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06906864 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069808144 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069175915 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083012813 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06892055 seconds)
  done (took 8.829536368 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069894245 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067953864 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069570166 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.0678013 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067418405 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068300083 seconds)
  done (took 2.02865055 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096003824 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069659791 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080941656 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07175405 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104431444 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086815633 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086923825 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078533042 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083815104 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078717122 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086883139 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089059442 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092781295 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072979097 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086398567 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072337395 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087147822 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075775304 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078135926 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073254727 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085948806 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072347721 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072647709 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081893569 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075539651 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071824999 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067481612 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078832986 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078506596 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078668681 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072207088 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075358866 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071117556 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078210476 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086614185 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070596166 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071502872 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077248441 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072139597 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075894294 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087398025 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072564159 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074355795 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076850483 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078625561 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070905571 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077194747 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076041485 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085836992 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077064823 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076935864 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071384974 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074802049 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076900858 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070302209 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078076456 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076855495 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086327741 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07197018 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070313256 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068753003 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075232055 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077382793 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074996822 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078066366 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076421216 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070146481 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071944204 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072305472 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071356694 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076334999 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068503901 seconds)
  done (took 7.173276863 seconds)
done (took 28.601804457 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.539015796 seconds)
  done (took 2.119998547 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.598298962 seconds)
  done (took 2.206315558 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.534612294 seconds)
  done (took 8.138024035 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.391753583 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.470438377 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.686294776 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129857157 seconds)
  done (took 3.323073744 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.66422632 seconds)
  done (took 2.282662528 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.209423518 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.195602402 seconds)
  done (took 2.029579331 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.378458075 seconds)
  done (took 1.983323655 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.103178218 seconds)
  done (took 2.70926576 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.261941445 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163077988 seconds)
  done (took 2.035352312 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.459427113 seconds)
  done (took 2.069273184 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.820448914 seconds)
  done (took 6.432516835 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.2092292 seconds)
  done (took 1.857937683 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241851631 seconds)
  done (took 1.851369791 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.808232967 seconds)
  done (took 3.417303353 seconds)
done (took 44.073673545 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081841746 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081369597 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080839739 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077883969 seconds)
  done (took 1.91423247 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077790158 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072589272 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076482954 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072816059 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076025387 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073561386 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074455284 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076688755 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07212989 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073116894 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072960111 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072312952 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074913619 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074035228 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071070783 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074333433 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076086084 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072654902 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075860023 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072180889 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071067096 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074512399 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075009406 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072125141 seconds)
  done (took 3.387895943 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07953858 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073377411 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07468504 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071445748 seconds)
  done (took 1.922057779 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078846704 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091983208 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088751355 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077361569 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092214581 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08626849 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069264736 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069046726 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073078845 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077233739 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067907366 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095393381 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087394934 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076526644 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078646192 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066112898 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068247689 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.08639793 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077007145 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077292746 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069703079 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07708185 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068046492 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087714747 seconds)
  done (took 3.504034017 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079195388 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102887201 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077482777 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087488108 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089799339 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065315893 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.07459108 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089010231 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122465309 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065160187 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069949761 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065269585 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072308094 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065096291 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076262256 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104603004 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108644983 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068250336 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095866472 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065178272 seconds)
  done (took 3.274532262 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073954993 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069550788 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066234695 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06867818 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077731445 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073209394 seconds)
  done (took 2.059980078 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070016589 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067679525 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06766331 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066784105 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071994057 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067120195 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066120696 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067300565 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067441996 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066882292 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066559892 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065557179 seconds)
  done (took 2.433844482 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.173858187 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069196182 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069914015 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065623454 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071465855 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066933475 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079588124 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067920687 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090516545 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066560159 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066728661 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068415222 seconds)
  done (took 2.583564203 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208449246 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076367303 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236322269 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137214264 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111246492 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115510588 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104593857 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113156073 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143537664 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101800918 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167836557 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165826138 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107366416 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137784588 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089390979 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098042792 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155299105 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161657754 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103330392 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165051359 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143884361 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124561105 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146947323 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101262943 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105821875 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121699992 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070964527 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079933143 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169899346 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130715031 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146343273 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110623846 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093719526 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175979078 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170200873 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142904179 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135155788 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084357105 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102629845 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134436274 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202869868 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091767187 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167262764 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247605123 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081683086 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133898398 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120601745 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120641951 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107219395 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0900197 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145974502 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181888421 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138704772 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087204864 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112708009 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114602973 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116286257 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104606152 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1806331 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161998565 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127798715 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070978308 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099814847 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153963766 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130938363 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109347746 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.12731097 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093612432 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133849532 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154240008 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11829396 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14381779 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.12880523 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088954321 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118984735 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139661541 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127918695 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169608964 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124863971 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073356567 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124717706 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103489929 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081790333 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142389493 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075708383 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175497656 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098789451 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106853111 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114001534 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109383503 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10908206 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161064648 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143872413 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102885008 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065176207 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102452652 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118774158 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144982995 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08673854 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107265134 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11380522 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076260691 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134737789 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073349728 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119752568 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.073826765 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121139248 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128180221 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.073993603 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118266578 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098392032 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.097465656 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128054575 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154476372 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086658459 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080157986 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16167864 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118205636 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.100747001 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139917757 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151265301 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.096891774 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099042189 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143713484 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17368697 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087284994 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157639274 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103829844 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081581361 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.084979555 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11972153 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108805965 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.115451295 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078614621 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.111036988 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155901225 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072518362 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090537266 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125402063 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074742148 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077097908 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097935072 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094783664 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.090781729 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.095762591 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.098079121 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129705558 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117525645 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1005345 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118160149 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093441043 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157878665 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084389892 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.096343347 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098285554 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067156589 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.127699723 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146627282 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076521896 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152853809 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.115784686 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100547636 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111963127 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07877402 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131538191 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075350964 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.067675519 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133526143 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104949464 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104382154 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.141513788 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100501869 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.117806595 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.112753956 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125463371 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123305817 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.122959271 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100145847 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.085158194 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106542866 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118148394 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071009213 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.086712875 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.076135502 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099088501 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090027352 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07997236 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13258912 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115813023 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095682069 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106644997 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091810505 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138978555 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.072860868 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121209306 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.113071127 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089480399 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.142708752 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142905347 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124325686 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094524492 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136867648 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.067791374 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.434289299 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.093084058 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126932712 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087552061 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08749404 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121308313 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151876529 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13388174 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141037178 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114864785 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12453943 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158897472 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072479204 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.120585311 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151619002 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123383611 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104863248 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092796044 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.101090631 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145720779 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11067019 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185940834 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117502598 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128952507 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156632792 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.102454442 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082496123 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104680541 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138318023 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106828327 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148013614 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102600381 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090560455 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113062836 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076189508 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102112768 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12912338 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121967259 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142447264 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116375626 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134031801 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078422344 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117976732 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121810632 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124417872 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.065679063 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122052505 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164531944 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095543739 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120600816 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154010854 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079731275 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.124847705 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.332967746 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148212592 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085358973 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11095018 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119364372 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128654803 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121209872 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140951936 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109292428 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137931621 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11036068 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087077684 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088716527 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098182124 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106384747 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095213494 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108728702 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115105681 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095389213 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133091904 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103268565 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109611142 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118320951 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097248379 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.0903049 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09787041 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17494636 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120505361 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170806284 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100094864 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145691827 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16503146 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075385145 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079790589 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079015166 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139866794 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084258578 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131806615 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098518011 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106603616 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124297872 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142248885 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095328038 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068835194 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108336026 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135016504 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11259395 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098884015 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10494432 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163614581 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101250542 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079888601 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114265656 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104725004 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102081469 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.324466453 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062347723 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099298089 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076666746 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082452019 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127066202 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154341435 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080153532 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101751664 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121487345 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113113606 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128826639 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102753749 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100111644 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11444193 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150380283 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129888791 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090550038 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113228794 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129631817 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156969896 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107915053 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096028026 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171891968 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152625279 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160805836 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089178982 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115364008 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114482099 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108877246 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139538209 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083689048 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164034083 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082325491 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136918377 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104546096 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090633748 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130297196 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.116207698 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088232187 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148310122 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117837766 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083339725 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078481496 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118300759 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120324661 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107402655 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075596897 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139738981 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072871191 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132797282 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168444915 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228198157 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106205651 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097408523 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080370439 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108738093 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103757902 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090146362 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097115466 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173152386 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088634699 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150947911 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143328827 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114713788 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1383626 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101374663 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636276622 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07836104 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153412437 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116681245 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173693048 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098046029 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1173994 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109805005 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123772316 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14465905 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105259347 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178050303 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132445757 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116514165 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080150002 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102809743 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102682254 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088967705 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105681225 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113801347 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115892447 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093789441 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115941814 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123382399 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081818857 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095003294 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15560098 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117217154 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14452844 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140272724 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085116162 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117834199 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139428348 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079982329 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122590228 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152114933 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105795441 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244455064 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080846738 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102380903 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171218797 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073407453 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16298188 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120144451 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109173069 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113626418 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115331401 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131101663 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108595547 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122256558 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094390659 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111376168 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113200236 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082367545 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077398048 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104397255 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113078571 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096961482 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099039672 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096442793 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151142629 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071578262 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095537948 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103583931 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144721207 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174375902 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088183387 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083117684 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118850285 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113003261 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113692076 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120751712 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079339035 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08297098 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081903609 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077176457 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108658684 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112983332 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104489312 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111353094 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164257984 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082605436 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.227033111 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095157076 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104706175 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069939992 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079175427 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095871785 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097811377 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108451936 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101521817 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170584248 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094738222 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090974663 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093256719 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073440124 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230275064 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128834991 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111354284 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119510604 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098272253 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063239196 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108504348 seconds)
  done (took 58.627602874 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109971604 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083021527 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096835865 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150303395 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123047755 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212078952 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157021956 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199451243 seconds)
  done (took 2.915974508 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070211301 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094057464 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100712314 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084610195 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06724862 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070241163 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.225254133 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081940649 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066864029 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089078429 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080986588 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070384625 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.420802697 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066216457 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068940856 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.064234221 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068425125 seconds)
  done (took 3.566112467 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.368712516 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.602685726 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.375121574 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073734622 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.894249879 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092034357 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.087724236 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.130212762 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.07394374 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.541515279 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.701848495 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.127328457 seconds)
  done (took 18.857250215 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078899325 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071192461 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084958712 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084690217 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072576855 seconds)
  done (took 2.177993576 seconds)
done (took 108.89138564 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082708796 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.392752414 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054054226 seconds)
  done (took 2.261735193 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08559418 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084833434 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084762256 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08319246 seconds)
  done (took 2.133969167 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077207157 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07644439 seconds)
  done (took 1.941058465 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.224226666 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.158754293 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086981048 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084753193 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077842439 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078499938 seconds)
  done (took 2.03726763 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073857213 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075259646 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072897428 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076027143 seconds)
  done (took 2.088144265 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078386389 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05303741 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055039592 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055978077 seconds)
  done (took 2.032769577 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088027409 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079900488 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078141418 seconds)
  done (took 2.038149497 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102269808 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085427148 seconds)
  done (took 1.980087868 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084396174 seconds)
  done (took 1.878424794 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101475127 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113853448 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.130715543 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110781836 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138576634 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108642312 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085784786 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086624721 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077034516 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087825575 seconds)
  done (took 2.833573016 seconds)
done (took 23.563318084 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080541271 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.367532892 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360949565 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08969376 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.689306224 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35696408 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.032695777 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092705172 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11378721 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068134735 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084689463 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.666363403 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.986412108 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324525347 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.974042135 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.41881387 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.6513068 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068873463 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068044953 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068799866 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.018737629 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06851363 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06845081 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068745604 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650651681 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370801798 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068302085 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.418416803 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067933699 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070074898 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355395661 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068799712 seconds)
  done (took 16.629275481 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072489168 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118862171 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074013768 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084163448 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071360755 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069689266 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071619994 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069247605 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119733961 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068483199 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085116075 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068210038 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072262372 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068735225 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087056149 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068434612 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069218718 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069182981 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068506259 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068961962 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086865258 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068159894 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068416032 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068527255 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068824298 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080055861 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069094007 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068826929 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068884977 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070863365 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071668626 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069624808 seconds)
  done (took 4.210195894 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117164636 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126101525 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074400081 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104140635 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113001104 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070565591 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14369703 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092919808 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127552486 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068131282 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085188241 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068470264 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101751962 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069345717 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088068896 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068870685 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070047803 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06912581 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068970844 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069374896 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087491761 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06849107 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068889542 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069589628 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068780389 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081761716 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069051443 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06881498 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069032471 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071271477 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072531511 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069359042 seconds)
  done (took 4.469329853 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07481626 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076280826 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082773661 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084224118 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069880042 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072213477 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072838922 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069733406 seconds)
  done (took 2.413696859 seconds)
done (took 29.5196047 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080884994 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069456638 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072795106 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081633259 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073392751 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078418469 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067816609 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074510269 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072456558 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073171737 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075565495 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068283354 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071429723 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067538183 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074054117 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068229877 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079544304 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07239023 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079607274 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080304194 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070079507 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073459404 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07465124 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079378375 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079781189 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079256846 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077853471 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073029835 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069368867 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071004192 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076884924 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084396431 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068903443 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080054594 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068452433 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068457882 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071882779 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068412206 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079726707 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07690609 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070163348 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076582316 seconds)
  done (took 4.903858599 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090103919 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091404663 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085595435 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062287279 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067544762 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06554583 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088753681 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059999327 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059828487 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088267842 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056338534 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059553588 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062911459 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054423368 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059906996 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057658911 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062403029 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056659943 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059903762 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060259213 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058704015 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054769926 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060561237 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063511299 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059357696 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062445943 seconds)
  done (took 3.528600847 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075966992 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084678484 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088480353 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128048461 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.10433116 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077386113 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078793188 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093017815 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085686194 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067374135 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071817336 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094036375 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088628579 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074141192 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067803725 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084618334 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082308744 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069269456 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074078082 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091427484 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084882319 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084056698 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093418422 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080788834 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067108669 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069651769 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071841885 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081459592 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072696793 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076836398 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071591881 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07110397 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.06958462 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079292691 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071522676 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069733354 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090830713 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077593882 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078707779 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068866769 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071029492 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068283678 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089622258 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123414372 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067547 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074258558 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075588128 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07668042 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06772263 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08645351 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078974241 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06779493 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071019853 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067234845 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067843058 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080887804 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069810206 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070183105 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076547147 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070983405 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085729304 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071435452 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082987853 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067535025 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075396315 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067146889 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06846299 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066505486 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093138411 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.06918304 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108365939 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068958414 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068489581 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076014759 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075034598 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073379721 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068042159 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082949139 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077787753 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071270557 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076166604 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07076612 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070645964 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088311789 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070287918 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069062073 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068485708 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073897961 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070686167 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069196383 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081016167 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067895596 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070833045 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084209942 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067392662 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068777215 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073698084 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072507125 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067178204 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078768185 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.084493041 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068722578 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077384016 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068013801 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070499886 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077969148 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07387493 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066936769 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072170358 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073765982 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068588468 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069679508 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070838168 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.06979588 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076302399 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074830377 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072392261 seconds)
  done (took 10.771257652 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.163177488 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152994738 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070962374 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145768394 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076838688 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079256438 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.150650674 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095135594 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068234583 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068992143 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069264202 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110381732 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105886218 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115678864 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.07932603 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06788583 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083655472 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114669164 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150247455 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143766284 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.08437078 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077169195 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071039594 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070194046 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070950951 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078819781 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085916162 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077380847 seconds)
  done (took 4.579576126 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082668353 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.097870143 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074968794 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089721251 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091208115 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068297565 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070751879 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070246752 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080759684 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079582586 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067929604 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074284465 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075350149 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071735374 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069362715 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075241668 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075785973 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070196438 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071968967 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073663872 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078477799 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.08129167 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07243014 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067607095 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074913478 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067949996 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064752205 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085088986 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069197453 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090841291 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066471303 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075842706 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08247144 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069324125 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068491586 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068548443 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068033529 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068118782 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069964893 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066982092 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066549274 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058082912 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067882954 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079765958 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074481202 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057157946 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073138754 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073201758 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073808641 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066006574 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071052102 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071421919 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071447572 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075562816 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073556844 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073659547 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069498481 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074790249 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076367419 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068056434 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065675215 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066653662 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072424733 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066645844 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076347891 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073129966 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066871083 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.06785003 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070001156 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074437148 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068178979 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071227116 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066228106 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070508287 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07310193 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070105792 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069500066 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066954706 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068192753 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068614881 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056207153 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068224616 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054230245 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071233425 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066705766 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066670476 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068076435 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073437327 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080461758 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06973237 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074273322 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069280739 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067302588 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071118937 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060674215 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071468206 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083292974 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083028522 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068142298 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066124677 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08242547 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072832577 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067230541 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056887967 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075533786 seconds)
  done (took 9.386119539 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091662984 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070117726 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084468095 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091499056 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086835677 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075218683 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076436513 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069656379 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082729595 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073844318 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07689968 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068987207 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07776899 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077529888 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070321452 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077765227 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072549905 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083509708 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082597241 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069282723 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076839202 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080796559 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089923254 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080845147 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.079354439 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081172649 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.08993431 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072926822 seconds)
  done (took 4.06923747 seconds)
done (took 39.043409225 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.904358951 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.061147814 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.886346741 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.265944832 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.973024489 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.240147104 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.002595437 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.88123853 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.055680701 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.928365547 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.170155914 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.93229326 seconds)
done (took 67.124923732 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.932494458 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.026660134 seconds)
    (2/2) benchmarking "String"...
    done (took 2.161204028 seconds)
  done (took 6.007803296 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.18918448 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.422324614 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.131556432 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.883322538 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.887976739 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.174350997 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.678803496 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.408020013 seconds)
  done (took 31.408278402 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.034685553 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.106484354 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.570677252 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.603038104 seconds)
  done (took 16.184779652 seconds)
done (took 65.624208238 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.918232716 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.935229202 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.907683246 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.866847599 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.941474408 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.89617558 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.355673298 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.91542233 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.881896525 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.872869954 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.882915011 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.325315087 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.894785471 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.534403637 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.886057258 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.887502598 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.903108994 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.456775181 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.041137508 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.898613603 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.900342089 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.895635357 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.883033787 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.894809679 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.885382908 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.886190612 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.332941524 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.885617779 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.520608287 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.887977764 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.92027414 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.006476135 seconds)
  done (took 207.920689489 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.886188452 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.029381873 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.130894564 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.920417674 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.444254947 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.065354547 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.97818024 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.497435809 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.887798401 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.907170916 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.002554954 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.883553256 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.021016361 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.828861135 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.914612776 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.892826796 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.146162128 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.036700093 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.916364264 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.043924175 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.914877219 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.819195543 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.788387997 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.996447929 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.88745518 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.965900106 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.901946171 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.900256669 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.080221814 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.115961343 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.917636775 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.892800701 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.017296266 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.75605829 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.887863249 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.890501677 seconds)
  done (took 173.990643864 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.04075094 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.887989845 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.887616812 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.887189703 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.893601581 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.888806671 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.00961437 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.011627344 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.343483951 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.090568771 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.937147483 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.724086622 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.884092066 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.957525525 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.900271464 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.888254264 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.902998459 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.914528443 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.886187073 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.888592905 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.013991538 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.899187889 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.057372198 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.892120115 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.888228337 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.894462481 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.260614754 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.88694464 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.894777996 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.136746552 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.888390641 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.888372442 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.789626466 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.597190362 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 2.157477985 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.889191092 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.896134598 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.889998386 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.118957324 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.887797787 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.891054849 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.892686196 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.176576932 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.887868527 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.014986327 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.886557042 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.409190088 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.88766758 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.891284396 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.652112 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.626460246 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.891715218 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.89000582 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.894190721 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.891557502 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.891673697 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.895938996 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.577072918 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.970116596 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.889895934 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.894366919 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.898159758 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.891844272 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.954573866 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.893044306 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.253353943 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.952963916 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.999133245 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.010842607 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.892246286 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.961066776 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.985025916 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.88863849 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.892069079 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.892607014 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.89287012 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.975443337 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.888748858 seconds)
    (78/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.891701253 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 4.040627469 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.889656286 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.899531215 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.894525774 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.892232551 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.943708459 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.962207804 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.889725728 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.807364733 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.894530544 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.891806764 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.2263694 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.957458033 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.889658851 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.891919979 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.894767681 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 4.028109926 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.013098049 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.704359158 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.892278858 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.65439904 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.894178484 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 4.047505402 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.890073967 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.102644531 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.894103795 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.977802906 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.895197211 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.894594975 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.894205675 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.892769219 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.924981959 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.892999269 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.957575075 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.889682051 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.265189399 seconds)
  done (took 415.834530423 seconds)
done (took 801.664534865 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.580871502 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.536449033 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.653322897 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.558446508 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.527581394 seconds)
  done (took 14.684239004 seconds)
done (took 16.512960038 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.985812567 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.98329602 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.917071071 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.979876217 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.913178867 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.983191436 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.963315633 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.9190508 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.95150911 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.918675702 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.948786351 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.917572493 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.905201903 seconds)
  done (took 27.114116123 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.123491128 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.128999552 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.963139512 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.150453771 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.940330256 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.11867775 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.055304286 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.045738026 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.046103986 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.910297264 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.907404674 seconds)
  done (took 24.220157328 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.131645385 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.130237807 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.967871816 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.126805169 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.941122016 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.125558931 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.055744396 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.04546144 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.044895807 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.910226554 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.908807516 seconds)
  done (took 24.218251929 seconds)
done (took 77.383038348 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.903376214 seconds)
  done (took 3.732781397 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.925592551 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.063757343 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.90786358 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.906494255 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.904777626 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.905807386 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.907579903 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.906583928 seconds)
  done (took 17.261010619 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.904668028 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.903343355 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.90254643 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.900461461 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.904253105 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.901765184 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.904624746 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.900637307 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.90382916 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.904514686 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.900584077 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.904423887 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.902993598 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.900336103 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.901844129 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.901363694 seconds)
  done (took 32.27457441 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.902830508 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.901325807 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.902693522 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.901970748 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.900412864 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.900930985 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.903276584 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.901511387 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.900932057 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.901301543 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.902782704 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.902300279 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.903505273 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.901797735 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.902149139 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.902930291 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.902464399 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.90305828 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.907168287 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.903460056 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.902947785 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.902691047 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.902701188 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.901848252 seconds)
  done (took 47.494344247 seconds)
done (took 102.592322355 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.806942424 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.302465962 seconds)
  done (took 8.941802416 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.905389366 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.905927649 seconds)
  done (took 5.678427195 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.903923052 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.905424634 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.905026775 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.903864305 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.905400975 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.904949452 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.90690636 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.907259101 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.906074432 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.90613024 seconds)
  done (took 20.888422603 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.906877382 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.905725212 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.902920647 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.906441904 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.907463039 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.904511773 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.908319548 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.90686488 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.908447565 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.903002344 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.906425492 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.903595645 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.90670321 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.905493532 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.906986871 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.904385882 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.904022268 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.904130257 seconds)
  done (took 36.137289889 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.908562488 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.906901102 seconds)
  done (took 5.650549316 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.903351445 seconds)
    (2/7) benchmarking "second"...
    done (took 1.904185338 seconds)
    (3/7) benchmarking "month"...
    done (took 1.905122621 seconds)
    (4/7) benchmarking "year"...
    done (took 1.905461811 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.904937951 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.904418692 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.904836062 seconds)
  done (took 15.16659196 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.908148266 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.066298216 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.143304529 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.599544293 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.909405492 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.91194736 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.858071088 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.911735162 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.912730553 seconds)
  done (took 21.05630467 seconds)
done (took 115.351437194 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.731110686 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.902778119 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.464718661 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.95492652 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.956600546 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.24473119 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.932515008 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.131940802 seconds)
done (took 44.155403928 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.985037734 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.489410767 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.523430614 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.409399044 seconds)
  done (took 13.257763169 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.894139087 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.424683031 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.937591446 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.49077283 seconds)
  done (took 20.606657903 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.272444391 seconds)
    (2/2) benchmarking "read"...
    done (took 2.256910706 seconds)
  done (took 6.372327029 seconds)
done (took 49.062279659 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.909333691 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.906652515 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.906229536 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.909195929 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.909861029 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.907678336 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.909059849 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.907902375 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.906769298 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.908870245 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.909993332 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.910581062 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.909882838 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.910262157 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.90730109 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.90696106 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.910141805 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.910663906 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.908390198 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.908436194 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.906846243 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.910183109 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.905759912 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.906170363 seconds)
  done (took 47.640086845 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.910493488 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.907983805 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.9104612 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.909955386 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.907523197 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.909770756 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.910654322 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.906658664 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.910930992 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.909864988 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.907854185 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.907076982 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.909202559 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.907731123 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.911185146 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.90821437 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.91113124 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.908182029 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.910559161 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.907893783 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.910674581 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.90823587 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.907961374 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.910119183 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.909041159 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.907952385 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.911972008 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.909990005 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.912860536 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.910091733 seconds)
  done (took 59.121546371 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.917394401 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.921909918 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.912747302 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.912519065 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.911876248 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.911414854 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.911306589 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.912840904 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.913682172 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.912561846 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.91281023 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.912396997 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.912645995 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.91297893 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.913038204 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.912299183 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.912897301 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.91222687 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.911094303 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.913021928 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.912215996 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.913786841 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.913107097 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.91383361 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.913242238 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.913582627 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.913877392 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.912982299 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.915118837 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.913553919 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.913761038 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.914468828 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.913574154 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.913037313 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.914277732 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.914158379 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.919112031 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.924475445 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.914988765 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.91463078 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.916416683 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.915361285 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.915113991 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.914785084 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.916076668 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.913435541 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.914066586 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.914204464 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.913631229 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.916144303 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.916668069 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.917392881 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.916131177 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.915864629 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.913161743 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.915026687 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.915110726 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.916242936 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.91551727 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.916342895 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.916441858 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.917362636 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.915053231 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.91793353 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.916494873 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.916265651 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.916103758 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.916165029 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.916196365 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.917173953 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.916709822 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.918692892 seconds)
  done (took 139.703970542 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.916524887 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.91411396 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.91513979 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.913842656 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.912226184 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.915428256 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.911998748 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.916745387 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.914452178 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.915783579 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.916318679 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.915156852 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.913904488 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.915619994 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.916853024 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.913071068 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.915023288 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.914383894 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.917558166 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.917517105 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.917047408 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.914607704 seconds)
  done (took 43.9779923 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.917919574 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.918115258 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.91499322 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.917021627 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.913647959 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.917152258 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.917493632 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.918431624 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.918316338 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.915856963 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.914444626 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.919280895 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.915179949 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.914473852 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.914422307 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.915328816 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.917224988 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.915938174 seconds)
  done (took 36.339367703 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.915421686 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.916404426 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.919349996 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.916185071 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.915546174 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.918412247 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.915754033 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.918754405 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.919144475 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.915974262 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.919830187 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.91805663 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.919768979 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.917598557 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.919306287 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.915556387 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.919659347 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.916464253 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.919753102 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.91671122 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.916368593 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.918788098 seconds)
  done (took 44.03436081 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.918543158 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.918951194 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.916146517 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.916122922 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.91684762 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.918730059 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.919855149 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.918406477 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.919251732 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.920076881 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.91626286 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.920122259 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.917088107 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.91842548 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.917582726 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.917490255 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.919748589 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.918813044 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.919556377 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.917673858 seconds)
  done (took 40.212574163 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.92049261 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.921404889 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.920881695 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.921616885 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.922042492 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.921659984 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.921762354 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.922633269 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.922293876 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.924482859 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.923126935 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.922958388 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.922673035 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.922628809 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.923053584 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.924044328 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.923213099 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.924128039 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.922594742 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.923490921 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.923432771 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.922806528 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.922248249 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.924029479 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.922944796 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.923456386 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.924074533 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.923445595 seconds)
  done (took 55.686302111 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.921620665 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.921944393 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.918787763 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.921469867 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.918824887 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.919650257 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.918956574 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.919298956 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.921791331 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.920755889 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.920961136 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.922298228 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.922717813 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.922691281 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.922277473 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.922512732 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.922582217 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.921469745 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.920315511 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.920614074 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.923344053 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.923118064 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.923610548 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.92009189 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.920240451 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.924799862 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.920622983 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.921197907 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.924384674 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.920972815 seconds)
  done (took 59.494039883 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.941319707 seconds)
    (2/2) benchmarking "in"...
    done (took 1.94338882 seconds)
  done (took 5.73505692 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.920385569 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.923087633 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.923932513 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.920001275 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.920673205 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.923618039 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.923748637 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.920606423 seconds)
  done (took 17.227649736 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.923093116 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.922503921 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.924192109 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.923070249 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.924779226 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.925188753 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.931552653 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.923483797 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.925795719 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.926316195 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.933053762 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.934316943 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.928237232 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.925742604 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.924102432 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.927290594 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.92393806 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.924484749 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.925562335 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.925092299 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.925398017 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.927949689 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.927769033 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.92284753 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.926827045 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.936136474 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.928954439 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.923879137 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.926570739 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.928879976 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.926648049 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.923667909 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.926651127 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.92704334 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.925619095 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.927152638 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.936178116 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.925286328 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.931787936 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.926819479 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.926802271 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.923887876 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.927647423 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.928951661 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.92876102 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.928557912 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.928182528 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.924703482 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.928184992 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.930057981 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.935703592 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.928108498 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.92571383 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.932893202 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.930167466 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.934979356 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.927141362 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.931856607 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.940534703 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.938458767 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.941294566 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.937646925 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.929721438 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.928815182 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.93842405 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.955633857 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.9323788 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.92486968 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.924758244 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.929600576 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.934057132 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.941603279 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.939015192 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.927864644 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.928556416 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.928405562 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.929070005 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.927863009 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.934880906 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.930548725 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.93087007 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.929875039 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.939316513 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.955597816 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.930225589 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.929522227 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.929540053 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.929181013 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.930396588 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.940548938 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.92860832 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.928659994 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.929934765 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.929161078 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.93152754 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.930001369 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.930878581 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.930397743 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.926274582 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.930508371 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.930630452 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.932556938 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.940465791 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.92900199 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.929850238 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.935893485 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.930899505 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.929539695 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.937849668 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.930130535 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.933215915 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.932437379 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.936426454 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.927514321 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.933869117 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.941107728 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.93005474 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.932039979 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.929838258 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.93041216 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.940269456 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.959601106 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.930985026 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.929983209 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.935494369 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.945290577 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.932342934 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.933611732 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.930045722 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.927857399 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.928283106 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.931549593 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.929118913 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.9319437 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.931109358 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.933241037 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.927592358 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.930957885 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.93206193 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.932887802 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.933718168 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.933702376 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.933228798 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.933793053 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.931620775 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.933867663 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.939389646 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.932749926 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.933715374 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.933387568 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.928613045 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.93211913 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.93279847 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.933670418 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.935088306 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.934152812 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.932815905 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.934098925 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.932819775 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.933059639 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.931673875 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.933253624 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.938198621 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.932457775 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.935860243 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.931567341 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.929124618 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.932073435 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.933226059 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.933228655 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.933606179 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.933321616 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.9368905 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.94353026 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.933473948 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.936211001 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.936674084 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.933416129 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.936575294 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.935757552 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.93702092 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.943916138 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.934105128 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.940551053 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.93400546 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.934798407 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.934553558 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.934514239 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.933509838 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.935326377 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.937420476 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.943854263 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.948113262 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.945567429 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.936801929 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.94002097 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.937465503 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.94060747 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.938730291 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.934997996 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.934824446 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.936408709 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.935161525 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.936242517 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.936355819 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.936039994 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.935710917 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.934946214 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.935471411 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.936789886 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.936215251 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.936638185 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.936760336 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.932598943 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.935868114 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.936806733 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.935713946 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.933067954 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.936213292 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.936154844 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.935213702 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.936976758 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.942521044 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.932949349 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.937464495 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.938294885 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.936766396 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.934599154 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.935375002 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.939206139 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.937296198 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.942716831 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.935377456 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.938514151 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.942993551 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.936050574 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.936888905 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.939817811 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.936862736 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.934446613 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.941402868 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.946720706 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.936313415 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.938146387 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.937708507 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.937418159 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.938500828 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.943299225 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.935204171 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.937808783 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.938251684 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.939675191 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.934006915 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.93909186 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.938950972 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.938406933 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.940855205 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.938039007 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.937908407 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.939633268 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.937786926 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.937014232 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.937742677 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.940517153 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.948414477 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.942844272 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.937652533 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.939719145 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.940464354 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.942710644 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.937458667 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.939378969 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.937637038 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.952746384 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.949069963 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.94692926 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.939950663 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.939417095 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.945106259 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.941181168 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.943924622 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.940780722 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.939793315 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.939628999 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.938524938 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.935877232 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.939862175 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.93880218 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.940667971 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.94037227 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.944150135 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.939492337 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.939229731 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.939734285 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.940528716 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.940703049 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.940121139 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.939724063 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.941928662 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.941741355 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.939446965 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.940596377 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.946215226 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.939828528 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.942268349 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.939199874 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.93904929 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.940773858 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.941748001 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.940876658 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.945050756 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.950326885 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.944360989 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.952440324 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.943060828 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.952173986 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.943298937 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.944760236 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.95261342 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.937586011 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.939968901 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.941801237 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.942990168 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.948008793 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.9421605 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.943276693 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.948270864 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.943254912 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.943052993 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.940354395 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.941888605 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.94128401 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.943771444 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.949518657 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.941824847 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.947115232 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.944345968 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.939606364 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.943409875 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.941949628 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.941914169 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.943430012 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.941160087 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.943559314 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.941671058 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.942322796 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.941538572 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.943079478 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.941721154 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.939745846 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.942527275 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.948985642 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.941908552 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.948948023 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.942712119 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.951992668 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.943353942 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.948718129 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.943308178 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.943586583 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.944250075 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.943276622 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.945228471 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.943766765 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.945406315 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.943352414 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.945803038 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.948913356 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.944121647 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.946752178 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.944825074 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.943930279 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.943574312 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.955650601 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.971157153 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.945802128 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.948651183 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.9399811 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.944132212 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.950070175 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.942995788 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.943822119 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.948147322 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.956524643 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.952888515 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.94533722 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.944357096 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.944318821 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.94418144 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.942652909 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.943008114 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.945150423 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.945619687 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.944904834 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.945219247 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.948028348 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.944893891 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.94706462 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.946945962 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.946232244 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.956935708 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.945701025 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.948439593 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.946701813 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.945849146 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.946708815 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.946276883 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.946731998 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.946396508 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.945639268 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.946688901 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.953594267 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.954934298 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.94921403 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.946025135 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.946175522 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.945699028 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.945381115 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.946945718 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.947300076 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.94804785 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.946520581 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.945348582 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.947358174 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.944591342 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.945040266 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.94680009 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.945923708 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.950786633 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.956487701 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.947429805 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.943874321 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.94713065 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.947864167 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.945520944 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.947060063 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.955915115 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.95034914 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.96112187 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.959788544 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.95302119 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.948958682 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.951947176 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.958086919 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.948417333 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.949955676 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.948891182 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.949213883 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.949817869 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.952634088 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.949427936 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.955456689 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.946959197 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.948876584 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.956267209 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.948462697 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.947940741 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.949990495 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.955107532 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.949219239 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.946050748 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.949733381 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.948699115 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.954661113 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.949516699 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.949821725 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.951085281 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.947221124 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.950957363 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.958002923 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.950574632 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.951393628 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.946810993 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.950498757 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.950294221 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.949596976 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.94763266 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.949644022 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.950428776 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.954447777 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.959009129 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.947261479 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.951603164 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.951703916 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.951462471 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.950137673 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.952346017 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.947358778 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.947643531 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.951280413 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.951692698 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.952061523 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.953806423 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.950262916 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.953619105 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.951534932 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.951240219 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.953817342 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.96282612 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.95999787 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.947839374 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.950029266 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.952185258 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.954168292 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.952078198 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.951846289 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.952278833 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.953241639 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.952076726 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.951515584 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.95182899 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.954590976 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.970017925 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.951240514 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.952737082 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.952796012 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.955735029 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.952649805 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.94926139 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.952418192 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.954009615 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.955429885 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.962048518 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.952418332 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.95819776 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.950205108 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.954029545 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.956893786 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.95564973 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.962871546 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.955851374 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.953292909 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.953913719 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.957776409 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.971443028 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.952992157 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.963216602 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.987539581 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.952346651 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.954774439 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.9530977 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.953258252 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.953346875 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.955015169 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.953202428 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.953678307 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.952615629 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.951905757 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.95589483 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.960964867 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.955834601 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.953398964 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.952883842 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.952703579 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.955049264 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.951879605 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.954953784 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.95362553 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.955167563 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.953707296 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.959342114 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.953860808 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.967341906 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.965111858 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.954566619 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.957370878 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.951602079 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.957655143 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.957646131 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.967000498 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.964626514 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.954897283 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.954651301 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.955532689 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.954474385 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.951356564 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.952962599 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.951331538 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.950750248 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.947160455 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.964301088 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.963099998 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.957619575 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.952182383 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.953330049 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.951116194 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.955042997 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.953159909 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.95317137 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.95486801 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.953367172 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.960165029 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.95026687 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.951685379 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.955100662 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.960584806 seconds)
  done (took 1159.412732342 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.949673987 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.949349387 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.949025216 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.95009614 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.95372352 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.943752627 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.943682622 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.943744517 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.944071137 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.947030279 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.943299682 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.942681022 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.942347819 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.944553836 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.94696659 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.942480369 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.941490093 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.941718257 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.941467781 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.942307621 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.942020441 seconds)
  done (took 42.724781345 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.944631321 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.943404946 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.941493785 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.944946451 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.941114629 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.946325285 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.943020893 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.945028691 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.945091225 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.942216107 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.944882429 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.9451188 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.942341044 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.941467597 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.94281094 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.944886043 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.946866451 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.94288939 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.945790883 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.943806444 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.945709351 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.944806533 seconds)
  done (took 44.640980818 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.948235841 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.946461747 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.946704887 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.944181864 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.948589267 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.947018167 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.947316146 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.946751621 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.947316177 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.948556988 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.947619826 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.949283573 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.9562267 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.954190935 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.94904993 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.946924253 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.090684851 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.946748788 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.948268583 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.948225993 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.94487922 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.954163787 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.945461033 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.945390461 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.948187322 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.948581328 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.948273317 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.946864865 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.948020993 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.95065105 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.95376564 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.948390425 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.948344078 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.949221114 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.94947344 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.950753154 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.95336083 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.950005429 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.94607323 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.946732306 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.96002302 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.973898515 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.949775328 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.956547378 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.948936318 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.948946302 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.95305081 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.959434195 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.946044948 seconds)
  done (took 97.555798389 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.949359713 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.950451112 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.947712155 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.949219315 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.949492222 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.950144792 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.949586288 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.949462586 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.947486892 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.946923348 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.950178197 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.948159741 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.945017162 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.947327756 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.9488695 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.945267949 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.946108619 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.946079256 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.945778547 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.946498881 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.947983284 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.949564566 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.95033236 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.945853313 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.949882193 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.947367305 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.948492374 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.950023248 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.94772652 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.94755295 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.950321024 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.950379783 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.951931877 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.947415376 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.947612708 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.951316054 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.951239025 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.948123135 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.950530255 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.948510133 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.950783916 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.95002315 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.949764318 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.950271573 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.94768555 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.947738102 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.947744779 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.94842994 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.949003931 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.951509666 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.951419869 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.948391027 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.950777294 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.947772896 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.95148926 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.95177038 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.946791359 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.948619966 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.950909759 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.948669158 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.949103535 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.951337615 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.949191537 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.951596875 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.950432427 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.948506585 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.948908624 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.952234642 seconds)
  done (took 134.410547641 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.952269745 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.951032016 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.951783912 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.95252142 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.952052163 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.95188336 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.952139962 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.952552205 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.95249884 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.952603088 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.952958068 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.954286006 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.952046035 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.953298904 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.953166776 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.953528049 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.953525156 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.953709138 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.95348104 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.953452172 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.952842617 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.954063702 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.95320086 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.952731106 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.953565426 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.954519815 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.954425053 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.955083956 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.954779873 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.954832353 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.954967782 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.95403584 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.954837107 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.953371168 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.954041553 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.954317715 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.954062383 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.95460636 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.955343787 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.95497962 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.955207587 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.954868861 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.955716586 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.955095966 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.954228232 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.955561221 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.95497622 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.956029202 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.954941969 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.955133609 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.954617577 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.954852285 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.954398824 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.956586892 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.956356443 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.954942589 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.955374529 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.956110949 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.956023171 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.956988703 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.955475903 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.956445661 seconds)
  done (took 123.039930048 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.95522309 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.955542853 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.951939206 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.953089821 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.95649522 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.952423258 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.955040398 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.955617728 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.956125899 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.954761172 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.955751838 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.953074543 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.952676651 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.955289577 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.953106389 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.953175346 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.952063301 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.952321085 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.955533153 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.954108595 seconds)
  done (took 40.965659848 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.953186748 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.956695104 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.955178737 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.955517085 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.957666097 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.954736782 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.95742065 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.957246392 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.954171543 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.956313961 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.95838855 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.956257778 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.954591598 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.955803406 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.958247729 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.954252346 seconds)
  done (took 33.17816308 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.955733964 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.957897093 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.958441341 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.956702391 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.954689788 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.953910364 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.95846072 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.955929484 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.955880385 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.958605189 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.958405459 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.958603884 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.959030017 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.956755964 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.954687351 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.959557032 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.954900574 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.956692987 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.958463124 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.959284058 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.956706198 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.955017712 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.958939791 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.95820082 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.954332996 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.955404147 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.955517452 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.954558103 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.955496362 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.959240127 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.956661167 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.956786145 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.956307882 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.956177822 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.959983501 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.957662733 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.959677441 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.958798658 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.960683763 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.959310262 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.959511223 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.956852178 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.959262576 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.959123956 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.956348718 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.959028202 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.957023381 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.956905295 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.957374572 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.956557269 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.960051406 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.960128018 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.960696975 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.96102093 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.959266023 seconds)
  done (took 109.552052399 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.962165394 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.961148495 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.958808187 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.962216721 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.961849465 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.959431382 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.962417235 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.959332139 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.960491819 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.961605604 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.95953562 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.962569949 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.959912406 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.961821491 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.96096402 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.96246484 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.960259534 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.960310701 seconds)
  done (took 37.184344472 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.959974735 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.960112907 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.96356463 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.960474669 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.961125713 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.963496205 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.961021852 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.963739428 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.963266946 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.960339483 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.95997511 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.963644316 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.961880157 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.963605564 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.960991899 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.959869844 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.963793635 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.963351853 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.960534085 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.961993302 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.963901897 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.96370909 seconds)
  done (took 45.052901368 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.962675431 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.962830051 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.979979067 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.987279476 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.987076532 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 2.001991821 seconds)
  done (took 13.770304012 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.961577481 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.96457725 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.962333886 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.964369188 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.965553463 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.961994526 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.962314829 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.962851758 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.96483499 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.963298044 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.961984309 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.964936102 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.964086664 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.962930813 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.965570996 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.965075385 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.962397745 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.961670702 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.964629182 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.965859589 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.962091381 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.964495071 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.962042194 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.961900014 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.962065227 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.961612146 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.964753682 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.963074172 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.962577622 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.965443862 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.965352017 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.96176057 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.966067559 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.962791087 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.966736932 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.966626365 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.963499245 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.967221088 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.966153973 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.963272391 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.967116401 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.966854279 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.967410069 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.963585086 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.965780547 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.963952355 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.963563139 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.964748476 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.964999962 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.965829121 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.966578286 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.964696923 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.966451097 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.967909811 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.967223893 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.968107481 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.965769851 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.964907871 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.968231259 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.965027541 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.965945107 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.967280306 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.965314754 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.966152395 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.968032473 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.965044904 seconds)
  done (took 131.560203161 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.966488674 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.965775984 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.965397633 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.967078432 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.963494321 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.964669348 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.965645209 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.96509147 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.964785907 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.965186364 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.967995169 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.965531533 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.964414901 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.966069596 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.965742782 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.965826668 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.964599657 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.964163983 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.965345932 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.967941671 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.964650004 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.967391124 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.965471491 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.965646241 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.965598697 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.968560136 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.965291341 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.966380332 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.966437366 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.966213137 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.967211729 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.966564999 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.967589315 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.966208639 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.965521322 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.966366165 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.96843227 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.966000896 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.967578822 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.971109622 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.968003104 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.969167448 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.967536353 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.966865149 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.966486718 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.965837338 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.966664959 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.967297023 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.966345178 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.966631554 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.967217163 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.968548991 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.968055536 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.967830332 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.968070627 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.967091583 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.967476048 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.967816234 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.967766721 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.969707773 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.966790126 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.967258025 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.970038357 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.966738072 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.968183766 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.967096552 seconds)
  done (took 131.697620977 seconds)
done (took 2695.755779025 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 7.03576213 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.018058405 seconds)
  done (took 15.948241402 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.129795365 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.084312544 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.967968998 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.995054427 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.965575665 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.971729503 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.967939498 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.965630119 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.969008472 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.967474104 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.967711122 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.156803016 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.977881032 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.965384318 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.968853073 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.059698321 seconds)
  done (took 53.984170344 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.974175934 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.97064691 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.983006249 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.973043725 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.970472559 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.982621537 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 2.004127755 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.974659751 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.006492267 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.983378712 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.042134009 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.982186676 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.971580983 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.020070971 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.983585233 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.98559143 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.060809382 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.047178625 seconds)
  done (took 37.813163313 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.049238163 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.976010252 seconds)
  done (took 10.93232022 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.964213224 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.994608034 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.99101127 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.993310013 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.961514917 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.964039059 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.989070403 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.98900985 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.994078737 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.968465171 seconds)
  done (took 71.710755139 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.968758269 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.963632856 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.961524777 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.959725642 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.953495643 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.956073981 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.960769505 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.958776697 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.656469152 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.994852223 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.968721371 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.964614066 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.960331556 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.964172681 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.958063297 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.984034242 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.101710042 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.957203865 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.959355525 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.965503033 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.959964682 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.013344261 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.973522465 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.961186203 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.99141894 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.655647022 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.966532081 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.967675425 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.071320797 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.957265557 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.960458554 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.962460216 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.964091526 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.346170035 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.258276134 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.961049657 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.967044486 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.968284347 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.957574014 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.09678402 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.964052011 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.965638698 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.95315866 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.248754266 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.061655894 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 2.000742001 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.340360924 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.96124622 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.958387311 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.987022144 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.958485032 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.957403595 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.972910573 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.474033211 seconds)
  done (took 137.777103396 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.951564357 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.236406132 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.10161654 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.949996003 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.220577542 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.155446249 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.947633766 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.997844568 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.948167462 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.150296507 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.108681911 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.053760234 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.944739373 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.945291702 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.941901678 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.939153216 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.105307772 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.011819128 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.942248221 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.93954361 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.970972011 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.154672793 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.065610016 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.945407063 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.964153902 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.154358881 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.064774245 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.05050652 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.221213085 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.940034469 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.005152212 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.942416147 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.943167027 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.938805529 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.098103438 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.039172273 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.031836736 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.942284794 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.941057878 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.93763598 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.6039385 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.138770658 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.039323495 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.084661246 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.095716704 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.147643717 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.591905165 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.939459582 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.589564692 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.104631075 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.155062983 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.155636227 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.063420461 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.942177893 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.095669406 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.937658274 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.939516966 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.175543984 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.083637641 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.04314307 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.93956235 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.937469663 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.93491486 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.184202951 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.936857425 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.032961978 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.942539591 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.936136835 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.03664831 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.040270114 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.077433027 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.154798378 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.970932792 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.661992143 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.155592725 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.150128788 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.004385946 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.173144159 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.938655806 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.933024548 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.022331228 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.688777932 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.094392037 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.190459772 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.160094654 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.96961643 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.544042661 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.933817588 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.130688831 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.123278868 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.133954728 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.084568205 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.086640775 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.061442766 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.933052102 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.933179168 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.1430412 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.071731083 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.935629739 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.294838803 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.166847246 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.507113516 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.955059697 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.232243578 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.068984663 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.259216329 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.563710206 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.931817653 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.10236301 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.972250137 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.933134177 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.934346637 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.124823788 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.74499898 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.932468469 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.669633903 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.996148997 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.935170224 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.137451705 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.933983578 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.14338695 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.935323682 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.171190411 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.087790055 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.975966166 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.104313767 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.079830133 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.723794203 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.183533534 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.178492656 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.050871333 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.209303753 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.659379676 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.933593286 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.210313514 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.933617811 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.934126241 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.10121841 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.933430783 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.086053064 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.93430672 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.167079777 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.959433237 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.090682524 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.935439373 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.170578145 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.968353366 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.985309672 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.9344523 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.055729302 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.934886178 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.818628658 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.088958817 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.938575382 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.932108054 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.351053908 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.933889026 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.080712712 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.167420598 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.9620637 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.003736946 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.460814925 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.93413325 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.022639715 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.959630063 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.684066179 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.939880851 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.092437904 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.881497583 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.378957593 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.936766729 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.185295349 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.168011483 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.935628988 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.933557623 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.674363749 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.625994908 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.935433734 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.095604266 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.16616711 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.587438482 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.147172665 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.937169773 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.063172205 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.940170588 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.011616473 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.286257366 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.935023516 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.936684861 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.934919993 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.935986899 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.936876149 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.153000368 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.967385554 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.433945105 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.071527744 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.154727682 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.246729999 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.1598269 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.980064089 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.937798128 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.181381202 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.936709243 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.001434938 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.937715743 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.96069167 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.169590049 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.938659614 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.147220286 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.193379566 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.865042387 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.992621015 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.938661688 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.94033568 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.935408431 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.085853781 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.029294777 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.938943963 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.938795495 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.047744623 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.058007887 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.130928333 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.527704064 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.018021075 seconds)
  done (took 913.279955321 seconds)
done (took 1243.341108636 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.936826355 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.934559298 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.924101538 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.9390151 seconds)
  done (took 29.609513703 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.946335492 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.944568257 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.946787318 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.943694697 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.949359013 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.943900601 seconds)
  done (took 13.554574173 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.996628659 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.935995974 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.937921906 seconds)
  done (took 21.741342853 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.017692908 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.35434792 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.047248917 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.384371317 seconds)
  done (took 10.676143977 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.947109258 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.949488614 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.947014467 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.946963079 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.948835213 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.948642548 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.946994113 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.947679754 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.947451659 seconds)
  done (took 19.403486519 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.384479351 seconds)
done (took 101.239794911 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.393936532 seconds)
    (2/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.973699587 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.622944526 seconds)
    (4/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.981505395 seconds)
    (5/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.411385623 seconds)
    (6/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.017091323 seconds)
    (7/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.143677392 seconds)
    (8/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.34186579 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.080642986 seconds)
    (10/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.959808144 seconds)
    (11/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.948299282 seconds)
    (12/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.030820123 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.987746055 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.372415182 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.97318049 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.948171456 seconds)
    (17/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.941850662 seconds)
    (18/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 8.312419033 seconds)
    (19/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.669497143 seconds)
    (20/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.089249422 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.639849291 seconds)
    (22/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.87654536 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.933982639 seconds)
    (24/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.481111947 seconds)
    (25/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.310818833 seconds)
    (26/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.040111672 seconds)
    (27/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.047420916 seconds)
    (28/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.150208149 seconds)
    (29/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.228495627 seconds)
    (30/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.072061123 seconds)
    (31/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.160112373 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.605186631 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.077377362 seconds)
    (34/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.041388919 seconds)
    (35/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.090068205 seconds)
    (36/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.121409939 seconds)
    (37/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.012489667 seconds)
    (38/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.523459078 seconds)
    (39/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.073697764 seconds)
    (40/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.077536126 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.952033854 seconds)
    (42/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.164229133 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.925392594 seconds)
    (44/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.082972574 seconds)
    (45/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.934094546 seconds)
    (46/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.468915904 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.343120862 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.061843255 seconds)
    (49/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.091853305 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.206391641 seconds)
    (51/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.978183088 seconds)
    (52/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.252094001 seconds)
    (53/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.079514398 seconds)
    (54/309) benchmarking ("sort", Float32, false)...
    done (took 5.717260403 seconds)
    (55/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.62654248 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.016918339 seconds)
    (57/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.935149828 seconds)
    (58/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.951215751 seconds)
    (59/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.653915109 seconds)
    (60/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 2.100237329 seconds)
    (61/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.958725643 seconds)
    (62/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.964600499 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.871317467 seconds)
    (64/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.244587338 seconds)
    (65/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.934856727 seconds)
    (66/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.339815738 seconds)
    (67/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.862953291 seconds)
    (68/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.097868358 seconds)
    (69/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.144468599 seconds)
    (70/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.550524411 seconds)
    (71/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.053545445 seconds)
    (72/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.557399136 seconds)
    (73/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.421608594 seconds)
    (74/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.442077749 seconds)
    (75/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.258051804 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 5.668596712 seconds)
    (77/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.937628601 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.356758061 seconds)
    (79/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.489897792 seconds)
    (80/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.042580968 seconds)
    (81/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.265519289 seconds)
    (82/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.149788357 seconds)
    (83/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.285071083 seconds)
    (84/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.978359792 seconds)
    (85/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.911940398 seconds)
    (86/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.062875873 seconds)
    (87/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.937106173 seconds)
    (88/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 3.612758234 seconds)
    (89/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.138306487 seconds)
    (90/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.042342373 seconds)
    (91/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.976467044 seconds)
    (92/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.056041235 seconds)
    (93/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.300115098 seconds)
    (94/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.937437511 seconds)
    (95/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.050380604 seconds)
    (96/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.953747667 seconds)
    (97/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.279322676 seconds)
    (98/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.463665834 seconds)
    (99/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.244233981 seconds)
    (100/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.138163863 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.91994753 seconds)
    (102/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.759199905 seconds)
    (103/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.037426728 seconds)
    (104/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 3.708972552 seconds)
    (105/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.294883763 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.027446436 seconds)
    (107/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.14965859 seconds)
    (108/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.265683026 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.957466034 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.294891399 seconds)
    (111/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.129256145 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.245702012 seconds)
    (113/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.939405748 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 4.120515899 seconds)
    (115/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.001874395 seconds)
    (116/309) benchmarking ("sort", Int8, false)...
    done (took 4.913705756 seconds)
    (117/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.039553623 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.953731658 seconds)
    (119/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.983127975 seconds)
    (120/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.552125866 seconds)
    (121/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.954854049 seconds)
    (122/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.118171699 seconds)
    (123/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.984485982 seconds)
    (124/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.592724208 seconds)
    (125/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.958189161 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.107634362 seconds)
    (127/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.960845703 seconds)
    (128/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.314536611 seconds)
    (129/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.099980843 seconds)
    (130/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.984914203 seconds)
    (131/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.940156501 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 2.410313211 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.980644463 seconds)
    (134/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.96421584 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.209878289 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.027615001 seconds)
    (137/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.424695677 seconds)
    (138/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.959168573 seconds)
    (139/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 7.000343818 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.985718169 seconds)
    (141/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.98135303 seconds)
    (142/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.323710686 seconds)
    (143/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.178208005 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.168805755 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.207290483 seconds)
    (146/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.555692037 seconds)
    (147/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.795376113 seconds)
    (148/309) benchmarking ("sort", BigInt, false)...
    done (took 6.959235302 seconds)
    (149/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.958928939 seconds)
    (150/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.136336715 seconds)
    (151/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.145993918 seconds)
    (152/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.045795816 seconds)
    (153/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.550857729 seconds)
    (154/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.168610306 seconds)
    (155/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.018402706 seconds)
    (156/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.940667531 seconds)
    (157/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 3.761965597 seconds)
    (158/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.196295014 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.059766453 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.954543667 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.256045885 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.335372144 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.197524755 seconds)
    (164/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.402401435 seconds)
    (165/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.981911641 seconds)
    (166/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.11174594 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.019262517 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.198215431 seconds)
    (169/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.489782164 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.86421559 seconds)
    (171/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.360020115 seconds)
    (172/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.983224301 seconds)
    (173/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.956334896 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.293215568 seconds)
    (175/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.343093805 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.631696164 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.145042654 seconds)
    (178/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.091951955 seconds)
    (179/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.290293007 seconds)
    (180/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.985444247 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.005311228 seconds)
    (182/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.956511125 seconds)
    (183/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 3.830360174 seconds)
    (184/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.029078075 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.986627568 seconds)
    (186/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.960606755 seconds)
    (187/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.106725435 seconds)
    (188/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.260019248 seconds)
    (189/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.252760927 seconds)
    (190/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.967082273 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.982700719 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.998697481 seconds)
    (193/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.264880175 seconds)
    (194/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.167610095 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.213247594 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.877616878 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.010185196 seconds)
    (198/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.299067077 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.877336888 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.023513712 seconds)
    (201/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.459638401 seconds)
    (202/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.157937864 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.079379521 seconds)
    (204/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.940984785 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.15278374 seconds)
    (206/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.943560738 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 8.139810971 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.080503429 seconds)
    (209/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.08920801 seconds)
    (210/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.342454906 seconds)
    (211/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.068837924 seconds)
    (212/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.211285077 seconds)
    (213/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.975942066 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.763250018 seconds)
    (215/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.269885423 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.963924848 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.108974741 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.824569667 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.246733329 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.16911046 seconds)
    (221/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.845266639 seconds)
    (222/309) benchmarking ("sort", Float64, false)...
    done (took 5.794551121 seconds)
    (223/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.162332375 seconds)
    (224/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.264783704 seconds)
    (225/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.369675137 seconds)
    (226/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.124075636 seconds)
    (227/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.946480884 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.046601013 seconds)
    (229/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.042926995 seconds)
    (230/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.086394861 seconds)
    (231/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.26627852 seconds)
    (232/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.260079341 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.987796289 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.230627233 seconds)
    (235/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.032967704 seconds)
    (236/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.990159219 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.233824508 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.209447283 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.337701933 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.347426021 seconds)
    (241/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.964498002 seconds)
    (242/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.986441993 seconds)
    (243/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.000386797 seconds)
    (244/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.379152248 seconds)
    (245/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.964549788 seconds)
    (246/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.018682036 seconds)
    (247/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.040227067 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.846149241 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.965009268 seconds)
    (250/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.989857937 seconds)
    (251/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.920120134 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.951304384 seconds)
    (253/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.556623337 seconds)
    (254/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.136224088 seconds)
    (255/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.241777882 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.299943986 seconds)
    (257/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.05084246 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.05795895 seconds)
    (259/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.615178039 seconds)
    (260/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.12218057 seconds)
    (261/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.850146188 seconds)
    (262/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.336369737 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.988425795 seconds)
    (264/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.471231879 seconds)
    (265/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.382597201 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.341521862 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.983961317 seconds)
    (268/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.12632037 seconds)
    (269/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.186467111 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.625429166 seconds)
    (271/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.12561269 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.270107955 seconds)
    (273/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.1111724 seconds)
    (274/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.074582783 seconds)
    (275/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.02537564 seconds)
    (276/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.613256773 seconds)
    (277/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.280215527 seconds)
    (278/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.977679931 seconds)
    (279/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.116141943 seconds)
    (280/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.089985468 seconds)
    (281/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.964064977 seconds)
    (282/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.030310776 seconds)
    (283/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.134550043 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.062519497 seconds)
    (285/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.963438345 seconds)
    (286/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.099784325 seconds)
    (287/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.989084704 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.04436556 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.105186725 seconds)
    (290/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.962977805 seconds)
    (291/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.476588693 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.760421224 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.261490423 seconds)
    (294/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.065566854 seconds)
    (295/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.244431381 seconds)
    (296/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.051503727 seconds)
    (297/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.556741607 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.004798757 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.608296083 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.34521254 seconds)
    (301/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.909719152 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.996849278 seconds)
    (303/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.045776648 seconds)
    (304/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.349408372 seconds)
    (305/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.153116298 seconds)
    (306/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.234345847 seconds)
    (307/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.491969045 seconds)
    (308/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.369688816 seconds)
    (309/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.04915549 seconds)
  done (took 1044.5686265 seconds)
done (took 1046.742446493 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.121561115 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.994558946 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.974783199 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.997340032 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.090181849 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.013556544 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.986329006 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.97892732 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.022802062 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.025228962 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.977719114 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.010934275 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.980404783 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.979878825 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.975674253 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.996762135 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.284613058 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.004575341 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.996342341 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.985201648 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.998635931 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.979848767 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.027602866 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.009717247 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.9805166 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.983279938 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.983253283 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 2.000209015 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.092545806 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.984094041 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.983279474 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.989699578 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.285899268 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 2.001202326 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.971785349 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 2.001992642 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.992312948 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.987407383 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.980899222 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.01268592 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.432345825 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.985089551 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.982901513 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.979324797 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.978482247 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.984510879 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.981819014 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.983686801 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.993480444 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.994139236 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.42644947 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.999796953 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.983464213 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.979167142 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.989680027 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.981968793 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.982482017 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.997171896 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 2.000505641 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.996472429 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.27619485 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.009059005 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.980043754 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.998253966 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.989706013 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.463772059 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.979127756 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.985174892 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.430346284 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.989877941 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.465382186 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.993967029 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.98032111 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.99552342 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.012903862 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.285987131 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.000079164 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.978656511 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.988725788 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.98133464 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.988861224 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.995767355 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.985210725 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.982880755 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.998651324 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.015290659 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.990542589 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.985211647 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.989968641 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 2.004204107 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.991079343 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.995271265 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.985003103 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.976965712 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.992729042 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.985187871 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.986915542 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.986665583 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.986708266 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.994120126 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.426734457 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.003821674 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.9777221 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.977314129 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.981414218 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.998131474 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.427953073 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.989112659 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 2.002802012 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.029291109 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.982435033 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.28012372 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.012637564 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.000336207 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.989935484 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.985248581 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.97751983 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.278208823 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.455386991 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.004358665 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.98361923 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.984035422 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.000628855 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.986035773 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.979956392 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.290725317 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.009501407 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.999933894 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.107152622 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.994894686 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.017613876 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.985399423 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.987496221 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.017114938 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.001397909 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.018367837 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.987217988 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.001396193 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 2.005879969 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.981070695 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.997632095 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.995621298 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.984277352 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.992205716 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.97795011 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.019127509 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.99940191 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.999186804 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 2.006338024 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.108051913 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.982009195 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.281635664 seconds)
done (took 312.379313158 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.056869985 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.971811799 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.089389252 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.979244105 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.069894441 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.065024441 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.977507899 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.976465032 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.977723639 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.352989781 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.975769863 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.979959647 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.971839717 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.97724488 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.068215903 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.97947341 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.97695017 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.317558761 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.982282578 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.064071065 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.973181818 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.980953058 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.980218024 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.358558029 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.982178207 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.978410893 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.052871464 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.981164771 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.324796337 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.982497185 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.98123902 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.326700352 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.073113468 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 2.000074141 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.989647215 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.988907573 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.065588923 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.984499967 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.062685243 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.070032695 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.084577529 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.022468263 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.976692348 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.982346728 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.985241381 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.988058155 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.97965799 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 2.009596068 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.979739222 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.979808464 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.318621187 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.992668321 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.989604552 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.982447823 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.979928042 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 2.005545202 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.981098092 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.98385215 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.091226244 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.9849629 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.045577462 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.361356926 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.359191884 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.983314035 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.984952418 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.982594 seconds)
  done (took 191.869362435 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.049692202 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.063747092 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.05161706 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.985815904 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.034628483 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.05480786 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.986000718 seconds)
  done (took 16.13300248 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.98889309 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.983053207 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.033234154 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.033558706 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.982733304 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.136241892 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.984259514 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.994076348 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.41263795 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.035657296 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.985149809 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.984235259 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.989544014 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.980447124 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.0316626 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.995949 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.099400678 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.985823874 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.985336545 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.134882788 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.981185614 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.990450754 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.042081055 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.997199453 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.985325033 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.99243143 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.577993282 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.988900781 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.981345126 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.984180184 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.981903918 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.027108612 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.987805311 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.984125944 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.983812638 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.103205621 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.984909946 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.981500224 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.984898439 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.982354103 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.984626441 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.985382421 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.986609049 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.981195783 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.984417706 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 2.009134251 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.984468326 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.988739651 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.984616326 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.984463241 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.0375208 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.98615846 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.984791467 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.982455541 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.042362874 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.992725573 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.986412179 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.985117179 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.986499435 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.982326198 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.137278867 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.03508903 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.988789721 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.034693532 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.986889466 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.986270366 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.985367477 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.987944301 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.041667761 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.986153241 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.034087344 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.98356285 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.145466022 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.011811457 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.987572654 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.990295149 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.990258873 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.989620136 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.986579462 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.995905557 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.98389777 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.988433436 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.994533983 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.984400674 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.985599517 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.103893043 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.120363864 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.984937861 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.000369942 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.994031472 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.984570455 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.040818198 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.987018283 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.985022562 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.041146439 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.10260159 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.044362796 seconds)
  done (took 217.641239101 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.993033598 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.995728617 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.989119416 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 2.005455047 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.988064328 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.988460823 seconds)
  done (took 13.871653864 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.990302886 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.988996403 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.987058842 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.988205981 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.988956636 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.989516125 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.989527266 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.990960808 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.994055975 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.98962936 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.989602643 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.989280144 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.991538886 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.989655013 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.991012029 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.990459237 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.990976862 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.987279176 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.988925922 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.990101217 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.142603181 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.990988601 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.990180728 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.99106092 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.995294885 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.99004656 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.997996504 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.989039768 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.988575458 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.000212928 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.993444269 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.991281978 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.991194848 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.99595719 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.999189816 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.991960614 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.993283367 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.990935537 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.987943261 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.993494929 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.991305615 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.990909715 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.99071242 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.991953577 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.997027273 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.997250127 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.995954714 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 2.000306995 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.992412133 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.997775182 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.991075133 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.990907564 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.990635419 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.991644734 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.998257132 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.995015423 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.99625107 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.991643321 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.990937537 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.996472575 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.992225405 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.991747499 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.992639541 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.995468504 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.989486288 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.990852436 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.992002069 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.996096777 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.9923207 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.992996515 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.990788571 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.988027507 seconds)
  done (took 146.499031207 seconds)
done (took 587.935455196 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.265360888 seconds)
  done (took 9.180757419 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.170037099 seconds)
  done (took 9.186625914 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.528298311 seconds)
  done (took 10.450079413 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.005285024 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.01561588 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.99476505 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.989773284 seconds)
  done (took 29.932353911 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.376265392 seconds)
  done (took 9.293870595 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.999759049 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.983873132 seconds)
  done (took 15.965528349 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.068567482 seconds)
  done (took 8.990637904 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.099138997 seconds)
  done (took 9.022153649 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.006087216 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.010150234 seconds)
  done (took 15.946285869 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.972622408 seconds)
  done (took 8.890830107 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.626697882 seconds)
  done (took 11.5538945 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.997133045 seconds)
  done (took 8.925367713 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.037719744 seconds)
  done (took 8.95663636 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.108392907 seconds)
  done (took 10.02678642 seconds)
done (took 168.237242387 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.989822165 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.98513947 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.986330495 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.985761916 seconds)
  done (took 29.862494452 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 2.026414884 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 2.025890281 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 2.028555886 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 2.037188564 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 2.030232864 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 2.043297133 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.022048283 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.019024143 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 2.038067911 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 2.030613278 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 2.028819601 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.037139192 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 2.026929954 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.019011406 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.028978144 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 2.028806033 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 2.038369792 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 2.028302533 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.019654796 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 2.029889078 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.994265649 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 2.037806494 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 2.030379536 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.993467246 seconds)
  done (took 50.561652767 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.193637802 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.066798486 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.14805169 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.047825598 seconds)
  done (took 10.374653499 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.045703329 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.048550669 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.059260928 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.098227273 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.123717745 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.058005703 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 2.022223544 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 2.016296639 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 2.002690695 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.049788572 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.123343651 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 2.064900056 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.132226702 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.995074283 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.177410518 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.99561873 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.99596912 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.048462337 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.099131893 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.114028075 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.995861209 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.047945471 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.054830212 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.06556308 seconds)
  done (took 51.353568757 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.993687186 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.003256519 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.001749116 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.995480953 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.994616067 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.994742609 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.000472028 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.996019463 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.017004548 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.995592295 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.994574337 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.995189283 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.994276357 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.995833522 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.993552998 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.00736109 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.008106111 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.996394559 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.998895412 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.001432879 seconds)
  done (took 41.897826561 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.989556129 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.844206846 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.34270504 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.246071656 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.990810166 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.98883979 seconds)
  done (took 32.322962637 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 2.009874015 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.001281807 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.997461662 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.053040054 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.133480173 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 2.003418665 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.998273309 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.008496991 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.041895745 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.061346572 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.014326574 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.025018686 seconds)
  done (took 26.269267688 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.993017033 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.99222408 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.991347976 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.007592962 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.008763796 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.00380681 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.005180456 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.991784723 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.009287368 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.014602203 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.004514335 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.008386942 seconds)
  done (took 45.956572902 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080792329 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.038807301 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.009218551 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.665877952 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.372055684 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.201723546 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.596664002 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.325489713 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.996506367 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.264819348 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.050648932 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094831844 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.251177846 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.501471292 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.024524709 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.446645544 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.2911424 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.191874107 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.014873676 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.687566935 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057277935 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.186310695 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.772703615 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.05058179 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.203481868 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.121173726 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.253806838 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.993090708 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.123847838 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.029116028 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00442642 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.993314588 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.266971058 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.364183222 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096985517 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003303371 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.61486591 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.707857522 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.986410063 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.790189779 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.740797757 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.123417655 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005481844 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.994579759 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.930137512 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.159645103 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370501943 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 2.000569495 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.705919729 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.9953472 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.00624702 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088226493 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.997290307 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.812123726 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.90845072 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.995419094 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.995750431 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002318638 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.565056239 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.123918646 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.186819295 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.96862768 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.089069615 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.697480451 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.374978953 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.140289571 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.998097599 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.999066234 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.929982387 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.768899719 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.0509748 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344326974 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.014226808 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.644802909 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298696467 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.111116497 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.936549624 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.256490105 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.526556685 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.968082302 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224296086 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.99573718 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.932119293 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.945615455 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.931334987 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.248944222 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026458306 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.759061356 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028449193 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.327145277 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.008327483 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016880512 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020735298 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.221391176 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.881867837 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.997302126 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.821149173 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.14971077 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017890621 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.328503124 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.931895556 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.999509149 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255194228 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.208631661 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.085056763 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.486038156 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158770245 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.567117711 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.047372797 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.156004805 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.045114231 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.261688853 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053017964 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.125604937 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.051983676 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.99772347 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.285322362 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.599155328 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.132728662 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.062312046 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.124452078 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.3040276 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.01920891 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08248326 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.002118634 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.998888635 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.80218023 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.551839203 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.997948591 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 2.001564795 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.088133774 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.043871491 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 7.003092436 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.951167499 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.63094124 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.067274525 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 7.013407469 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.224306684 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.588100243 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.309033269 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.934357432 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327925676 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.092901331 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.221165333 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.640466143 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.076664643 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.262009332 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.082826083 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.121331231 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045623387 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01907964 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098475054 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.021427151 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.16584497 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.29187363 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 2.003172528 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.004037554 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.811645106 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.035140593 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.007409338 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.005835467 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.751627883 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268130251 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.021359292 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.007162957 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.892455669 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 2.013474521 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064631598 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 2.00552014 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.011563599 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.543821869 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.715904299 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.00840006 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.597466505 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.22677662 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012020691 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.73759649 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.117811055 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.085229869 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.27086647 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.057515709 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.936037085 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.714192059 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.697514681 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.002355541 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.936992675 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.002073654 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012156339 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.013113079 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.201510562 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.271777674 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.040421483 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.702447251 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.043392135 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.012299423 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 2.008190024 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.003048015 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.516224062 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.140731512 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.203793153 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.047314414 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146510041 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 2.017276003 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.938919663 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.006971105 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.008525394 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.003852649 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.003263686 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03634476 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.705026398 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384730331 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.262604091 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.613146575 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017330547 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.728827862 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.061338086 seconds)
    (217/481) benchmarking "4d"...
    done (took 3.004622663 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.702891993 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.33871328 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.066801849 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01491272 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 2.01454735 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.778301684 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.711308776 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.569536647 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320406995 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.294379536 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.432772472 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.233384618 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.031719264 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.341419327 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.93984349 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.565802021 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.064182209 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.347361953 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.950672101 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090389885 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.645378909 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.350977829 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.018206322 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233366538 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388589328 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.756518958 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.153466201 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.215918029 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.040265984 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.178364181 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.965035142 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.290685387 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149274471 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.725724048 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.21726118 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340110928 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.699998235 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.135988479 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 7.005491988 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.673962534 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.084009483 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.718381758 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.179993736 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.203592797 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.966641712 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487921478 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.015027491 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.233650996 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.346543125 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.179464274 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.128129763 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.944037143 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.018791896 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.018418941 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.008831871 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.008238676 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.885461073 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.260495099 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.018434123 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.942619229 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.130669528 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.286913312 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.906432985 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 2.01266547 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.008857588 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.294575682 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.55489993 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171250567 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.116906234 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.538726271 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.016753081 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.942858718 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.940922195 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.700455971 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.015877397 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.983088617 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.20451895 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.106637632 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.926537531 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.102445339 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.08725156 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.264495917 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.021508219 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.273363975 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.281084171 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.707203492 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.033359925 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.110116723 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.693584431 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.121160607 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.008750904 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.244485228 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.764726549 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.235647175 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.035075406 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.950835679 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.008271623 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.224327142 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.008902335 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.933063351 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.239655886 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.729337327 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.075379545 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326361165 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.078440594 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.946762254 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.061881823 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.102619663 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020897416 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090350736 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.021319468 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.021086535 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.020997203 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056019212 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.948478686 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.137338419 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.024495865 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103154368 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.143389123 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.547588015 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.015709882 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277929681 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366563867 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.323646753 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.0648262 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.010318322 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.011832239 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.945719218 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157159534 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.236749799 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.284404641 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.139814182 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.125969687 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034978776 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.693943624 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.235647798 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250837599 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.284949667 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.906514796 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.536317366 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.050459755 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 7.012211685 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022115674 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.223232459 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.211798813 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.296100259 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.143451143 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.101456234 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.370641796 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.286852012 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.012616602 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.012805098 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.603730436 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.084643279 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.677455124 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.044235164 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.936768945 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.291717214 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.025807996 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.383987997 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.03109571 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.171934601 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.786254349 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.71426976 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.302533279 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.985968124 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.067961634 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.2802009 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391728731 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321302347 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079561812 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.02436715 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.117774993 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159013897 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.900067897 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.012516205 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.015143291 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.063053577 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.723718402 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.025149226 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284162954 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320904288 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.009664604 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.92000118 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.040459401 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 2.025516901 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.238459056 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.264294554 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.26104721 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023774904 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.021653485 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.830496485 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.283890474 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.068418894 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.948714674 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.01860688 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106736303 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.259275993 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.033889835 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.46706894 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.72603924 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.275161025 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 3.01102691 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.036371918 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.199360632 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.375705512 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325561236 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.551446333 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.211338009 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.604467495 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.608919152 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.315596421 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.022141535 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.182021752 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.31807598 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.019430045 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.108098615 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05252528 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.278200531 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.32307523 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.082779879 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.754849775 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.985392196 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.357505773 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.577334601 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.954690935 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.013868753 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.077422296 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.016177664 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.147783437 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.027186074 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.909460072 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.187948816 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.775157377 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.289541154 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.021532664 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 7.007404015 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.754537343 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.321718808 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.050011585 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162316434 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.0254047 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.693810407 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.367338505 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.275986069 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.109409181 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.024094825 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.021356669 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.018722262 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.006234786 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.216946607 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.216036091 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.280796434 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.132615025 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.052543404 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.02234572 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.234741563 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.229324872 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.924296137 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158962184 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.108908625 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058271046 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.981484789 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.521353479 seconds)
  done (took 1740.124868659 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.039067941 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.026612052 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.1301082 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.079887481 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.032204051 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.106229727 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.03444143 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.04614063 seconds)
  done (took 58.445869258 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.019201756 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.217618275 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.028938748 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.019654877 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.027651209 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.026610485 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.18384635 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.027288721 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.027139623 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.029732893 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.020215385 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.017850858 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.336715947 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.04196443 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.019991883 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.00478024 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.026784547 seconds)
  done (took 77.028749317 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.061048352 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.096969624 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.037316714 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.031641636 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.987078175 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.029564125 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.84197946 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.05231941 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.02144544 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.250976078 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.650691894 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.036608457 seconds)
  done (took 92.048657678 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.031699611 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.027289649 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.027351804 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.027591099 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.028746373 seconds)
  done (took 12.098688179 seconds)
done (took 2270.289629552 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.273895216 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.239375915 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.26298182 seconds)
  done (took 6.453300019 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.177940576 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.225919396 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.346772057 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.35126921 seconds)
  done (took 11.063580137 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.3189625 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.411074383 seconds)
  done (took 6.688024201 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.432495236 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.040398164 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.411263326 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.029068151 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.024944927 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.030263207 seconds)
  done (took 23.048001146 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.032399514 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.035781197 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.031450063 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.034197651 seconds)
  done (took 10.093641792 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.014695635 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.704691922 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.015066694 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.02817952 seconds)
  done (took 21.720875625 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.781204974 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.790928533 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.77542224 seconds)
  done (took 10.307391193 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.570795304 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.928399735 seconds)
  done (took 9.458729446 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.291154477 seconds)
  done (took 4.249094176 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.164222693 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.340257512 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.539004877 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.532717909 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.644811064 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.72299883 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.349291538 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.277040055 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.420260016 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.467740058 seconds)
  done (took 26.420121025 seconds)
done (took 145.611717914 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.415898518 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.028946393 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.233787045 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.411909188 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.315790462 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.23287267 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.456751918 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.391677346 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.878188031 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.873748958 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.366612191 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.313717509 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.185479425 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.275780371 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.183893258 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.397924022 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.255348566 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.433124381 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.102969171 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.262578022 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.456327833 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.008077896 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.210335584 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.020582492 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.254200977 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.179401711 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.587458402 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.398586215 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.257418107 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.596699363 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.178505545 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.417116935 seconds)
  done (took 175.543029045 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.959696543 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.029858496 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.031009686 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.048168506 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.434578843 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.031357744 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.03467185 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.031191368 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.285785253 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.27092416 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.03206892 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.413442821 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.039161765 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.032478752 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.043313181 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.030902743 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.447362852 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.050575007 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.056031938 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.059263944 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.063338639 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.348593935 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.060292018 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.391831875 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.456390351 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.060625844 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.032369957 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.064287775 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.037693931 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.039043959 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.045447035 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.032054919 seconds)
  done (took 213.95809661 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.033858773 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.033491539 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.032945979 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.033831379 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.034342147 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.034395966 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.032906175 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.033639837 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.613676572 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.609052009 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.042878499 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.040150921 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.043223614 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.033372453 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.038763052 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.033911113 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.035686782 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.036242853 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.041901522 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.044447603 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.049018573 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.770656667 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.049154702 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.754965017 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.041387195 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.044029339 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.034401924 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.042992075 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.03959747 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.042162245 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.044658181 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.035008508 seconds)
  done (took 225.812334395 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.237208828 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.042848574 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.041397916 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.997609598 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.041941806 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.041723723 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.03294987 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.237461279 seconds)
  done (took 20.652491047 seconds)
done (took 637.937493633 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.482501049 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.318294578 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.210385622 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.064351936 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.286356414 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.092908055 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.061519673 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.12514309 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.799604406 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.125531516 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.693393688 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.077234277 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.783362705 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.081324419 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.18738604 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.118519326 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.624118091 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.710620037 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.237455603 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.115683488 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.228727415 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.013406608 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.133159885 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.809018273 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.801307847 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.061624138 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.239670882 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.628479208 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.071129417 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.22652487 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.772331513 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.444134758 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.069949062 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.059750639 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.114322487 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.094802477 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.406189853 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.069762492 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.187336593 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.828647364 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.107413833 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.675276034 seconds)
  done (took 110.206021397 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.03483491 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.034312068 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.032408927 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.033534508 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.034899254 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.034478391 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.031901337 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.032874195 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.035740084 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.032695358 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.033178269 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.035742658 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.033642013 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.034280962 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.034328664 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.033065641 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.035271914 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.03737255 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.033143489 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.03239268 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.035015867 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.034651155 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.035454929 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.034099891 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.034892024 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.035101059 seconds)
  done (took 54.866747864 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.046725456 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.188169382 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.26813265 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.06316245 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.047072215 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.05188393 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.066060187 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.050212336 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.050202442 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.049030542 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.13702473 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.051036319 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.066174536 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.267765532 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.059975678 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.047482556 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.046693339 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.048758013 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.198314837 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.058651486 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.067809391 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.05088581 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.065367646 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.057516955 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.050745108 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.048356083 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.052223616 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.521588443 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.054044778 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.139790946 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.087153639 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.06545442 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.490142029 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.27586014 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.096094121 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.051202928 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.045581541 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.14268349 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.046070096 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.048898435 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.06704647 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.048570775 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.268195043 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.548417345 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.058549716 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.048840297 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.529880224 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.147368931 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.086845141 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.055078237 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.275466764 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.063101439 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.049974685 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.049115012 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.086571363 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.057675958 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.049481387 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.420756772 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.05883834 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.067074824 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.052665573 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.049699738 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.202817689 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.055214442 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.197019769 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.055898388 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.05704092 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.049939135 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.272198228 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.060850849 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.556513917 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.059912969 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.048900173 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.142009033 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.199272159 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.553150871 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.060467677 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.207484946 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.503925561 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.070964395 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.055768196 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.51285552 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.074999669 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.052788828 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.05136521 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.052488476 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.050433639 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.095391178 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.066191405 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.491159651 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.55962066 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.430046129 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.074410346 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.064655299 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.04966068 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.419911038 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.05598389 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.050554875 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.266155565 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.566464806 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.070494345 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.057791995 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.544260985 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.060091375 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.069903437 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.058219627 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.276412113 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.061858017 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.095975268 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.050845009 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.059390581 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.053758574 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.066986337 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.058560874 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.051664735 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.531583132 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.154258672 seconds)
  done (took 253.151097743 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.044962535 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.05098005 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.044388013 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.045752494 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.046342157 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.048301702 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.047035094 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.046111989 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.053122033 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.046988179 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.045767498 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.047087523 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.047845135 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.046797699 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.084908969 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.053529456 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.658999599 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.048848964 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.045995471 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.0443651 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.69442437 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.052554677 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.046699247 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.060095863 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.046651072 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.049365135 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.05454811 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.078334977 seconds)
  done (took 172.660658721 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.052444083 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.166602827 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.064289644 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.08120498 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.058515861 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.050061872 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.075420302 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.065251883 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.057183112 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.052606111 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.05214398 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.112057833 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.061774812 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.152838337 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.08236633 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.082145938 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.151578174 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.058296124 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.0517663 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.0507898 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.080683004 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.046889523 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.110751125 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.174561816 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.067631665 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.167781098 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.055157173 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.056395098 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.054955769 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.170178488 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.065442652 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.113820993 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.079196359 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.069309965 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.172350931 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.166294439 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.158795372 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.079578051 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.057888594 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.054219536 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.054023369 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.042811077 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.169572322 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.069112677 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.057971873 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.16193983 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.070462524 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.056753338 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.061917853 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.054842858 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.068390589 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.071499242 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.116546778 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.182274468 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.082937758 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.078329225 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.078644768 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.348097365 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.063040375 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.155312994 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.04602777 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.17129257 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.069458451 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.044363892 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.055116631 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.06043869 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.08248972 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.084280363 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.158660325 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.060104717 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.155838325 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.088970438 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.059605407 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.0545593 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.055832101 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.17307887 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.169579287 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.087931231 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.088643424 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.081822121 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.050405973 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.054737155 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.047053125 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.071689522 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.058211248 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.168776823 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.16790916 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.063981004 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.055241602 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.057461276 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.057999056 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.080210071 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.177788927 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.086309085 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.149152261 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.120516453 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.125430311 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.066598581 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.06508371 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.060451342 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.117279945 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.062050124 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.067014593 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.401785252 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.121694834 seconds)
  done (took 222.00736477 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.511646789 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.103030043 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.109604444 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.340595999 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.467599194 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.901683332 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.097926403 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.10214784 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.126227832 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.262134582 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.156017272 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.11401977 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.088079139 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.075400668 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.101957633 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.120865132 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.101975196 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.381196279 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.218498513 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.18099476 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.080181682 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.388650673 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.422872862 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.48321286 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.13676958 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.42429974 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.7743249 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.335155385 seconds)
  done (took 66.594273785 seconds)
done (took 881.44969093 seconds)
SAVING RESULT...
DONE!
