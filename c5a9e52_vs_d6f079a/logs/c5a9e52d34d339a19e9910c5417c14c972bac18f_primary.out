cset: moving following pidspec: 5012
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.140904092 seconds)
loading group "string"... done (took 0.484963276 seconds)
loading group "linalg"... done (took 8.225146228 seconds)
loading group "parallel"... done (took 0.171094104 seconds)
loading group "find"... done (took 2.419155188 seconds)
loading group "tuple"... done (took 2.311239928 seconds)
loading group "dates"... done (took 1.308393477 seconds)
loading group "micro"... done (took 0.564460258 seconds)
loading group "io"... done (took 0.471106976 seconds)
loading group "scalar"... done (took 42.807273747 seconds)
loading group "sparse"... done (took 12.522735399 seconds)
loading group "broadcast"... done (took 1.239246835 seconds)
loading group "union"... done (took 2.385176844 seconds)
loading group "simd"... done (took 2.778048452 seconds)
loading group "random"... done (took 10.747156954 seconds)
loading group "problem"... done (took 2.241986708 seconds)
loading group "array"... done (took 21.8466863 seconds)
loading group "misc"... done (took 1.024554938 seconds)
loading group "sort"... done (took 3.458710288 seconds)
loading group "collection"... done (took 16.651798458 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.743393067 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.16510675 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.241791781 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.876443925 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.29348383 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.206195983 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.201333005 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.180578689 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.587225373 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.214310842 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.195397892 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.404732404 seconds)
done (took 7.037718344 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.394921729 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.093572444 seconds)
    (2/2) benchmarking "String"...
    done (took 0.221016094 seconds)
  done (took 0.894836348 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.095290191 seconds)
    (2/2) benchmarking "String"...
    done (took 0.148708366 seconds)
  done (took 0.816550555 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.137014979 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.171379475 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.148607166 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.13475261 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.149108207 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.148674702 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.135526662 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.147345832 seconds)
  done (took 1.607525091 seconds)
done (took 4.427935634 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.508720278 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.97476823 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.616527423 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.20209162 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.343937871 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.312278747 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.313228868 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.270110675 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.135958211 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.114659762 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.210217025 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.498557184 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.463823787 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.987467959 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.100515575 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.153995211 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.171954548 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.869026781 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.126938628 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.155472983 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.526654332 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.239997698 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.162115588 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.138204028 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.246949839 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.176197267 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.171537735 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.152888995 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.774934787 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.180097274 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.236307424 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.131192032 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.168351017 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.198488788 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.282999047 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.158551377 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.78536691 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.248083922 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.189081796 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.146102866 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.799938037 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.171361596 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.239269253 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.151353744 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.114842607 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.18635638 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.14271766 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.13769237 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.146649725 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.146421553 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.224833829 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.527303856 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.141196377 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.226718774 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.155135859 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.801749021 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.149616582 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.341732982 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.188467053 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.154087751 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.124031135 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.149780429 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.218314982 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.144618879 seconds)
  done (took 23.225573588 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.207708257 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.222375765 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.141548027 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.211703807 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.172161418 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.143780225 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.136102852 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.141847158 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.158509263 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.238421241 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.182434163 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.230922242 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.125973981 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.154131542 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.196818534 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.279797452 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.166843842 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.15100328 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.152207763 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.156600361 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.174986358 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.156836634 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.140953818 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.15825113 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.214159775 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.252547827 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.159924876 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.1701627 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.151418626 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.144693889 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.189954812 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.210087819 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.123749885 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.151054055 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.233709119 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.154627135 seconds)
  done (took 6.952730791 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.259755518 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.150337414 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.270744136 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.233445818 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.191630723 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.222986108 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.222697313 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.317486113 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.37932212 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.245369401 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.210292244 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.176333736 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.157984266 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127725041 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.142282828 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.126286171 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.872921899 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.22152405 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.204447088 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.214200283 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.157351504 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.129621023 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.768574133 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.13242948 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.146102937 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.141846739 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.111749057 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.250974024 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.140134719 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.519818058 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.14726754 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.142879272 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.177716803 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.25263876 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.164539709 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.165747823 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.184606437 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.140588408 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.148678054 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.254322354 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.161382533 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.125979847 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.142002764 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.210397914 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.164212433 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.177530187 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.155207028 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16778195 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.179970372 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.134727259 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.170592783 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.924797002 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.242911686 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.180505705 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.148267527 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.322790978 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.168959056 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.147095521 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.154445548 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.129492445 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.24713862 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.171132307 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.144841673 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.12566633 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.158648387 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.143302511 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.150527172 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.22926847 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.143253691 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.206724821 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.155947276 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.148167654 seconds)
    (73/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.767111586 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.149324086 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.133987429 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.168658877 seconds)
    (77/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.130080089 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.148913071 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.127117911 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.148245458 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.128019073 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.152471972 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.137320325 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.13541729 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.142034193 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.194552534 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.157915891 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.152197357 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.173673412 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.151463325 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.132338546 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.17591448 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.145407388 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.133948528 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.216890849 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.160384292 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.137725196 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.144970739 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.192291702 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.148148518 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.25127099 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.133630261 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.169382504 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.146078702 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.162012153 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.160062114 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.142239038 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.135123817 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.142577838 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.130324115 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.205369621 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.135352687 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.142859996 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.137376408 seconds)
  done (took 28.233503926 seconds)
done (took 58.985302043 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.396031228 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.11185333 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.112129623 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.130837658 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.112532188 seconds)
  done (took 1.512112958 seconds)
done (took 2.145566137 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.235592529 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.332792109 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.248143497 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.151863027 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.215275281 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.217493649 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.201271684 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.216584944 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.221524957 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.2352927 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.128944261 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.239579838 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.228906064 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.217967243 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.127038082 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.253755243 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.212242981 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.217421573 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.253437047 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.151862538 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.163802813 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.152271528 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165671905 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.133953766 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.164849385 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.151456969 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.164397302 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.151814417 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.159685879 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.135505709 seconds)
  done (took 2.335470803 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.192297708 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.149248727 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.165153055 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.14138446 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.163966102 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.13575609 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.163533785 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.147239463 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.168672427 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.149770303 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.160473899 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.13477014 seconds)
  done (took 2.321313765 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.141867203 seconds)
done (took 9.805467371 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.16956891 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.922794023 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.223709663 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.278559236 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.371598162 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.307555311 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.65625957 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.240680396 seconds)
  done (took 15.942830231 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.158957435 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.159600044 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.141453253 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.20657599 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.140205748 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.156959485 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.144961241 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.159499333 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.141567164 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.160802222 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.145388669 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.160725117 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.142921806 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.155740824 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.144627121 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.160943232 seconds)
  done (took 3.180018213 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.182370468 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.177693197 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.146609984 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.165072947 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.144515515 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.165453512 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.150698912 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.163015143 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.158125345 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.145299133 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.167605043 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.14835455 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.161663225 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.144602258 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.163920775 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.168666072 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.159345682 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.149065884 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.182727147 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.149740969 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.165358389 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.160936387 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.147687077 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.163142813 seconds)
  done (took 4.54547593 seconds)
done (took 24.310125611 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.204667926 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.151233897 seconds)
  done (took 1.009573913 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.202153709 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.217464735 seconds)
  done (took 1.076724142 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.163705106 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.156192488 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.172798161 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.168716358 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.141046846 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.156734946 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.181785756 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.143016511 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.156843269 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.142777164 seconds)
  done (took 2.244787134 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.145659515 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.159713047 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.157267205 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.206524308 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.167083818 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.144614829 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.163214401 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.144512581 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.162737384 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.142421742 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.163134921 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.160260394 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.162650153 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.16127365 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.161881898 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.163245829 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.152279281 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.161658686 seconds)
  done (took 3.542815885 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.141883336 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.158695809 seconds)
  done (took 0.963545085 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.146523102 seconds)
    (2/7) benchmarking "second"...
    done (took 0.156580736 seconds)
    (3/7) benchmarking "month"...
    done (took 0.144162676 seconds)
    (4/7) benchmarking "year"...
    done (took 0.158332914 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.141888643 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.156208133 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.142298822 seconds)
  done (took 1.707898959 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.604995928 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.272373742 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.421387524 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.124631281 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.140734377 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.367627196 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.15882718 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.108934034 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.126232183 seconds)
  done (took 3.01807667 seconds)
done (took 14.220182679 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.142907209 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.225869994 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.647055537 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.164679042 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.157061104 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.202208395 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.366054091 seconds)
done (took 2.576936216 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.373206118 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.184562436 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.120982005 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.145373445 seconds)
  done (took 1.489937373 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.133672027 seconds)
    (2/2) benchmarking "read"...
    done (took 0.166176648 seconds)
  done (took 0.977486522 seconds)
done (took 3.140929513 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.163947454 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.16057412 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.145706238 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.161584515 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.14695933 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.160733428 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.14494001 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.15786826 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.144620067 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.158943745 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.145402778 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.161892165 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.145206524 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.162178165 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.158648178 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.147262581 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.16214527 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.14382674 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.158480488 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.147014575 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.16113327 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.143442542 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.16054367 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.146628562 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.161137181 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.145313032 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.159695797 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.143099971 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.161566635 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.145190461 seconds)
  done (took 5.276211242 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.148614778 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.154815497 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.142047952 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.166641722 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.139587584 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.14302985 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.156432811 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.142063317 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.159464342 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.140931399 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.160293149 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.141984187 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.157350387 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.141997386 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.159232749 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.143900212 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.166335747 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.141039793 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.157985104 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.142936961 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.161418222 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.265298331 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.159043549 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.141870765 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.158847435 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.139116783 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.159907206 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.140984897 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.15887572 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.141120599 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.160764438 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.143722117 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.158883193 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.152606138 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.160686146 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.143018536 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.163619061 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.138585011 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.16069299 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.139235024 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.156810374 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.140720688 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.158204476 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.149081738 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.158233599 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.143582434 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.157688628 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.143171419 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.15924979 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.143934504 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.155727345 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.142849939 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.16144546 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.144216803 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.161298654 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.139081863 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.159416781 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.139446085 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.161319676 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.142181628 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.15619598 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.139555666 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.163320838 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.143145857 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.174555577 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.148411331 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.159482153 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.1455074 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.160172044 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.147847572 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.162644915 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.151700436 seconds)
  done (took 11.709514248 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.14338171 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.141316784 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.159731276 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.143462378 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.15790779 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.142668421 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.160885892 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.144185445 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.160659816 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.142652707 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.160197815 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.143281768 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.158263771 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.142945272 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.159620717 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.143930663 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.159319143 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.142996885 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.159238126 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.144194454 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.158609485 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.143554638 seconds)
  done (took 4.004719525 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.288915022 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.15077043 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.209707742 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.174054327 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.162761759 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.173981621 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.148354899 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.166453709 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.148867883 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.168931748 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.171012179 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.14934916 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.17814479 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.152791217 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.170553602 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.154069313 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.165374731 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.173124949 seconds)
  done (took 3.801253358 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.143119037 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.14223792 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.160562318 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.14334658 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.159851682 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.143379337 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.159533416 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.144740403 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.159836457 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.143774079 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.160938901 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.143488219 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.159710393 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.143616797 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.160704654 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.143828206 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.160015111 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.143541577 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.161065803 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.143731546 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.160136984 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.143870949 seconds)
  done (took 4.018898144 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.15979567 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.163197848 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.165521258 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.166640324 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.145376587 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.1618944 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.151217414 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.163484547 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.151700646 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.163642178 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.146515908 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.162571302 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.160859003 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.163396406 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.151437693 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.164229543 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.146270835 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.164199372 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.145805203 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.162971423 seconds)
  done (took 3.860775172 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.23478698 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.181073445 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.179953121 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.169801621 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.181302455 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.162671874 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.186479928 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.161438406 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.180328937 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.190154907 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.162238578 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.178983654 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.169667874 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.184649319 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.179440067 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.170668421 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.187568056 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.169433767 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.182177915 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.179185635 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.174144282 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.179824683 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.171500021 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.180531756 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.162308698 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.179892359 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.179901998 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.167910948 seconds)
  done (took 5.690427253 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.157701339 seconds)
    (2/2) benchmarking "in"...
    done (took 0.171536757 seconds)
  done (took 1.035879563 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.147933337 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.14657646 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.165532642 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.145676276 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.165836173 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.147052638 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.165475303 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.147591324 seconds)
  done (took 1.935276965 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.205292726 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.229533798 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.170056052 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.155850755 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.227513289 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.218026119 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.203143152 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.151670963 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.163479797 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.138895177 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.221493529 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.157479453 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.144761006 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.163854565 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.147396886 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.168329716 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.147648384 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.173058669 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.154645294 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.164919576 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.153596837 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.167608884 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.148570289 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.174038682 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.140455431 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.167558668 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.148940029 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.174979723 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.14304759 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.165799925 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.162636254 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.147906798 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.167781252 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.15363944 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.164511493 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.210903426 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.172410402 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.142412803 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.168433779 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.171482979 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.178799063 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.166851385 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.149587179 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.163347658 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.152143858 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.168806312 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.152602087 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.164022673 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.139265684 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.159444158 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.147833953 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.159807263 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.147569464 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.165347493 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.146639667 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.170694402 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.150004829 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.161908228 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.142882974 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.161879314 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.155492049 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.161220432 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.148883667 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.170498637 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.166170572 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.147805249 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.164176254 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.148799439 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.165697747 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.15037003 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.163679752 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.163619061 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.166002115 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.152754062 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.171653322 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.148074207 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.163335016 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.152664176 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.164374534 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.148041591 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.16915985 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.176097044 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.167705824 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.142379698 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.162421981 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.171731615 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.150455027 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.149259274 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.159367472 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.173011735 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.151604125 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.166279246 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.14162171 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.163841016 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.145770492 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.167396985 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.141941723 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.164951912 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.148467413 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.169741278 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.153918107 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.163292553 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.150366538 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.169911901 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.153701249 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.165160038 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.211597578 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.146307991 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.162133327 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.149517896 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.172594714 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.14258566 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.165390306 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.149047235 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.162772934 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.142986619 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.169668224 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.1487106 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.167291036 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.153220742 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.166249773 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.149699762 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.167888947 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.149596957 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.161232095 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.152306728 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.174675145 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.15010582 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.168510674 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.149987928 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.16719682 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.148529362 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.17155324 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.145469476 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.17122785 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.144543101 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.168802611 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.148109198 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.171683773 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.149545762 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.163076324 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.14631693 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.168444116 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.166147246 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.152527008 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.1674699 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.145305699 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.15902092 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.151221884 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.161246482 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.150491972 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.175617374 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.144568035 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.168879646 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.145541133 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.17609013 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.146154619 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.183045484 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.151661604 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.172220573 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.153795745 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.158724444 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.145469057 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.16840263 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.149029217 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.164112839 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.149515312 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.167765258 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.154819548 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.160747396 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.153235059 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.160639772 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.145513197 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.172758142 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.150991757 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.171907336 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.144291184 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.203519106 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.159928787 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.174538675 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.166059385 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.15055029 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.170444859 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.148618341 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.170645653 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.156211834 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.172721755 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.147595026 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.165794547 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.154662545 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.163423226 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.15156222 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.165661779 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.154744538 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.160976126 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.153073376 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.157967365 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.154124278 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.169469177 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.15361765 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.174670745 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.151913243 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.166401817 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.157789688 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.164105505 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.153860907 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.160829391 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.153358818 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.178370029 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.15495078 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.17442197 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.151697363 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.166579913 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.149081108 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.178295369 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.150218334 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.170816345 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.149841611 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.162018438 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.142772206 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.174771177 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.151685211 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.164992769 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.148111572 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.170450516 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.168529531 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.14802001 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.161072299 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.155974513 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.171022027 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.145771889 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.167873302 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.146206092 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.165590471 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.156845434 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.161790825 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.145514315 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.170233659 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.153002976 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.169783532 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.148607864 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.172057774 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.155426887 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.171094313 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.152143299 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.165559182 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.157726901 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.167457468 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.149028658 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.166088788 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.153117865 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.162825524 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.151839909 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.169932434 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.146346543 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.16549395 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.153017015 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.17545618 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.173580803 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.149964322 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.173081577 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.157746526 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.174772016 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.149566366 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.175939762 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.146856524 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.16115499 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.147272988 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.16057405 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.153342614 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.165714439 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.155008469 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.166703252 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.150177407 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.171924027 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.153051865 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.164989696 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.155066088 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.179585895 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.143974035 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.163995645 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.148194753 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.169894091 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.165550521 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.14914648 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.170445418 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.154988703 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.172242853 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.152703846 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.164528394 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.151468773 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.174448301 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.148007369 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.174096161 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.157368685 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.174986568 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.150907598 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.172388333 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.147285978 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.171271291 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.144914797 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.167418147 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.149263884 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.168112858 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.147129813 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.167625086 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.147084207 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.163259518 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.147256924 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.175779267 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.148925572 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.174517165 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.149461883 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.166751442 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.146997603 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.166415994 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.156237186 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.170439272 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.176159343 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.152684779 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.143933107 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.165398058 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.155313465 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.170914751 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.175313146 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.146799394 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.173889082 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.159048088 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.174524708 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.15357777 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.178751711 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.160482069 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.175773889 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.158298482 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.162929238 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.150002316 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.174489088 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.154043472 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.172507621 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.155475777 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.164602706 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.15473965 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.175963368 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.152887947 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.167369118 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.145020048 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.171639983 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.157479383 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.172443857 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.155415225 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.172397202 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.152607395 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.166095213 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.155294888 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.175355679 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.150711204 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.177878067 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.150648906 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.17584792 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.147770258 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.176339812 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.153771509 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.165119461 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.144545685 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.167556922 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.156988679 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.164952121 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.158035808 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.176381298 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.1484561 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.169757551 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.156784532 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.167797385 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.153945136 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.176450022 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.149787204 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.182201033 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.171093475 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.150773991 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.175144409 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.158513524 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.163752597 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.151375256 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.168332998 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.159964755 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.169946402 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.158844501 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.170360142 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.157585262 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.172743685 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.156534151 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.17655639 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.157181789 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.163940889 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.15908266 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.172920592 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.15453718 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.168475055 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.152272088 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.166011195 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.150514182 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.176238333 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.150092061 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.180345489 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.155969973 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.168998935 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.150535274 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.177356632 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.150574664 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.178842156 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.148769547 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.17557519 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.145434137 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.174559069 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.170128688 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.16155127 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.168034845 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.14647526 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.175953171 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.157260082 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.174736746 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.15539965 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.177399515 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.147668848 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.164977823 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.155041782 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.168028281 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.163586724 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.173597354 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.152135827 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.169363367 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.155582075 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.173965139 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.160019022 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.166151157 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.149970747 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.17302333 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.153772697 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.170045576 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.146845908 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.177513216 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.15158024 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.174841367 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.151626475 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.167918699 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.150907109 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.179358004 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.15050175 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.168369735 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.150765471 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.180312594 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.171254599 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.150984424 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.165138318 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.158209574 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.173286841 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.161612521 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.16783056 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.152621433 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.168193176 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.155560773 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.179173064 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.152291014 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.172412357 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.151325459 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.177745438 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.159182184 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.165987728 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.150759954 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.182769401 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.157889072 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.174139673 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.156432881 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.172100936 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.160208711 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.180330543 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.156997898 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.169231367 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.147325997 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.172426117 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.147876137 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.174972181 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.158659771 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.172294605 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.170089018 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.15998466 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.176747336 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.157929929 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.156623827 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.16830136 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.178486315 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.150904245 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.174418199 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.149428011 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.166434712 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.157521149 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.178747591 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.152578691 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.172551202 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.155093745 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.17499872 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.149610505 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.171451412 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.15712864 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.177581172 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.160489124 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.172219596 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.152859034 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.175796098 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.16515047 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.175018765 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.155245021 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.179428124 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.160360476 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.173274548 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.154033694 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.177024886 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.159296584 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.176185743 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.160174349 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.17068204 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.153031331 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.181756493 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.160760806 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.185507878 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.173053501 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.149411947 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.178642689 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.153449611 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.167987423 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.158578127 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.18062276 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.162009359 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.173211621 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.152585954 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.183401744 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.159986895 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.174051184 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.152232767 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.173101343 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.160337917 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.172428002 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.158461491 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.170843723 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.160751866 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.181671147 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.160326743 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.182464683 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.148181064 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.179532886 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.155115744 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.182263471 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.155243554 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.168449284 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.148409725 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.177189153 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.161595899 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.181800423 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.156804018 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.17783232 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.15935986 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.175714105 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.154935206 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.171661354 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.181627635 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.16040273 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.175103063 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.156117408 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.17364359 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.155561053 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.175941857 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.161242292 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.181082664 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.155522082 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.18356636 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.159980749 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.17306726 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.151898366 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.174887742 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.15890666 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.178607 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.159847283 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.172828961 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.149436531 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.180971477 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.16227294 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.174023876 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.163581835 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.184237325 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.153159071 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.179411222 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.162869804 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.178890905 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.15757339 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.176106333 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.158890107 seconds)
  done (took 97.641970325 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.207162936 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.184277763 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.15682071 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.177630969 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.176603254 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.180482099 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.156390278 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.179376441 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.158392208 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.18666417 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.157014799 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.179750023 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.192129041 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.180079813 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.194706114 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.166218693 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.1778678 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.159305663 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.1771726 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.15818059 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.192526717 seconds)
  done (took 4.503792416 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.158219561 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.156330774 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.177865426 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.157471421 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.178720353 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.157744291 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.177614207 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.158951987 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.17790761 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.157024646 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.178540022 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.15851471 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.178045197 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.157502012 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.178311083 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.157011936 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.178480308 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.158537968 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.178164416 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.157282152 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.178401317 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.15773207 seconds)
  done (took 4.479624051 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.185755255 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.181754118 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.157019758 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.157663555 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.182154378 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.158341783 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.182546607 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.158927403 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.188790767 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.153792113 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.170647957 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.153514075 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.179424213 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.157114812 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.173199119 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.157062711 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.187700685 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.161014051 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.185986989 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.15789885 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.170960358 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.157712514 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.181218156 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.148686785 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.183703528 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.162521365 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.182363134 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.160011899 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.17067317 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.161085778 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.180923216 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.151746461 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.170507088 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.150100582 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.171886941 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.161431981 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.184430296 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.157558304 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.180453534 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.149620423 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.181288068 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.163836966 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.170653266 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.158784717 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.179687026 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.152999484 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.182765978 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.158339828 seconds)
  done (took 8.887203882 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.188488494 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.213273769 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.162443143 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.207016549 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.194575302 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.16871503 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.184274271 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.185363167 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.184096944 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.160862215 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.196419391 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.195589886 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.163978464 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.186281859 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.161662876 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.184340062 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.164404845 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.183833782 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.167231951 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.185361211 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.166838813 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.185778234 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.193886806 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.173067189 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.186801618 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.163353314 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.182799153 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.167340902 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.194020134 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.169480979 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.187959167 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.188005053 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.174271044 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.185853173 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.161980794 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.185272373 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.174651958 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.185483503 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.164798541 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.18280488 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.163323143 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.188599053 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.185468627 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.176329197 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.18403276 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.165529918 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.184188017 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.161429187 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.195124743 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.165051784 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.191187371 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.195296064 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.167041144 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.184448315 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.167970033 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.195045613 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.165197404 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.185039383 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.165764096 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.194558051 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.162073683 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.188153186 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.194852501 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.165737556 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.191321187 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.175391717 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.188536545 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.167175379 seconds)
  done (took 13.128486242 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.194887422 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.189403904 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.177070562 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.197421265 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.167090662 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.189883993 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.189457682 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.169044611 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.18860024 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.174079679 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.189399155 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.297469462 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.171099551 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.195426598 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.167926592 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.191024571 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.442068087 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.169563462 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.187666533 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.167391607 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.189494348 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.176546892 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.189988405 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.175249102 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.200343912 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.186201262 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.167490782 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.189790685 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.17587439 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.189212609 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.197944096 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.168764198 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.188049053 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.176638384 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.199008478 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.166056452 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.183227141 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.168492516 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.18796678 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.188079992 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.166204585 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.195556781 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.167907665 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.185591757 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.167421221 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.190763086 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.176290994 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.200057912 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.193506242 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.173319247 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.190601612 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.176047806 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.19023732 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.167213023 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.198549062 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.204000453 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.177048004 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.198199855 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.18789673 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.176520562 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.196776001 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.182706544 seconds)
  done (took 12.571902475 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.162953263 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.161899429 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.184531008 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.161729225 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.184128094 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.161707435 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.185035541 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.162138915 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.184040443 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.162042533 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.184057623 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.161624883 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.184445242 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.162094356 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.184418074 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.163142744 seconds)
  done (took 3.586513271 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.179968766 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.200805493 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.259341987 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.166282877 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.18557269 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.169930339 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.187008488 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.166430592 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.183779236 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.169566884 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.187329269 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.165985842 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.201956687 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.164179816 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.186113681 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.165584325 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.183051071 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.165695163 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.185279078 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.26559795 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.167084305 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.188911104 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.163889626 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.190267632 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.164548788 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.189347402 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.167649392 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.18584144 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.164104528 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.185069903 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.165229881 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.195202826 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.183679154 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.169981392 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.18484236 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.166164776 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.18437575 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.166685373 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.186975382 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.165402109 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.18538817 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.165871162 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.18655857 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.167965214 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.184837401 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.165001569 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.184778246 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.170564777 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.185666697 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.164937106 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.186693713 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.169450808 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.190199885 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.171923399 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.192871593 seconds)
  done (took 10.787420454 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.175095311 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.187070577 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.176538511 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.183252493 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.166771975 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.187413637 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.166039969 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.187919707 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.166978566 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.184420589 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.166272681 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.189106171 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.165912788 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.187384513 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.16611428 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.188189573 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.162582686 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.187659129 seconds)
  done (took 4.040790243 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.162173905 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.16124299 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.183844887 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.161883365 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.185783192 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.162697017 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.186769351 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.161807168 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.185144004 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.161571873 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.185538398 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.162024794 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.184799897 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.16159108 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.185751414 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.163387956 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.185355484 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.163099791 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.184440214 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.162383918 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.184286634 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.163879778 seconds)
  done (took 4.64736661 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.175536568 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.259875575 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.191780183 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.269392357 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.162607899 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.184617681 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.171973126 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.185729694 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.177545203 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.184100226 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.160315429 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.184154913 seconds)
  done (took 3.160829042 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.193070572 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.225487822 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.165392121 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.188766602 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17355538 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.192168641 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.170426421 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.192735822 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.199595354 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.182938068 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.190832158 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.17787199 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.200758561 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.19981724 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.174572828 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196722223 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.170136439 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.192901695 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.165189023 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.208223895 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.191902336 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.177631177 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.192807549 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.169355475 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.194051981 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.17665347 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.200790059 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.20293237 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.16995143 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.200817576 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.17435632 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.192154184 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.176479914 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.204236656 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.188982202 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.177785736 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.192769276 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.185775929 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.198082731 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.201394116 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.167712808 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.196483296 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.177856346 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197822013 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17707573 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.192084203 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.197681284 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.170369989 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.192146222 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.192549556 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.198968738 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.199320598 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.174674028 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.202419106 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.178628721 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.211846004 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.203731354 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.178167489 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.19847482 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.202764332 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.178309197 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.199293429 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.178145908 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.205886796 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.196973233 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.178867159 seconds)
  done (took 13.335153444 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.205036757 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.189569847 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170248605 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.205249843 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.201542947 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.171845386 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.19199753 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.17271931 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.193330311 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.167028572 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.237502618 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.170033563 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.201395303 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.200797113 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.170073932 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194027886 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.169844573 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.202678706 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166831829 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.214723464 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194006304 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.179723413 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.202750712 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.20045475 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.182942119 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.19823694 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.170777513 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.194026699 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170138256 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194506299 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.196929791 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.172801513 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.201494478 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.169662985 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.20138797 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.17073477 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.193983746 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.175428035 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194340914 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.197950312 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.178691508 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.208780181 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.169694484 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195594495 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.205151228 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.172209259 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.194564547 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.168452426 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194122102 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169565069 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.205093259 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.203461418 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.184292291 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.201978827 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170837925 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.193697607 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.170155367 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195190115 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172355298 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.199144738 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.202268948 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172193056 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.216667497 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.172113787 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195026337 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.202601252 seconds)
  done (took 13.342091826 seconds)
done (took 236.119854772 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.312644087 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.344327516 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.15764812 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.582590845 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.157072628 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.888047705 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.883390269 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.224702177 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.182494576 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.15840513 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.181009261 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.175741343 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.842735029 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.17942121 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.158715574 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.195574102 seconds)
  done (took 32.488395278 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.344868087 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.394376547 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.173882097 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.185740798 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.163580928 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.187580138 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.16104946 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.187476284 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.162517244 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.190872387 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.184116918 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.160176304 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.189038564 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.160701022 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.184286423 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.164919017 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.191698889 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.16343021 seconds)
  done (took 4.42693404 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.182711503 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.233813462 seconds)
  done (took 1.300985272 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.193463079 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.280548804 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.385880844 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.235622212 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.183545826 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.204918237 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.236438446 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.175349323 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.277534036 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.199120363 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.176875774 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.185083452 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.187622811 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.192703206 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.201656509 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.16355781 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.21327321 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.179415203 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.199525582 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.164803499 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.210472156 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.164325435 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.193055066 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.178100441 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.267060637 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.199839938 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.166856413 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.188567624 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.164188337 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.200246344 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.169761951 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.203044605 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.198745386 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.24685227 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.166763106 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.241309736 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.190900044 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.164088743 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.200347126 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.163544541 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.190911777 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.16658103 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.197648528 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.160626292 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.185296329 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.189182228 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.164025118 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.186094614 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.173008872 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.189707574 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.171943304 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.194581239 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.238829463 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.165430395 seconds)
  done (took 11.569856824 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.00780169 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.215591243 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.18808551 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.161804235 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.209534048 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.176603254 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.028761688 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.188549465 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.319902272 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.083898867 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.205225609 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.172979679 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.33248837 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.347520519 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.346900678 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.423008121 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.852848187 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.201273989 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.217217497 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.210001565 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.194644794 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.204827374 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.179892289 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.525763995 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.186883542 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.165739791 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.192180095 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.173456136 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.243551782 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.187696634 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.16914169 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.2665047 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.36300943 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.278654639 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.189386863 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.162642819 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.187683364 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.256588844 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.337737571 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.309046632 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.234479608 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.186282347 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.163701194 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.192832482 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.177968721 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.185471491 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.250783358 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.262346839 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.262325119 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.191147002 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.174352898 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.195627112 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.167726706 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.246074727 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.185705528 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.429211145 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.455429562 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.165297627 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.193961467 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.176742517 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.358271886 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.166229519 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.305361876 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.20965585 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.281900373 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.188924862 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.886403291 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.254850844 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.18661996 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.17057211 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.193272622 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.171123018 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.192893733 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.24964662 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.476521281 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.195652254 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.192153067 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.166015245 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.298201887 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.187735466 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.164894642 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.248896665 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.190156304 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.17177764 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.197285493 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.17174691 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.257421283 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.34213387 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.197868458 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.171876815 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.195253461 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.199241817 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.166071188 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.300974028 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.299134128 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.244488981 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.298056478 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.194854458 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.250836786 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.255428012 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.192240368 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.234127259 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.196527506 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.200468579 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.169484122 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.318486799 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.203352047 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.191637638 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.170002833 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.196046089 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.232762072 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.169012903 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.196481061 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.258014025 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.564684797 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.256019149 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.162524438 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.19373539 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.171307259 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.247263077 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.19719435 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.333765907 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.197133448 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.257332793 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.169276415 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.187276259 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.171256764 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.253682818 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.200335182 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.172237894 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.195812819 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.198220458 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.348887872 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.290502305 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.174166351 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.341508093 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.238911247 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.195991613 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.264731151 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.195743816 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.254668349 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.17697446 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.193941701 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.167492389 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.925775687 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.179091909 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.195591842 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.172230351 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.277676861 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.165032858 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.193479003 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.165490389 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.189236145 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.904676007 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.193468946 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.163459962 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.191282285 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.171486961 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.197916788 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.171678326 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.196505645 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.251081789 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.317349015 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.200420529 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.194401397 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.167512572 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.249118201 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.166260178 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.191187511 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165896236 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.19158847 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.196383842 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.17318997 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.192777727 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.257499365 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.246697712 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.302143729 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.638650906 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.19038671 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.166990509 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.337824524 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.166922763 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.42064141 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.173290402 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.307504327 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.253020653 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.189143676 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.430883774 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.253833186 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.2769466 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.194231403 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.262248991 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.165565747 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.196279219 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.251474507 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.16670416 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.198652497 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.247616543 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.176696073 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.198544033 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.329885944 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.191216914 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.319400882 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.165444711 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.259653689 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.191588051 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.172797672 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.425946344 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.167294598 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.203408269 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.249605973 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.172943431 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.193613937 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.04715446 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.167297531 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.201051056 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.172896637 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.329894605 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.253836679 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.172284828 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.198440318 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.200623208 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.252317561 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.298303157 seconds)
  done (took 63.136201121 seconds)
done (took 113.793704705 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.32059398 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.253385574 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.398301697 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239198714 seconds)
  done (took 2.188009802 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.34349822 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.206368771 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.301696046 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.187753764 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.308980283 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.163837664 seconds)
  done (took 2.440245369 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.236892973 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.233644585 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.231925303 seconds)
  done (took 1.636608817 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.272318848 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.27054006 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.416901898 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.329729639 seconds)
  done (took 2.285702742 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.330923856 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.182884569 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.220080012 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.287797632 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.306589406 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.273718885 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.213747852 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.216140963 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.221518742 seconds)
  done (took 3.218012779 seconds)
done (took 12.696378569 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.205119589 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.218647986 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.186882913 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.207056218 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.193936743 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.222343707 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.193714927 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.218306113 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.193446876 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.206085494 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.216037738 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.179129413 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.282785262 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.191695117 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.20480691 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.216968373 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.17915693 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.226953023 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.193391702 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.200874776 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.194903975 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.202476097 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.177402517 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.20991133 seconds)
  done (took 5.848721614 seconds)
done (took 6.786254104 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.267917171 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.182063446 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.176278631 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.20237343 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.275805813 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.182956296 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.218825662 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.176481869 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.212818194 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.176183717 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.190743111 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.188721695 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.202260916 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.27434634 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.178600505 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.194696406 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.166493798 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.21429429 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.192187428 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.218393554 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.278972906 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.169369163 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.215373477 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.167224617 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.276429775 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.195998946 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.176723451 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.204260542 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.189451256 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.204042846 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.176642086 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.193035162 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.19337459 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.217887135 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.167852839 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.202977069 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.166735728 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.161806121 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.177764155 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.204012396 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.190521085 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.202781373 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.198657804 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.19518767 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.177223305 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.203118707 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.167620477 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.206508384 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.16633002 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.20235157 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.169170046 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.218681161 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.200194941 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.16898343 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.189750316 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.171691735 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.211864651 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.169143297 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.213537071 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.169614935 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.193491016 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.169945983 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.205011336 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.168399627 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.202669906 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.1692255 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.201967024 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.17948707 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.201421773 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.170572669 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.192118914 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.177715825 seconds)
done (took 15.005339786 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.173138078 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.234956415 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.278678245 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.253625897 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.224636387 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.211739286 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.181700411 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.217266036 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.181035731 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.210999947 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.204069176 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.226385911 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.283597726 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.218623332 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.185615014 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.206709457 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.179833344 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.1997951 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.281718296 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.194291607 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.219181364 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.184775382 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.22266798 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.210362993 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.173666917 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.220412246 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.175471895 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.206360111 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.172917939 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.21587843 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.193128121 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.198419436 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.175777241 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.215989757 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.214135261 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.184238792 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.209561216 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.181970068 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.196746178 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.172827634 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.206281469 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.188899929 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.198498008 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.185126126 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.206794384 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.1872537 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.207052796 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.208486987 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.175798612 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.20446818 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.176132523 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.222514609 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.186868316 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.214547883 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.186350723 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.288377872 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.184117478 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.212037019 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.178981838 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.211656944 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.172912491 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.198511906 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.173538758 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.218982596 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.201361919 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.186005217 seconds)
  done (took 14.421126458 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.192909866 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.229399632 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.184146672 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.211993299 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.179700994 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.19282487 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.166966065 seconds)
  done (took 2.328490515 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.170843793 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.28799633 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.286759441 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.287766761 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.282542634 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.294404198 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.193928222 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.195937835 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.205320593 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.20799293 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.288855378 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.317169872 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.180055718 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.214459884 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.290963188 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.169143786 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.289985409 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.270499272 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.212350048 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.288192653 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.187098443 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.231547043 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.182282049 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.197841988 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.283328208 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.170651031 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.337747349 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.217180341 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.179365896 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.212279229 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.210200264 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.248820119 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.282358532 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.212812258 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.179829991 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.284397688 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.283568462 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.211771763 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.297259588 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.176442828 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.284865764 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.209264739 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.187006811 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.211287413 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.186293034 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.274131997 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.214789534 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.187107034 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.209305806 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.294682655 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.181543477 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.286691974 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.208362739 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.185480011 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.206764492 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.187151942 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.218380983 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.18663337 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.292258883 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.21573749 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.287216273 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.288586907 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.258714743 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.286238145 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.223242076 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.289092 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.281724862 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.183585916 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.284872957 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.213003972 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.289477453 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.184709383 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.210133216 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.279542601 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.189191027 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.292152305 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.293172756 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.209622607 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.185445719 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.200123284 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.185893541 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.197149721 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.291958915 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.185875382 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.207817279 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.191369308 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.212055248 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.186446754 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.283056246 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.223487079 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.184884545 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.212153515 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.18968739 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.212562156 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.213201134 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.293700826 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.183340214 seconds)
  done (took 23.510422451 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.173820428 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.195779505 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.178759883 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.196075004 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.174644625 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.197657957 seconds)
  done (took 2.117675998 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.209004861 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.211144937 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.19543386 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.213781375 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.233073983 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.295924852 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.302863933 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.210764092 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.230780883 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.198472026 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.297415265 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.300682929 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.299216541 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.189055396 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.299248599 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.218412551 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.305731826 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.183746411 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.223274551 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.209177228 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.187520354 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.214975592 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.184277624 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.289608057 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.213297515 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.18878944 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.208609349 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.198021131 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.223261981 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.179919527 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.218084786 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.186706214 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.205384498 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.206192002 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.302780542 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.180851559 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.209030911 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.189596526 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.216426335 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.187825211 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.300234757 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.212973382 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.193591378 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.2178937 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.180128912 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.207837743 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.188810463 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.206830282 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.304884022 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.215781769 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.192206495 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.213875382 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.188712755 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.215830798 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.179536797 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.20787832 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.190384545 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.302073259 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.220729815 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.179046721 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.21601008 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.187061846 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.209004441 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.215144817 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.188237834 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.215932767 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.18046855 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.215377318 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.185523802 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.215353293 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.190813022 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.214882074 seconds)
  done (took 16.767622545 seconds)
done (took 60.101859672 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.693815883 seconds)
  done (took 2.696319763 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.179278524 seconds)
  done (took 2.184078157 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.753111832 seconds)
  done (took 18.789943051 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.490192084 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.412413687 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.092977326 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.245227693 seconds)
  done (took 3.245401388 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.150029693 seconds)
  done (took 2.170363773 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.474120836 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.34696598 seconds)
  done (took 1.833982729 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.868215994 seconds)
  done (took 1.891438848 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.790779889 seconds)
  done (took 2.807542915 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.362496795 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.287757752 seconds)
  done (took 1.673577624 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.679074623 seconds)
  done (took 1.706034546 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 13.330068509 seconds)
  done (took 14.357174261 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.32161911 seconds)
  done (took 1.352830971 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.359253855 seconds)
  done (took 1.393978801 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.635813534 seconds)
  done (took 4.667444861 seconds)
done (took 61.784091191 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.188957548 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.216736919 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.193598082 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.214546486 seconds)
  done (took 1.830506239 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.192981105 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.211197946 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.193740489 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.212124042 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.194204794 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.21406507 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.186995008 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.217153523 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.187015542 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.215682525 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.187268926 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.212285934 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.190025771 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.213081565 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.185218455 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.215995554 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.189824348 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.216174277 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.187317186 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.215777091 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.186891922 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.21617316 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.189055257 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.218272729 seconds)
  done (took 5.878009836 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.18371177 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.204204668 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.182586697 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.202312459 seconds)
  done (took 1.808641379 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.197952896 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.225448082 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.201250522 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.222334907 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.200944687 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.227519086 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.185767827 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.212537852 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.186418189 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.225257975 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.20262004 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.230299747 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.226053118 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.193395962 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.225998921 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.183147731 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.218963319 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.200528573 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.223312964 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.198050255 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.218832506 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.195840337 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.21604996 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.197998922 seconds)
  done (took 6.048955038 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.264539995 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.227585575 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.212875255 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.245696188 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.21315902 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.217484849 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.261600445 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.193777854 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.221082932 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.192559543 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.216219325 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.187472094 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.263633315 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.219484126 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.190824755 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.216864798 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.196468559 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.220419999 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.229633671 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.220404215 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.220292538 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.199869132 seconds)
  done (took 5.875751099 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.275461356 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.209979845 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.204909507 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.178399083 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.219502424 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.182489547 seconds)
  done (took 2.317315561 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.178960467 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.172650237 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.202597551 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.172017265 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.206701844 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.172126497 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.200423881 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.173382523 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.201254573 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.173237114 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.201662027 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.1726003 seconds)
  done (took 3.274753305 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268213227 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.220333885 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.352161543 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.466436758 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26125522 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.257099384 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.379190539 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.229529817 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.274223699 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.236079811 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280354646 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230511575 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.251322462 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287329764 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212600848 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.245157573 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272375279 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.311460557 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211219038 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.312584722 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253252665 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.278417179 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.290923937 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216606805 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.23964472 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261345106 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.189046108 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.227795099 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264173538 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233662535 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.273915769 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251815052 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.238600942 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283687541 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.33130924 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247917281 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.3902696 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204462453 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.257098337 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.292903238 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.330979798 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.238455602 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.287108368 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222089974 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.227282394 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.292394166 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24579236 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.256622368 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.234089615 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213429655 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281062068 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277638588 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.266538224 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236341576 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.393947443 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205095704 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.239753463 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276365102 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284162951 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302092745 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25226951 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.221957345 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.267702897 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.293163467 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316741675 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.209969228 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.263294446 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224056006 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23220348 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.304611291 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27993057 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258792058 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.288584044 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228901524 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243220873 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.264670948 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25528365 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.309208036 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272198232 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.192078336 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250041642 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203976287 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226266832 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.286428882 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193430813 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.31754932 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230542096 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.242437812 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275937743 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.250411662 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.258796667 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229925328 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.259980966 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.246357375 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.159736374 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241943686 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.228136413 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256772247 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227001213 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.221077904 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239898873 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.194316121 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251434348 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.220548716 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240761413 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.221890438 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25761139 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242489705 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.231852458 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279861077 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216181261 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.263831386 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268547837 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.296261208 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200950764 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.235107831 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.322607784 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271803489 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.205818561 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.269806446 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.297902058 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.238035019 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205095284 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265622395 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.291640648 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.240747584 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271023082 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239018034 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.235362891 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.195803461 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275918607 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.258538883 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.257037016 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198195944 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.265102916 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288661847 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.195889785 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.23884846 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282794342 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203172205 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22435318 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205714986 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235151691 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.240971495 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.222013847 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.23955644 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253863078 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239279171 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.267641576 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256814641 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204344002 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274067464 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232120998 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.270203285 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218560405 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.220128062 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.273739768 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.299499608 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200943919 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281070868 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.258794222 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277375915 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245216379 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229059017 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.284283567 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198965036 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.222066577 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261760871 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.242357844 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.264759297 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.291975607 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276129597 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.266967748 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.263916871 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218898856 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268613139 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.287613529 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257596165 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.210784765 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275056416 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269689881 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.19059791 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.224347314 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.197699931 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237671774 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228191658 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208477279 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2805817 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264759925 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.274132416 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.267647513 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210274644 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.294468591 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.224948299 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229649036 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.280058589 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242976498 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.291118445 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262426668 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282558906 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.241094136 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265660668 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.191255956 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.225683168 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.205469355 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.25890073 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.23873867 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.207179209 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242627083 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.296045957 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268288586 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22001918 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288253136 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264156427 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.306071952 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.221869974 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.233923113 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26772804 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270647754 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.258941169 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234229995 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.259537544 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.265187284 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243520492 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.294294268 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271254396 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279524233 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264219563 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.271080841 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.231955404 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.214855395 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260980884 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237816904 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.23176362 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.244503159 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231099569 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221083072 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.240293336 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.211155552 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285934964 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246514379 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277541159 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.256071809 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26773698 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199291195 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242656486 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.247188836 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247172213 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.162782502 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266391557 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.292309518 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25041292 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222468025 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270320828 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.231948071 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.417663727 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253923212 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.273169723 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239807939 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209756003 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.277553522 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.259612553 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260143766 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.254955675 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243165629 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312772805 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.273115387 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.21059794 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233749837 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.249094944 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.22191607 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.227162616 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.25229137 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.237591526 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.245964588 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292076458 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2077818 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273442803 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284511529 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.24728829 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.222807035 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241511229 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.33477225 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271157457 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243504149 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.268205755 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.264108096 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283903002 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196787106 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228530108 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.205703952 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.288252717 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231437392 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251381269 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.266699557 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280403395 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279219934 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264791004 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211303547 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.229889919 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.270941437 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219930063 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.284052742 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237391082 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.236663755 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258816851 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.216884633 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201530725 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.263379512 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.395736287 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.250862348 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270863146 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.165312782 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.388162489 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201594491 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.235522897 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.258806165 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24226782 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.236024707 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.283455668 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250370735 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245789984 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.259588387 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208228644 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.276589502 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282694399 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272595629 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277247267 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.21783664 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.26295348 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.260826324 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273557483 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219450881 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.250226862 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260908737 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269163627 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.278299496 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.234806884 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24256667 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275836683 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.276943667 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276567013 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21116554 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285907517 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229882864 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237652358 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242728282 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226685182 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232708503 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.267076142 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233935196 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275207692 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246285858 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235035125 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227603524 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221056043 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273321419 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242530352 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.203833323 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289526692 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.232834427 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.256653936 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315782824 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234251716 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.270389901 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.217201224 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.234272459 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212687241 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24857777 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234366745 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.248892265 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281609484 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.203514008 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276605007 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268620053 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268664681 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256386025 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216449103 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.371504086 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.200105963 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.298061786 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.254419923 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.300293354 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.220854691 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28428203 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.275797572 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251181452 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238062047 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251422266 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.326518198 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238290847 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.272306415 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.235951443 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22335899 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242611298 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.235632199 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.223836565 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276007934 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245446086 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.209912029 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.274853387 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24688768 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.219411701 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.246552023 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.307873229 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.223881962 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291476311 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.289965714 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.24184039 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24864817 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277522512 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235144078 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.266847342 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244566435 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.248528391 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258017308 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.208344092 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.241346613 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.323933371 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.199344135 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.264331937 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281718297 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.274312327 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247439008 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.238651088 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283576494 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216527255 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282156201 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230457589 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.224251073 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.277826601 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.236043355 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.201309189 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279254855 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264263214 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.239149545 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.246965693 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.252031072 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300593253 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.231268166 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207319939 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.39516289 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265416852 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.301864085 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.192612273 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.245463337 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249684544 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232873328 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.272513075 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279376868 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.203764109 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235152948 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.247701541 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.221457561 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.227791816 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.245609305 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.290737321 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263880414 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.289560495 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.208663965 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.36214717 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.24462587 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.248155579 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.207769857 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.204198313 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248295471 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207986854 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246420861 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.282199084 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.324941531 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.271369844 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.220425167 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.240809324 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.201050915 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236571634 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.26592362 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225492292 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275584626 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25402092 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.164261741 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247114734 seconds)
  done (took 122.876080404 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253133237 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.348547396 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.27633549 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.319794997 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.324157074 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.38817548 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.34803078 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.342926848 seconds)
  done (took 3.766688348 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.196454731 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.263986084 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.246884538 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.22106177 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.186230666 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.534213114 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.242685051 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.194399511 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.266458815 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.228995321 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.215784982 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.645234286 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.224704412 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.193001079 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.253295199 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.185274189 seconds)
  done (took 5.458910801 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.177632226 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.634578741 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.106482605 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.370638613 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.339589133 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.29164854 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.88808514 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.300256269 seconds)
  done (took 13.279186131 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.246905001 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.277632372 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.452629556 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.377859293 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.292064585 seconds)
  done (took 2.818715494 seconds)
done (took 176.251803394 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.199905937 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.229747931 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.201610275 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.232822414 seconds)
  done (took 2.024198818 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.236285704 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.15275504 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.186689942 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.152400107 seconds)
  done (took 1.898089206 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.467768632 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.152652722 seconds)
  done (took 1.819197678 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.221802507 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.240481907 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.212761134 seconds)
  done (took 1.862113262 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.212536454 seconds)
  done (took 1.395853481 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.198102496 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.225335009 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.285752818 seconds)
  done (took 1.893862062 seconds)
done (took 12.070242173 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.219252043 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.052203217 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.655044611 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.209432917 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.828280957 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.507331344 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.505395972 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.257170762 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.308751344 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.186447453 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.250599954 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.768327453 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.51839134 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.957313008 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.503521712 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.959324297 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.804246825 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.187692932 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.225003892 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.218309605 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.487920705 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.215507712 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.190165873 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.216279948 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.768655637 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.525748211 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.1873549 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.002923975 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.186933059 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.227108909 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.47795631 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.21887965 seconds)
  done (took 23.993268908 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.190478552 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.275154892 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.241561933 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.220807409 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.195800388 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.220607453 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.196936077 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.232038446 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.318761834 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.188557008 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.242109279 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.185313929 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.225051175 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.188220094 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.244082086 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.217610633 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.193451067 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.217938957 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.196049861 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.221143904 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.209575952 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.216922417 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.189695002 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.220202304 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.187053885 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.236668294 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.187784494 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.232158154 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.186901491 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.230149938 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.192835625 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.220739243 seconds)
  done (took 8.109850212 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.232013303 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.288148374 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.242580847 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.259281575 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.2754858 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.189320793 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.309857839 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.259236877 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.294065677 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.224783891 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.239872263 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.188777357 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.259114095 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.189809053 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.244801242 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.187894354 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.223282723 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.188812418 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.228177899 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.189324843 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.763339248 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.191421758 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.220742805 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.219187091 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.19047457 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.238136288 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.189472348 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.231440395 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.188048704 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.230097208 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.194418089 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.221341834 seconds)
  done (took 8.984411356 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.204263056 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.233259132 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.214847573 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.241850448 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.198422858 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.233403982 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.204779812 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.229161613 seconds)
  done (took 2.960091783 seconds)
done (took 45.231895621 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.211208003 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.235604053 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.210287845 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.235676757 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.275351914 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.229880839 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.20566952 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.228662737 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.203873272 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.243598645 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.18918132 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.229280693 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.208257349 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.232166185 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.312249902 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.204853006 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.313912544 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.312010207 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.2305759 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.204180364 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.231356236 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.314904779 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.204383183 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.229540572 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.257504603 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.225603339 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.301152123 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.201784878 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.231541595 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.190961644 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.314352265 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.199020629 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.23196637 seconds)
  done (took 9.038021386 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.296063208 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.232797761 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.197336058 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.229999849 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.198985988 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.231039367 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.331874047 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.197416795 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.230340115 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.197215442 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.229614325 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.313697503 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.204336808 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.225231086 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.201097918 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.173721113 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.335325462 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.232353849 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.190755333 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.157082615 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.229372883 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.198129385 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.343025464 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.228370521 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.197669131 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.233196973 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.199070916 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.23814425 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.200088433 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.23171522 seconds)
  done (took 8.117889014 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.205368853 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.24316933 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.218929656 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.299436821 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.228737537 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.244129159 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.214391788 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.243527965 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.219283472 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.225842407 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.240330771 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.229675296 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.242086372 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.204084402 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.223045263 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.207889355 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.23999714 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.194415645 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.23160536 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.210822689 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.243907692 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.209237222 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.247107611 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.199688801 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.226460082 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.200749132 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.235430217 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.201951798 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.232653747 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.206653374 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.226783378 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.194520756 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.228909975 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.258443619 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.195376661 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.237412942 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.213595737 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.237684695 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.206567748 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.258931879 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.19408313 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.227830439 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.219088684 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.284223923 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.192239949 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.234819596 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.193252508 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.239978561 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.19013633 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.243392543 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.266921373 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.193940305 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.245014118 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.193435981 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.221289802 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.202461081 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.223797105 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.197894369 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.23996613 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.194845657 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.24572182 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.201090586 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.236484751 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.195228248 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.236502281 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.192428171 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.223827834 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.197026312 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.253083859 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.200496376 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.266181056 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.191466177 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.238158638 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.206988612 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.238220587 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.204885971 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.226524267 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.205007703 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.239258638 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.197538248 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.241421133 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.194981988 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.22862188 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.208401711 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.2491277 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.240330562 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.205738243 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.23663952 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.195560204 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.226715562 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.212215464 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.22680894 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.198119886 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.23960086 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.195003428 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.229619563 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.204636567 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.234994059 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.191716628 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.254036913 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.197736808 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.225771169 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.221812355 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.229504254 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.197724166 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.23626545 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.234789983 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.229898438 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.202074021 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.23795044 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.194461879 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.234331265 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.194269886 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.225793936 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.2087542 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.242713057 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.200141792 seconds)
  done (took 27.174228511 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.408604963 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.402052803 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.292615144 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.450483682 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.241000828 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.325466806 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.402055526 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.403569267 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.193707664 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.262245639 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.283123852 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.36624392 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.227229594 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.223546863 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.405493115 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.483725968 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.258960235 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.234084446 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.264559969 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.239432543 seconds)
  done (took 7.609563619 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.20504898 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.256500704 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.214328582 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.244583477 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.207404587 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.2416338 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.196677245 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.25133224 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.208333127 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.234269875 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.197781156 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.235347596 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.207005933 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.241942429 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.207082619 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.251765675 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.200229443 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.229239137 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.217292436 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.229543436 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.243361743 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.220726393 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.235904021 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.215060029 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.244545414 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.205359564 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.226002762 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.196544058 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.234737602 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.204188606 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.228670489 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.202564656 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.234836358 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.167915417 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.237795742 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.211454473 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.198642928 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.230253093 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.230591335 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.198896871 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.237565196 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.207074587 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.234685989 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.204198453 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.216313122 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.20848098 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.206428695 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.241495026 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.173766789 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.214034689 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.240761552 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.20603032 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.23496242 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.2117374 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.234592612 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.210295946 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.235227468 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.204624485 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.230248973 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.191829003 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.226420273 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.197586718 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.236842688 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.205331209 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.23843046 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.204271926 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.23676684 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.195035486 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.229360452 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.197776128 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.231994935 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.207720828 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.248703693 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.235990833 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.205232174 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.237181837 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.205803476 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.162045467 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.23600103 seconds)
  done (took 18.571385999 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.22131732 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.237456523 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.214668081 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.260028947 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.208941235 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.234156173 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.206300187 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.248340379 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.207509488 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.245754086 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.208613679 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.24027839 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.216443516 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.240600917 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.204998136 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.244850689 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.206855844 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.267135367 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.206744656 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.253052291 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.240407387 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.201253385 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.2401686 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.208414701 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.253487891 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.207815673 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.252258406 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.208349749 seconds)
  done (took 7.644799943 seconds)
done (took 79.353356808 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.431336275 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.664951597 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.353836615 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.351441688 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.371746994 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.379308989 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.353390051 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.352477295 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.930763472 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.3281631 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.353854565 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.353105726 seconds)
done (took 30.52107597 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.680812832 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.099097518 seconds)
    (2/2) benchmarking "String"...
    done (took 2.141605158 seconds)
  done (took 5.503084505 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.098129308 seconds)
    (2/2) benchmarking "String"...
    done (took 2.112338029 seconds)
  done (took 5.456113029 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.353578203 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.343406728 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.839862946 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.347145751 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.342542581 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.343114791 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.34336608 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.362777488 seconds)
  done (took 17.168107272 seconds)
done (took 34.407686691 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.375319655 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.676081574 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.638010183 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.336407724 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.343093071 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.3435161 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.344511826 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.411885478 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.348370977 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.327559042 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.881169805 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.640200056 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.344898049 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.779020712 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.33780853 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.356905861 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.359639518 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.911647284 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.344006734 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.395588155 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.329086611 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.349084684 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.357628578 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.359959741 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.357258559 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.345873033 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.401623768 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.352591206 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.670786837 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.381673746 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.33343444 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.363169017 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.393528325 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.349888069 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.362454402 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.356771766 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.689523228 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.365085043 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.349365726 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.357384064 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.682423791 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.358588408 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.357767493 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.357904661 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.333530612 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.394848744 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.33901413 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.534496252 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.383323885 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.356032216 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.409285426 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.786219393 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.357071245 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.350115333 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.346528773 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.708489816 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.348212926 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.477570926 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.382022882 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.352843682 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.355220242 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.355925778 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.377236589 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.355337854 seconds)
  done (took 154.629552268 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.347991669 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.348033643 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.34736177 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.352231314 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.35262899 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.354289118 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.34841351 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.349932348 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.355443734 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.348560666 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.352727746 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.354074775 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.354527066 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.36513079 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.358727181 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.368016911 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.348644196 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.356306552 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.35966501 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.347974627 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.358607055 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.356075168 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.348206361 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.348597751 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.372668759 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.433821228 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.351179294 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.379797389 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.365856021 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.350609669 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.375747362 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.363038275 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.126944565 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.314268386 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.359661239 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.359735271 seconds)
  done (took 85.885170805 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.351422831 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.349512253 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.351221758 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.386924133 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.351540305 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.988968499 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.990758741 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.425552928 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.905060554 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.758040669 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.981667501 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.726470594 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.356862839 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.446410609 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.364396757 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.353456888 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.447498736 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.376445706 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.35790089 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.352287815 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.991379491 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.371420975 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.522570922 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.53712829 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.351098907 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.389313125 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.752032852 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.351161346 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.387742604 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.693151692 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.387156984 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.352568577 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.810138706 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.656110459 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.351990291 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.467406504 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.354230939 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.388836038 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.351989663 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.640712272 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.352416882 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.352309536 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.356977239 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.353361625 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.1045443 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.358558096 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.994547282 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.358687093 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.45664969 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.35605254 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.352903187 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.720626834 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.3010695 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.359756432 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.353568216 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.358124312 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.354378794 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.353338298 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.390033328 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.354307206 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.025662971 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.362427443 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.360553671 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.358637157 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.390341817 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.356193759 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.35513713 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.408515777 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.416284013 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.624059177 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.999559162 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.362025157 seconds)
    (73/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.430182149 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.454543975 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.477852595 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.355149562 seconds)
    (77/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.355592635 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.354773397 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.357542394 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.355083143 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.47005726 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.356245511 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.815484776 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.542042951 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.357962838 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.015616441 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.463701146 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.356617346 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.774177987 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.361996802 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.357596172 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.223871835 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.459703081 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.356679365 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.358176623 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.357453695 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.815682986 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.998922628 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.730934639 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.361870389 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.809213588 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.361008198 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.829598932 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.003042286 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.09175706 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.364328313 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.47243347 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.544514146 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.359169347 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.358002579 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.016297394 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.36188296 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.416342679 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.358228585 seconds)
  done (took 389.972907459 seconds)
done (took 631.733256249 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.342514715 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.342039934 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.363221678 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.362062313 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.342674861 seconds)
  done (took 13.010641228 seconds)
done (took 14.267698568 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.359777246 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.361058623 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.361173792 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.170498218 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.36923201 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.368326866 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.36311056 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.370562975 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.362134459 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.361817869 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.168196319 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.365259018 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.361572376 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.336407444 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.181754537 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.364622624 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.275370841 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.364253513 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.363602452 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.778040769 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.798039052 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.492781589 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.733246456 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.435579902 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.760984969 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.778571423 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.652559379 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.617178553 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.419176768 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.412571948 seconds)
  done (took 19.141726473 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.26855978 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.748607207 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.796929624 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.49378856 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.737160361 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.435563489 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.81952754 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.830226177 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.661187362 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.620915412 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.41896019 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.41210052 seconds)
  done (took 19.235454873 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.164381728 seconds)
done (took 88.297988734 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.423534445 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.504131985 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.418267854 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.40201425 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.400369698 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.401408727 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.405409445 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.401316606 seconds)
  done (took 12.617590897 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.401467673 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.401447978 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.400992892 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.399963362 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.405006391 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.40108152 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.399868447 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.400728962 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.400143412 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.400982276 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.402002657 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.401070206 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.401828473 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.400699419 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.401745361 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.402760365 seconds)
  done (took 23.683519043 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.403168657 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.401508809 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.402288657 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.400850066 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.401326105 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.402531006 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.404010873 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.401017616 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.402010549 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.402196676 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.402391184 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.402414511 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.403355343 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.402392022 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.406297267 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.404732474 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.402014321 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.40285514 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.405279052 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.403218105 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.402699673 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.40191773 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.402739273 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.402823502 seconds)
  done (took 34.928822933 seconds)
done (took 72.494699502 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.376836887 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.384575301 seconds)
  done (took 6.024825503 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.499123387 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.500210257 seconds)
  done (took 4.263507252 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.404709565 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.405128683 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.403960239 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.404659279 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.404432156 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.403022549 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.404000956 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.402680676 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.403727597 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.403842207 seconds)
  done (took 15.304991369 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.404238486 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.404339267 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.403119977 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.403883902 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.404197 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.403561165 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.404073731 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.408270632 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.404977546 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.404642728 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.404526442 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.40469832 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.40459761 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.403907578 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.404498016 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.404884099 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.405054093 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.405233934 seconds)
  done (took 26.54750894 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.425461645 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.431410587 seconds)
  done (took 4.122257028 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.586071525 seconds)
    (2/7) benchmarking "second"...
    done (took 1.48644021 seconds)
    (3/7) benchmarking "month"...
    done (took 1.572436062 seconds)
    (4/7) benchmarking "year"...
    done (took 1.553732147 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.488150833 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.434780358 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.488783455 seconds)
  done (took 11.876340979 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.405054651 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.746847487 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.948592205 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.622929703 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.398156568 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.418347683 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.362429817 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.419442305 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.424135918 seconds)
  done (took 16.011734873 seconds)
done (took 85.416249304 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.370098669 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.385740952 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.399238269 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.392019264 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.806819917 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.431813501 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.378635509 seconds)
done (took 17.432291984 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.353819365 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.359144762 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.365849107 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.38568459 seconds)
  done (took 10.731393147 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.379782024 seconds)
    (2/2) benchmarking "read"...
    done (took 1.786235806 seconds)
  done (took 5.435368841 seconds)
done (took 17.433442479 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.408232709 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.408525763 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.408292284 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.409265802 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.407371356 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.408242836 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.409298277 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.408760011 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.409084773 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.409122278 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.406853344 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.408444258 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.408890405 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.408451452 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.409412677 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.411318786 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.409291852 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.408657763 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.407992595 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.407373033 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.407798575 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.408752957 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.408721458 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.409193097 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.409132335 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.40889222 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.409733528 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.408929585 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.409328937 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.408678157 seconds)
  done (took 43.531002931 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.415156424 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.413561529 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.409727313 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.415539224 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.410091465 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.41011123 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.410865167 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.41139603 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.408954029 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.411185389 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.410187147 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.410770322 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.411628951 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.417831974 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.411117852 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.415627085 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.410793928 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.411052061 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.411053808 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.410732817 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.410924881 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.411766748 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.410512398 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.412229725 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.410981382 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.411646481 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.411592285 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.411496532 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.411063237 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.410739173 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.411375078 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.411355033 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.412429821 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.412290068 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.415037415 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.412322615 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.415753707 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.415753497 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.412597929 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.411085097 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.413060767 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.412434221 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.41195057 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.413833281 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.412163796 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.413504259 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.414368266 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.413287542 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.413244031 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.412854805 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.412462018 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.413825459 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.413809046 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.414310087 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.4133717 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.412589688 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.414508368 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.414046996 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.414341307 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.414561377 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.414191707 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.414208189 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.412801167 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.413444126 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.414984406 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.413983441 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.413571796 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.4146521 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.41372391 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.413767841 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.414184304 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.415256298 seconds)
  done (took 102.990284591 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.414638411 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.417091168 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.414929091 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.414584494 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.415835352 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.415633301 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.420000965 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.414061802 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.417810533 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.416441224 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.416535302 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.414954933 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.416055002 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.418332736 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.414712024 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.414905694 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.416631961 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.416819555 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.416923758 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.416301333 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.416700755 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.416006812 seconds)
  done (took 32.430857234 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.416660666 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.417447218 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.417407898 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.417686006 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.418561048 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.417936806 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.416985219 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.417958736 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.417030056 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.416715003 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.419163149 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.416475517 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.41892939 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.416096209 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.41914953 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.419217975 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.420500819 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.419142127 seconds)
  done (took 26.799978196 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.418994483 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.417835537 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.41899574 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.4178868 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.418828959 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.418604139 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.41882421 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.41942673 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.417620704 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.418623765 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.418697517 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.418274349 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.418613358 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.419618514 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.418778673 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.419164266 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.419647987 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.417888615 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.419269937 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.418882457 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.418145352 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.418526476 seconds)
  done (took 32.489061564 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.420441664 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.42211967 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.42020979 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.421146293 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.420134292 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.421146013 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.419758476 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.4213012 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.421745042 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.41875772 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.419125714 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.420631702 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.421392623 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.420128216 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.419882025 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.420014584 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.420727594 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.418906482 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.419874343 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.420649232 seconds)
  done (took 29.687531355 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.424587512 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.421943112 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.421699366 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.421795886 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.422393937 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.421150413 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.422131124 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.42169762 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.423169176 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.42252482 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.421785061 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.423158909 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.423795163 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.422153823 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.423934985 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.422996947 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.423539404 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.42211129 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.423150598 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.423381423 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.423473055 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.422921449 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.424251226 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.422501842 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.423700039 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.423770439 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.423796769 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.423214084 seconds)
  done (took 41.122619714 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.448305193 seconds)
    (2/2) benchmarking "in"...
    done (took 1.449056686 seconds)
  done (took 4.17915288 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.423574674 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.424448598 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.422992197 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.424212394 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.42415254 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.423310884 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.424506566 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.423137258 seconds)
  done (took 12.671487205 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.418796482 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.425979169 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.424374078 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.424749823 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.424736134 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.415988653 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.432749653 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.43015917 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.419897321 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.418490717 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.422456375 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.420385093 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.421250914 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.418366959 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.418764495 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.43200284 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.428815145 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.427964827 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.427718218 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.431546288 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.426382224 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.422855798 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.426466871 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.43014143 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.419151765 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.440060778 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.435249203 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.431520726 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.418937981 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.433957698 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.422021334 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.430674599 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.429608612 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.427690071 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.427262294 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.42676202 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.437756365 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.425334185 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.435491902 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.432147412 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.429315627 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.42686322 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.426079532 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.424993639 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.427405399 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.432428454 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.42993917 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.428986815 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.419922533 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.426376287 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.432163056 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.41861287 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.431081006 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.435193679 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.426980344 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.440927369 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.43588825 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.424296553 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.425192407 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.440562868 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.448368958 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.434107228 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.440597858 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.435700797 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.436692753 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.434430454 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.441973382 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.438017363 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.430657907 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.430380498 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.438555629 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.452958438 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.442463807 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.435576688 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.429071393 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.430307653 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.425201557 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.433372149 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.440287484 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.437475604 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.435529406 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.431506549 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.436134581 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.430375608 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.427712281 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.435647438 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.436018575 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.432088954 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.425402351 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.444690767 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.438526506 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.431575622 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.424622223 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.428000236 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.428844339 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.434395953 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.424209531 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.433419152 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.437293877 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.434097241 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.432515825 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.427962383 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.438524969 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.437949686 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.433001082 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.445363967 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.439605134 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.425501386 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.447513752 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.440430589 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.434418651 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.427287646 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.439420754 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.43677733 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.429095557 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.437241007 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.439379408 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.436228517 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.440078378 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.435053997 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.439478443 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.450206761 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.441010201 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.434794466 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.431766358 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.438632594 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.434173927 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.439108213 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.440754932 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.43447166 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.434801102 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.43651361 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.44102375 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.433143349 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.438093769 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.436379235 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.438890029 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.436118658 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.434531375 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.438563451 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.435134803 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.434192504 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.44097968 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.443982855 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.440869611 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.438042366 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.451854248 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.436647007 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.441984766 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.437312733 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.442781586 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.437488105 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.436128505 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.441555801 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.427971113 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.439049477 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.430672015 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.442722151 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.437326911 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.437794569 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.437152309 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.427687907 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.434937501 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.441289706 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.444275281 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.438297845 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.449146781 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.436652315 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.437811401 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.431036936 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.43970822 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.429135018 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.435538485 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.443367623 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.438444721 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.438271585 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.440653871 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.441616842 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.436278664 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.435018936 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.434640676 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.43816801 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.440493655 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.445014481 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.44333424 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.43596382 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.436804359 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.431081914 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.432464142 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.440106175 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.432274872 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.443442075 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.454754407 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.449835974 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.434165197 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.441286912 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.429296491 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.440626424 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.444540259 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.443724373 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.438497661 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.438161655 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.431729412 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.440619579 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.435894606 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.441187249 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.429186841 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.441317992 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.440598347 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.437668575 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.438087483 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.436256664 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.442020036 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.442534417 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.438749579 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.438252448 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.432076243 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.44365069 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.430322879 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.435484149 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.442742404 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.438781496 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.448835568 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.447446354 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.442336557 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.447689263 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.441595052 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.435619152 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.441547071 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.442677871 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.439053738 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.453396693 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.442841928 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.441548468 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.454368464 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.441041979 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.435086753 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.447237599 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.448126749 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.441911083 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.43483253 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.446691091 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.441793611 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.439441635 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.439911737 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.433717863 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.445156119 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.451784127 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.448712787 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.434180003 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.444247903 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.439078531 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.444892538 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.447740107 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.449393949 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.445681466 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.451917315 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.450348261 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.441398728 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.442420715 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.446311923 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.441319738 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.440648075 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.437097972 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.445708844 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.450778762 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.441813795 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.451462158 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.442165656 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.448453257 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.439091591 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.445360266 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.442796252 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.466286879 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.459480357 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.456224426 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.453075771 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.446060774 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.452866597 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.444594874 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.440954049 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.440404258 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.44851374 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.440726855 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.439729871 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.447996984 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.442960588 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.447974075 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.447841727 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.445136703 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.448241009 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.444638945 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.43744641 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.448588818 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.444500868 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.446517815 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.438568061 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.447994888 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.448965403 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.45312941 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.449471542 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.440413058 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.461150821 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.450116108 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.449605079 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.449460159 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.441929941 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.437954435 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.447108533 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.451452031 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.44104135 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.449930749 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.441649598 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.453506483 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.443977617 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.460036433 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.454958274 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.442990271 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.45261873 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.445436462 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.436915895 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.441863591 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.447102665 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.457600858 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.457658617 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.438746435 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.44846911 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.44660819 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.447960316 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.449628266 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.447821682 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.448524005 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.448269644 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.460634833 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.448570032 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.446914024 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.457098071 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.455704877 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.448320558 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.448185625 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.438119401 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.45976524 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.456879188 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.449980965 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.453215175 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.444006532 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.450935066 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.451000368 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.447728723 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.448864691 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.449487886 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.459931113 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.45281694 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.453755468 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.449284648 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.460557868 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.458526255 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.462428498 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.460066255 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.452285098 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.454547468 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.450633632 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.445312354 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.444511624 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.453191569 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.453517518 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.442955211 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.456122877 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.449196088 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.454809441 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.458299969 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.45768411 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.443739319 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.45762195 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.461798529 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.442662785 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.452859264 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.449771791 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.443478252 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.459039728 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.452473041 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.442997605 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.446791034 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.450316483 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.46279712 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.446246971 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.455937518 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.447532888 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.458287608 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.45331379 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.454358896 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.454096083 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.454752172 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.446342024 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.457121608 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.463490155 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.463973735 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.454828858 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.459568147 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.449633295 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.468006092 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.461941006 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.45330541 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.458380567 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.454208598 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.448593498 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.456212623 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.458137379 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.45334934 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.45719941 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.444161999 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.450217587 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.449271936 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.460638884 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.459908624 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.458017881 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.447041345 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.447842425 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.456460071 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.454334871 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.452920585 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.459231373 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.462313609 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.446367098 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.447938387 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.456162687 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.452940349 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.461104726 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.448879638 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.455546616 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.453969252 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.458345297 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.455418108 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.455769131 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.449390457 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.451193689 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.469467102 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.45716009 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.454447454 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.450993244 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.459227811 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.452786559 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.455345544 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.460552701 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.452807721 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.456420122 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.460915456 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.459099093 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.451247676 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.453950324 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.459341373 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.467142365 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.459249113 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.452309404 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.471277946 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.470593572 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.464969114 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.447082622 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.456792515 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.453579886 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.459226834 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.457502522 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.448949129 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.472923128 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.468005604 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.462353907 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.464895711 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.455284083 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.450087403 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.460098243 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.458073544 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.462519431 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.466706206 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.462089209 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.465865387 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.459592802 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.459475678 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.449792952 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.453704134 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.456433112 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.455162419 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.463423805 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.464395298 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.460142872 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.465902542 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.465302396 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.459513392 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.459625487 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.458551956 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.450402737 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.461063379 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.452030596 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.468931839 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.46271345 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.451439949 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.462628942 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.459564376 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.456044585 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.456593747 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.466396041 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.460102224 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.453079822 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.466076797 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.473051008 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.468366263 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.463353335 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.455740287 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.468602816 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.465055018 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.462241952 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.46013903 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.45752962 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.479805079 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.472091667 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.456386737 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.462194459 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.474039541 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.470754975 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.46215912 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.461227996 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.467249013 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.462318567 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.46710074 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.463385044 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.472446811 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.464255825 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.456729309 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.466628542 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.457221621 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.461136853 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.473042626 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.471209852 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.462549393 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.46134505 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.481446209 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.472528455 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.469273502 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.485671956 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.469874975 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.467924867 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.468924365 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.454917416 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.466882067 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.466326898 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.470300448 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.464381749 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.462896364 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.464016269 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.454992985 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.473521039 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.477224932 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.474777903 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.464929234 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.455925086 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.461389679 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.468338397 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.464497895 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.467674556 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.465254206 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.464703926 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.466692866 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.464023463 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.488783804 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.484886451 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.471327743 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.462612878 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.46645408 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.474084169 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.470084429 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.465933971 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.473097592 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.466912378 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.465471063 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.475311839 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.476176195 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.46653754 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.462294193 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.462156536 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.464132415 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.471303998 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.484290356 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.485518934 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.47597652 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.468671261 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.470037985 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.467613584 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.469686823 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.47692238 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.464722225 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.472122607 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.465136244 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.469713362 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.46967914 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.468265343 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.461417615 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.474190258 seconds)
  done (took 864.263369896 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.469329585 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.467428854 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.468825889 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.467343438 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.467867946 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.468541775 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.468365007 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.467428365 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.467920117 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.468625374 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.468880715 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.468393293 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.469962836 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.468851521 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.46936688 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.46891787 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.469450969 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.468072511 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.46946361 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.468530181 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.469006847 seconds)
  done (took 32.159959239 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.469101133 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.469593515 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.471258322 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.469202194 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.470472328 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.469697648 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.470044759 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.471413509 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.469810162 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.470209934 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.473163592 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.46987714 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.470218594 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.468444765 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.46946368 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.470468976 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.4705018 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.471116613 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.47205535 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.470561585 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.471019744 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.471168995 seconds)
  done (took 33.669928698 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.470070321 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.472987731 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.464344943 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.475766227 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.473883026 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.471959039 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.470882646 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.471760131 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.472444855 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.464745691 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.464047837 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.465753711 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.469716505 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.477869777 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.474924989 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.47929391 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.472001153 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.471920416 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.471339896 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.472761934 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.483253701 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.484045283 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.473038227 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.463913114 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.473996588 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.472702011 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.471765299 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.473070493 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.465380968 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.476905897 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.472538442 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.466952257 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.482608857 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.471825363 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.466435432 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.479086901 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.472509179 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.473998125 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.474161624 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.478437935 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.4843632 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.473055547 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.489701938 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.484663308 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.475964367 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.470974277 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.47930264 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.474686271 seconds)
  done (took 72.06135089 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.473878906 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.474690392 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.485232165 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.474587725 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.475902069 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.474545471 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.473972703 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.474225249 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.474679497 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.474373452 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.475556214 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.47730078 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.475769719 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.476881872 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.475198906 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.476911764 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.477104735 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.477605008 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.4754261 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.475550766 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.475221186 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.477331091 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.475719783 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.47840944 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.47778038 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.476021497 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.477745739 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.475894386 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.477240437 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.476607395 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.476866227 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.478263612 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.477059338 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.478007573 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.479277638 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.477147618 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.47752951 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.481431892 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.477895548 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.477451846 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.476645599 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.478437307 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.47671977 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.47792565 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.476533084 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.478338552 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.477367129 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.478357199 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.477497662 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.477456386 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.478841618 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.479089135 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.479456221 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.47853278 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.478402735 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.479204653 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.479827358 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.478988355 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.478527263 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.479258361 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.479563288 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.479395808 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.480205409 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.478999459 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.479765129 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.478380805 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.480298507 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.480902983 seconds)
  done (took 101.799683957 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.478248666 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.479576838 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.479786221 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.479009517 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.480883777 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.479481434 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.484480324 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.478894907 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.48077692 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.479751022 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.480942793 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.482068634 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.480851301 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.481026533 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.479654989 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.481006069 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.480961162 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.481315606 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.480491898 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.482318248 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.481103079 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.482063606 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.481405352 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.481701129 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.482991657 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.481304431 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.482151676 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.482253994 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.481704483 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.483048997 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.483501708 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.483448907 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.481473447 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.482997035 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.484198654 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.483095231 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.481421764 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.487715651 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.482196444 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.481695263 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.483284711 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.481964222 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.483356927 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.484320876 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.4825328 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.482638819 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.484881632 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.483345333 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.484597378 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.484475644 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.483287993 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.484276178 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.484475366 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.484006451 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.482890667 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.484039626 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.484171206 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.483632241 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.484270172 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.483852451 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.484218349 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.485053442 seconds)
  done (took 93.238841129 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.486560616 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.485216451 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.485514115 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.484727562 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.484938902 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.482496133 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.485642693 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.487479029 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.485517816 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.485231187 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.48517713 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.485935816 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.484748654 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.485126146 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.486712591 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.486153581 seconds)
  done (took 25.1000783 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.486018369 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.48660734 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.48553793 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.48624214 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.486130603 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.486859956 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.484737271 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.486675436 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.484683982 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.488278922 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.487854985 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.486972052 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.486949842 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.486151766 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.488595861 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.487932858 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.487781162 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.487094692 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.488348064 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.489418591 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.489498071 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.488515055 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.487510807 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.488137563 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.485807867 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.487873493 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.488787017 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.487278375 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.489095226 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.488959664 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.489933741 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.487624299 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.489433049 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.488872573 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.489989335 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.488277105 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.488944649 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.488350998 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.488884376 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.488455829 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.488954566 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.489137132 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.489486198 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.488461766 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.488982782 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.490468376 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.487488318 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.490493868 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.490077754 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.487444807 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.490139912 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.489566935 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.49148282 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.48987682 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.489746287 seconds)
  done (took 83.187207747 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.487972598 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.489819271 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.488974192 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.490641861 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.489336178 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.490337214 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.491081303 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.494266554 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.489452744 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.490105481 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.491337272 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.491533176 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.489029017 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.48966108 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.491570751 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.492012008 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.49154924 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.490612947 seconds)
  done (took 28.166259062 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.492207773 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.490395881 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.491367094 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.493107329 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.492011519 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.492089881 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.49502091 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.489724217 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.491035906 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.493901773 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.492243811 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.491502865 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.492291862 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.492704694 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.493142669 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.492021576 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.491679842 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.492290954 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.492633316 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.492736681 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.493676605 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.492095747 seconds)
  done (took 34.169764536 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.475869382 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.478569447 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.484378077 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.503779217 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.491312687 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.484147321 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.483290228 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.478891695 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.509753649 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.51431191 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.512611695 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.491626973 seconds)
  done (took 19.248566456 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.493549634 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.494028535 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.49333117 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.494402256 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.492634783 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.493271875 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.493143367 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.494535304 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.495079926 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.493990402 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.49447538 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.494552275 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.495218002 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.495393095 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.494014567 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.495440097 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.494388498 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.494893519 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.494318656 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.494630567 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.496801025 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.494166472 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.494334021 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.495995545 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.493569468 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.495866339 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.497286073 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.496272117 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.497571933 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.49631451 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.496681666 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.495915716 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.498965755 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.497879165 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.495943793 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.496471513 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.495866409 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.499307419 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.497816238 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.497079552 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.496932536 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.49785919 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.496104288 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.497982879 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.497826295 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.497810021 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.497263165 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.498020523 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.497247869 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.500191191 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.497495736 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.498171591 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.497407107 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.498229908 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.498347311 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.497362549 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.497619565 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.536854442 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.499415742 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.498287248 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.498328384 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.500672746 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.498726759 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.499579311 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.498683318 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.498116485 seconds)
  done (took 100.149455112 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.499209501 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.497473038 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.499377121 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.499408968 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.499146924 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.499017718 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.498476378 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.501586061 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.500194683 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.498750086 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.500092295 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.500219057 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.50016912 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.499307838 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.499503044 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.499781292 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.501069375 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.499332701 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.500176943 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.500361952 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.500905876 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.50088241 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.500296581 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.499931102 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.50053921 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.500384581 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.501042766 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.502030251 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.502087172 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.501087674 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.50234286 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.50077639 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.501164498 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.502678449 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.501535495 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.509491326 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.501109952 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.501283089 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.500981095 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.502495604 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.500800905 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.50239147 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.503060689 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.500747058 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.501818702 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.501761991 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.501318429 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.502825325 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.502916538 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.502480448 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.501561407 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.502756671 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.504061934 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.503228868 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.503161401 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.503477014 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.502978207 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.503276778 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.503769648 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.502490505 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.504412538 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.501037807 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.503214969 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.502588912 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.502914722 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.504428392 seconds)
  done (took 100.442642324 seconds)
done (took 1914.828396384 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.464236478 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.467298111 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.491330636 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 10.880182599 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.489892883 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.129439155 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.127576908 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.488646496 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.494166751 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.490736217 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.48844249 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.469343064 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.805618997 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.492971627 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.491405157 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.468573552 seconds)
  done (took 57.090333346 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.533407286 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.511809288 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.646639073 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.49685578 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.534472575 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.759763235 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.571575827 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.50186836 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.708367942 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.510146227 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.46759766 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.533382423 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.500815641 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.481252958 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.524988269 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.759158131 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.859349502 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.470152385 seconds)
  done (took 32.721973095 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.090121446 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.523198167 seconds)
  done (took 5.964045637 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.526533507 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.502148213 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.512012666 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.501026981 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.469099807 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.469491965 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.501351394 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.471336124 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.484797683 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.655247291 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.508817497 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.522935843 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.501563641 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.503733889 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.509130176 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.558677119 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.695482296 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.510671085 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.507915706 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.516447029 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.499944442 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.742374292 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.556788541 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.511943313 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.657015463 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.490162541 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.516716197 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.524365843 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.716813081 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.512482977 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.503072074 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.501956709 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.505175554 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.474069572 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.13818517 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.4920639 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.545144463 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.519364369 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.510785834 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.714154503 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.504067801 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.518269886 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.488111861 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.129984826 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.684155157 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.789917838 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.490914173 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.51014944 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.506552614 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.713844687 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.504589026 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.506713249 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.607755846 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.475646379 seconds)
  done (took 95.855270215 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.519524934 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.473807179 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.743235994 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.492501316 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.474846697 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.475393135 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.474643598 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.868549206 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.48158212 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.474998183 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.888548257 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.252025555 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.477777027 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.519488547 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.522174502 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.510038812 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.488807899 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.475122011 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.47456349 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.477192456 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.167760789 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.480780622 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.496942872 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.682753582 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.550014077 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.162817912 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.475652875 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.47558031 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.477384589 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.475878322 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.225173466 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.485664203 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.537223483 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.478172748 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.86859125 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.017745692 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.985056061 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.486220978 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.486495035 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.476217821 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.477359377 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.174739889 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.993009935 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.479788945 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.478443243 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.177306625 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.482681422 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.479524177 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.484615188 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.837546311 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.477743993 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.478958253 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.478254322 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.478860964 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.478859428 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.545538437 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.544517498 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.166291538 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.477385427 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.478270875 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.480910945 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.480004057 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.490820376 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.481967924 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.48149412 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.999210165 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.678764597 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.48523021 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.002233873 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.229762318 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.4830696 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.313814697 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.488985366 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.505820607 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.597206321 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.4793685 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.479965504 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.17413618 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.506877795 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.478941281 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.987482486 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.485029695 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.902735676 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.49894159 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.480535548 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.187736723 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.4893755 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.541842158 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.48063137 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.497276644 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.478697466 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.486126273 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.882210091 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.519102673 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.47983092 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.479889657 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.516346946 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.481051606 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.482552775 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.482813142 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.3063238 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.494605005 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.479764152 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.483950368 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.481521079 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.483964686 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.48647981 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.481445581 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.856092804 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.48266026 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.485311295 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.480756177 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.481236755 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.494283107 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.686940847 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.483089365 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.943086199 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.488061576 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.489631468 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.505582938 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.482412464 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.515474977 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.481565918 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.508850672 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.484503511 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.889088131 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.503473521 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.502507895 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.483871587 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.482835143 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.492599862 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.486149531 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.517809632 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.483229327 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.456795867 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.511266901 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.516894432 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.483041943 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.484835886 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.484229105 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.493036231 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.485215054 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.902040196 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.881403285 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.70059356 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.488818306 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.485625791 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.447987695 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.535759681 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.748655328 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.503805896 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.484815073 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.878468065 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.698070544 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.487353595 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.486272521 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.489395754 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.85862043 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.48656809 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.909871919 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.257899067 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.491687176 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.491255557 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.452510616 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.343413363 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.488801684 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.48859642 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.898392526 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.504682684 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.486727817 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.487321676 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.486221816 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.486128718 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.492555513 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.493861475 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.485807308 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.48539713 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.561847424 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.768941148 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.504360575 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.495516923 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.181430683 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.500636219 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.487319861 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.49396924 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.489683849 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.489186649 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.516924114 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.489782325 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.531914708 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.487048947 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.499722975 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.208447387 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.489395683 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.511237568 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.769183497 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.404314473 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.493318598 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.488914827 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.490645074 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.523188947 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.200849424 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.49972472 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.929815167 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.494694263 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.560936764 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.489072528 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.52086435 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.217474024 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.496468021 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.490619163 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.376413788 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.493512478 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.267542681 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.490068116 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.509410939 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.324024095 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.492745062 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.491598199 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.500922988 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.49051943 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.892020416 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.492488395 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.492295005 seconds)
  done (took 538.942339469 seconds)
done (took 731.923477858 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.490366967 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.489658776 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.495330377 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.495441913 seconds)
  done (took 11.34114897 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.52992451 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.517440102 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.528684688 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.519053925 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.529100454 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.518160654 seconds)
  done (took 10.514212807 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.493327329 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.492541475 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.49492432 seconds)
  done (took 8.84926037 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.814248097 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.496659596 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.997422787 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.504656633 seconds)
  done (took 10.185874335 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.528721076 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.529294891 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.528649698 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.531127457 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.530847882 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.530762676 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.533114861 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.528958745 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.532681565 seconds)
  done (took 15.140824263 seconds)
done (took 57.400404062 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.654417925 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.655139386 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.493930199 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.568528372 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.711916019 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.662504778 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.659968073 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.652235525 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.659366251 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.56075811 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.656381443 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.554302471 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.653907246 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.786139983 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.563745012 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.656009119 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.553279646 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.74765562 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.655693996 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.562813609 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.681211556 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.561663183 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.563897196 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.495051501 seconds)
  done (took 42.342201199 seconds)
done (took 43.714466415 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.562630974 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.680479899 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.525622777 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.526988732 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.537812455 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.502361718 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.554150077 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.526759653 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.549316502 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.548277403 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.502791521 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.535900619 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.550128476 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.541281263 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.56844554 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.527726047 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.52647079 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.536192138 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.551989677 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.551844057 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.528539209 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.538174931 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.563043387 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.527033081 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.545164856 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.544005771 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.543644202 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.498914562 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.535164422 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.549951568 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.507571528 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.542173344 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.552510554 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.539097884 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.530133127 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.538006056 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.53811382 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.681719861 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.558381621 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.537560468 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.536320296 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.553986858 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.542592253 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.542420303 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.53953516 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.564188645 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.545282749 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.55356788 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.506949033 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.499012759 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.560976993 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.549787023 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.540511821 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.499295895 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.503924067 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.553102807 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.539674354 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.560760764 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.537683668 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.541090875 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.574076284 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.559225024 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.550623861 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.548853803 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.538587274 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.555542573 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.54020857 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.554621227 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.539282963 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.540851878 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.535319051 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.540047167 seconds)
done (took 120.540279322 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.708740476 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.499760619 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.739118012 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.539101935 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.75995034 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.711297575 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.537754906 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.538981109 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.538098386 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.392729411 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.545076018 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.538426639 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.502069433 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.544109694 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.706827104 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.538623103 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.53906862 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.291206095 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.539900221 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.719394973 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.505752093 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.539353433 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.53903789 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.403754066 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.501792233 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.508893205 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.718236166 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.538673807 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.300529208 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.507880018 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.501006727 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.299122395 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.72158813 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.558400687 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.549452273 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.550244902 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.760708746 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.542172228 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.711072616 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.71166515 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.745518896 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.578708507 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.510137497 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.50440227 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.543568983 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.541355154 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.539481033 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.568958524 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.502782023 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.540605547 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.294956921 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.553640166 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.541855288 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.542625428 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.542729142 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.570508024 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.545597174 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.54328892 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.721071583 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.543910856 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.71716976 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.407733693 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.395280434 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.54330156 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.504489432 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.543658031 seconds)
  done (took 122.867707622 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.656646701 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.664364093 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.7089236 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.535309273 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.625500701 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.709651626 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.532079533 seconds)
  done (took 12.813433329 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.547652812 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.544920203 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.624804663 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.628578327 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.543016609 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.768136647 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.544312095 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.554714185 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.542032684 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.628406797 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.546437714 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.545239237 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.553960668 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.508242563 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.627067381 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.558723913 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.707499326 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.536616423 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.544685605 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.746659055 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.545571473 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.552554623 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.626991533 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.554396756 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.544909238 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.549950242 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.358219156 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.543974621 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.544986482 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.544753422 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.545157104 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.658778885 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.545635377 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.509494818 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.54438005 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.709116361 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.546614692 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.546529066 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.546332812 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.513072159 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.545430044 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.545973548 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.546744806 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.54706894 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.546596044 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.570145617 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.547633187 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.544929701 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.546930793 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.546492958 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.63010401 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.54726687 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.553267703 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.546972838 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.635014899 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.555295545 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.546365009 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.547809816 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.548311416 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.547509289 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.750509684 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.630435197 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.547319669 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.63125262 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.547046381 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.548046717 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.54757033 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.551700674 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.689426917 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.549588673 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.63079006 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.547747168 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.781054699 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.572264811 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.54979233 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.544808945 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.544908399 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.547473879 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.511360837 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.552314229 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.54760972 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.541186418 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.554719424 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.548928324 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.559293259 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.758352023 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.711099506 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.54950186 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.562727914 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.554090712 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.547736552 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.633445217 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.550225836 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.549226966 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.633830951 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.714607354 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.633013318 seconds)
  done (took 159.29056335 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.559246326 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.559394739 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.549039721 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.577080368 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.537991528 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.539237078 seconds)
  done (took 10.710986851 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.544620444 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.552894959 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.550212565 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.549437956 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.553481347 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.548895848 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.551727563 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.542640653 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.553443772 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.550942965 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.551432413 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.554088268 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.552773575 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.551473271 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.550912306 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.5531591 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.551298598 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.553406128 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.551161219 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.552662598 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.523256344 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.551882401 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.550865093 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.544661511 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.555813837 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.554325659 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.573831281 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.55269668 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.553531703 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.560461774 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.55504244 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.551269264 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.544910425 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.549800362 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.556807538 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.54764499 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.55602357 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.554609354 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.552949366 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.55344936 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.555125481 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.554206929 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.553664471 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.55415762 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.545773104 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.550479988 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.561904555 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.576690443 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.553989862 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.555431805 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.555582452 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.555958408 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.553935874 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.557088509 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.550995487 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.549513873 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.560499278 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.555446471 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.553636534 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.54943614 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.560712993 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.555788414 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.55374409 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.559980288 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.554476865 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.556891208 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.551158007 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.559034427 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.55775319 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.559637926 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.55819291 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.55212028 seconds)
  done (took 114.240514108 seconds)
done (took 421.300171632 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.016040797 seconds)
  done (took 4.409585744 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.773990045 seconds)
  done (took 4.167519837 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.142191756 seconds)
  done (took 25.54451694 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.545430463 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.524758909 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.547977015 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.525898719 seconds)
  done (took 11.538427896 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.11673782 seconds)
  done (took 4.51131132 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.530426181 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.543223339 seconds)
  done (took 6.470588753 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.894058106 seconds)
  done (took 4.288706826 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.259982991 seconds)
  done (took 4.662985985 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.535162607 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.534234626 seconds)
  done (took 6.471365319 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.503821191 seconds)
  done (took 3.898325549 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.880142859 seconds)
  done (took 16.276142029 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.530721121 seconds)
  done (took 3.929759364 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.619735931 seconds)
  done (took 4.01518126 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.582980909 seconds)
  done (took 6.977137805 seconds)
done (took 108.556661433 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.520549296 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.524650865 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.523608973 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.520222859 seconds)
  done (took 11.485993715 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.676887613 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.675120768 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.679111149 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.666522747 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.666108588 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.677158597 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.589675545 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.592533101 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.654954237 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.655495856 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.685420541 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.66678989 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.679843645 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.590944351 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.652676434 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.686198224 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.655874116 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.679227226 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.59184726 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.668080836 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.560169907 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.668504424 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.652958242 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.559158326 seconds)
  done (took 40.928896895 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.135719843 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.67895268 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.761070245 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.642775803 seconds)
  done (took 8.615283969 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.72519215 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.721008796 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.742305987 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.777386705 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.82765909 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.735582088 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.594089514 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.589571412 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.576170265 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.73056916 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.7983129 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.722026383 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.945414427 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.560695952 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.946091609 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.559985107 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.559767132 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.724696765 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.774862432 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.804910037 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.562187622 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.71445028 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.73493871 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.725362073 seconds)
  done (took 42.550838065 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.576561866 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.585559659 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.560937393 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.563599533 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.563824981 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.563657083 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.585340566 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.565884391 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.576296399 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.562561482 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.562730219 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.563803749 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.584408325 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.564506003 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.563939102 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.577042514 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.565322448 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.578514349 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.579503022 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.564375959 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.563228187 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.578468603 seconds)
  done (took 35.950690449 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.52746945 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.52574465 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.963888774 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.869298323 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.527705653 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.530367025 seconds)
  done (took 15.346242005 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.652027398 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.844433779 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.554134713 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.008991926 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.142015197 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.558412351 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.555295684 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.899563904 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.280346474 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.242993679 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.642016 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.650300013 seconds)
  done (took 23.433548289 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.695604308 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.537128778 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.551035086 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.605576379 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.537864766 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.538467427 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.624530326 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.146864347 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.566060251 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.898429751 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.551951613 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.705027923 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.878671303 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.551872273 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.544576444 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.526599996 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.85365227 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.203986484 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.541424925 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536824061 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.601265078 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.546011123 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.540953637 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.828610887 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.541219732 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.53862862 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.887342168 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.5388797 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947693837 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907995214 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908800763 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.541035561 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.901526863 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10766446 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.718926478 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820283851 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.553978477 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.540197884 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.528739793 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.549560737 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.544067021 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.54885548 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906661385 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544365244 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.53918309 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.540512799 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.182044797 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.571795827 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.542355281 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.541388259 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916201006 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.704856812 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.574810665 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.54020417 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.624385545 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.540804595 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.568316055 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.738845212 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.271519514 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.559850103 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.559738777 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.5449832 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.533431382 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.56008924 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.357567537 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.572645446 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.569204017 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.569360112 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.540219535 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.541449859 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.598250867 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542241021 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.592839774 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.541635218 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528423761 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.553311143 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.547753315 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.276541661 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.551195023 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.545440939 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.856349051 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.541992736 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542237808 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.542533237 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.543116273 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.538844011 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.577758317 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.52656731 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.61397626 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.156654488 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.829057732 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.592160707 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.604228233 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.849533939 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.517477188 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544421047 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.545003663 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547248222 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.595341838 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.160989257 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.543572475 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.572639719 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881614275 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.843851931 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.555281017 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.526084287 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.168477221 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.551952731 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.598779495 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.55748444 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.831600164 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.357789912 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933426101 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.552114134 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.613944762 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.545058628 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.560470574 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.565966454 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.574464602 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.546299009 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.937179721 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.521350026 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.553210013 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.697162468 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.550040337 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.547921352 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.54563838 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.551441842 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.546853549 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.835435289 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.563573413 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.920730702 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.553083182 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.546983384 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.559705253 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.551486401 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.552794039 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.854735927 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.555904211 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.907542084 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547681029 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547309892 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.548384191 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.856461566 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.559750231 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.576788361 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.979592377 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.563736353 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.563638504 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924265299 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.615726833 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.749192478 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.611385638 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.559312465 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.888003426 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.576564171 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.575377916 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.549102229 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.554656357 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.554561372 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.580475422 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.545297416 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358545595 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.555795329 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.559142612 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.549232343 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.595131406 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.701150056 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.580389727 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.834832419 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.553618865 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.562388485 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.580147028 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.550202159 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872358629 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92100874 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.558214281 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.806146717 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.16819164 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.362147589 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.600307064 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.551324089 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.551133493 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.550577905 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.550151664 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.551488846 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.552088921 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834555638 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933588762 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.561673031 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.371461832 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.559542732 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.558637449 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.584953576 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927170976 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.586998529 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.552846071 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.561303012 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.556521887 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.566727445 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.923933903 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856265661 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.596981851 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.55261336 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.202524148 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583198884 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.552630051 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.552065245 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.609997403 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.55671451 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256838526 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.982387495 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.553457601 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950426308 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.557443373 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.605897789 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.552955442 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.552640597 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.566891781 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.564475413 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.584963493 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.84309555 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.554668021 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.558363393 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.281737922 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.556051367 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.286949479 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.559180536 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.568067001 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.561261596 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.177450429 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.556354757 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.555046351 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.927131446 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.181473007 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.55498084 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.177098777 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.567679172 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.558532199 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933416114 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.871473041 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.556637475 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.557759615 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.930937377 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.856797712 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.612447784 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.556136643 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.561076586 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.532731152 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256930857 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.564345577 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.81310235 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17726479 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.565408563 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.560086098 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.556982491 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.56711213 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.105381488 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.557700599 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.556549614 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.561235196 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.559412409 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262399569 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.568245515 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.557380516 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.378288468 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.566131559 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.189600996 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.559734866 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.846192661 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.932127543 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.916148765 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.560460657 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.56568681 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.890217884 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93450473 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.560962606 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.559609151 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.303685476 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.509941173 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.58799223 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.558970313 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.574728881 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.569465921 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973274813 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.577053548 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.561757469 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.581208546 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.560202523 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.559840815 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.559117189 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.571577503 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.560769355 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.230301493 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.55570223 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.575565231 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.580018731 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.565705876 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.895610189 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.605192951 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.353983911 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.877375188 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.553489798 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.627128632 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.590131748 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.56542721 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.538197281 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.561566873 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.561564359 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.562966701 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.866153649 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.562992752 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.535612594 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.654884815 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.858932061 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.561225837 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.560148816 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887548689 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.562042492 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.575932107 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.560641475 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.624896993 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.562801736 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.565230187 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.55303108 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.622784504 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.715131373 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851105438 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.935006469 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.937895594 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.113747565 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.564058111 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.56443239 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.607684958 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.721634015 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.566549769 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.576210564 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.568124969 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356573695 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.561523152 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.369728022 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.94130343 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.565373013 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.566492429 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.563626003 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891597598 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.563029419 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.924780449 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.564268473 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.564877908 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.614585766 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.581603359 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.566659839 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869632304 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.91560498 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.566115356 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.577359174 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.569258842 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.566529096 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950821749 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.868590691 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.243263686 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.303299044 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.567054931 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.568562524 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.196684369 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.926061827 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.567017845 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.566834791 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.56697168 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.588506401 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.579410413 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.597138225 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.576410101 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878412681 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.934629606 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.147033362 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.931517339 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.596414251 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.52682237 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.56814215 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.902671004 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491390002 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.856351217 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36903806 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.485244876 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904413125 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.71811157 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.856272226 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.56786949 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889487692 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.582186534 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.568717991 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.567966988 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.567814944 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.567667369 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.935421746 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37424333 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.906436706 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.597239076 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.607614348 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.62769721 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.858446734 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.875281975 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.582111105 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.879134351 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952363985 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.570621446 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.56882401 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373292023 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.949086543 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.573089148 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.595574689 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895159923 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.570407662 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.63330721 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.536154982 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.569673071 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.317863327 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.871021168 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.619527455 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.572651802 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.50351787 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380069212 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.57242824 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.24606935 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.571339414 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.570301083 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.936824718 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.599414633 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.578120234 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.945790174 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.597973598 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.574959288 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865658824 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.367356282 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.559207075 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.599345769 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.580756254 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.574463555 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.572188754 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.665163077 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.573609186 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.575743955 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.117316525 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.573463847 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.571381947 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.615908629 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.589499545 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.578819206 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.577153562 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.572914126 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.604196595 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.576163003 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.561861114 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.580062661 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776493575 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283983809 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.579779454 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.273581927 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.995628495 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.910678096 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.572951281 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.552223086 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.598974702 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.575351796 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.574301243 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.574693822 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.564153305 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.315364056 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.57643245 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.950109438 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.602971369 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.872703505 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.870158698 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.586066497 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87256934 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.58454249 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.627413583 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.55007854 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.574595205 seconds)
  done (took 1089.285250757 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.596011336 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.613903276 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.663114282 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.591559723 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.607333027 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.717511913 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.616236674 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.678062692 seconds)
  done (took 22.518401608 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.571720399 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.602375414 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.568830785 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.602560283 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.568329953 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.197792471 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.566522531 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.602979401 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.625432466 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.574618881 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.572869707 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.367782593 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.601221706 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.5777044 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.580426604 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.601592982 seconds)
  done (took 36.228637665 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.810754496 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.759318276 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.046055438 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.650979011 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.60016815 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.580624464 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.952719336 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.589283735 seconds)
  done (took 29.426941164 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.614044007 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.612533899 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.613147594 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.614578712 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.613853619 seconds)
  done (took 9.505755586 seconds)
done (took 1366.67332239 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.605027078 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.608571873 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.605247358 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.605943116 seconds)
  done (took 7.862468545 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.552492255 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.554652586 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.553595189 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.589383119 seconds)
  done (took 10.689393044 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.084277197 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.294106953 seconds)
  done (took 5.815539671 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.581022559 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.427041316 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.414683599 seconds)
  done (took 8.860811141 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.951834727 seconds)
  done (took 3.388811385 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.066940496 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.13839651 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.572018271 seconds)
  done (took 8.216207801 seconds)
done (took 46.270193648 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.571429789 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.341384404 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.729037889 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.585980731 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.734448773 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.729691394 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.850745266 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.570942785 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.600229471 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.576341028 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.586231182 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.737171326 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.836883656 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.342152169 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.837735651 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.33484279 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.73750391 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.577421054 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.583551442 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.574684183 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.85179526 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.586818408 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.578433193 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.583951842 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.737216164 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.719793209 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.58969517 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.346975338 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.585253125 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.587245138 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.720533107 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.573208437 seconds)
  done (took 89.338443878 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.573117294 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.572391504 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.59224319 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.574283154 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.584138179 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.575584297 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.575867015 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.573607719 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.574348595 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.574508393 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.576029605 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.586539321 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.574095282 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.575363041 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.574960545 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.573275065 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.590462446 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.573606183 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.57165824 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.592768257 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.575845714 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.57641059 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.576633384 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.593736117 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.580443015 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.57607137 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.576264762 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.574841676 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.575839218 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.574496939 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.575430647 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.574724062 seconds)
  done (took 83.930321588 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.577021701 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.575364507 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.577888292 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.582435239 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.575961929 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.57614638 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.577429434 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.574912983 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.575600012 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.575960183 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.583892338 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.576523453 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.575852697 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.573860615 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.577543625 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.575862266 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.574150735 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.578831777 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.576797161 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.577696787 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.577185828 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.576715097 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.576933492 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.576297447 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.577383409 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.579003099 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.575772519 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.587617462 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.575804368 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.577440469 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.576607542 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.57958313 seconds)
  done (took 83.920628736 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.907888357 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.613505949 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.618322763 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.587171316 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.618507913 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.615704134 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.588769354 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.909029563 seconds)
  done (took 16.902419295 seconds)
done (took 275.531759458 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.587197576 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.601433185 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.645788546 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.587440903 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.634618481 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.646824712 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.897467618 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.646379613 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.888988606 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.591615386 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.638054951 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.589337513 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.592176073 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.812173392 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.584044312 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.610298069 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.584891626 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.585445677 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.61493141 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.925476976 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.647442737 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.58661056 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.589281011 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.594741691 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.568983179 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.693941248 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.69486427 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.836961809 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.795488588 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.693823775 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.583762292 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.622987812 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.590979342 seconds)
  done (took 74.211111624 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.609043301 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.619974928 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.618632579 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.618501696 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.618947005 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.618314242 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.609484768 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.620534217 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.620543227 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.618920605 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.619660782 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.621463385 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.621089036 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.619214357 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.620464935 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.599421128 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.611528603 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.619156179 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.607384082 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.60000081 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.619232515 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.621101817 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.620877697 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.619311925 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.620638421 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.6201723 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.620984763 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.62184884 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.62144369 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.6210523 seconds)
  done (took 49.967819233 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.620631507 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.584274718 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.585287906 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.629341832 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.614092756 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.61738675 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.018683731 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.629902169 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.621531132 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.619565589 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.597593032 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.627403806 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.684481316 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.601991775 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.615849264 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.624933101 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.625391748 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.617206629 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.586507893 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.639549904 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.035166832 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.628191127 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.016999927 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.642706241 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.620863728 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.617170801 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.627633514 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.5855371 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.619299982 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.599930759 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.599852816 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.012887882 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.591911304 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.606648932 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.598515146 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.631030664 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.624160796 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.606371453 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.618791118 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.615971766 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.002844146 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.618219259 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.602979541 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.589894567 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.63735605 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.624662117 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.588348979 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.625029761 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.920883934 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.630555324 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.588981602 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.623449812 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.629188111 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.621227183 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.924943598 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.623835336 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.620056992 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.594665355 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.63097961 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.998926959 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.630105057 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.619779303 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.591455939 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.620218604 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.590609812 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.623611983 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.645358603 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.621082471 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.611292679 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.622239881 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.589710884 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.622179957 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.629804181 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.599431185 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.593411634 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.609385733 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.625175939 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.594615209 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.602724062 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.999548825 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.628864816 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.605433135 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.025012328 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.62681239 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.63086542 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.630066925 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.629636632 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.747622097 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.998378984 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.589961196 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.591928834 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.596534448 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.01038505 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.636532062 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.622201538 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.600605427 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.630569153 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.629348466 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.606555834 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.590920466 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.620397538 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.641614691 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.593392987 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.626034637 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.007957646 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.635704442 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.602003859 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.622934941 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.754506561 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.633430969 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.644178355 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.628747203 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.025965173 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.626960034 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.631541204 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.59299105 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.59800342 seconds)
  done (took 234.171313062 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.597372543 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.614336292 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.596499807 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.613878553 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.596780428 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.627689038 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.594552911 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.596541292 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.622831856 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.59532368 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.596943019 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.627070803 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.627574987 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.59656832 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.607986602 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.596809412 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.59807354 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.621871748 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.598539661 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.597027457 seconds)
  done (took 49.583504021 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.633997242 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.359245474 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.325477632 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.632899338 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.634670094 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.626219437 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.700369649 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.634739585 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.632360302 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.033934343 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.8571942 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.640480259 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.631856397 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.634677636 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.325614591 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.635748652 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.035298693 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.357819036 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.634512042 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.359657468 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.636317509 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.636375199 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.625777133 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.36237597 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.045753165 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.009235951 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.701472862 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.364254282 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.635306347 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.633590557 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.358481899 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.633704119 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.627394726 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.350571396 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.63823144 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.659539875 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.636679706 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.706263275 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.708436388 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.040972389 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.36691712 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.019818302 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.654980707 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.872456686 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.635149204 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.615054889 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.373057426 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.639364894 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.611673175 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.638601529 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.64902115 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.339923464 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.629872347 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.338278423 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.638501726 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.638085891 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.3637575 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.341700157 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.334391685 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.858910271 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.630912912 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.014113806 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.638166837 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.37249681 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.639309021 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.638408138 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.637504043 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.858694112 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.366514624 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.013091958 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.038763937 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.0405407 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.638303936 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.715912756 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.639470354 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.040436218 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.716748617 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.131244693 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.042090408 seconds)
  done (took 150.172979542 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.9967924 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.756574142 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.164964693 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.381243592 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.306571527 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.83764367 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.775435968 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.956827959 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.615472679 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.797486119 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.506658424 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.754936225 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.520478757 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.723392968 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.762319845 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.825713801 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.199122319 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.61925284 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.461762072 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.477709421 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.611744552 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.790600886 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.521257487 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.105065945 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.603527236 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.502614753 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.606696704 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.344319064 seconds)
  done (took 62.992685873 seconds)
done (took 622.542656383 seconds)
SAVING RESULT...
DONE!
