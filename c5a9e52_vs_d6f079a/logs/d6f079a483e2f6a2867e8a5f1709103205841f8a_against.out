cset: moving following pidspec: 30240
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.173975546 seconds)
loading group "string"... done (took 0.515758464 seconds)
loading group "linalg"... done (took 9.629382061 seconds)
loading group "parallel"... done (took 0.167814776 seconds)
loading group "find"... done (took 2.672372933 seconds)
loading group "tuple"... done (took 2.124126609 seconds)
loading group "dates"... done (took 1.413665313 seconds)
loading group "micro"... done (took 0.579921651 seconds)
loading group "io"... done (took 0.565819718 seconds)
loading group "scalar"... done (took 53.691566087 seconds)
loading group "sparse"... done (took 13.559308974 seconds)
loading group "broadcast"... done (took 1.324934337 seconds)
loading group "union"... done (took 2.57027643 seconds)
loading group "simd"... done (took 3.583157887 seconds)
loading group "random"... done (took 13.541632285 seconds)
loading group "problem"... done (took 2.256098978 seconds)
loading group "array"... done (took 23.379107777 seconds)
loading group "misc"... done (took 1.108306231 seconds)
loading group "sort"... done (took 3.741899302 seconds)
loading group "collection"... done (took 20.568259694 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.765654697 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.162808483 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.241286898 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.888345927 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.30213451 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.208777666 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.201058179 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.179163147 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.607939529 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.219476094 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.194888679 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.404694898 seconds)
done (took 7.185189122 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.352074241 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.094828539 seconds)
    (2/2) benchmarking "String"...
    done (took 0.211280987 seconds)
  done (took 0.953088658 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.096144698 seconds)
    (2/2) benchmarking "String"...
    done (took 0.14294206 seconds)
  done (took 0.889922176 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.135407373 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.170248046 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.146287947 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.130441517 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.147960296 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.131131899 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.147943045 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.145249057 seconds)
  done (took 1.670591002 seconds)
done (took 4.654020528 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.527828853 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.918794561 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.538893947 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.208824879 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.352298501 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.334016497 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.317141447 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.258348845 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.152063611 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.101839068 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.226657175 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.445365294 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.466413641 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.951609279 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.100297531 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.153659275 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.188893434 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.81060727 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.123263231 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.156399357 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.542669427 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.244302785 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.159050883 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.139072923 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.304909025 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.172994764 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.173370929 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.14743062 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.72465507 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.175325229 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.241795412 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.125680856 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.171589278 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.200681037 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.282219967 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.154272132 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.734785478 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.246576468 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.129205816 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.143303838 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.734299522 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.162227613 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.239956143 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.148543261 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.11675947 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.182149839 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.145520041 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.136836744 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.142608917 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.143283304 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.21650309 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.492094141 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.149037947 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.228653379 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.152015979 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.734001998 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.144979539 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.332403443 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.180330544 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.148768011 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.120110665 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.147477972 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.20154616 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.137765215 seconds)
  done (took 22.759366119 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.2088158 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.226805727 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.139081863 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.203615487 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.171587812 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.141637285 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.132192857 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.13716409 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.15880071 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.239070206 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.183624956 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.23431562 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.119933408 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.151489376 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.19835609 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.27794582 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.171642008 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.166852503 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.133107989 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.155022647 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.168373925 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.157930349 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.137279259 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.154545421 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.21735662 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.248303153 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.153851198 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.167733341 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.145841171 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.139390002 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.185787872 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.206052739 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.119277039 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.147863984 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.233684186 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.149570836 seconds)
  done (took 6.961508862 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.265476008 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.14656794 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.274449426 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.168836414 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.230971899 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.188268704 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.219431465 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.211155623 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.31835857 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.353042241 seconds)
    (11/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.254864324 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.222329389 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.169595868 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.140816999 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.137374871 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.122931694 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.1384183 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.86874986 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.213541191 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.202310433 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.215434588 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.15429511 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.125652152 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.414741357 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.127763104 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.14240079 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.136250357 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.113685476 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.252054329 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.135599087 seconds)
    (31/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.210886804 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.523854884 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.143504003 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.138481996 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.174155386 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.245631305 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.165281702 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.181328924 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.136049773 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.145515083 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.252210843 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.158627993 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.122406837 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.138134326 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.158398983 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.174068783 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.150377992 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.162992165 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.177025724 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.129605378 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.168701202 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.918488866 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.241868048 seconds)
    (54/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.130088051 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.19825503 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.12730718 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.325435867 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.168730814 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.160690336 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.134441189 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.269267133 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.167502585 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.141542929 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.122250182 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.155178602 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.144498752 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.124928945 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.162817492 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.361938554 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.12959148 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.203604592 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.155752837 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.158549981 seconds)
    (74/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.605324253 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.145851648 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.127998679 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.166626846 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.145539946 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12420958 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.144760169 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.124039446 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.149213388 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.124035815 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.146715934 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.123975472 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.207127526 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.142174155 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.165790426 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.167869951 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.132149416 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.143543044 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.171624548 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.12543327 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.148058283 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.203075265 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.15965473 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.140322662 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.155848799 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.17327371 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.146254353 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.259819772 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.127798444 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.16776463 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.142567501 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.155894614 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.156410741 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.12379137 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.145394886 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.139592122 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.125613669 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.191652584 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.143926892 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.12354958 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.148929204 seconds)
  done (took 27.659695204 seconds)
done (took 58.028354165 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.414763009 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.112281038 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.113397311 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.132316337 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.111930295 seconds)
  done (took 1.612425435 seconds)
done (took 2.321668279 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.247751058 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.334975209 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.248178487 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.147019673 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.21239803 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.214232969 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.199515665 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.210297972 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.217293275 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.216097242 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.144767013 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.236078066 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.225858959 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.196806312 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.143788397 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.250703599 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.209606613 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.198363633 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.253943256 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.145079273 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.144644301 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.164503042 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.143405317 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.147464423 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.144391476 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.163544959 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.143541926 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163208464 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.138069094 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.147756499 seconds)
  done (took 2.369801426 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.172003018 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.146795204 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.162445448 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.13803969 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.142839532 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.148850772 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.143187762 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.16171875 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.148669464 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162881607 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.139661126 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.147924048 seconds)
  done (took 2.366863691 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.122258215 seconds)
done (took 9.879615069 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.091262444 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.412045904 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.194450704 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.271023431 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.372842384 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.298848268 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.614008108 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.213699312 seconds)
  done (took 14.319370222 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.158116196 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.152986633 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.187141536 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.158671574 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.136199303 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.15724304 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.138117704 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.1544841 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.135882503 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.15504297 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.138791462 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.157860158 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.136219068 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.155337281 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.137894561 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.157301638 seconds)
  done (took 3.198434591 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.180489851 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.180224664 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.141390396 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.162491473 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.139458097 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.162080178 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.146422321 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.161750178 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.139262332 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.156306259 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.147352886 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.159596342 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.143517412 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.154777713 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.143277298 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.180310499 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.156290545 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.144273305 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.176438918 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.143312009 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.160947282 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.141082816 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.160000654 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.142320054 seconds)
  done (took 4.516541664 seconds)
done (took 22.759146328 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.197452204 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.148298887 seconds)
  done (took 1.078999431 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.201670757 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.217808703 seconds)
  done (took 1.159731485 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.161735302 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.152820201 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.165994922 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.164250845 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.136867614 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.153156697 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.159687834 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.154397217 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.136000675 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.153928723 seconds)
  done (took 2.283173999 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.140843119 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.15644685 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.15177775 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.205265977 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.146160346 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.157969879 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.141373145 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.158292615 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.141317551 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.15432172 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.139913462 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.170818301 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.156761695 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.155194526 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.158823968 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.141183386 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.163564864 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.139788726 seconds)
  done (took 3.523301252 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.136633856 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.137156408 seconds)
  done (took 1.020594867 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.139104071 seconds)
    (2/7) benchmarking "second"...
    done (took 0.152700284 seconds)
    (3/7) benchmarking "month"...
    done (took 0.139469901 seconds)
    (4/7) benchmarking "year"...
    done (took 0.156304583 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.136478109 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.135110407 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.153674151 seconds)
  done (took 1.760402981 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.617842744 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.27248933 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.423542407 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.123708329 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.138917456 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.36766086 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.158493479 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.107321957 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.106863101 seconds)
  done (took 3.091994031 seconds)
done (took 14.658888885 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.137033627 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.225019188 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.64818927 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.159024831 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.15457224 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.19821494 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.345035636 seconds)
done (took 2.623438497 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.37121606 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.18679617 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.121870665 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.14095333 seconds)
  done (took 1.568726233 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.129469257 seconds)
    (2/2) benchmarking "read"...
    done (took 0.144329737 seconds)
  done (took 1.030855321 seconds)
done (took 3.358373435 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.155236012 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.15595838 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.140071933 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.156932805 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.140940688 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.15728271 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.138394136 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.15538212 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.139204224 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.154550938 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.138706955 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.15728732 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.136049913 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.157038545 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136395278 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.15752478 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.139413608 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.154113732 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.13668903 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.15759553 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.140405285 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.15508725 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.139749754 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.15766579 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.139656446 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.156753942 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.138125316 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.154977249 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.139818967 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.157322939 seconds)
  done (took 5.194444839 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.143946797 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.132330235 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.154097529 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.143369488 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.151323712 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.135291646 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.15028608 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.133372756 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.155019504 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.136385779 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.157061383 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.136515335 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.269663412 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.137007367 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.155673218 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.139054625 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.163892699 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.134376375 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.151654201 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.136591741 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.155676431 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.134173417 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.155495542 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.135974693 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.134550281 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.152480354 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.135074439 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.15257848 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.136268795 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.153569179 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.138696059 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.156356614 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.135562979 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.163921543 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.138629221 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.153111789 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.1438442 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.151347039 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.1364119 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.150307033 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.132832045 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.153494869 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.134265887 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.159542565 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.137296929 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.1365175 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.151321129 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.136571417 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.154456792 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.137768497 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.150928481 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.133244319 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.156505517 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.137298814 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.15825532 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.135121093 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.154866412 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.134385455 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.156330005 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.137065055 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.150290411 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.134494337 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.158497111 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.138174834 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.170629449 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.142763825 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.150602182 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.137770732 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.155436666 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.143483749 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.155793694 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.146914143 seconds)
  done (took 11.366545704 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.137850072 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.136608573 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.155777561 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.13646917 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.154723027 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.135911348 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.154471739 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136778288 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.155809479 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.138594021 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.15390316 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.137588027 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.154440798 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.139222662 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.155339377 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.136933475 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.135986706 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.155051002 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.13660536 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.15522337 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.136576795 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.155042271 seconds)
  done (took 3.965997422 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.282493255 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.144593038 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.20408971 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.149879325 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.176329476 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.167966681 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.142036777 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.162255479 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.142913914 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.165456375 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.146140721 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.161745708 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.154639776 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.166322338 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.165231766 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.148460359 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.161115111 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.148483965 seconds)
  done (took 3.763884919 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.138737964 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.13631063 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.15764372 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.136377957 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.156701561 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.137190351 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.156773776 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.138853272 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.1551705 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.137985075 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.156005802 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.137781976 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.155457479 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.137144396 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.137629723 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.156743256 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.138186078 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.155880367 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.137124421 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.157553834 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.138547436 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.157035053 seconds)
  done (took 3.994254926 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153147059 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.159521542 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.156836285 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.161132153 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.1404731 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.158892482 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.144678943 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.158762438 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.144950346 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.158988025 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.141053203 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.158507866 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.155432685 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.158880609 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.147823617 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.158936761 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.139370376 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.160257809 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.140742828 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.158511847 seconds)
  done (took 3.836780292 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.231798122 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.17733072 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.174115647 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.164153486 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.17671961 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.15598911 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.182091662 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.155824774 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.174790942 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.184565788 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.156422894 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.174168097 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.16363708 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.18086427 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.155208983 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.181551369 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.182980042 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.164350019 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.176419711 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.155831688 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.187404977 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.155845936 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.181516867 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.155048767 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.175911267 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.17551806 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.157597764 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.179752746 seconds)
  done (took 5.617572179 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.151374836 seconds)
    (2/2) benchmarking "in"...
    done (took 0.168132415 seconds)
  done (took 1.104414814 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.140678783 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.140111602 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.160382336 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.141351425 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.161843346 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.141336619 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.163026877 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.140146662 seconds)
  done (took 1.972740109 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.205270377 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.227806343 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.166861512 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.152777947 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.226749575 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.217857173 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.199621334 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.146168308 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.160662749 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.133460756 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.222594717 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.132185944 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.162570603 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.139772941 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.162322039 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.148810124 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.161527244 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.149203261 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.168118725 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.144131666 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.165461613 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.147705096 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.16371642 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.170204884 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.137016516 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.164265931 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.14606187 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.170135322 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.138960828 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.163801765 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.14075491 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.161091854 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.144009584 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.164768299 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.141744422 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.229668312 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.148770524 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.160184616 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.142416505 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.16666428 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.191516114 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.141927895 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.163157131 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.141264821 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.165653398 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.14439406 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.165957486 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.142411755 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.154635027 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.137373964 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.160142222 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.138125386 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.140712656 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.162393346 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.161641086 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.149561408 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.163400038 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.138697806 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.15739732 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.137812706 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.161278959 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.138313398 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.165061563 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.14363726 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.164687003 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.142254822 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.162974425 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.151033522 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.163068781 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.14314027 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.162154908 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.159315092 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.165862084 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.145693876 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.167292224 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.141339132 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.158818939 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.148096905 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.161711206 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.143540111 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.166372623 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.16821329 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.165829049 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.138263811 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.15945666 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.147269635 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.163408699 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.145103788 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.155473402 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.150720004 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.163702312 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.141944727 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.155339656 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.140720339 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.158470012 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.144283572 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.155510487 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.14174945 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.161850121 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.146351502 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.167956275 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.140802542 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.164624217 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.147641191 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.168821678 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.140665933 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.209641533 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.161637873 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.139235513 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.143239025 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.168461297 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.136163405 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.163525264 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.140265253 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.160647104 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.13732703 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.1684951 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.144567685 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.164916293 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.146443483 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.164827664 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.164613321 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.1446626 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.141613678 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.160469149 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.148657033 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.171283653 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.144456359 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.164210058 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.142190428 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.163732553 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.142696638 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.165825626 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.141875584 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.167334198 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.139488897 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.163711182 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.143349933 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.168552649 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.143343368 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.16230793 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.143345394 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.165946452 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.162667404 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.146790594 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.164375372 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.139762884 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.134575144 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.166392947 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.160364876 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.14335531 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.170796021 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.140612294 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.144805425 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.159644603 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.170067856 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.141282072 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.168166985 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.145874067 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.148511413 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.169747773 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.135026459 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.161896565 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.14604427 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.175193508 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.140500618 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.164155652 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.143503933 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.170604726 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.138088859 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.168060058 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.135974623 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.161301936 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.147945629 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.165739581 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.146720264 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.161827074 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.18095709 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.175800428 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.148993388 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.164372439 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.143693273 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.169369582 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.144390289 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.168609849 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.148868582 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.170651519 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.142010587 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.163579181 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.149843846 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.161301447 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.144356136 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.163974343 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.145983717 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.157676266 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.144883648 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.157976374 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.147842613 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.168341729 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.14790973 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.170846447 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.146759933 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.164982293 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.151281528 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.162553073 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.147295128 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.158229479 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.148268506 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.174279704 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.15009695 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.169737646 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.145614397 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.163001803 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.145116498 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.172679221 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.146151755 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.166021461 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.144554904 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.159866978 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.13771863 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.1705499 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.147388156 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.160998406 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.142998003 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.167366185 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.147074918 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.163389702 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.136914547 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.169424129 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.147360848 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.161302704 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.144409146 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.161744101 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.14250227 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.17321218 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.137147538 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.162539943 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.147370695 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.170471538 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.142788549 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.166900623 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.146740587 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.171165132 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.146861622 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.166298382 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.141932295 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.171866548 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.142312581 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.164682115 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.140803659 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.168036732 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.139433444 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.166521874 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.14604427 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.165385347 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.142322567 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.170186237 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.149216461 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.171048288 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.144560772 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.169848484 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.150047852 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.171765488 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.143055901 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.170309786 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.139493996 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.160013854 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.141707336 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.158779968 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.145667616 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.163757556 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.148580067 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.1641076 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.143683146 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.169495297 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.147712569 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.164557937 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.149140614 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.177921508 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.139304447 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.159675682 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.14241357 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.165645017 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.142598651 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.162014108 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.145050708 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.167477093 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.148881293 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.169883754 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.141130027 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.165127842 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.150187325 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.162271613 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.151035407 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.170586637 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.151212106 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.165318648 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.148317673 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.163758604 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.148685318 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.159065898 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.143508053 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.165561486 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.144086688 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.164540407 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.143379825 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.162745975 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.138449729 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.162450826 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.149408036 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.165064356 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.149409363 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.166370108 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.143554987 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.164834229 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.140868542 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.171899024 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.14360192 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.176056466 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.145242702 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.160189295 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.138058478 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.170112275 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.14432813 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.170936751 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.139328053 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.170191196 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.151543712 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.169848973 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.144849495 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.174672072 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.153510443 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.171131818 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.152108379 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.160575797 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.143533126 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.17080517 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.143666314 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.169053411 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.146398645 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.16163487 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.147649363 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.172295793 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.146587216 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.167108541 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.139424224 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.168414922 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.150709947 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.169576522 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.148488016 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.168502712 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.146237521 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.163251835 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.14853495 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.172061824 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.14526987 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.172024948 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.145553984 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.170377043 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.144227069 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.171160243 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.146151127 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.160752495 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.139341113 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.164045022 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.151311979 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.16067085 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.149378982 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.170584751 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.143623432 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.164900579 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.150127122 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.163031905 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.14941956 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.170324173 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.144765895 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.174036377 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.146898569 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.163761398 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.150878125 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.170192871 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.14170552 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.164867404 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.146597344 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.172476263 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.146265807 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.169874465 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.145762111 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.169279697 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.148658918 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.170540053 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.151035826 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.1709503 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.140947463 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.171631113 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.150041846 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.167030738 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.144899711 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.164941296 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.140600701 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.165334642 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.153424469 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.163885785 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.155528157 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.170810408 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.145478346 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.165574687 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.152966449 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.165771779 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.153239668 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.163402762 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.148770385 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.160479346 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.150327845 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.166794883 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.15258777 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.164316146 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.141850929 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.172529411 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.151222652 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.170632382 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.149993026 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.17325653 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.140120192 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.159438291 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.149255432 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.164006051 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.156080044 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.170295538 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.145477857 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.165510642 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.149137471 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.167846065 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.1532389 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.161324915 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.145493083 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.168691633 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.150204645 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.165373893 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.142929209 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.171574332 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.148718632 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.169271735 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.146517515 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.162405987 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.14919907 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.173635558 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.146156295 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.163651817 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.145727051 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.173148136 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.147043978 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.164091747 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.141425177 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.172560072 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.150717909 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.173833628 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.144418156 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.169224173 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.145736759 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.169664313 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.153679878 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.167070338 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.148644391 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.167032204 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.153037827 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.174541539 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.140934821 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.166812903 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.156240958 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.173508586 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.150984633 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.169585322 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.14773841 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.174698473 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.153571065 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.170678688 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.142829755 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.163062007 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.147741832 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.161701359 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.150535413 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.175453318 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.147846943 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.16711322 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.152954227 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.172350339 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.150350614 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.168706509 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.142687139 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.15362184 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.165950852 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.172309482 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.142154878 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.141358409 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.171003729 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.152226201 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.168060757 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.147222981 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.171398821 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.148927668 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.165271226 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.145080879 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.174357577 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.150776855 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.175133793 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.147369019 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.168528973 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.151095122 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.17765632 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.148466226 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.169553335 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.156152748 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.176124771 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.147570931 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.17043131 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.171596542 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.155842723 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.148640829 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.175467983 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.145407666 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.168530579 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.155171478 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.177148714 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.178639477 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.147675902 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.162154699 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.152431395 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.166337913 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.143370257 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.172196548 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.155924298 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.174902618 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.149867173 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.165175544 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.156710082 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.174373641 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.150538207 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.167476046 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.148524334 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.173566345 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.14668667 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.171808021 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.146821534 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.17549173 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.155642139 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.175717038 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.158313079 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.142614714 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.177398187 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.17271959 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.156171326 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.17153585 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.143537597 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.163910439 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.152008925 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.15671951 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.177516708 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.152303656 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.175354981 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.152967986 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.172847189 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.149329185 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.168890052 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.155590526 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.1765258 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.149298664 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.174563889 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.147777381 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.172085849 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.152359738 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.176064149 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.155850894 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.174639736 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.157858692 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.176645787 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.147676181 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.169846319 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.149544715 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.175496829 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.153804475 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.175965882 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.147406873 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.167085982 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.154960348 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.179642816 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.150407953 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.179034429 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.156505307 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.171412371 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.152980138 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.179568644 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.15486257 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.173422682 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.153170316 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.174508923 seconds)
  done (took 94.819443383 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.198464343 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.181246791 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.151652526 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.173916739 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.168297519 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.176907832 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.151283763 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.174433215 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.153231567 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.183894334 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.15295269 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.173294104 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.166643817 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.19534621 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.190450755 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.162465562 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.174869793 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.154547586 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.173310447 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.155113929 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.188280088 seconds)
  done (took 4.484282394 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.15238509 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.151305274 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.175630295 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.152433141 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.174932929 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.150947198 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.174782771 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.152864062 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.173679488 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.152014093 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.174142536 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.153358119 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.172320027 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.15319085 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.152356176 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.176334714 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.151058106 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.173994053 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.151904443 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.176011559 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.152175706 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.174176898 seconds)
  done (took 4.458202332 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.181887166 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.155890354 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.173277691 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.152458564 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.178186137 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.152693091 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.178720563 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.152666411 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.182907268 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.149125388 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.166665747 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.147638118 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.175133514 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.15349864 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.170250211 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.153524202 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.182887433 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.156916882 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.179530721 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.154154379 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.166020344 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.153895757 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.175873412 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.144758073 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.181029934 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.159805587 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.156061186 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.180075343 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.142847006 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.179653013 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.152694138 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.170971532 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.14485641 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.168547271 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.144494632 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.17881401 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.157512908 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.176132733 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.154873325 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.166916198 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.154507148 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.180768378 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.145010899 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.174830403 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.154676025 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.147605083 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.17979933 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.1522225 seconds)
  done (took 8.733428182 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.183084315 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.213461363 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.155730697 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.206607139 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.191643714 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.162736756 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.180783465 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.183843909 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.180322721 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.156632977 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.192449752 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.166932331 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.181966227 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.160547721 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.180883198 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.179304366 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.160357822 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.177677483 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.16407722 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.179643724 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.16179313 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.181681274 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.165826953 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.189718539 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.15962393 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.17917027 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.15734906 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.182560715 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.166214223 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.184987001 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.161555111 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.183280499 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.189222526 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.160529981 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.179696385 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.159643137 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.190280342 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.158844501 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.181434176 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.156106304 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.183314093 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.160765206 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.181890658 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.167143741 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.18197789 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.159271999 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.180884245 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.155510139 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.19076113 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.18203062 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.165505683 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.191369377 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.161529829 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.179971698 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.162394324 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.19137259 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.158378869 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.18047735 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.161414521 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.188426964 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.156542044 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.182645083 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.191524215 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.161376248 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.183741941 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.169628973 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.182057998 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.162231035 seconds)
  done (took 12.865417104 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.18958612 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.18466664 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.170189589 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.191978952 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.161864857 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.185257148 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.162460534 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.184622779 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.161964939 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.189186488 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.185429167 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.294094521 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.165992407 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.189461244 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.164162775 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.430167132 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.162873086 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.18365408 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.163928388 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.185903389 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.16280548 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.191969663 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.163604534 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.191788146 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.195202755 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.159282336 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.184702538 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.163871118 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.191715441 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.160363689 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.193687829 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.183605332 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.163500051 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.19142539 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.172485901 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.184634024 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.155951605 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.1854101 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.162460673 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.184373166 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.159728622 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.190607898 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.160975707 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.181983896 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.182516297 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.163990267 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.191620736 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.173052034 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.189719028 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.164640909 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.183331553 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.191314692 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.163625067 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.183996163 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.169421823 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.198120236 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.16782637 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.191379714 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.182604087 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.169660471 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.191474 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.175258669 seconds)
  done (took 12.290515226 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.160722533 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.154874234 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.17907368 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.1557601 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.180172842 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.157123402 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.179594626 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.157101891 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.179303039 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.15806179 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.178419896 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.157063828 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.181156906 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.158162151 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.181364334 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.158254063 seconds)
  done (took 3.595815502 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.175878441 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.197402827 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.260966286 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.160747047 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.181192455 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.165980813 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.181406449 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.161005111 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.155201999 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.187317186 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.183510347 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.16194755 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.196461156 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.160608971 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.180234861 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.162644007 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.178641642 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.164045232 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.180291852 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.239393571 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.18751791 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.159217314 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.183835668 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.161398108 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.185277401 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.161875892 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.187537814 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.158370698 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.185659014 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.157798488 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.183598487 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.189869746 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.160027264 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.16295487 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.184390137 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.158676254 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.181187007 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.159830451 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.184727261 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.158660609 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.18430563 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.159542844 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.185139395 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.161190121 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.18301636 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.159715911 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.182398404 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.165866763 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.184022354 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.160704724 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.183193896 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.16801501 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.187990945 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.166240553 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.188934431 seconds)
  done (took 10.632886487 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.171236579 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.183934074 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.172725247 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.180528823 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.162968001 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.18426191 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.161178107 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.182633629 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.162762388 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.157164748 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.186651948 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.161143327 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.184433719 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.161919892 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.185601325 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.160133841 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.181903509 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.160259136 seconds)
  done (took 4.030431872 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.158481605 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.155652126 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.182642011 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.156969192 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.181192105 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.157935517 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.181103687 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.158309727 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.182700398 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.158233948 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.181285134 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.160076711 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.179848289 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.160484095 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.156892298 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.183312976 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.157672216 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.182422848 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.157686114 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.18170956 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.15935951 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.181403934 seconds)
  done (took 4.649089804 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.170740916 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.262699048 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.188400843 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.245124188 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.183423813 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.155261992 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.191584629 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.179343756 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.17475658 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.177354048 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.156015999 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.1776874 seconds)
  done (took 3.197632884 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.188310259 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.217365071 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.161921988 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.183626424 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168466954 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.18814285 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.164900718 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189026133 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171053316 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.201193881 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.18786111 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.171976618 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194689632 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.171145367 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.193038864 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168449912 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.188664704 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.163903943 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.184495598 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.200596877 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166339379 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.192483485 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.164995283 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.188629853 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.164887658 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195495112 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170764453 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.197874255 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.187858037 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173658954 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.192071073 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165215632 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.197702236 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.175797774 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.186299319 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.193217378 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.166124686 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.202015284 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168595392 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.196160001 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.160843009 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.192888635 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.172068529 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.194813181 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196637646 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.166393715 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.193075879 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166823938 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.189561047 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.183344824 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196107759 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.19625701 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170601932 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.196474985 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.174062777 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.210136847 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.198827519 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.174166631 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194607359 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.176736581 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197930616 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193473696 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.174895285 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.200883367 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170380954 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.198482432 seconds)
  done (took 13.083617617 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.200501824 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.18622836 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168032332 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.202319932 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.172234752 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.192364825 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166843982 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.190054056 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.187930183 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.166551766 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.232810122 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165717093 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.197978807 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.17353324 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.19044859 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.189796971 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.168500059 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.196937054 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165044941 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.210561622 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.165759347 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.198148941 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195329867 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.174795133 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.201325113 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.170478383 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191105866 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166173366 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.189820228 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.16705602 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.196902692 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.166222674 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.200889653 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.185657547 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.175311958 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.19108659 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.16747395 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.194019156 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.166789924 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.196369734 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.17347597 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.204338973 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191046292 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.167796198 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.200690674 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.167221893 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.191146164 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.164836813 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.190336075 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.163402413 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.202484617 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.201494408 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.179247165 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.198270186 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167128725 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.192371809 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.16718355 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.19112207 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166672592 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.194230077 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.198443741 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16841583 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.211332111 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168358769 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.190764691 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.173696669 seconds)
  done (took 13.121427034 seconds)
done (took 231.5366994 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.311236786 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.341257642 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.154166672 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.477721364 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.153512189 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.866565644 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.755336835 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.246469261 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.177382543 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.154854398 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.177470753 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.174396828 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.610235491 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.153133161 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.176254187 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.170734141 seconds)
  done (took 32.047734632 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.347546081 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.393445912 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.170545011 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.184117966 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.159627701 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.184187947 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.157455497 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.185755255 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.160259136 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.190488329 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.158161105 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.180092594 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.164130509 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.180298277 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.15826 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.183279731 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.163887461 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.183301103 seconds)
  done (took 4.470020733 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.181363776 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.237838555 seconds)
  done (took 1.384710653 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.190304088 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.280213916 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.382687002 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.234046104 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.179726276 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.199986814 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.232210046 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.172071392 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.272829038 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.170175621 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.19513913 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.180061165 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.186097548 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.186967701 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.175681279 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.181189102 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.188428012 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.19824637 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.17345851 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.184998316 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.182661566 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.194631245 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.187296164 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.177008473 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.26486748 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.17001324 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.187399249 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.158995148 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.186560944 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.172308434 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.190693873 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.200699474 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.170365799 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.242467286 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.186117941 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.23518284 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.165786794 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.182285261 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.174075698 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.183802703 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.162151696 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.186424405 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.170801329 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.182213255 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.157568012 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.187032652 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.15807478 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.183651985 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.167465779 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.187921872 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.167656794 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.191056139 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.235674104 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.162391042 seconds)
  done (took 11.440510766 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.998128812 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.209112136 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.18570511 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.126799504 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.205259901 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.174848282 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.016840829 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.186843173 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.313965764 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.082078454 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.175208733 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.19390706 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.305841895 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.343689934 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.363451316 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.422347004 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.849226986 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.170260688 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.216932754 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.230118649 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.164229544 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.202394312 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.197281093 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.483512603 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.187080284 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.159224089 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.190346203 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.167300674 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.239831616 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.18527391 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.162881677 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.261582705 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.357545956 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.297705176 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.162956826 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.182244334 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.161116159 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.251689129 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.333148649 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.280434613 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.254165631 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.180649928 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.159203625 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.190995028 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.173837539 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.181690143 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.246545039 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.255593885 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.256717143 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.164518128 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.192951073 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.167447481 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.189565447 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.242236041 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.158238069 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.450566235 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.431493767 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.184354379 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.166894757 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.197753919 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.333391348 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.161825956 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.329281189 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.182147814 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.302093025 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.161550362 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.862606132 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.249421801 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.185690512 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.16400668 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.190876018 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.16565675 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.188614418 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.242895623 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.459935792 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.192528044 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.185873985 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.162262184 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.290608254 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.184060697 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.161613638 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.245058606 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.162840471 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.191731015 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.192145105 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.16802409 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.254876685 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.339120429 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.192174577 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.168930071 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.191501028 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.170618624 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.187474957 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.295576623 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.294661632 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.242728213 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.294180357 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.164118496 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.247751617 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.250396506 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.191533574 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.254147473 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.163867625 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.199045632 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.188386735 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.293564705 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.220718291 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.163677867 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.188663726 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.168388732 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.227258578 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.164822217 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.192650546 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.252776697 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.548810083 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.254415593 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.158852044 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.190977288 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.166996865 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.242577006 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.195501887 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.333244751 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.19270607 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.252415827 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.166248585 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.18333749 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.1681211 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.247142531 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.195206457 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.166972978 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.190601403 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.170756072 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.344736436 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.285860793 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.19683753 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.312901103 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.261756611 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.191936139 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.259655505 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.168264763 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.250495332 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.194650382 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.168198553 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.18677892 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.875670992 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.172663786 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.192179397 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.16648835 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.271112549 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.187276399 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.165641315 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.186183033 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.160146133 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.859215128 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.192333187 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.160558127 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.190848431 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.183994697 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.192897505 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.167664128 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.192910216 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.245867159 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.312611052 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.19889303 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.165020496 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.188310538 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.24400994 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.162914152 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.187987802 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163564305 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.188805923 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.16844237 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.192297848 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.164902185 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.254187631 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.24316514 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.324605175 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.646247264 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.162643238 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.188638932 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.309277248 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.187125053 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.396079627 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.192068699 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.304856644 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.250012798 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.159892609 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.450938698 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.25079558 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.242332842 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.191594825 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.25859699 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.159741053 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.193516648 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.24614394 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.162063765 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.193117784 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.245244036 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.170278916 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.195047918 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.331550192 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.188880164 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.311440791 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.161213937 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.255689428 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.187764868 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.169035951 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.393878719 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.189409701 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.197006337 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.219273485 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.194475079 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.161903619 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.981211437 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.164214388 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.196157626 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.168198275 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.326313912 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.246882581 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.172126847 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.194794464 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.173514733 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.246087159 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.29400722 seconds)
  done (took 61.967386008 seconds)
done (took 112.270662495 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.321616596 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.230768801 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.423222534 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.236998155 seconds)
  done (took 2.277561064 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.348942558 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.204814383 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.304306086 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.183822747 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.284833288 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.188849364 seconds)
  done (took 2.532971267 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.233206122 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.230325728 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.229585829 seconds)
  done (took 1.714324357 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.271296231 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.274954378 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.413638075 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.326776261 seconds)
  done (took 2.366029367 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.340366048 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.177847825 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.219018425 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.290113289 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.306695704 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.272846987 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.186442773 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.239576485 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.217071948 seconds)
  done (took 3.303707755 seconds)
done (took 13.213004741 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.202717748 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.217907878 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.185532881 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.201807855 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.194750464 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.220970418 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.191340672 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.218005446 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.191106495 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.204659336 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.1890936 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.199269264 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.281549071 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.192978381 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.198808243 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.189620133 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.201621519 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.201335449 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.218161052 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.172412358 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.220616742 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.172716517 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.200249487 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.181613667 seconds)
  done (took 5.862568138 seconds)
done (took 6.886673299 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.270232827 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.183898385 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.171995196 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.199699068 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.278550226 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.179821261 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.215867814 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.173620752 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.208186949 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.171871995 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.186352259 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.186067027 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.197627506 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.270602917 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.178123628 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.189416056 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.165792801 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.208532803 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.190212386 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.215225623 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.253658723 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.19494141 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.181662277 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.191437752 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.283722113 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.165742445 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.199180077 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.173606993 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.213300099 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.173065095 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.199245309 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.162697924 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.214744766 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.188218768 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.190822451 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.173411437 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.190123339 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.138527253 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.199269753 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.176234003 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.210068403 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.175886682 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.197783392 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.165716953 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.200784471 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.173909196 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.18973544 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.177782734 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.188030475 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.174533717 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.192703067 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.208950104 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.19737936 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.163155734 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.188584177 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.166486535 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.2085826 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.166183703 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.212609788 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.165649277 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.19043972 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.16698164 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.200664414 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.166833366 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.172948948 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.191678914 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.174229768 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.203159285 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.171986535 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.195203035 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.164917271 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.202932999 seconds)
done (took 14.871059441 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.171564276 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.238291056 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.275825159 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.254036006 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.224690305 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.208939978 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.179944391 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.216225122 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.177455318 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.209086993 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.2012955 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.22668986 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.285986507 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.180899749 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.210529565 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.176456098 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.204751246 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.172428631 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.284195358 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.218477015 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.188148995 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.210953432 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.188898184 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.212282023 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.168440135 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.229012921 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.199638725 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.178300397 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.195978692 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.180593985 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.218229567 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.169908687 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.19829002 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.189808844 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.214645521 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.180260981 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.209190847 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.178526404 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.196265112 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.169427062 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.20277844 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.185514653 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.196708534 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.20716559 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.180102372 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.210194048 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.178784607 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.206876587 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.17271498 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.200815132 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.17300098 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.219897167 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.182767656 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.212514245 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.182964258 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.213961775 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.183533256 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.208830746 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.176542073 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.209341984 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.170895963 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.197759715 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.171199354 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.216491915 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.173341386 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.210031388 seconds)
  done (took 14.275974411 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.189201084 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.22758795 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.178965915 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.208569959 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.173675857 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.191076184 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.163268318 seconds)
  done (took 2.390526407 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.167335385 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.292099016 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.290808769 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.288424597 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.2817169 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.295984287 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.189615383 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.190478412 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.203349672 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.202919869 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.290828952 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.326711588 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.176416638 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.20737232 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.292878585 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.166336655 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.292787861 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.272358866 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.178157223 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.28999854 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.211796207 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.198950928 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.206232651 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.164687283 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.283621262 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.194888051 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.341486302 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.182925008 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.202628909 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.178458657 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.207876155 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.273329451 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.284839993 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.181294214 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.200049252 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.287680647 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.256305848 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.210860054 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.299636846 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.170480897 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.284108824 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.209824448 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.182037045 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.210156962 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.181725064 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.275318181 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.214708239 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.182565255 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.208640778 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.296852903 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.179890054 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.288579575 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.176724987 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.20937893 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.20320063 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.184103859 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.214302252 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.18253208 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.297600274 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.209007375 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.259955892 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.290144578 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.287165289 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.292032528 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.219828304 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.288547029 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.249366068 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.21072107 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.28765306 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.183021948 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.293850147 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.209476219 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.179182352 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.282023783 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.212399216 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.266135938 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.294533194 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.209449749 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.183174201 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.20004164 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.178930086 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.197183944 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.296045887 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.180878379 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.208268733 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.186745186 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.210590327 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.180533223 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.284246552 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.222523479 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.180716766 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.210918861 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.212877769 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.183272259 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.210561133 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.29543282 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.180219357 seconds)
  done (took 23.410688469 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.170754885 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.167251855 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.200990992 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.167643036 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.197620312 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.168181931 seconds)
  done (took 2.167640801 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.208247781 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.209538588 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.193051086 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.210474739 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.235505647 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.295902433 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.302753094 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.206342371 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.202067316 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.222621606 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.30063418 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.300670846 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.299364046 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.188535498 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.305102067 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.184078227 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.304183095 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.210515737 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.190652945 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.21219954 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.182130005 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.217108335 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.206308847 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.263051189 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.215159693 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.184845154 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.205592834 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.219813846 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.193637123 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.204057374 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.187734418 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.210961952 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.175473571 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.207871126 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.307194023 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.176507153 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.20755265 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.185277332 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.215823744 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.182720233 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.301993012 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.209559261 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.190252545 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.214600963 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.177984436 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.206570962 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.185321751 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.204347703 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.307347044 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.185188983 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.216480811 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.18319257 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.215010722 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.185797301 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.204671209 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.205486885 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.186969097 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.306677686 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.214473433 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.178360321 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.211361026 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.184661401 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.205107927 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.187821301 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.210983184 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.187686507 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.204687621 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.185043643 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.210051082 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.18495669 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.216865427 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.184038906 seconds)
  done (took 16.683338224 seconds)
done (took 59.973487622 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.699302964 seconds)
  done (took 2.794768943 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.199658769 seconds)
  done (took 2.297545658 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.166089208 seconds)
  done (took 19.292588395 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.485226648 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.416660666 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.104250547 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.240897533 seconds)
  done (took 3.342581483 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.139993571 seconds)
  done (took 2.245489947 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.483015264 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.345379674 seconds)
  done (took 1.928750716 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.826790195 seconds)
  done (took 1.93951689 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.816109577 seconds)
  done (took 2.916597075 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.332525177 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.309405896 seconds)
  done (took 1.758769463 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.684822072 seconds)
  done (took 1.805449632 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 13.896127364 seconds)
  done (took 15.018528823 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.317966272 seconds)
  done (took 1.439876747 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.359571563 seconds)
  done (took 1.487225784 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.677296324 seconds)
  done (took 4.800377129 seconds)
done (took 64.178767567 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.185263153 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.212435743 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.188237206 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.211444277 seconds)
  done (took 1.905526883 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.189710018 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.209311813 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.189336857 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.208339482 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.191038819 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.20974448 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.183731185 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.211912912 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.183822189 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.211731813 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.186581757 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.207798981 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.188973402 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.207871895 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.182354125 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.21197954 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.189034024 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.209534467 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.186095522 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.209483762 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.186242887 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.211022924 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.188459021 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.21373975 seconds)
  done (took 5.885607521 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.181216061 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.173636117 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.205482974 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.17371364 seconds)
  done (took 1.859751718 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.194950349 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.224803796 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.198176528 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.219956183 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.199097105 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.226005974 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.183462227 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.208070942 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.183270023 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.22202132 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.201269449 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.227019861 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.196218178 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.217325681 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.193983816 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.208100625 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.185933281 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.226504362 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.191714044 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.224190729 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.185420576 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.221217028 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.181156417 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.222450355 seconds)
  done (took 6.076918091 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.260772686 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.225200914 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.208038466 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.240783343 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.180561089 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.239177622 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.2555304 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.18921233 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.214725979 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.188494989 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.212848575 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.182460353 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.26544437 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.187291973 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.213828937 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.183041782 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.222314094 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.214464703 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.226297073 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.215867395 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.189789219 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.225330889 seconds)
  done (took 5.876967944 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.275413724 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.207554466 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.172840904 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.202600693 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.215098443 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.17935521 seconds)
  done (took 2.388401207 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.175896809 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.16833216 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.199032363 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.168071582 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.201503278 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.169910783 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.197744699 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.169203081 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.198195455 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.169684986 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.198478592 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.169312801 seconds)
  done (took 3.32323014 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265014357 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.217821554 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.351043383 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.464652174 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260228134 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.255672876 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.352087441 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.254347707 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.27668281 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.231137214 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250446443 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256772457 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.251361503 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283368926 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211213381 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.247464709 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237853012 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.309321668 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240558802 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.312877217 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252609987 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.245306544 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.288825346 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.246379166 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203411202 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259065137 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.213940404 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195131797 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26090734 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261909842 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.268730193 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219880125 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.238443869 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284050717 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.324966953 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.266903005 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.366314668 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199979341 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.261188102 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.29001572 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.328965367 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.238816053 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285493917 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22032278 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.225305327 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288372844 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216548836 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.280785846 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.228888045 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212685566 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277477114 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276039572 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.265502059 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203194135 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.399469094 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231093702 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.236394935 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24836189 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286304145 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300811856 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27758495 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.188953009 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.269894167 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287330743 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312919541 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.238508821 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.228348591 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.221633491 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263226629 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.305185666 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249483262 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258982584 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.28518452 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227773797 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239115463 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.261907467 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251209738 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.304390523 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236973151 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.217461312 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245183064 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20158164 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222230216 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.253784018 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219527776 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.315614786 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197283118 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.273215121 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275430067 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.248086925 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.228671118 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257210013 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.260138807 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214088887 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.186875859 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209535514 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.25692506 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25148596 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19633642 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.247253021 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205541431 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.221846717 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246021719 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.191687435 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266409926 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.192920203 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258457587 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268199678 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.200103519 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.278387217 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.244847476 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.231239251 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263364985 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292678978 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226294698 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20447251 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318482539 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269946059 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.2027211 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.27103272 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.296080249 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.238097666 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203373976 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26285703 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.29202268 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210361387 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.298745392 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23760752 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201114331 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.225516038 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271493743 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.25583407 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.230094762 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223920514 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.233134954 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284084938 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.22514113 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205840142 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28072257 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229960877 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191335923 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234959697 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204277373 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.242476923 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.250258849 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.204291342 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251438748 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26406284 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.233442605 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253325021 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230344235 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267551761 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200635779 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.26999879 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.215286594 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.216447427 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.271882758 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.297366027 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198900642 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280477916 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.257559498 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277322417 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241009559 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228557695 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.281911408 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196170547 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.217771687 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227958877 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.269900872 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.261165124 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.286821599 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27237458 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.26178734 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.232266198 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245269109 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267059938 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.252969041 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256285314 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.239703247 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.270022815 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237124148 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.219901288 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.190541968 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.227082717 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203010592 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228630331 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232201176 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244906423 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263664535 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.275282982 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.266922211 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203708377 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.291772508 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.223893625 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256125028 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.248062271 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237710955 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.287950514 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288801599 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249731477 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239454822 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262202337 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.187871027 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.225197422 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.199196699 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.258326566 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.233288255 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203378865 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239480104 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.290351098 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236896745 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247454443 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285758406 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26430435 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.304895615 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.188527535 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.261158979 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262418846 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23775265 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.287223187 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201540573 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.258003619 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.294630344 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207826428 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291190102 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268823571 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280171103 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.29355849 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.234321836 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.23093642 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.242012689 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230147284 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2376687 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.256962356 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.210274086 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228306197 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215475166 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.237872288 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.236514783 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252682621 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243782188 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273742143 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.254145587 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237146009 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.225961067 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238312917 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.245465711 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244684537 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.164326832 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264410929 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.290563695 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21561855 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24920697 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268618098 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19718115 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.448830818 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281164525 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27086573 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203878091 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238105279 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.274029889 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.225512895 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257740457 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.286815593 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237868027 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276758029 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.27295545 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.239065876 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198740287 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.248149364 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.247730106 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.198150268 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.252382164 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.262022775 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.213969109 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286477701 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23433797 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.239818904 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280268392 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.244433387 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.217543097 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239786708 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.327910763 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268323297 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241173546 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.266949379 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.262727055 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253293732 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.224875384 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194362216 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.231660883 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.288056532 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198851544 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279424919 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.262774547 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280230468 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275866296 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261814579 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210762555 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.22653174 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.235977633 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248377186 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28086323 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233094376 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.206557202 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286014234 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.185280614 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.231736871 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.260504775 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.384052609 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216198652 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268245145 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.165581181 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.384751161 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.22899581 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203820122 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.259865448 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266539551 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.200054979 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.286730806 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243810264 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239219247 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.260218705 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203761735 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.278423395 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279998106 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266562529 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272060364 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.213760423 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.264460585 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254737002 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240382872 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24614394 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.245935953 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228969341 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297931323 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.277712829 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.201094357 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270891082 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271751806 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.271151659 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241407654 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.241564866 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283647244 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197492083 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267698428 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236783811 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19565407 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259444794 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.262234953 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200707017 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272760175 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271243501 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200636896 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227391486 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215370404 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269909672 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241042873 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.200550922 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285138075 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.229558032 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253237161 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311137052 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23263978 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.267237265 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214459604 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229650642 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208357082 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245232162 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201385735 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.279206874 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277894766 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.200646954 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276499477 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267165678 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231452896 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25492264 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.244395255 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.338034676 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.231567367 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.295385328 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.220597745 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.300111627 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.251577173 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280772646 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.240516549 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251011599 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264368814 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215622741 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.324112724 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267587799 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.237699361 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.234830002 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243338276 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209753908 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.235553278 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.220736659 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272201235 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244359566 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.205858859 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.270897507 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245091642 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.217737605 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.243340512 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.302665723 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.22095631 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288683638 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.292248128 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207356397 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279765185 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276089369 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230059562 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.233036338 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273873584 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.246826709 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223626622 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.238035577 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.205804942 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.317525644 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.229683258 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229571651 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278587941 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.273721889 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275050828 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.20484658 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.282250766 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240706028 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248475242 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230705525 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.251078995 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.243918308 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.236706078 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.196768527 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.276164518 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260548915 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.237209285 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.245190398 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.252002158 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29533637 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.226657873 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202978256 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.391497201 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261705556 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.300182237 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.193523422 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.240847876 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21474302 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260404413 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.269885228 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272058479 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.201606434 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230895284 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.215500729 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.25244125 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.200631449 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.273380295 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.288202152 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22707755 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.290236628 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.237264599 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.325558369 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.248369223 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.275458632 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.17836975 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.230155385 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212267356 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235904929 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214257064 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.283114075 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319013612 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.268322319 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.25168822 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20648373 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.228804236 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202876008 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.264720953 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252077725 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243852239 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251373446 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.164935639 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242604803 seconds)
  done (took 121.409277677 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.255445612 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.244790626 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.252714818 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.302377278 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.274080873 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.373798233 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.309907426 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.325746382 seconds)
  done (took 3.601861103 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.191451092 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.260090686 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.244063787 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.189458311 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.212697369 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.548581003 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.237051373 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.191468412 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.265478103 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.225965117 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.183820093 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.645495911 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.222818349 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.220088672 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.220954634 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.182301953 seconds)
  done (took 5.496865418 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.192560311 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.628195807 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.158646222 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.36738785 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.337906587 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.289867657 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.884839964 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.269104891 seconds)
  done (took 13.396810167 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.245375477 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.277727915 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.457045131 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.381644622 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.29027546 seconds)
  done (took 2.93006457 seconds)
done (took 175.260681478 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.194853829 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.194525505 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.229781734 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.226881505 seconds)
  done (took 2.1033827 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.239721755 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.153301199 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.187637479 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.15224038 seconds)
  done (took 2.001770337 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.478147745 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.154011834 seconds)
  done (took 1.92876664 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.216678671 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.237262365 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.207483228 seconds)
  done (took 1.948420466 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.208952828 seconds)
  done (took 1.490740268 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.192148038 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.190226355 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.317004138 seconds)
  done (took 1.981485286 seconds)
done (took 12.731784188 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.216996309 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.044244104 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.655227735 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.20569585 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.823371533 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.471284582 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.538640912 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.251622221 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.278637597 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.215123655 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.24705048 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.764786639 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.522907348 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.952364543 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.508579478 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.952158442 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.797689776 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.183031935 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.221618964 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.185670677 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.517122743 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.182613306 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.216341896 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.184757782 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.796466995 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.491347887 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.214308537 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.961981408 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.213723547 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.191923778 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.50367243 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.184738367 seconds)
  done (took 23.95699537 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.188035992 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.272801101 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.238789723 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.217671115 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.193095504 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.217175173 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.194538984 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.230795411 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.319109923 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.183718754 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.238098784 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.18298067 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.222424513 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.184201846 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.240105184 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.18323671 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.218295566 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.184590792 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.223282794 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.186256646 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.23827604 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.183035427 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.217311643 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.185651262 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.215876195 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.202544891 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.215734627 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.195598477 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.215182182 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.192175905 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.21959238 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.185124309 seconds)
  done (took 8.074180033 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.227218629 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.284721263 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.239393292 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.256196266 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.27280627 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.186560805 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.306169381 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.253075339 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.296674179 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.217948805 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.207155603 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.216874995 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.224277962 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.21943349 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.239423743 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.185234239 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.217496024 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.18662478 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.222013777 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.188838679 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.239371711 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.183950138 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.218894805 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.185892145 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.216233363 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.205922205 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.215884506 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.197338293 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.216667147 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.194578724 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.220061713 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.185301217 seconds)
  done (took 8.422289105 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.199122249 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.197709499 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.241953604 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.239740123 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.19558842 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.198455753 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.230900522 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.193412514 seconds)
  done (took 2.993803402 seconds)
done (took 44.7290293 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.711859727 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.236498999 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.206725939 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.231218439 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.327509874 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.191242895 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.202668998 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.225427968 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.199905658 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.241974346 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.183274563 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.226740077 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.20531298 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.228902363 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.315133091 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.20232531 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.318331472 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.316040608 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.191957651 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.234168675 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.193724425 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.31691991 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.233201023 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.193442895 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.294780363 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.189692558 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.304753907 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.230242966 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.196536864 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.217960887 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.281173046 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.230612426 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.193280445 seconds)
  done (took 9.553463538 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.297160135 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.228464737 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.195347607 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.227250197 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.195430229 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.225861962 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.332602002 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.193675047 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.226641321 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.19612508 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.192885911 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.317630126 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.234189976 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.189889301 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.230604185 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.174581139 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.334098072 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.193544515 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.219709294 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.158059485 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.222416552 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.195083397 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.347225789 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.188862354 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.228065804 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.193570565 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.228180763 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.199324229 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.2278912 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.196039105 seconds)
  done (took 8.103878014 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.199982554 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.206694161 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.246172715 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.293797836 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.224594902 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.239822397 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.21221714 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.239158555 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.216152417 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.22227212 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.2038211 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.257631016 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.204730714 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.231742318 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.18790979 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.237599698 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.203734497 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.221834704 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.196029677 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.239148218 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.207621654 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.238664917 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.21012714 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.230772782 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.188183916 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.228616781 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.198786242 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.231048376 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.196792973 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.238573146 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.190076824 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.223830978 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.189980793 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.255631739 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.222850197 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.203449894 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.242320899 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.20461792 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.236064656 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.222128876 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.22436198 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.190855066 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.250037941 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.248873198 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.224853593 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.2001735 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.223110914 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.205003444 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.220782964 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.206833565 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.263064528 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.188099618 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.242920765 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.188213598 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.219009694 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.198055982 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.22240391 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.193752223 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.237128897 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.190066628 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.243139928 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.197360712 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.234156872 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.191366025 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.234322954 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.18832332 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.221048291 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.193682102 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.250383027 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.197442566 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.261708 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.188429548 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.235339005 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.202841367 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.235390129 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.201587507 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.22062184 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.202045735 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.234837475 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.195067194 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.23487931 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.194128667 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.224328456 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.207372181 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.243638035 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.204616104 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.235849335 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.202001037 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.224169428 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.192303085 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.240254854 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.191024292 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.226488647 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.204024548 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.223860869 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.19469508 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.233304179 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.199270731 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.220654596 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.219162716 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.226173454 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.190353885 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.248893382 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.194798095 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.193019098 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.234719304 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.264617659 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.19046626 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.232150401 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.201540993 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.223121948 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.198560445 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.190379307 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.222780913 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.205742783 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.240985324 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.198155854 seconds)
  done (took 26.8066296 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.41551918 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.407156176 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.293604515 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.45424261 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.238029781 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.327481728 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.406365083 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.408481973 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.189994552 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.260204318 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.282532716 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.368946917 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.191911276 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.253978177 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.411330799 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.489232464 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.221639288 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.264329563 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.261372972 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.205143126 seconds)
  done (took 7.688929088 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.200382395 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.25594819 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.212284398 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.240843615 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.202223551 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.236741697 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.192619676 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.245479611 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.20326258 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.231525322 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.194794044 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.230256725 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.204404205 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.237670168 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.204558275 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.247742677 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.198256287 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.22640847 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.213742962 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.225746863 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.210811375 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.250366125 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.200720986 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.244026004 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.208145323 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.236093919 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.191415403 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.22573094 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.197587277 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.232407138 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.192132883 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.231571557 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.199597798 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.167489246 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.235990065 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.207172714 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.230821252 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.195186064 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.230983773 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.193398616 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.237525596 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.202870212 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.233982128 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.203133862 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.244813603 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.177406359 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.202943195 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.236890599 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.174740168 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.244794257 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.205474104 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.235229634 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.199630065 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.243284289 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.199199703 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.241380695 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.200251582 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.235692193 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.194170222 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.222634317 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.190332513 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.193448901 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.235918129 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.202427837 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.236597126 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.199072243 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.235192828 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.192419302 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.227525022 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.194187822 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.227743556 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.205729933 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.247723611 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.201016763 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.232591938 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.201728027 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.23548658 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.161575016 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.233568039 seconds)
  done (took 18.427931583 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.218667052 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.235857018 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.210029571 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.257848711 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.204878428 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.231958478 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.202316091 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.245389376 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.205158701 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.244733147 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.206306123 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.240143317 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.215306849 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.23877806 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.203737081 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.242120524 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.205120707 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.263195411 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.205097729 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.251605808 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.205608758 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.231664166 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.205931914 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.238096059 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.217376386 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.238380384 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.21722902 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.238711431 seconds)
  done (took 7.671387332 seconds)
done (took 79.550816555 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.528917958 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.75752098 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.449977054 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.451000577 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.469135636 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.464490212 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.450269968 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.450988845 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.000844451 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.426333265 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.451513073 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.44929673 seconds)
done (took 31.749509907 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.596036549 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.194911378 seconds)
    (2/2) benchmarking "String"...
    done (took 2.242788486 seconds)
  done (took 5.792167426 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.198068693 seconds)
    (2/2) benchmarking "String"...
    done (took 2.207845774 seconds)
  done (took 5.745668916 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.440723154 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.441111191 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.930177923 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.44200935 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.440486671 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.440730208 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.444237287 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.442409891 seconds)
  done (took 17.922318265 seconds)
done (took 35.837405232 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.505063039 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.761854423 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.720617825 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.430909266 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.441755338 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.440231261 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.441085769 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.512554565 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.450779879 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.437279279 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.954018036 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.742692349 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.450192165 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.875050312 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.430608459 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.454403454 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.458324693 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.831058475 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.445505186 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.487470089 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.442656709 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.427535513 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.445049891 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.455552832 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.454463588 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.442455007 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.4954306 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.44178551 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.760981826 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.461678822 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.490011125 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.443933827 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.501714778 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.461852237 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.452079695 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.449289117 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.761409325 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.458769513 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.441678652 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.454801061 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.747584732 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.45459468 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.442906671 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.454580013 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.435767006 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.486777753 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.439404829 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.630017266 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.473077547 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.456465589 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.531065927 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.878974903 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.447465212 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.44898391 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.459457589 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.810361848 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.479420742 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.553086814 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.478609187 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.450004571 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.445841542 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.447910031 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.493957996 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.45563322 seconds)
  done (took 160.759817646 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.444080284 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.444991364 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.44449577 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.468401185 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.444683643 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.444792037 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.445608621 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.444131199 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.44623838 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.467213952 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.447079408 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.444575668 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.448656495 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.457350757 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.457521798 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.4641658 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.449790717 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.447295497 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.457930929 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.447241161 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.468189635 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.446026272 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.446806679 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.445636697 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.492575488 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.528970479 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.458671036 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.448620317 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.457438547 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.446906691 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.459102376 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.450306285 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.199360547 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.408991395 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.458366808 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.491015094 seconds)
  done (took 89.468973745 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.446813802 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.447653993 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.448673256 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.44776099 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.483110596 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.447565644 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.076436187 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.076321368 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.520470235 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.940062211 seconds)
    (11/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.853917317 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.038247392 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.711565067 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.447480158 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.541959491 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.462188942 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.450827371 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.544598235 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.474124747 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.450737556 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.449313073 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.055580881 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.463000917 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.494093278 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.633107045 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.448867206 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.484404337 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.850539444 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.449181072 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.485446857 seconds)
    (31/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.448917212 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.788985667 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.485965708 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.449470425 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.865820018 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.618145855 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.5639486 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.451952375 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.48487346 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.449678273 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.736475917 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.449567714 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.451597162 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.453817695 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.169732059 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.452743327 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.079320631 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.45261922 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.501528023 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.45357395 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.450833029 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.990328798 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.31150309 seconds)
    (54/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.454195048 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.451499733 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.451762546 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.455204185 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.451716101 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.450804534 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.487594966 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.036884998 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.430418072 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.455575391 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.455962032 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.48593847 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.451447632 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.45176087 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.452214908 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.612343581 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.513969199 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.668789306 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.080163336 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.455242598 seconds)
    (74/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.516808248 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.553311423 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.572430265 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.453301709 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.451885956 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.453481549 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.452556293 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.567457566 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.453723759 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.899746469 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.638114945 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.454529797 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.036924528 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.556277652 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.453830686 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.872393969 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.456175188 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.454385087 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.278823096 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.55451423 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.45317767 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.454810769 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.453843467 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.901487613 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.083406347 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.797753123 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.45653962 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.926344964 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.458042255 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.911192687 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.062018012 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.165814243 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.45971691 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.568846289 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.640541999 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.457077398 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.455670515 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.058377046 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.457165608 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.511397714 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.457858433 seconds)
  done (took 401.1152683 seconds)
done (took 652.684478539 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.439527052 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.460383195 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.453121937 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.440367173 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.441773287 seconds)
  done (took 13.58748197 seconds)
done (took 14.940580852 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.456993588 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.457332249 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.457778954 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.267985265 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.468371362 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.465615075 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.460242884 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.464538821 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.458680605 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.458201354 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.258801975 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.460187291 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.459477354 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.451014267 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.25989129 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.459793456 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.37426987 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.460700973 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.460005424 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.875194185 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.898425352 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.588984535 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.837535137 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.533232333 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.867614171 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.90369753 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.748072294 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.710490839 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.516341848 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.509715796 seconds)
  done (took 20.344890995 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.360456592 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.841968242 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.911370154 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.591917659 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.845163131 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.53858909 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.867108729 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.892330931 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.751920828 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.712030838 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.566059413 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.51299247 seconds)
  done (took 20.388460502 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.252395224 seconds)
done (took 92.760569555 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.52277444 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.598055242 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.517092502 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.50170514 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.500558555 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.501467051 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.503814626 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.501079222 seconds)
  done (took 13.503206659 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.498829774 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.498244854 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.498800232 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.499817749 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.499529235 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.498892702 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.499431667 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.498557044 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.498352409 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.497804644 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.500250137 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.502192283 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.500091457 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.500337299 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.500614219 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.499787089 seconds)
  done (took 25.349211238 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.50282281 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.49971194 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.499640422 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.502405508 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.499949539 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.501672105 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.501709959 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.503657343 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.501145223 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.499090142 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.502015725 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.502760512 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.500594314 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.499933616 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.499911266 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.506107027 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.500615547 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.502085984 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.503545318 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.501377096 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.502501051 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.501116937 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.502634029 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.501553515 seconds)
  done (took 37.397172714 seconds)
done (took 77.605739321 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.463049806 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.473788043 seconds)
  done (took 6.296336008 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.600548435 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.600288975 seconds)
  done (took 4.562657444 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.503986366 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.502848651 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.504161318 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.501451407 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.504167953 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.502278327 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.504524144 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.502508314 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.503357166 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.502262473 seconds)
  done (took 16.392464712 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.502816455 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.503448798 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.502747661 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.502538626 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.502863737 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.503419953 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.503420303 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.504210207 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.503131509 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.50542775 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.503756169 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.503983782 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.5057669 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.503890544 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.503450823 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.503443071 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.503882442 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.504365674 seconds)
  done (took 28.428074269 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.524513278 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.529811368 seconds)
  done (took 4.415253505 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.685282255 seconds)
    (2/7) benchmarking "second"...
    done (took 1.58568656 seconds)
    (3/7) benchmarking "month"...
    done (took 1.672034482 seconds)
    (4/7) benchmarking "year"...
    done (took 1.65733792 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.58509242 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.533689235 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.586959975 seconds)
  done (took 12.66753796 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.506672531 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.853397489 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.043473126 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.726615235 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.495651508 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.517228133 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.460361615 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.520935938 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.520069277 seconds)
  done (took 17.006886141 seconds)
done (took 91.128960815 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.467985419 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.481849263 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.493519462 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.486318337 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.86791805 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.522503176 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.473053452 seconds)
done (took 18.157050698 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.453191499 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.473458252 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.455614712 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.478760114 seconds)
  done (took 11.224939708 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.469747096 seconds)
    (2/2) benchmarking "read"...
    done (took 1.880618618 seconds)
  done (took 5.713589277 seconds)
done (took 18.302741711 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.509041478 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.506187973 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.513510133 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.506817941 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.506740696 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.506878284 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.507847052 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.507255007 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.506455186 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.507477802 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.507888957 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.506651928 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.508352913 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.508109866 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.507053446 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.506902099 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.508113566 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.5068273 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.50860504 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.50740796 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.508936995 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.506741744 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.508224894 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.508562506 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.508127674 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.508732151 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.5082749 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.50834984 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.507893357 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.508001192 seconds)
  done (took 46.601113243 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.514617956 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.514905771 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.508343973 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.50843763 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.508575497 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.509655313 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.508958717 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.508784531 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.508739763 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.50835396 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.509113764 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.509491255 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.508959904 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.509534138 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.509119631 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.509983008 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.509248208 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.510634697 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.508971008 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.509085408 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.50966076 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.509505713 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.510437744 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.51148299 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.510444869 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.510713827 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.510776824 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.510119129 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.510560107 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.510535802 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.516089302 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.510046075 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.509358208 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.511136926 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.515977765 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.512660793 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.517134337 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.517120368 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.515457028 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.510382919 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.510832488 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.510358126 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.511606748 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.512693269 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.512274152 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.510947027 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.511330596 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.512663168 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.511320958 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.510339897 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.513421085 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.511927878 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.513053091 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.512324647 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.511801745 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.513609307 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.511970133 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.512464819 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.512816749 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.511189167 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.513940845 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.51341892 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.511791968 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.512721765 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.513373454 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.512791676 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.511319142 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.512892666 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.513963752 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.513745707 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.513742634 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.514273777 seconds)
  done (took 110.199071826 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.513664552 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.513733764 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.512786367 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.5130188 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.514452292 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.51274132 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.513777625 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.513083194 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.514981618 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.514185498 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.513140184 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.515445504 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.513671466 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.513679148 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.513627117 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.515642108 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.516329486 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.514284393 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.515911625 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.514496362 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.514940832 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.515050622 seconds)
  done (took 34.683455628 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.515514648 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.515946895 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.516425308 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.516967346 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.519881683 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.516946953 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.515665155 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.515348076 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.515677378 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.514701834 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.515757137 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.516633714 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.518521524 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.516039924 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.514900743 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.51668861 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.515673955 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.519112731 seconds)
  done (took 28.668812633 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.517142857 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.516409174 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.517554083 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.51759934 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.51639793 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.515896121 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.516781987 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.517076439 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.516800495 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.516251333 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.517428508 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.516848336 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.517312432 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.518285041 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.518819538 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.517269619 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.517515251 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.517248248 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.519123696 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.51842654 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.517869207 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.518781194 seconds)
  done (took 34.756114727 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.519812331 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.517283867 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.517883384 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.517734483 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.518412432 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.519168883 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.517831493 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.517511689 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.520366731 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.518145429 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.518498058 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.519488616 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.520670611 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.518354254 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.518983106 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.519175378 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.519994477 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.519607836 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.519921702 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.519712528 seconds)
  done (took 31.753325825 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.520177251 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.520669144 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.521528401 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.5208955 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.520668515 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.52250171 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.519836147 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.521460864 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.521279487 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.521707474 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.520478058 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.521958903 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.52279616 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.522047951 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.522267671 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.521740928 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.5212299 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.522645163 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.522830732 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.522852732 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.522603887 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.522776465 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.522249233 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.52205675 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.522342541 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.521567163 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.5223299 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.522405259 seconds)
  done (took 43.986502684 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.548211473 seconds)
    (2/2) benchmarking "in"...
    done (took 1.548240388 seconds)
  done (took 4.474042544 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.522663532 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.520774255 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.522414618 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.52214901 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.521970356 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.522437385 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.522247836 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.525003983 seconds)
  done (took 13.557377164 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.516164381 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.523510637 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.523077551 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.524360604 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.52392689 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.51414953 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.531512003 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.527485444 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.519328052 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.516942413 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.520563404 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.523664636 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.520741779 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.516355397 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.515187162 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.529175532 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.526271881 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.5255463 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.530009088 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.525993075 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.525576472 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.519746959 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.523119595 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.528752295 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.518804382 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.536782436 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.533509813 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.529115469 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.519114337 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.530230765 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.520932306 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.527605711 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.526961774 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.52749592 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.527797564 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.525912967 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.537222436 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.524709113 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.534542766 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.530858288 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.527723462 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.525997824 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.523223449 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.525891596 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.524445742 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.531003837 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.529138796 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.52705585 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.517662756 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.525133119 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.533959311 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.518382819 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.528823253 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.532877749 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.526869303 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.538082671 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.535318911 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.523529075 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.526972669 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.539127986 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.547369955 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.535763661 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.537545801 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.532247641 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.535197947 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.539073091 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.541928621 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.534943445 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.530353894 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.528378015 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.536902353 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.550403022 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.543749662 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.533694962 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.529199069 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.53040481 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.523985557 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.533664022 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.539104239 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.537529528 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.534456023 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.530706384 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.535474588 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.534526702 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.524937774 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.534158638 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.531542594 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.53137225 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.52254962 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.542190107 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.538147064 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.531079127 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.522917125 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.525694573 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.526253233 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.533974257 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.523945049 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.533109901 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.534974384 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.532724588 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.532062562 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.53103792 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.54070577 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.535433591 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.533213057 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.542753865 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.53809629 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.525736967 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.542525834 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.539229954 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.533731978 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.524850821 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.539310131 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.53642855 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.529674898 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.538066957 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.538126462 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.534466639 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.53820189 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.534768492 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.538972868 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.548574438 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.537935306 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.533303572 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.534814798 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.540391903 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.533969438 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.536235928 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.539203065 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.53500246 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.533963921 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.535352016 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.539690417 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.533983686 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.53916137 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.53449688 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.537635687 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.535229236 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.534824365 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.536339502 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.534244893 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.534172118 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.542052659 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.542736964 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.540484722 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.537136462 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.550662064 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.534603806 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.541355853 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.537161674 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.540285046 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.536765464 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.535725597 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.539413078 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.528374872 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.538713547 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.529547787 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.540007707 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.537353878 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.536543997 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.537865255 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.528266827 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.533597394 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.541834475 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.542999008 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.535596461 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.540310608 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.537225299 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.538751331 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.529604917 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.541048621 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.52745192 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.534793984 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.543644622 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.537812036 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.536818893 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.543036793 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.541690253 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.538450176 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.537231585 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.533328016 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.544390805 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.542897459 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.546744596 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.545913066 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.537881598 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.539018823 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.53403481 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.533138187 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.539590196 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.535015801 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.546334349 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.556756833 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.553315195 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.534504772 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.542083459 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.532065355 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.543018215 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.54605226 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.545451695 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.538119617 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.539010862 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.532168721 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.542183751 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.538556893 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.542514589 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.530655469 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.542572139 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.541270716 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.540262277 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.540139496 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.538502836 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.543426996 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.544019879 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.541967453 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.540462233 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.533635946 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.54413386 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.531987553 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.535586683 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.545653116 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.541315903 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.551023493 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.547603016 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.543390259 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.547434558 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.541157014 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.535902925 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.543803999 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.54529965 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.540631668 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.554391868 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.542160005 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.544881021 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.554081353 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.541635148 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.534924099 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.547501327 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.549789048 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.542302481 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.536347883 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.550403371 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.543630514 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.543448786 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.542557192 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.536864918 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.546318635 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.551406572 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.551122807 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.535320519 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.547094152 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.538737643 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.546636692 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.547316038 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.548743105 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.546176159 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.551902585 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.551220235 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.543750291 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.5432797 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.547537784 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.54380798 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.542959897 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.537742963 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.550778489 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.552514045 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.542639116 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.55009181 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.541134456 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.547158336 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.538738062 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.546781263 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.545618965 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.567321305 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.563752416 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.561498009 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.552705341 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.550092019 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.554937677 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.547141085 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.541186487 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.540906564 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.543629535 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.543542513 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.540033199 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.548698686 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.546596952 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.550121632 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.550903156 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.54474993 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.550480477 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.546721339 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.541053719 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.549966095 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.545221568 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.546894266 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.538450595 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.548891937 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.549058648 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.554058026 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.545855517 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.542917224 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.560528542 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.551619867 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.555224096 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.550673309 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.542964926 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.539652843 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.548555372 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.553153024 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.543703497 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.553597004 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.543602088 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.555678694 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.543761745 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.560635539 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.555845125 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.543599294 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.555216344 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.547995105 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.538098665 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.541778602 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.549715645 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.560091405 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.559516263 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.541891395 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.55330409 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.549248895 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.549671225 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.549861194 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.548821258 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.549995079 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.550141816 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.562367393 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.552053232 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.547649879 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.556322211 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.557865144 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.550721708 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.551263537 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.540692081 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.560180733 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.558907456 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.55157049 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.558483241 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.546311231 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.552678592 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.550803353 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.550323822 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.551832255 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.550658782 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.562638307 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.554410097 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.558345862 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.552203251 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.564376238 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.560576732 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.562174632 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.562178892 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.550782052 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.557225329 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.552130058 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.549364972 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.546169593 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.553886217 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.555500878 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.54309099 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.55782743 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.553544763 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.556092992 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.560514853 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.562469152 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.543087707 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.560167882 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.565505851 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.545139504 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.55743178 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.552911162 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.544207053 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.557370599 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.552350966 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.543797714 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.549500114 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.553207709 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.561083222 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.546823657 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.558130052 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.550114229 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.55765597 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.554699729 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.554102865 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.55370414 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.554961703 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.546922692 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.556113177 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.562983044 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.563682574 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.553969817 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.557430312 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.550438432 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.568719179 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.564320365 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.554779138 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.563023413 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.556082376 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.549846877 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.559349202 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.563474308 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.555934382 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.561133158 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.548376508 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.553270985 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.552923315 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.561856155 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.559564872 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.559470098 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.551062534 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.55033388 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.563225184 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.556307684 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.556737138 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.559717127 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.565253584 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.54852485 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.548950114 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.568403077 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.554823626 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.563795229 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.552862343 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.555494313 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.553883144 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.562118479 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.563650099 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.557106319 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.5483492 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.551678324 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.570666912 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.561586149 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.556201595 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.554964986 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.561052352 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.55185635 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.556487805 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.5583511 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.554408909 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.557747742 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.563009933 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.560692879 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.5518963 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.554060541 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.561508415 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.571799807 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.560512548 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.552784122 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.572078335 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.5701401 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.567141604 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.551338826 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.556774783 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.554478332 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.561699501 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.559807152 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.551783575 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.574651916 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.568213947 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.563693051 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.564263444 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.557507837 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.55280249 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.563604771 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.56150213 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.56454274 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.566894575 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.563580815 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.56903074 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.560971475 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.562725469 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.55341409 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.555304274 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.559296682 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.559470377 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.562903495 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.564564251 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.561592225 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.563426397 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.56769754 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.563036542 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.56203013 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.561436898 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.553283137 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.564339991 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.554908553 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.570779287 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.56131733 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.554808541 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.566132956 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.563211984 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.557400141 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.56139611 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.570024094 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.563594155 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.554429373 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.564543159 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.572463021 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.570046652 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.563760727 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.557184052 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.572206144 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.567031395 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.563568175 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.563771692 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.557825125 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.583494241 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.575250246 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.556510084 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.561901273 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.57432436 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.571593567 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.563461945 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.564951311 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.56812909 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.565828937 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.570687795 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.56559448 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.576175434 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.568642702 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.557897132 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.566439978 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.560831863 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.563502175 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.571825998 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.573473763 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.564694854 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.564914784 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.582732344 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.57414438 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.570753516 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.587280268 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.571275998 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.566733591 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.571780252 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.556385557 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.566774169 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.568510213 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.570256455 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.561895476 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.564337546 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.564279578 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.554654192 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.571229414 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.575712805 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.573447084 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.565131502 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.55426755 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.558853679 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.566045725 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.564772028 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.566888079 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.564017045 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.565051883 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.566121432 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.559173412 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.58665442 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.58444101 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.57017984 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.564853394 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.564543088 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.571225433 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.569096531 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.565306664 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.570823776 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.567229883 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.565979375 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.57035982 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.574391129 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.566414556 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.561311183 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.561456663 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.560254904 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.568957128 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.582519327 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.585447144 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.574183631 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.567329895 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.568309769 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.566655717 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.567180366 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.569416683 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.566271591 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.568700601 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.563231889 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.571115573 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.567124353 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.567791896 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.56262832 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.576808545 seconds)
  done (took 924.343058104 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.568361381 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.56704208 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.567683642 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.567343026 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.567161928 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.568755635 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.568345458 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.567971738 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.568569998 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.568246074 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.569994201 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.567842251 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.56897389 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.569621458 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.56863048 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.568540176 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.570333421 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.569255141 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.570190525 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.569612519 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.570102246 seconds)
  done (took 34.358620814 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.569279236 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.571883199 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.56986269 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.575877422 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.569539185 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.569614265 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.569833286 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.571172004 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.570275522 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.569970874 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.571210976 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.570374487 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.570096309 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.570074588 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.569483801 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.569741935 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.570187522 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.570449916 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.57088377 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.570625706 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.570622283 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.570792766 seconds)
  done (took 35.969665976 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.570303877 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.570861979 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.565244086 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.574710234 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.571246316 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.572045649 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.571364138 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.570891662 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.571296741 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.563681736 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.564893692 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.565746175 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.569418429 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.577926704 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.573662336 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.577428875 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.57252909 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.572126385 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.571482938 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.571227808 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.582347099 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.581713359 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.57183836 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.563740333 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.574307948 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.572509185 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.573064563 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.572925579 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.565813222 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.576349479 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.574556303 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.56621921 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.580289505 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.572622747 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.566782829 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.577545301 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.577219073 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.574431847 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.574472983 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.580365352 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.586413398 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.57382772 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.588536433 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.584034395 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.574483948 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.572152087 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.58116727 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.5740341 seconds)
  done (took 76.952175694 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.57512565 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.574931491 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.573503167 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.574095631 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.574664418 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.574929186 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.574776164 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.575415351 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.575572494 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.575787815 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.57571986 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.574895732 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.574973257 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.576191917 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.576144215 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.574957263 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.575839777 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.577027987 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.576205046 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.57737866 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.576922666 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.577793866 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.576588196 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.576174037 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.576794786 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.576112507 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.576644768 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.577835142 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.577959669 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.579468521 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.578483758 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.577645663 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.577453879 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.577105231 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.576630171 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.576998793 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.578334229 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.577631694 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.577701955 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.576607612 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.57782327 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.580351803 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.578309434 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.577967421 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.578812851 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.577388508 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.577112215 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.57969739 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.578687415 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.578029022 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.579410273 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.579236438 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.579781688 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.57923127 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.57933233 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.58066588 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.578272349 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.579740901 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.579475015 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.579547232 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.580328615 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.579725117 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.580251651 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.579920044 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.580936165 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.581047004 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.579783295 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.582252255 seconds)
  done (took 108.702476693 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.580214635 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.580778184 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.580321073 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.580064266 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.581644775 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.582437473 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.580591778 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.58143574 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.581547137 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.580965149 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.580853683 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.58157612 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.581609575 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.581742902 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.581864007 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.582045594 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.581766648 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.58239047 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.582924826 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.582714953 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.583304763 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.58206934 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.583282902 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.582593639 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.582690439 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.582723124 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.583435575 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.582343956 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.582349543 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.58190654 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.58408042 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.583105295 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.5825664 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.582178501 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.584334921 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.58359621 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.584015188 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.584026153 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.584611912 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.583127714 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.583134559 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.584053112 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.585701576 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.585248445 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.584475582 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.585093607 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.583457366 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.585132719 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.590483748 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.584587188 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.585745086 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.584444712 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.58468762 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.583790369 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.584979486 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.586617684 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.584767518 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.584728756 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.584627347 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.585914102 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.587035405 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.58587576 seconds)
  done (took 99.595686088 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.585232661 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.585856763 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.58472722 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.585424795 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.585044369 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.585299639 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.585577747 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.586755481 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.584314249 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.586674883 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.587566687 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.585141379 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.586464243 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.585894128 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.586712598 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.586770357 seconds)
  done (took 26.805048604 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.585371226 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.587452496 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.587298147 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.587140376 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.586095131 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.58681324 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.587701481 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.586923659 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.586276998 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.58764009 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.586960255 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.586200382 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.587258896 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.586303048 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.585886306 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.586797246 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.587300313 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.58841903 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.588421335 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.588069405 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.589886744 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.58687924 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.587487068 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.58694922 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.587743665 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.589609265 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.587700922 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.588536503 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.58723955 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.589108503 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.588536503 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.589702643 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.59011331 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.59410013 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.590173513 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.588878655 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.588812376 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.590044726 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.589529157 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.589296237 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.588681354 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.59022799 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.588855608 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.59034616 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.590327932 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.589071628 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.589801887 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.590479837 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.590371723 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.59067197 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.591518796 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.590847621 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.590403151 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.591598554 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.590519088 seconds)
  done (took 88.808401825 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.591040453 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.591000504 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.591986104 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.589772345 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.592039462 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.590740275 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.590167507 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.593496422 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.590791887 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.59145503 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.59012197 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.591628587 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.592091145 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.593213495 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.591374154 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.592410739 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.591955513 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.591431285 seconds)
  done (took 30.082196556 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.591784682 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.592671177 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.591876173 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.592105811 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.592215044 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.592194161 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.590342878 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.592585342 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.592536803 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.59315853 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.592048053 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.593155456 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.592518853 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.593861901 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.593911908 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.594788764 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.593310993 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.594305602 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.594637977 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.594518898 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.594569184 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.593366377 seconds)
  done (took 36.483527969 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.583651944 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.583717035 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.58379854 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.605973986 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.594615349 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.584028737 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.583189175 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.584562394 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.607948749 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.617577557 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.613836578 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.593327476 seconds)
  done (took 20.574999517 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.59518232 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.593803793 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.595749571 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.596108137 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.594052777 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.59460145 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.594744415 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.595782327 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.594840238 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.596319825 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.594660397 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.593696167 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.595564213 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.594147133 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.595163114 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.595857337 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.594797425 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.596811788 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.596174835 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.595793222 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.594971051 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.596580473 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.59611505 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.596607781 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.595799857 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.596110301 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.595175686 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.597340206 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.5962606 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.596496664 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.596203051 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.597304378 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.596659673 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.596644657 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.597104283 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.596402098 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.596939457 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.598060898 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.602014963 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.597416124 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.59892302 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.595835825 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.598295216 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.598605241 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.5978138 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.59770827 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.59681081 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.599375172 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.600954633 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.598673267 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.597282029 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.597732924 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.599468341 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.602409985 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.598556003 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.599996619 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.59891422 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.599844855 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.599955134 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.599782207 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.599357363 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.598844658 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.598836067 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.602382677 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.599799597 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.601537109 seconds)
  done (took 106.860430578 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.598613204 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.599145813 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.598777889 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.60040987 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.600378442 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.599511781 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.599997877 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.599363648 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.600562543 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.599744632 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.600187357 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.600525807 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.599969242 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.600226887 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.599815591 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.6000365 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.600271235 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.59989542 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.601385134 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.601767864 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.600942829 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.600005699 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.600965178 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.601502957 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.601401617 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.60139156 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.601333312 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.599484264 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.601798735 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.602223369 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.63618963 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.601090754 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.601264309 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.602463065 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.601066379 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.603531287 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.602479617 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.60203794 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.60172149 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.601576779 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.605526723 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.601974106 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.602641509 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.603421008 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.603451319 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.603036811 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.603252201 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.603834678 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.603135915 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.603799268 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.602584728 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.602752557 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.603971217 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.603901935 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.604382513 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.603862824 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.602991763 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.602780004 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.602824772 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.604882646 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.602991973 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.605365319 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.603068448 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.603454951 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.605829136 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.605040347 seconds)
  done (took 107.206309827 seconds)
done (took 2046.786616563 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.566788975 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.568413553 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.592592326 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 10.742116927 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.593899336 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.237832759 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.173349209 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.594516663 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.595029088 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.59463246 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.594013596 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.568383451 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.911871545 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.593325381 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.59449138 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.568549954 seconds)
  done (took 58.537715378 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.633450804 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.612111009 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.746065474 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.599388511 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.634355388 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.859120562 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.672007173 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.601824785 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.804347746 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.605951637 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.580833987 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.631385527 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.599478467 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.572483903 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.625515438 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.859606169 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.942994985 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.582507664 seconds)
  done (took 34.612139156 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.175712149 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.593711603 seconds)
  done (took 6.219827605 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.630333927 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.603575706 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.609211898 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.601851325 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.570578563 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.5720145 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.603061605 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.578529644 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.584396871 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.759171889 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.608852076 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.626586314 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.603436233 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.606412659 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.610533155 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.663332816 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.796932487 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.613502248 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.609962901 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.614318832 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.601453229 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.855418276 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.658377507 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.613312769 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.75788213 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.59029797 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.618820871 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.625403761 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.81308049 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.614967099 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.603784391 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.60399636 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.606821999 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.574821282 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.234239424 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.589490396 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.641669377 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.619648141 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.612028108 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.813229951 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.606456519 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.617693214 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.573730221 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.233848523 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.787019634 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.889129476 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.575992939 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.628686581 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.606641179 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.806731359 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.607273034 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.606626024 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.712329271 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.589732186 seconds)
  done (took 101.415052504 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.607716107 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.574832247 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.841909436 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.604614386 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.57505972 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.577970914 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.580588565 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.978848428 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.640849789 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.576450189 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.993026907 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.364530084 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.579840496 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.628189521 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.625968917 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.613221556 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.575186202 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.585522992 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.577978247 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.576899409 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.272954612 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.580286222 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.580744381 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.734354417 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.651008972 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.275174169 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.579485213 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.576868609 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.580418012 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.575836005 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.331974269 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.588172351 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.635434576 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.578543194 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.979163691 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.107440758 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.066163023 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.578883949 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.628010797 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.576962196 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.579738527 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.262654979 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.081461476 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.578347707 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.580479473 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.26445884 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.57852685 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.580786844 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.588948636 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.942701373 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.57877786 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.577934178 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.579091657 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.581254851 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.578422996 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.648533379 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.636927783 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.264018979 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.578392965 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.579681327 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.625435818 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.582239264 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.583721087 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.582929156 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.582530991 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.093598913 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.759462778 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.580822115 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.087710386 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.323514394 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.583178768 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.398070034 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.584694115 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.587524433 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.655249456 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.581253175 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.580014889 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.258338647 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.61086106 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.579612603 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.070305798 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.583741899 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.002810274 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.603873789 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.582704058 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.29575856 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.585317728 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.649875588 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.581221956 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.582251765 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.585813392 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.582798483 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.983455508 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.659406339 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.582541606 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.581186476 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.624027329 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.581204565 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.583903442 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.581639956 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.398456675 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.591384701 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.582917632 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.589874942 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.582273905 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.5847187 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.584863759 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.587317353 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.958541166 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.583537962 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.591471164 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.597708759 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.583829759 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.587332928 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.737769935 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.591197805 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.024815097 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.586348655 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.584565397 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.587731652 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.584286801 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.6357585 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.586577456 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.586868833 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.585405728 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.064506387 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.605399192 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.608562653 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.585772953 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.58468769 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.587158325 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.586145417 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.624270377 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.58431788 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.547826368 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.594566949 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.600236734 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.584589912 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.592367647 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.59366425 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.589133018 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.588419869 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.004183772 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.991072678 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.791686569 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.587109506 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.586605881 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.545885758 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.588719976 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.854937699 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.609383637 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.58752129 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.975261938 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.853514752 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.58870517 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.586294877 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.586669786 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.963257269 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.589726459 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.006579328 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.345249281 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.588043773 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.596976473 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.545830724 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.431413589 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.591961031 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.59113432 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.004884629 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.609143524 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.585461461 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.587557817 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.588530776 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.587278382 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.594657883 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.591629424 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.588946681 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.589213894 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.701558417 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.866807015 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.608852494 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.596152905 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.265834223 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.602201858 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.588701678 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.598158467 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.591743895 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.588961767 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.62620086 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.596030194 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.632633661 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.588037976 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.595781629 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.354743505 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.59857528 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.592653716 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.871784673 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.499640282 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.589852802 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.590823596 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.589072186 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.636330081 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.299095786 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.648893689 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.030113675 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.602659459 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.662963565 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.589340166 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.614177543 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.300659322 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.607683841 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.589477894 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.474037865 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.590395189 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.288776038 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.591674821 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.592840054 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.40791968 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.59223432 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.591417037 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.591475843 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.615311975 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.998862215 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.592092472 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.640168488 seconds)
  done (took 561.584897787 seconds)
done (took 763.816790479 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.591469907 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.59564907 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.595166467 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.596218975 seconds)
  done (took 11.848772669 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.632348639 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.620516269 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.631499578 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.619191798 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.631325534 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.621944942 seconds)
  done (took 11.228156667 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.591937424 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.597280562 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.596138308 seconds)
  done (took 9.256532622 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.915068949 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.59463253 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.099951886 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.610358622 seconds)
  done (took 10.691859419 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.631910804 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.632952138 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.630924505 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.632278727 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.633739807 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.633357845 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.632276912 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.632564727 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.634967896 seconds)
  done (took 16.163466388 seconds)
done (took 60.658876595 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.753168682 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.758283368 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.60867398 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.671143656 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.823652086 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.752883659 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.760247934 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.768512183 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.767167948 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.666271808 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.757104727 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.659083813 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.757399108 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.894361287 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.663851597 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.759023057 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.657081323 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.852799158 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.758612251 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.66770495 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.784308675 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.665774118 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.671836062 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.59908554 seconds)
  done (took 44.950701274 seconds)
done (took 46.422757043 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.661393394 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.783507944 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.628490537 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.628226257 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.638290735 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.596200117 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.656628542 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.637229776 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.649341233 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.650197696 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.597790194 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.636242081 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.652228611 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.63768563 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.670328748 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.63050888 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.628248467 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.638209789 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.651242661 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.670007828 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.633103484 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.638924195 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.663561058 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.628613597 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.646879817 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.64780242 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.643587219 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.59944187 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.637521363 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.653993291 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.602425909 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.645230654 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.653626414 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.63870238 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.632449629 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.639850361 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.64088499 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.784548021 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.659836352 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.640703612 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.638327402 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.654572554 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.645200413 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.645042431 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.642020469 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.66579095 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.647760166 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.653963189 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.60268083 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.600577979 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.661193438 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.649449487 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.642009993 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.601340575 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.60237709 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.656008212 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.640988844 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.660740727 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.64485854 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.641704437 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.674788323 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.66307189 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.651784839 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.649353525 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.639444514 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.656956237 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.64123224 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.65707364 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.639745041 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.637777262 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.636226018 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.639237084 seconds)
done (took 127.938455864 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.810805411 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.603080811 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.841336806 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.639947859 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.857127432 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.811969036 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.639779053 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.640781904 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.640100742 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.492399837 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.641357955 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.64094631 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.603564601 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.64096873 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.810179144 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.642967378 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.640988913 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.391291239 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.642674672 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.823437674 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.605940393 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.641926812 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.642346279 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.507629986 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.603432951 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.604622976 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.824777857 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.642788444 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.402566905 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.609517174 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.604711116 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.405083705 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.822107965 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.662613032 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.653676002 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.650004794 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.859886652 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.645459385 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.813632306 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.81365235 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.845081138 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.681859963 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.611580565 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.613053588 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.645864464 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.645069879 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.644187156 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.67200438 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.605059833 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.642494202 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.396565374 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.65453498 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.644591746 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.643445301 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.64405292 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.673669536 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.645553111 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.645416641 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.825204099 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.645894426 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.814652478 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.509813294 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.497262676 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.64521494 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.608055396 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.646050381 seconds)
  done (took 129.699498243 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.759480867 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.769508678 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.812233246 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.636117065 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.729656125 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.813233932 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.637412062 seconds)
  done (took 13.638173961 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.649068572 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.64610388 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.729328499 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.729442131 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.646215835 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.867639802 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.647311017 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.656894917 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.646361105 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.730896017 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.648202052 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.647667766 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.656784218 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.610490342 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.724759482 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.656078472 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.809797112 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.640271294 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.646694528 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.848859482 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.647453004 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.656199437 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.731854938 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.656622815 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.648208058 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.651065963 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.457242503 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.64765715 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.647274629 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.648576471 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.647438896 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.757031533 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.647550153 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.611375092 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.649514508 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.809911093 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.649397525 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.649216915 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.648055106 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.614236839 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.649035188 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.646920324 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.649216008 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.647967874 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.648417232 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.672443123 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.649037214 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.648320083 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.649385861 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.648839912 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.730580125 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.647958724 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.651515811 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.648761759 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.733090919 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.657495692 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.650744623 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.648348858 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.653849417 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.649393823 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.851943044 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.731752411 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.650569252 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.73155909 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.651539836 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.650074985 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.650672547 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.650214249 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.786573768 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.649873074 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.733080093 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.651268223 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.88200357 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.674109116 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.650810274 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.648071518 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.646352794 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.649692324 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.615356534 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.655689596 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.650993328 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.644682539 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.655665291 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.651134408 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.652933938 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.858512315 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.813500307 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.652159119 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.666430278 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.65790552 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.651248249 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.733815313 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.650861887 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.650855042 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.736729371 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.815181317 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.736814646 seconds)
  done (took 169.273805843 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.661822988 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.662873261 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.647842159 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.678326203 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.643868749 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.643684718 seconds)
  done (took 11.425913659 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.645427258 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.656417202 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.652339449 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.651261868 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.651503519 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.655016465 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.654911075 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.645963009 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.65724119 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.653964865 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.653789774 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.654881253 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.655228644 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.654415202 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.653854376 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.654997958 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.654589176 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.657187342 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.654535957 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.655802739 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.616955061 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.654659437 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.655144625 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.651694534 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.658422066 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.6560791 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.678638114 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.65562597 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.654850801 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.662996111 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.657099761 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.656332345 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.651899309 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.6524271 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.658908999 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.64806181 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.660206581 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.657586276 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.656405957 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.656657038 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.656192104 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.65919933 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.655315735 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.658864231 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.648700439 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.653181735 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.661798333 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.680210102 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.656353926 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.658927088 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.657330516 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.657830022 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.656803425 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.658598275 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.651056464 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.652058408 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.661807482 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.658966129 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.658122866 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.650637766 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.659688917 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.65828406 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.650247562 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.662981165 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.65803319 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.65949392 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.650655087 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.662297838 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.659086187 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.657618402 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.659703025 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.658362422 seconds)
  done (took 121.714931839 seconds)
done (took 447.228174767 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.003758509 seconds)
  done (took 4.498192333 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.871757784 seconds)
  done (took 4.368587933 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.862233669 seconds)
  done (took 26.364536301 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.637524786 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.626226212 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.645359791 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.626616276 seconds)
  done (took 12.030118565 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.218832507 seconds)
  done (took 4.713978992 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.630848448 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.641857181 seconds)
  done (took 6.76904591 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.046449552 seconds)
  done (took 4.541027599 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.34947412 seconds)
  done (took 4.852096136 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.648468007 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.640604996 seconds)
  done (took 6.792302988 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.608468926 seconds)
  done (took 4.10378296 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.013216765 seconds)
  done (took 17.511960914 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.637306323 seconds)
  done (took 4.136746439 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.639082666 seconds)
  done (took 4.134124459 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.664741165 seconds)
  done (took 7.160995264 seconds)
done (took 113.472195455 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.623620015 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.628366918 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.626881812 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.627192886 seconds)
  done (took 12.002395487 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.779974325 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.779349524 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.780930941 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.768188329 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.769621962 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.783478611 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.693710073 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.695754118 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.759495534 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.755415964 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.785946313 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.770930786 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.780484166 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.695523572 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.75475799 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.78558677 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.758023349 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.781403138 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.694755527 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.77234165 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.663150321 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.771954939 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.757862715 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.662054023 seconds)
  done (took 43.498121725 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.207591621 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.778906801 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.863995066 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.745377048 seconds)
  done (took 9.092287294 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.827956684 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.830594938 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.843284331 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.880505405 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.932466552 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.838060901 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.696895115 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.692704009 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.679670508 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.831238665 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.904350477 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.818487672 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.04663107 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.663213248 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.044784815 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.663120219 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.664291178 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.829327459 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.878920777 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.90679122 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.663709959 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.828032671 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.835900501 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.824962798 seconds)
  done (took 45.124596572 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.680482902 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.691043323 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.665967299 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.666379851 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.666799737 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.666648881 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.688963799 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.671830475 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.678473708 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.66657869 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.666235281 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.667356862 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.688376294 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.666586792 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.666967427 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.680601004 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.666561509 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.681201429 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.683472807 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.668562881 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.666510874 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.681361296 seconds)
  done (took 38.327095716 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.628313698 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.628409171 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.06852289 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.972256039 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.629081254 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.627517508 seconds)
  done (took 16.054540944 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.751203348 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.954522848 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.661977127 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.106965278 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.240167133 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.662994156 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.659922955 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.998327721 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.377734068 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.340364931 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.726329933 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.75052484 seconds)
  done (took 24.73399718 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.797616094 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.640121554 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.648610553 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.690175894 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645015962 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.642550146 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.695372505 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.276050468 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.670643592 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.999006298 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.643576044 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.80108085 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.979722631 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.642441124 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.646911036 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.629010994 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.959843217 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.308927343 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647055606 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.64501673 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.706633574 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.640228133 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.645027834 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.93050031 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.64788581 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.643046018 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.989788297 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.642480304 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048360689 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.004751722 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007740928 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.645052349 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.998595422 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225388717 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.823620309 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926554627 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.640620291 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.643517657 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.621821253 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.643201974 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.647915632 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.663441279 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005414097 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645746083 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.64262278 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.651708364 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291222229 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.680081943 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.643794089 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.646035645 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.011755335 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.806592305 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.671211262 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.644696857 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.716103563 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651248249 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.673040056 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839659498 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.372182314 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.647237683 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.655524491 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.650130578 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.650974122 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656801818 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.452983162 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.67537059 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.675317091 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674139917 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644496552 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.645128127 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.699581281 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.646379752 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.695257407 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.646802432 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.600891636 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.652649754 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648293683 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.374468988 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.665609712 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.65045171 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.958748176 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647407187 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.647699124 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.645227162 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.64793868 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.639444304 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.676575841 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.621708109 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.711122832 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.283925142 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.930944431 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.696469712 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.707331149 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.954873661 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.621643297 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.649962052 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.653671951 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.650404566 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.698759319 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.291443207 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.650834998 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.676852273 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986155502 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.947575387 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.64995395 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.646818984 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294180566 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.670823294 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.703830494 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.654662859 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.937546946 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.433340511 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.022930988 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.6687085 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.714795506 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.649833614 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.660250301 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.664129426 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.680042553 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.662467553 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.038162186 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.636382043 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.650592439 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.801648171 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.652210802 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.651158922 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.649711671 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.650610039 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.651108357 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.936660312 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.662982423 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.016830492 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.656751323 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651077627 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.66097267 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.663130417 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.652252427 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.954226093 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.671017523 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.009072383 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.652368434 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.652268071 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.653050992 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.962588818 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.658997419 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.684387379 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.079792619 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.665842842 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.668506239 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022212462 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.716931811 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.848936097 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.715468566 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.654712237 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.993789294 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.680386731 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.68068209 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.653717558 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.653781183 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.65811665 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.68216496 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.64464699 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461681615 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.655287729 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.66202448 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.651803138 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.697276657 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.805163352 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68328654 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.938979601 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.655813773 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668024754 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.686776859 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.665888798 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959387364 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.017714962 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.656853012 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904657917 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.296180052 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.442891796 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.699845909 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.653601062 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.654004046 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.655521837 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.653211347 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.654501805 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.65563973 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942325767 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032238527 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.647387492 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.443639656 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.658058612 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.658166586 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.684209773 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.021700525 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.688994111 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656483551 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.667324455 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.655177729 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.663751376 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.02551742 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958760538 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.701305453 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.656120796 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.262015163 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685503722 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.655386275 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.656274516 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.712682877 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.656709627 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349482012 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.085990684 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.649117251 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.025048158 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.65901439 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.70448323 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.655326631 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.667290722 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.666909249 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.660956955 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.688625069 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.946515614 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.668106747 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.659358289 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.383994222 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.613637531 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.393783037 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.660349895 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.664254931 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.662011489 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.304613737 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661703559 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.659868549 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.02209422 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.276432848 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.660663133 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3051842 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.671439084 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.63783104 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027064475 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.974766135 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.668653116 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.672663192 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.031340997 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.958238894 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.716033792 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.667485998 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.66191448 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.634794131 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396270154 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.663642283 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916522276 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305070009 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.675303612 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.660008301 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.703184043 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.664943705 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.222790901 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.664706734 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.66022893 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.671244088 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.673461688 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393398071 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.675371917 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.661210759 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.47029947 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.673806215 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.30434359 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.664767985 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.952821794 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.03683562 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.014979209 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.66231928 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.663779661 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.996868736 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031510711 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663763737 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.662965521 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.3890112 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.610621574 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.693256174 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.66343695 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.673769828 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.683647481 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076460561 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.677791359 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.680636134 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.664209813 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.663905655 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.66348556 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.664014747 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.673766056 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.664194378 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.331694135 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.670916322 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656938428 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.679646134 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.669802494 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.004575373 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.709949638 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.45254833 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.984130524 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.664046176 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.732066837 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.690983748 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.680661347 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.640693904 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.665714614 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.664332106 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.736656945 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.972121246 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.677003828 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.641938895 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.72079599 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.966817428 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.666159712 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.678639861 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996744139 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.669709675 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.675521657 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.628090765 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.726113984 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.675803467 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668722677 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.657095919 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.72794634 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.817640358 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.956342424 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.038271138 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.037791887 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.228416407 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.682862883 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.669608545 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.711911619 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827120473 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.679712902 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.683908058 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.666338087 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456404128 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.658629495 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.472570569 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.043553025 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.669903624 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.669549459 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.667844843 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995972952 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.667259084 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.028403752 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668889249 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.663220302 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.72117432 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.686996929 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.682475684 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968893809 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.020876398 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.666266779 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.670414722 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.671989574 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.668558341 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046486149 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.966497276 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.340165952 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.40979003 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.672054386 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.679347074 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.331550821 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.027245154 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.668852233 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.670119434 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.670856887 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.684940034 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.674516571 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.703136411 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668247268 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00298348 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.035184432 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.265067436 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.038164071 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.701181065 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.635357052 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.669493097 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.008393455 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.599458283 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.959833579 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.470437686 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.599585743 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.011668034 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.82053493 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96175631 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.674839028 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997268298 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.674797193 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.670903961 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.671357929 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.671717542 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.670855002 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.035198121 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463110148 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.010515374 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.69951074 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.675490856 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.732143313 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.963259713 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.981988212 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.659872809 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.980271094 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.050950195 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.682748972 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.673230583 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.470793458 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.046563742 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.674504279 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.700330817 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001399061 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.677962609 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.740105778 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.631671877 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.673364399 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.405467693 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.973708878 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.722960301 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.688663133 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.60628904 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474016144 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.677892699 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.347703783 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.676156235 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.681029271 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.036586427 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.705507943 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.691344409 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.048465521 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.702463281 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.693216505 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971321144 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.465313012 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.655635469 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.697893147 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.684332414 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.677629677 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.675532622 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.742235727 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.679588515 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.686893005 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.234211418 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.680099893 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.675033746 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.718839317 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.682698757 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.691627337 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.678567994 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.677610959 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.706766342 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.665577305 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.651347563 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.713235461 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875626851 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377423135 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.681191163 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.377781141 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.099337423 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.017024442 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.68932886 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.655000821 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.705241986 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.678710819 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.677061727 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.677781162 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.666161737 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.418718889 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.695425306 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.047321451 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705089732 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.972732217 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971389169 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.693853597 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.971922337 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.698719369 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.731609585 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.653511805 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.678364267 seconds)
  done (took 1139.002765395 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.733114106 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.715993284 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.713836235 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.721324548 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.710948648 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.787980999 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.748671881 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.727230188 seconds)
  done (took 23.394922498 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.687015646 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.706750977 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.680513772 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.704705954 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.682412338 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.306417108 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.683154122 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.703621389 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.725656524 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.688242478 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.683478535 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.489617291 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.705308895 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.683548725 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.67759308 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.706045371 seconds)
  done (took 38.059336387 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.923621642 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.922457039 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.332407634 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.700612627 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.689678346 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.685327512 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.046224523 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.699862601 seconds)
  done (took 30.538596005 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.714793551 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.71510644 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.718553106 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.717616046 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.717582382 seconds)
  done (took 10.121015599 seconds)
done (took 1431.445831521 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.710548318 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.708323384 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.7090908 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.710028001 seconds)
  done (took 8.375555649 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.657903145 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.657323462 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.65801133 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.691975495 seconds)
  done (took 11.202831938 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.1996807 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.416914749 seconds)
  done (took 6.152841364 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.682786757 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.528145025 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.515738628 seconds)
  done (took 9.267220434 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.090850171 seconds)
  done (took 3.628040619 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.165069246 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.277909711 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.672302044 seconds)
  done (took 8.656269209 seconds)
done (took 48.820340074 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.686080751 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.441033388 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.833269999 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.681343836 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.837168609 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.832024241 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.954628727 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.683073735 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.675208419 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.673631682 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.682677315 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.838178654 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.94614853 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.441208201 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.946951076 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.441417656 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.838068234 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.674261231 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.676934267 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.687187247 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.959107439 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.67939282 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.674303764 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.674442539 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.838475619 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.823382638 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.681726007 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.441916322 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.677756368 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.683567861 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.858964537 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.684355811 seconds)
  done (took 92.687198144 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.672009548 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.69439354 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.67384372 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.6736321 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.675104075 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.674643822 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.675280355 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.675140324 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.684028256 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.679422083 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.674902444 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.676421352 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.677178572 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.675389098 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.678501994 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.676028146 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.677792756 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.675701079 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.67431459 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.695663814 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.680553163 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.684887303 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.692530244 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.686125868 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.67661614 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.676529536 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.676303809 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.699611103 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.677057746 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.677637289 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.696422569 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.677125213 seconds)
  done (took 87.303593707 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.675683899 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.677216286 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.680093258 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.675668323 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.67814301 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.679840991 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.677451232 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.677448508 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.678942483 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.677642388 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.678274591 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.697296353 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.679899309 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.679906642 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.679205296 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.677734159 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.677131568 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.677860083 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.699318398 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.681563557 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.681544001 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.682531137 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.700389484 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.682529113 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.715064675 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.682538471 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.684805589 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.693614181 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.68289515 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.687886498 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.681609792 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.685349932 seconds)
  done (took 87.411509315 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.052125553 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.716358414 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.721660555 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.690619387 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.721781031 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.718722541 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.689895552 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.011948517 seconds)
  done (took 17.869326261 seconds)
done (took 286.810745494 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.703225109 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.699243598 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.748304864 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.703733066 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.745284858 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.746990591 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.99904548 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.748345093 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.992072944 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.693476175 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.737819942 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.692037305 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.693797445 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.916562924 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.692389654 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.709467035 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.694358689 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.690412447 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.707899867 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 2.030137422 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.751381164 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.686667278 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.696160874 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.730801452 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.667615972 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.818442904 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.796803281 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.933872107 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.898388056 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.79745916 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.6839383 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.700058855 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.694473299 seconds)
  done (took 77.748142276 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.714430096 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.721320148 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.722422733 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.721787316 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.721348015 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.722361552 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.712538725 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.723252866 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.726516061 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.722703145 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.722638682 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.723687279 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.725152689 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.722596568 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.722702377 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.70282017 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.713593538 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.72241945 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.713234972 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.703499167 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.722333685 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.722682682 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.724303559 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.724928918 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.723158859 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.722883545 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.722572263 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.725815971 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.726600638 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.723541311 seconds)
  done (took 53.172318283 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.724380733 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.688915679 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.689809507 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.753554625 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.716872027 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.719261716 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.106535195 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.725131806 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.721597488 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.719664421 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.687505374 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.732710423 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.785731691 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.696883522 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.718670649 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.726062302 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.726061534 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.716499354 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.688088269 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.740664299 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.130468895 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.730346785 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.109132104 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.740981447 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.719940295 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.719677551 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.730094029 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.688017799 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.722101114 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.690025108 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.6980417 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.100282934 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.693586803 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.692793895 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.699793878 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.73382956 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.726864708 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.69085566 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.723547038 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.72003451 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.104671411 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.721023113 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.699728017 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.690650047 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.723522594 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.729661153 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.689317615 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.694684708 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.026060577 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.733435446 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.690558206 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.723470073 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.732046932 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.724673368 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.023408703 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.72318086 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.72065519 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.691208638 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.734264602 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.098890787 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.731283496 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.722091336 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.701412449 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.725774905 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.69604396 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.725971299 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.742081098 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.722386834 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.702979897 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.723224371 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.692409908 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.728085325 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.730719738 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.69322719 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.700871528 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.71385642 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.723974886 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.709872393 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.714512089 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.102393747 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.728176328 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.693391038 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.12754513 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.726334194 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.73573965 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.732379096 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.731767426 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.853666028 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.097986203 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.694304492 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.695870962 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.69645721 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.112284879 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.739024215 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.725591432 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.704726628 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.735516856 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.732473592 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.704342431 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.692131521 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.729347146 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.74483061 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.69540568 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.730825966 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.108484535 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.738548317 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.701904481 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.727522892 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.854490435 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.733731923 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.745460229 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.730098989 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.12718014 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.729093972 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.73356151 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.695174295 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.72050545 seconds)
  done (took 246.086796379 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.696562181 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.717694198 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.696336385 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.717381798 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.69676549 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.72658234 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.698830487 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.701706691 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.72478246 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.698084512 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.697356906 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.728107115 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.727057889 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.698043236 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.697257451 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.703223504 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.696767375 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.702527325 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.704028703 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.699790944 seconds)
  done (took 51.688261756 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.735668271 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.457924992 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.426188344 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.737818476 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.736469491 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.727202111 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.803062038 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.736223579 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.733950945 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.136203843 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.954496378 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.73917612 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.738199599 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.734372507 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.425669074 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.739360501 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.137369564 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.454023309 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.736815415 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.457637665 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.738923225 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.738541682 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.726397959 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.458102947 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.146914841 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.111289502 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.806315943 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.463051482 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.737913599 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.737938183 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.458536592 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.740539492 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.730016645 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.451969905 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.739983486 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.760863724 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.738981403 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.8055296 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.810122433 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.141114313 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.46620761 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.123273916 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.758160866 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.977839431 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.741707727 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.715834953 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.470031978 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.740192381 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.717309793 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.740807892 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.75233792 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.439271851 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.732982177 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.440671541 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.742736629 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.740283733 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.462453012 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.439809978 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.447322666 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.960660919 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.731666366 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.125028748 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.744552502 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.473718061 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.743698344 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.741337708 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.742402369 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.9589269 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.464119285 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.116133762 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.141410929 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.138598631 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.741914108 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.819402802 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.7433696 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.142103476 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.821628784 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.243767591 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.142921457 seconds)
  done (took 158.341555169 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.103992065 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.856822156 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.268047494 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.474534786 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.421793372 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.937698292 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.886003241 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.060462158 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.714780281 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.897230716 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.619218547 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.856563603 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.632655591 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.82587695 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.866702183 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.927355427 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.292944375 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.708445536 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.561837298 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.583903442 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.716409818 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.895212023 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.612718419 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.211698499 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.717067094 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.618453296 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.709633747 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.427859507 seconds)
  done (took 65.971534021 seconds)
done (took 654.555373294 seconds)
SAVING RESULT...
DONE!
