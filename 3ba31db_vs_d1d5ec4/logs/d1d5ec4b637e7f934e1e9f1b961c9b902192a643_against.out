cset: moving following pidspec: 29631
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.409438358 seconds)
loading group "string"... done (took 0.579079786 seconds)
loading group "linalg"... done (took 7.308390245 seconds)
loading group "parallel"... done (took 0.158518711 seconds)
loading group "find"... done (took 1.173841278 seconds)
loading group "tuple"... done (took 1.840030959 seconds)
loading group "dates"... done (took 1.340991644 seconds)
loading group "micro"... done (took 0.224683248 seconds)
loading group "io"... done (took 0.956121175 seconds)
loading group "scalar"... done (took 39.386290671 seconds)
loading group "sparse"... done (took 12.467172591 seconds)
loading group "broadcast"... done (took 0.948518734 seconds)
loading group "union"... done (took 13.055802891 seconds)
loading group "simd"... done (took 4.887229367 seconds)
loading group "random"... done (took 9.88677493 seconds)
loading group "problem"... done (took 1.89774675 seconds)
loading group "array"... done (took 23.17342893 seconds)
loading group "misc"... done (took 1.859855601 seconds)
loading group "sort"... done (took 3.777291355 seconds)
loading group "collection"... done (took 18.981306941 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.53742348 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126561784 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118715723 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.122702805 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.151042128 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114963799 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125206301 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086375969 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.837448374 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147291418 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117300697 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.428555671 seconds)
done (took 5.221389634 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176084916 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084494049 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084948543 seconds)
  done (took 1.305888996 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066539195 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.123701021 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066608681 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066180268 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067140335 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065783851 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065681907 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066760166 seconds)
  done (took 1.654794865 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075018517 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069684343 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068050183 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069696703 seconds)
  done (took 1.416518078 seconds)
done (took 5.769264693 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.794113275 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.206360275 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.186682941 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.416579598 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.134170343 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.161576657 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.642434182 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.318398335 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.193019697 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081828542 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.109060163 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.333897873 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113783165 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.633303698 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077225509 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.093000941 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139041201 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.424052673 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066457857 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081122775 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088240619 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127425916 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084075395 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073939536 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.146609213 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067408552 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.137411169 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081150362 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066611167 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.212078739 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.173856656 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.659040754 seconds)
  done (took 10.298028026 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.10044899 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099472555 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070634331 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125494463 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098294159 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070173584 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071470507 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067065259 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086081193 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126838011 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087970888 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100829438 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065275149 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06802188 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084406047 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203230921 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079477478 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081311246 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072176813 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077188346 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107294308 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079887868 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079016254 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078877396 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130837107 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179192288 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095547822 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096923772 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068594522 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080947659 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116311462 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128043322 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067283376 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067382367 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126295644 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096311652 seconds)
  done (took 4.606149865 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.004466873 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.147849692 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09296896 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.139093662 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066203777 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.11082415 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065677931 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084154384 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.213512902 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.377826588 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.591892011 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110707463 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103676822 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066921279 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067660629 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06650104 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.482164431 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.095392523 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106456038 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081359576 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069930906 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068345451 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364728713 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067378216 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063214083 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067813095 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057973463 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.08629512 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129705045 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070041506 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.953213591 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126460558 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066084632 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10024148 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161712459 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090658966 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.278386898 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068728698 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066775995 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.157961988 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072889254 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.094388603 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068281915 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086467009 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105477381 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11829952 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066645506 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068808232 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.169240881 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064565481 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081796844 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.662272152 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15543329 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078946136 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065161465 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.256665927 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.087981654 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070536748 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066063141 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.185551444 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134958079 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069391074 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.06894572 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070278772 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071522157 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.386744659 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065064259 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.884341601 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07037239 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078975905 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071314913 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069083017 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074387246 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074901598 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.089891496 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067666131 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076096825 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067661552 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068178982 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068660866 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086648734 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.382816579 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066799095 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06810296 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064514686 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089563497 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098447019 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066040906 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067034853 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065617593 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101092153 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063590552 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069724455 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068011815 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.109451625 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067821427 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.086371654 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070360471 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112529629 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068360691 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.196194095 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067551979 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099768756 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071883951 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101726029 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083187958 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072376167 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.427328418 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064999879 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064251019 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068966697 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067388175 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069180009 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068418166 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081884295 seconds)
  done (took 21.246864989 seconds)
done (took 38.288575984 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.244038173 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080658853 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077802077 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.082117698 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077856331 seconds)
  done (took 1.785188228 seconds)
done (took 2.989109981 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126026368 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103019726 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066227156 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099645064 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065628461 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104914472 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104244344 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084037261 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103098186 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065909081 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100238424 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066069259 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0653674 seconds)
  done (took 2.378688207 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086235189 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086393047 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071924505 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085107715 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06512317 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085517207 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083266961 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091605235 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083677696 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074365095 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065607924 seconds)
  done (took 2.079988071 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084583419 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.0859622 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070751759 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08440489 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06533075 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083927335 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083575983 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088687187 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083809577 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07603086 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065428163 seconds)
  done (took 2.068587149 seconds)
done (took 7.724599901 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079674676 seconds)
  done (took 1.264513101 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.59464901 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.097305803 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080566664 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111393407 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189765822 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118553885 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.273590261 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085848126 seconds)
  done (took 8.92773505 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.090940959 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.085731569 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073889852 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072988087 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072867467 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072997604 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071047226 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073263835 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071534313 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069714562 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070701627 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071100622 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071369076 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073619808 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070022942 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073532769 seconds)
  done (took 2.449493515 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094993582 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093368981 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075190525 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076986717 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07450164 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073713974 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076151737 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075160493 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072987128 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074504925 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076462329 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07580544 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073512278 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066120193 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075545622 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077465405 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.0728921 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076045164 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076812715 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076769761 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076346746 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06565805 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072968467 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076187877 seconds)
  done (took 3.135022929 seconds)
done (took 16.97252545 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.118433138 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073937738 seconds)
  done (took 1.387265759 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084375422 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085703909 seconds)
  done (took 1.372796532 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085459775 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067372026 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092221757 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.080080614 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068147981 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067719823 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.09014961 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068221533 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067321433 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068210118 seconds)
  done (took 1.95580027 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070541413 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079404813 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072112012 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.083792236 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075321418 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065585964 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074146018 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06922983 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079555336 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063901937 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073199554 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084392653 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073346819 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086603614 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07443287 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069860323 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072276039 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069022668 seconds)
  done (took 2.540957594 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067982571 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068404745 seconds)
  done (took 1.343025843 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068670166 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065095777 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068081473 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068189707 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064840709 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063950662 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065053412 seconds)
  done (took 1.664932191 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.400290798 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11668095 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.320157164 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072902056 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.084725966 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.259663478 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067029627 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071902233 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072257542 seconds)
  done (took 2.715732248 seconds)
done (took 14.193223816 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082145007 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.089026024 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099171234 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.38084275 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090847423 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065695148 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113583226 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.191797557 seconds)
done (took 2.331210827 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.22286074 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.641209714 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.406680196 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.211283392 seconds)
  done (took 2.46781374 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.349870398 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089630155 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059563037 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068901203 seconds)
  done (took 1.785988435 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068006025 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071112831 seconds)
  done (took 1.356128614 seconds)
done (took 7.050591477 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068343794 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.08827917 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065486737 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067534074 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064853821 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.065482197 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067677837 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.065111233 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065457347 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067771831 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.070570567 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.067819766 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067888083 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.067772958 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067613432 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064824193 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064933272 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067071071 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065072053 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064786298 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065000466 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067013356 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065584148 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065462951 seconds)
  done (took 2.870325398 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086892933 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067457298 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.0736268 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072631404 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070010822 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07058305 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070410312 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065332176 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070747267 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067830198 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068336424 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068663124 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067915801 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.068975937 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068084037 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068883197 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070763103 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065725172 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068104339 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068866963 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070651636 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065543826 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068888947 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070491837 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068394272 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070082076 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068255625 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06591116 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070327642 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068464366 seconds)
  done (took 3.313371205 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07086904 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064357614 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065528333 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072355902 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065350161 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065675113 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064263016 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065184484 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065729003 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064785425 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066184869 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064999872 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065124106 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.065969337 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06570047 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06866389 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080993189 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065490535 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064951395 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065444326 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068828831 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065075538 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065609463 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064953465 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065647441 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064852616 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065055385 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065527481 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065544488 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064467834 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068378059 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068902723 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064821822 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072249916 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068739064 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065595495 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069147179 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064292124 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065547438 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06475535 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064985935 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06473173 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.0647725 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071943769 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065328351 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06663792 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064996868 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066431259 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065600066 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067491759 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.064482863 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.179258185 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066768355 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06623612 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068619336 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064888844 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065314084 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064250685 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.066005287 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064426962 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064759507 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064058971 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067280954 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065558648 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079948361 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071221551 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064442127 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066073153 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065316874 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067146498 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066321702 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077870717 seconds)
  done (took 6.146476848 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092315087 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086954822 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066080318 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064923409 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061109522 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063674192 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069718889 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06335177 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064946359 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081378586 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06368021 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064945016 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064386877 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067508478 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063943439 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064714543 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071823047 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060833664 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063020997 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066895822 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063443203 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068753977 seconds)
  done (took 2.737510484 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.155434781 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069841708 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105182487 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074361926 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069667071 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074491377 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069622915 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068793522 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069052166 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06661164 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066644636 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069560916 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069523408 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066526778 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067221251 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066968826 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069648672 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068563313 seconds)
  done (took 2.600878688 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078755138 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067027455 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088837744 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067574388 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066917655 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070092078 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072014281 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076070291 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069580461 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067843707 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075434918 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069897845 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069712431 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06789039 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069916991 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067466154 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069732951 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067212325 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075626555 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07151375 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071624953 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075694083 seconds)
  done (took 2.813573045 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082227885 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069456996 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083789964 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069665599 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.0631237 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065660658 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071669803 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067427995 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071257005 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069503079 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067200389 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06526328 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069854671 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067180897 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070199089 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067103265 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068704579 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066980438 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068822961 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062830873 seconds)
  done (took 2.624415339 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087732605 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068674403 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068915287 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077592545 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068678698 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069014823 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076102841 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067660718 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067272448 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08971395 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068536078 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067851589 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076245267 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073795624 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068515589 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075018926 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073631746 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073803265 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066810814 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06709384 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08762991 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066694946 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074002139 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06705826 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067379366 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066979382 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06647401 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072149687 seconds)
  done (took 3.26013625 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068525449 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068199164 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064954772 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064978347 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064721113 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065639989 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065218937 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064979582 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067534904 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06517545 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067291093 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068046848 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067745858 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067551134 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068121598 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.0676619 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067844373 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065136584 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0654338 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065176461 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067812577 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067867793 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068100226 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065414209 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065340766 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067421056 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065275901 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065208116 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068173931 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06484342 seconds)
  done (took 3.238958608 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077073535 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075157964 seconds)
  done (took 1.395662814 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065009416 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081967193 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.065016836 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071485922 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070937445 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068163878 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075347191 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071572047 seconds)
  done (took 1.805822448 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085397877 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079303321 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068409417 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080613197 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078782065 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085540293 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.138782456 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068787768 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074898172 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066297938 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082106399 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067500598 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074352585 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068285535 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074583375 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074415034 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06547714 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073306395 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070174951 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06674548 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068750972 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076804538 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070501874 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062847603 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069152324 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091037886 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079635424 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066887916 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070611302 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07532417 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.0732548 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061545974 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067143942 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067295045 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065424041 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077646319 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083164679 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070492394 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076521296 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067919067 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077687878 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062123824 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071992503 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074188048 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077721024 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067682628 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06836234 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061931301 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064842278 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069710661 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062681063 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070755647 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061890588 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074544498 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071318392 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.0784036 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066344455 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070175828 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070537057 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070837079 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074988786 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069602888 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070199066 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06762082 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078628181 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072708188 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076745011 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062783559 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061404346 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065375502 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077954188 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090885533 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073880956 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067992923 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067922559 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065255478 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071281679 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068404411 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073368059 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074347719 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067461896 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073108094 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074917706 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0680893 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069811857 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.07505865 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065599425 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.07009057 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06535663 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084858519 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066353627 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065146048 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065300614 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078800551 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071551367 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067263586 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065714896 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075059474 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061319957 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068202951 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067969922 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068063284 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078519436 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072441166 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070783837 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07386071 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07337629 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066116385 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069612115 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063858819 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067156559 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065653169 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074106519 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060821961 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069604853 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067884634 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066708745 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075200648 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064750438 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066476131 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074740936 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072212976 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.19124481 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064725452 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072337188 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068331464 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071752984 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077841818 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067319961 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064009275 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062992423 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071207656 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068064552 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072488121 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073296356 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071324598 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.0621589 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066144482 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074286267 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.078061643 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068534832 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069911381 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074997637 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069657182 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067644519 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075881502 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070912473 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067974453 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074731094 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069372963 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063598609 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071385935 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070683317 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06615761 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07214869 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070754914 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071189853 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068481964 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06679052 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075121553 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069867934 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067553077 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068666431 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066156106 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079391053 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071206461 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062946166 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064869357 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076848299 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066460338 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067778954 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068023692 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069981122 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068040506 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066061805 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067304837 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070424895 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078447712 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072811916 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068272377 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073304922 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079972407 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067187616 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070098967 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068578671 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068940073 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068647076 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077173728 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073403814 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071984335 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070580158 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064430675 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074297223 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075783284 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066839708 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065076751 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06624917 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071549273 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073343991 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071460947 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068303113 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065404125 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068514291 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070852797 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070388569 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06724622 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066910043 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073697341 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065758477 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073868502 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068340312 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078221769 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070648842 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062603888 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070217423 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065716412 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074324372 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062304595 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06574372 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066779875 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068815682 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067536882 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070636894 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061697062 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075082458 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075480949 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068551185 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067576647 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06740514 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074993853 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069521216 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071226167 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070731774 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073177142 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077036592 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065824878 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070601973 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.077167786 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066473144 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060534686 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072113118 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064834226 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065449735 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065387203 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064341389 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069744054 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074070718 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073754137 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.189801224 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068982279 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064089397 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066676689 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063847791 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073546394 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071631622 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069577104 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07482473 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069036394 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068936025 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071762776 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067683485 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069287325 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069146324 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07119291 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06907854 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069980544 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068066377 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.072030854 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067560248 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065298592 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070360486 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068641474 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068855852 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073677848 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067636609 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068362204 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070730515 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06878563 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069052433 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068393638 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066823416 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071426008 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068508433 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069259553 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070399843 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062607742 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075907777 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068450492 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076050795 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068748972 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065015592 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07532517 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070234789 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073940022 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068440445 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068870021 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070394972 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068043884 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071338934 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075907223 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066445596 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079381084 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075841308 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069786784 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071816823 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068720618 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070308944 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067188024 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068867748 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068360351 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068335757 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067751207 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073125567 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070036562 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068262304 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069520069 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068381903 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067961127 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06920137 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062135211 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06700874 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066668781 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067619686 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077572362 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067933257 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067333167 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066485533 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068723138 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06648163 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064244467 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075623171 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076679427 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068403683 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075137612 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066918298 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069417988 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078510002 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061546686 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065493958 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066382753 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065070807 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074505301 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068568094 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077310232 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068232338 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066852042 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064720757 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068465979 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066144676 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061639189 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065225053 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071527925 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066732883 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066437329 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.067647081 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.07000111 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068377029 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077770451 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066951299 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.06834924 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067516463 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064063923 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066726804 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065751934 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069675734 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066942822 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064949181 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063687505 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066732678 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067277345 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068094455 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068794841 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068517119 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073659657 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065995973 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069754005 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068925478 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061357777 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.202232102 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066149366 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065357667 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065768786 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071779247 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071255477 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069505091 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07745448 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.06777716 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068881748 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06828294 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065679017 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06787082 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067026265 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067089087 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067865915 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068996946 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076708658 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065550825 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071509024 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068649523 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069246606 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075328336 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068531609 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072491331 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074852543 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068679956 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.0699558 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076755075 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072066241 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072213265 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06891604 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069928749 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074170645 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067050376 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074753219 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068664713 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068768667 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069546549 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065932654 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06790013 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067929021 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066816554 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074062748 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06932423 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06746903 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068035113 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06613469 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069362153 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070788929 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075266782 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071145421 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071545199 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062850527 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064672946 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069119681 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066080746 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069366953 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070831668 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073399193 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070957082 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069161175 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067167664 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076732675 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072942005 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069760492 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065388026 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072262275 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067689826 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070227439 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069330882 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068466212 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068948927 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071965613 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069540847 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067266142 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074623482 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071111869 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068429024 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069141047 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068602654 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068545638 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063113928 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068037579 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069544178 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07337199 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070011702 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067499644 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078819086 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065269461 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068409816 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07061984 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066686483 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072583695 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062199004 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069144976 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068325911 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068407663 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062479312 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06651974 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065764629 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070354344 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066610813 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063072547 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078807196 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077449668 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070842897 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066836572 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065933378 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062003398 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062621635 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066402637 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067061548 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067994383 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076751486 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065082271 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065148234 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061910578 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067104239 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069652403 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070538284 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06388043 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062236994 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065994403 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070209913 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072207465 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065201273 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066189267 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070054623 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068851537 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.197500705 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069560836 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063026564 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069682616 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079007821 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066173034 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067593152 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072312133 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074497619 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066035131 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061775449 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067292977 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069611389 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068790925 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069196339 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069418234 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083969517 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072193265 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067781936 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066469791 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071623534 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067633107 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077696305 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06902777 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068797174 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073585268 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070591649 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077203702 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071249831 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076212449 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071985291 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071375624 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067156973 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069449254 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.0659576 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067357473 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069722657 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068895909 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072975839 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076133875 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066970634 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079168381 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077370915 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069812313 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064517089 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068087216 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068277293 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063335578 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069265675 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066299559 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066280726 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066373728 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067267692 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069151761 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074140564 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069442962 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067996949 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067980561 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061768882 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070841921 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070516904 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069663069 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064315696 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068392572 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06896358 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072203125 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0718889 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065093364 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069573673 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069502588 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068397282 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062240309 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074634236 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06671317 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069404503 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066728369 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067753943 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068462839 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071249608 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072676601 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068204747 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070337316 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071107341 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069739795 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065305728 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064525623 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073175245 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065080862 seconds)
  done (took 43.379294414 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102347715 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064293844 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063232559 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06333926 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074561546 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063996651 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062850206 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064291529 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06395629 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066570947 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063172542 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06337429 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071809079 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079702489 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075715426 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067588849 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063772114 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064297784 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062934307 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063822652 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071736037 seconds)
  done (took 2.773666276 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074625891 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.079218605 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.077279906 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084221027 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072171911 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071645683 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077030527 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071689469 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079871845 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074069135 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079970594 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071797012 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073667772 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073653165 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073826908 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07187727 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079903793 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072273618 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.072062347 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076804257 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071821144 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076627015 seconds)
  done (took 2.972876242 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068704619 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067569744 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069583445 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062622919 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067125927 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062055977 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070087939 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064798556 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070501039 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066300081 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066383932 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066499676 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068959295 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062007753 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067658972 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.065061201 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109165993 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070522661 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067342279 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067848254 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062339285 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069035719 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062972503 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063221122 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066145838 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070344519 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067974994 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064914322 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066998232 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066233022 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06685445 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064738689 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068308353 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067181325 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06584264 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066265882 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066443073 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067282451 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062007392 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065119848 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067314408 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062642161 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067063728 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068161018 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065147332 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064307151 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068402234 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067059836 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062014439 seconds)
  done (took 4.61518196 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081084583 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110961105 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068755331 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093262074 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081244241 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074437406 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071038356 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091505694 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064336757 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065719929 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083911658 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.081109284 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06860816 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072940326 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07143019 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066650006 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067898798 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065543869 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072480323 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067835434 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070934523 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073555718 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081280413 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079801026 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070244362 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065309901 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066016879 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071188666 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079188477 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070738125 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070815714 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071572811 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081503679 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071362695 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065912077 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068695478 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081776194 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066256151 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06911439 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064552621 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069432075 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071103371 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07330324 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082867037 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066993479 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071493838 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066451697 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064148989 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079480574 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068803462 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074398301 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080863816 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070144753 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066792849 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071189076 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081847689 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066306563 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065424191 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06886342 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078391052 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064445991 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070036841 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079975468 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068468736 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073438952 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079755471 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071284813 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070445808 seconds)
  done (took 6.45168514 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077329149 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.0962824 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085942186 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084559464 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076868584 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077086928 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076452135 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076833394 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07651809 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081480685 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076631545 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117371374 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.07187375 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079283333 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076621067 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.077438213 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076843065 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076589816 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077104624 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07656755 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07678139 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084184228 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.077009637 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083919139 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080790167 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071539122 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074801199 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074651183 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081503227 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074468678 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078015265 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074052288 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082479775 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081457265 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07909002 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074158657 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065454565 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076069426 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075762065 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.076168848 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07155137 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083970762 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075429673 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070825125 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074443798 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074573767 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082242239 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07856195 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077466609 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079928994 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075939203 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08261573 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076926188 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.077246782 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083985408 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.086044372 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083209381 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083559686 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076941019 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.084152823 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083515851 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087547931 seconds)
  done (took 6.250168355 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084838293 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075672781 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.084197269 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062772775 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065403275 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073314882 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065671594 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065467812 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075536074 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075632841 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078112902 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073782953 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076334367 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077501031 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073694258 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07644847 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073886761 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073655204 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075605286 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072954618 seconds)
  done (took 2.822995226 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076536919 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084101005 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067441017 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072313673 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070283067 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072736631 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.070017568 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071019299 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068805798 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071072978 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07783886 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077889902 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068449562 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072742337 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077615035 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072671825 seconds)
  done (took 2.507827212 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08521605 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.075247065 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082174545 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066909951 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068194286 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063632582 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067304664 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062647964 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063513278 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079803728 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06708121 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.077918046 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067257637 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065866021 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064813929 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.072798125 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063403166 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064360409 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06727432 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079697373 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071265461 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065514289 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.07001823 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066725767 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069731161 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071607987 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066601949 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067355591 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064171714 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067520672 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070051105 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070878799 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064294607 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065246627 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066108216 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064346078 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066741035 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067406766 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072513417 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067051497 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065326533 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069693549 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.0663199 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06710453 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061543788 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065298924 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061511319 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067225715 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062875594 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068162174 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065244323 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067571887 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066271373 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072329707 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067695976 seconds)
  done (took 5.091208856 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081734209 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071104902 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062837857 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064138285 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069297939 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066912098 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071605052 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06867334 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069193945 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06576854 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069365894 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070502798 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069002868 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070997681 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069005619 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071021664 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062880065 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069234254 seconds)
  done (took 2.589129778 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073131931 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06750317 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073959237 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066109031 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065732172 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069233408 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063205064 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.066358141 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066565794 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06723853 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067478182 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070198125 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065923989 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070128134 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067256493 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067368095 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070637502 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066248846 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067009324 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063496135 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069701312 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066270031 seconds)
  done (took 2.830437941 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.0973034 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083989702 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.145143241 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081285972 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086560291 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07340618 seconds)
  done (took 1.908649373 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093293452 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104199215 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068431031 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07081784 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077743967 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071507986 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071807684 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071856713 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079923557 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077311551 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07060092 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078309465 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079244778 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079708833 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077347892 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077386039 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070934578 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071154034 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067964808 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084179865 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070189341 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079643911 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072252319 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070785422 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071707764 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079307104 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079340832 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077611942 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071475779 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079542672 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075768758 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071277387 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080122542 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076457605 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068841784 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078538288 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070168792 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083564798 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075586306 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077787437 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069750784 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077048117 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079274656 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074647953 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077632912 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069888757 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073902269 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070037427 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069832261 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086129537 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07611221 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077135105 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079149968 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080403224 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079988544 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085735766 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076809019 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080086845 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077503907 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078199545 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079928578 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077663243 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079483472 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07777573 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078218807 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079213914 seconds)
  done (took 6.41328747 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107558471 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069228455 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07224341 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078686922 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079707245 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072608258 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072416977 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072141038 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072097779 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069132174 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109639253 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072740204 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079240943 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080390778 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072443463 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072592682 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072751857 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079453738 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068816429 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087747422 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07162808 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079528253 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07945413 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079303571 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078301697 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077862365 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071722269 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071822545 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071402512 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071816324 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076822858 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071901231 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079060177 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068007375 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079270309 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071148091 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069736428 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075685474 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071593488 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076983733 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079014808 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084034028 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071228509 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071057256 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076943045 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071276504 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070898972 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068087771 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071724841 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068264307 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077451957 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077207084 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077512072 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079075019 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070886943 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069139122 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069109426 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069222487 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070680374 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076390915 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078234116 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071114196 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087818324 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071186025 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071999562 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07923446 seconds)
  done (took 6.346850175 seconds)
done (took 130.974998975 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.187479042 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165268763 seconds)
  done (took 1.688067504 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071599826 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.101581642 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.07953259 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128665775 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065767215 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10006227 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098724176 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077643778 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065993945 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065934333 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065520631 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068151695 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130797278 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065602231 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065645387 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068680638 seconds)
  done (took 2.672307521 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10164549 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.167875761 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104980614 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067287012 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10255282 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074969722 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066728843 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077528333 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073106962 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06756086 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07554212 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073347264 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067214517 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072640545 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072788286 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075373972 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06686669 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074926169 seconds)
  done (took 2.839867654 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100899508 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094615808 seconds)
  done (took 1.553150839 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.163360976 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106728725 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.143786996 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.350969446 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.169081175 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.153065479 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.153787292 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.143053384 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116182107 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.138192658 seconds)
  done (took 2.987927592 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103408361 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.156784325 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.271928594 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120894785 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075400332 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.096823207 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121159702 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080208451 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.082416415 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081832111 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081265244 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076430971 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.10196998 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074815173 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075141079 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078299621 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104335354 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074704699 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076112992 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078574487 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.103640233 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067310462 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07547103 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075070724 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078939932 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07965289 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067324509 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067237007 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078469476 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07664233 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079364913 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096057338 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.079292632 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107570649 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07135773 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107018337 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075861612 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074350556 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074946864 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07586988 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080838252 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080865969 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074975561 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078125055 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067590529 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078436718 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067375211 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067076445 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080160364 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068850278 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080318517 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078774356 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.108075083 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068822911 seconds)
  done (took 6.085675583 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10651842 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105003167 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070467531 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112278295 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102571462 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074320032 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105732196 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098515723 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107138675 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070740419 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07003407 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07264219 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084533756 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085504522 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114736409 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106507976 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073059815 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071335438 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110669542 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107953852 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070463757 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099537045 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.093386556 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106154506 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066668905 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070927399 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068121022 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072918327 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078976871 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080814857 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070259 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082145895 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087579737 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077119354 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06643933 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067996924 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069031054 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081699347 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079568706 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078730086 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077016181 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066949841 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06797097 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069584027 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069970039 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068181023 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078913867 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07992554 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079148974 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070578344 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.0707277 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069617991 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071314511 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08238277 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079275778 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.083039015 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082318409 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069953716 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070180323 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073895723 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082868385 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080977654 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081322031 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070938147 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081115101 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070322859 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083940418 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087644996 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068924534 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071579319 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070423032 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070544658 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071264884 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079456589 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079941991 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071364015 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070914216 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069618773 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081645687 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080245839 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070425201 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078345143 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068323805 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069787748 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071002398 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071561617 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079030452 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082062471 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071414397 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06977016 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070799553 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070268949 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068912214 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079382544 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.08076085 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079912541 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079974351 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069870364 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079767389 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079091944 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070845144 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079850155 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069853388 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070571438 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070147856 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078163049 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077481034 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079251347 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06956313 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068832903 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078112771 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079733606 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068027365 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078031556 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08066784 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079494148 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068550152 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081314056 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068208095 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079262236 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068275579 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078940194 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069030873 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077163839 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066154992 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066273836 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06687214 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.076993554 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071020279 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066755926 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068168514 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068733452 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.076040556 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079022577 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068266011 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075241733 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.075494352 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068214769 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075241603 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066531929 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075762699 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067162776 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066993549 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064844786 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078098375 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066710706 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065880593 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066026566 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075711701 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065667354 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075919002 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073263759 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065318238 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07708137 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07607111 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.073417806 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.076173876 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067153574 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065098047 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066000613 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066693305 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073814647 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075623356 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06753809 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065902346 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.073448428 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.076229471 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.064567043 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.074193805 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073863532 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.074530837 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06555887 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066418534 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076319519 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076401423 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.074269078 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.073694466 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073905513 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065701852 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073625873 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074328111 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065486474 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080524143 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065717099 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.079455536 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074319713 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072766011 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074887996 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.076635838 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.075312301 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.075054406 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.078323931 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06510012 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065051903 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.075381123 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065784654 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066223666 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.074206573 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066876571 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066822892 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.078904429 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066057169 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.075704066 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065648862 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.075125413 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064301772 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066807054 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079463645 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065958725 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067225584 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07425525 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066591561 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.072801151 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076099561 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.074573886 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065007509 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067670149 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.312294588 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080505307 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069835058 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069902388 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072013241 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079717718 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078583384 seconds)
  done (took 18.464607305 seconds)
done (took 37.656982627 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.22073825 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.160203671 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.188589452 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.121644727 seconds)
  done (took 2.177209938 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.123753987 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.106537422 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095524626 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068271548 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.105495092 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.069269654 seconds)
  done (took 1.988474545 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.318442513 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213371748 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.191624471 seconds)
  done (took 2.141611686 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.211605401 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.198354555 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.444319979 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.269099418 seconds)
  done (took 2.663481761 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.149928306 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.092406548 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.070052909 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.088057196 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.138473103 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.165261651 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101096083 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.127886044 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079555928 seconds)
  done (took 2.490390088 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.150496282 seconds)
done (took 13.03540412 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.099750341 seconds)
    (2/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.250939892 seconds)
    (3/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.077025371 seconds)
    (4/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.180268327 seconds)
    (5/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.191322897 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.086841306 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.115411641 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.081486726 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.17340133 seconds)
    (10/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076963733 seconds)
    (11/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.233963619 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.110635383 seconds)
    (13/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.080451606 seconds)
    (14/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.05463424 seconds)
    (15/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074742307 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.105776328 seconds)
    (17/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.137159638 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.093837013 seconds)
    (19/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.222790129 seconds)
    (20/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.114882203 seconds)
    (21/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.184589517 seconds)
    (22/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.083913129 seconds)
    (23/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.202008676 seconds)
    (24/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.104523075 seconds)
    (25/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.081835348 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.222470917 seconds)
    (27/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.091679682 seconds)
    (28/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.110003041 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094569532 seconds)
    (30/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.239268207 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.119681879 seconds)
    (32/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.153947108 seconds)
    (33/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.065416401 seconds)
    (34/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.076325809 seconds)
    (35/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.186883065 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075154362 seconds)
    (37/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.192891475 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.068088352 seconds)
    (39/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.079332314 seconds)
    (40/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.173362571 seconds)
    (41/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.165300818 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.096670793 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.107698099 seconds)
    (44/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.149690786 seconds)
    (45/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.204523061 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.133643427 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.105561895 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.12882216 seconds)
    (49/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.097676805 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.098758968 seconds)
    (51/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.080334834 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075426819 seconds)
    (53/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.113097412 seconds)
    (54/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.249829674 seconds)
    (55/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.068823359 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075477965 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067925212 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.093734265 seconds)
    (59/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.077575055 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.093877152 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069920946 seconds)
    (62/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.08248782 seconds)
    (63/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.142577916 seconds)
    (64/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.183193382 seconds)
    (65/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.156941055 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.091228426 seconds)
    (67/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.164565208 seconds)
    (68/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068426865 seconds)
    (69/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.056021826 seconds)
    (70/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.08068573 seconds)
    (71/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.07737109 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.134059005 seconds)
    (73/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.185297464 seconds)
    (74/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.085941727 seconds)
    (75/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.067393078 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 0.068126586 seconds)
    (77/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.12501064 seconds)
    (78/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.052288744 seconds)
    (79/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.079994278 seconds)
    (80/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.158769677 seconds)
    (81/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078285914 seconds)
    (82/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.161332728 seconds)
    (83/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.188339254 seconds)
    (84/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073534091 seconds)
    (85/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.160223581 seconds)
    (86/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.286796837 seconds)
    (87/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.197317623 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.098451677 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.091592997 seconds)
    (90/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.082355372 seconds)
    (91/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.07682399 seconds)
    (92/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.076008923 seconds)
    (93/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.098145327 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066511344 seconds)
    (95/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.165340084 seconds)
    (96/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073528741 seconds)
    (97/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.157583798 seconds)
    (98/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050647682 seconds)
    (99/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074346733 seconds)
    (100/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141334205 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.144272079 seconds)
    (102/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.163136478 seconds)
    (103/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.084863915 seconds)
    (104/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.121065046 seconds)
    (105/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.07073693 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.141940489 seconds)
    (107/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077398587 seconds)
    (108/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068494885 seconds)
    (109/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052487675 seconds)
    (110/309) benchmarking ("sort", Bool, false)...
    done (took 0.141863176 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077369631 seconds)
    (112/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.064288769 seconds)
    (113/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.09303758 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.12654766 seconds)
    (115/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053761928 seconds)
    (116/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073548111 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089461775 seconds)
    (118/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.07786734 seconds)
    (119/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072164763 seconds)
    (120/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073814681 seconds)
    (121/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072516849 seconds)
    (122/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081518436 seconds)
    (123/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061138068 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091385193 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.125493089 seconds)
    (126/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.062543632 seconds)
    (127/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.078414949 seconds)
    (128/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.052663482 seconds)
    (129/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072569781 seconds)
    (130/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073698356 seconds)
    (131/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.051722245 seconds)
    (132/309) benchmarking ("sort", Float64, false)...
    done (took 0.131921468 seconds)
    (133/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072469208 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089951291 seconds)
    (135/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.145211123 seconds)
    (136/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087655372 seconds)
    (137/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051097225 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065539642 seconds)
    (139/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073196918 seconds)
    (140/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.109458236 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065580312 seconds)
    (142/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.095777586 seconds)
    (143/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072896355 seconds)
    (144/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082680405 seconds)
    (145/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.102330926 seconds)
    (146/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050562424 seconds)
    (147/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.052075363 seconds)
    (148/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073963524 seconds)
    (149/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067912095 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065432927 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071562568 seconds)
    (152/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.075037189 seconds)
    (153/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.100507273 seconds)
    (154/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.052472435 seconds)
    (155/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.197208748 seconds)
    (156/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064776955 seconds)
    (157/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066155664 seconds)
    (158/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.110355658 seconds)
    (159/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052621799 seconds)
    (160/309) benchmarking ("sort", Float32, false)...
    done (took 0.132373744 seconds)
    (161/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.053390787 seconds)
    (162/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074082258 seconds)
    (163/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072665019 seconds)
    (164/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077423339 seconds)
    (165/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.067993242 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09435254 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.070930515 seconds)
    (168/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.171262879 seconds)
    (169/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.296402111 seconds)
    (170/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050402125 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.092346134 seconds)
    (172/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070056134 seconds)
    (173/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073300296 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090601507 seconds)
    (175/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050808175 seconds)
    (176/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051201858 seconds)
    (177/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050675312 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.145990444 seconds)
    (179/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.053967119 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07407639 seconds)
    (181/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051863128 seconds)
    (182/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.184447735 seconds)
    (183/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.052113117 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076738539 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.130841851 seconds)
    (186/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07339812 seconds)
    (187/309) benchmarking ("sort", BigInt, false)...
    done (took 0.189202256 seconds)
    (188/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072973057 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.095136983 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.08856416 seconds)
    (191/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064692669 seconds)
    (192/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065177542 seconds)
    (193/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.050936692 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064612293 seconds)
    (195/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.180995155 seconds)
    (196/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050476094 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065579338 seconds)
    (198/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087643564 seconds)
    (199/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.106440333 seconds)
    (200/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068399644 seconds)
    (201/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050370811 seconds)
    (202/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.141038741 seconds)
    (203/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.342973009 seconds)
    (204/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051806265 seconds)
    (205/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.185437665 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06445172 seconds)
    (207/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.156048006 seconds)
    (208/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068380427 seconds)
    (209/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052335629 seconds)
    (210/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061536276 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.135465133 seconds)
    (212/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073518236 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094641491 seconds)
    (214/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07747668 seconds)
    (215/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073105292 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067455164 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067862477 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.096830994 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075401198 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073713027 seconds)
    (221/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063466995 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092609473 seconds)
    (223/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.200099599 seconds)
    (224/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.077327478 seconds)
    (225/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.055336487 seconds)
    (226/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.178601654 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069202279 seconds)
    (228/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068471658 seconds)
    (229/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.054113658 seconds)
    (230/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.053020258 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071834402 seconds)
    (232/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072714361 seconds)
    (233/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052645676 seconds)
    (234/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065073007 seconds)
    (235/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063126356 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063964548 seconds)
    (237/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071661826 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065603288 seconds)
    (239/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.196970738 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065508258 seconds)
    (241/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.06916769 seconds)
    (242/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088693863 seconds)
    (243/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072745659 seconds)
    (244/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051582133 seconds)
    (245/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050389337 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136237239 seconds)
    (247/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080067292 seconds)
    (248/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050545892 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.175656309 seconds)
    (250/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065422245 seconds)
    (251/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070409928 seconds)
    (252/309) benchmarking ("sort", Int8, false)...
    done (took 0.143537513 seconds)
    (253/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051472581 seconds)
    (254/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065527666 seconds)
    (255/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.065684 seconds)
    (256/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066687497 seconds)
    (257/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063145874 seconds)
    (258/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.053783299 seconds)
    (259/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074016084 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067084412 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092315547 seconds)
    (262/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.052678116 seconds)
    (263/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.055001054 seconds)
    (264/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075978021 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.06648369 seconds)
    (266/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068391353 seconds)
    (267/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051757149 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073044962 seconds)
    (269/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050813883 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072817403 seconds)
    (271/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.0502261 seconds)
    (272/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053932748 seconds)
    (273/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050348719 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064900589 seconds)
    (275/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.052621171 seconds)
    (276/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063827507 seconds)
    (277/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.110119235 seconds)
    (278/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066223175 seconds)
    (279/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050207912 seconds)
    (280/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089185948 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073081418 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089724129 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063456107 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065034953 seconds)
    (285/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.179954418 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064196437 seconds)
    (287/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050316832 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092385971 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.170818769 seconds)
    (290/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073061181 seconds)
    (291/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071780068 seconds)
    (292/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.06113568 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072630524 seconds)
    (294/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066558592 seconds)
    (295/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050407906 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07103492 seconds)
    (297/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068391482 seconds)
    (298/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064784449 seconds)
    (299/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066979215 seconds)
    (300/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051616062 seconds)
    (301/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.14032737 seconds)
    (302/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064568769 seconds)
    (303/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067689226 seconds)
    (304/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.053172111 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071132859 seconds)
    (306/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082178407 seconds)
    (307/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053935775 seconds)
    (308/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.053289682 seconds)
    (309/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07581681 seconds)
  done (took 31.533987536 seconds)
done (took 32.968428429 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088219203 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094869179 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074801633 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093003187 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080521906 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075846234 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072275236 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077784638 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079519541 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081604701 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077788077 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053398368 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073580148 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073808356 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074065359 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090871863 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078122227 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073322333 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07264859 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064177165 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073012694 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065289466 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066970923 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054029184 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078109362 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071189161 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071943417 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073464233 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065512658 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.064976018 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068381072 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073284396 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064831601 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07789633 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07155253 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072874945 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074646426 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077044385 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067000594 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06539477 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074232238 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06478848 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072313621 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073364148 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07172666 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071942732 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072775601 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.0779631 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091480643 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067321783 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074268928 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075885787 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075477044 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072657448 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.06971331 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07279329 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07079406 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090863437 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073947181 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067054721 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073634263 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074553479 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071340406 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073289983 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072811996 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074961183 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075407096 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071330365 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07478525 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071456405 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064660672 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072776609 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06895848 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065403198 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076178925 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076770315 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063653412 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070838593 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072597358 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07057511 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064758267 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067580165 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069158378 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074427531 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069467913 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056107671 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071430343 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073809399 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066916086 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075177048 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073962202 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074703832 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069087552 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077933387 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066123743 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072775231 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067183117 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.0667399 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.068613204 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071624829 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066195622 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068263263 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075159072 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068410444 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073835993 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07944809 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065404973 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071235222 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064010452 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064218155 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080852231 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076849647 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067357104 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069851018 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066820309 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074940172 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066469206 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066909535 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066879551 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066601219 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071731452 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06659675 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069729281 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.074748941 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.080812688 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066745405 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07045718 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069342758 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06583589 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072086408 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067293139 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066785582 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067769801 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061791424 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067074864 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064061224 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071798605 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066615424 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.206620379 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067577662 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073672475 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070554584 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07143771 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071489012 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064450981 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.05863045 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067530991 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066868929 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066710161 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065261004 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066855494 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065189361 seconds)
done (took 12.54187738 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068103836 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14372827 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100520376 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099050904 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.088945096 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068153026 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077779336 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100976535 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.0672876 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101428378 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087206734 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085743286 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113355399 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064322498 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06563594 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069260243 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067133645 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081431899 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100861819 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086633201 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115313238 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065060743 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092339231 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088902553 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087999957 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.103083492 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068980679 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069891354 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069116585 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.093051716 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08796197 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069776321 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067068455 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099020118 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093777943 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084285794 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065786945 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083438271 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066337348 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065421272 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066988043 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098534741 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080844034 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.08089317 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069587978 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068734803 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066763185 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083566247 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089419089 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078509084 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086109711 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101646187 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068874767 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065166752 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064577279 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086332272 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064994533 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068719665 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065443117 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068119498 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06518494 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068793655 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080330446 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080410155 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069591388 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079260968 seconds)
  done (took 6.826422852 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086634247 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093940626 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08623344 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.085837437 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067135987 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067260841 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066903592 seconds)
  done (took 2.073051002 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068988634 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091364077 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092023768 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093083069 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084151359 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090567861 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.078696806 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069143368 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.0912972 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069982045 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090609594 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.104481281 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073123361 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077000148 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094094192 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.068157472 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094147624 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069120224 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071679645 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094190932 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071348325 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.09915718 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072158126 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069397851 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.083540395 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069122037 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117184768 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071869285 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067679484 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068950875 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064207158 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106457545 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.07986059 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075304815 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066201792 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080680494 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082064745 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06488392 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083213574 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.075527455 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081847348 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066210293 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066537456 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063872377 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070347493 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076161339 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066562568 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066585719 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.06838587 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086465347 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06649931 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.0791254 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068612391 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071440529 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067569496 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072985342 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076174658 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067000264 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086387358 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067830246 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083326492 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082933485 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080525309 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082895645 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068603272 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079893106 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080568123 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068976709 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068288847 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069655517 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08236707 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065416638 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068170816 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078801003 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06968108 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092257606 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.092630035 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069820797 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.082627788 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068942529 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068535058 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06859572 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092514827 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074576173 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06882432 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07273022 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072083337 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066686947 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06732232 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072162402 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066714417 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070215157 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071388046 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072030109 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071456114 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086588317 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.07030799 seconds)
  done (took 8.950235911 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071837737 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069988434 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071921435 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070329137 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070441282 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070477496 seconds)
  done (took 1.967377062 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095788216 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.07141674 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083024653 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072777182 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104146567 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086548466 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086679137 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077433316 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082887154 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077961183 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086242234 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088438297 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092002492 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07172424 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086632768 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07107411 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08668645 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07602901 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079318821 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07522141 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089643328 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074591918 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074867919 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085214091 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.078149841 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.0747083 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.069749646 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081661436 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081136349 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.08119076 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074885193 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.078237227 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07345701 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.080495764 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.089911942 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073375005 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074019816 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07979026 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075160117 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.078406121 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.091264937 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075194857 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.077034559 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.080125907 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.08027306 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073209974 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.0797194 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07834572 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.089642645 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.079849506 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.079411555 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.073591014 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.077309886 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.080008202 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072262998 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07959016 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.079320485 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.090350197 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074605564 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072904951 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070392569 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.078361227 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078131714 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074855682 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078167127 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077135686 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07032306 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072341702 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073483927 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073298724 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.078236917 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070675467 seconds)
  done (took 7.221063711 seconds)
done (took 28.544637866 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.552514568 seconds)
  done (took 2.058217677 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.621682477 seconds)
  done (took 2.153288703 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.566500469 seconds)
  done (took 8.095415255 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.404361533 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.494310152 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.726090655 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13717684 seconds)
  done (took 3.328299677 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.700604959 seconds)
  done (took 2.24035718 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.220955859 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.205185791 seconds)
  done (took 1.971612674 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.382088806 seconds)
  done (took 1.911087262 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.155723275 seconds)
  done (took 2.687641236 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.261963649 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174697801 seconds)
  done (took 1.976929727 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.497613399 seconds)
  done (took 2.03619617 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.860973085 seconds)
  done (took 6.402949616 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.215186565 seconds)
  done (took 1.802534655 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.244279688 seconds)
  done (took 1.7881705 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.715836449 seconds)
  done (took 3.256235222 seconds)
done (took 43.249210147 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082284897 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083790425 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.082679705 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077566201 seconds)
  done (took 1.850202571 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079941719 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075089723 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.079274946 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075091771 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077649451 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07252376 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073781668 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076318821 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071780859 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072800118 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072551189 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072391642 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074375331 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073780479 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070754212 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074209923 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075799154 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071922294 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074966066 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072332442 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070470408 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074274656 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074736616 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071093312 seconds)
  done (took 3.323170127 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080282316 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075151404 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076943293 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073551321 seconds)
  done (took 1.857549146 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080031263 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.097193001 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089737914 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077495209 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092764567 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08644719 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069127816 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068495756 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070729377 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076559211 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067491114 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095525349 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088036101 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077182425 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078882153 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065350014 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067833437 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087235394 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077158911 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078235934 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069337284 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077329573 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067614812 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088013239 seconds)
  done (took 3.441785021 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.089281677 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.109391449 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.083944477 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088682898 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090603708 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064458111 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087906723 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090370132 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125718422 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064666904 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069589784 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065149149 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072359019 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064228206 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081412573 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107446754 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111053769 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071051822 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099935975 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067312519 seconds)
  done (took 3.262680362 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075099769 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072829843 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067662202 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.07085681 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079879673 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074933735 seconds)
  done (took 2.002668543 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070572693 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069532779 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069762699 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067818723 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073470651 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068807622 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066681302 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067619251 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069058094 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068919195 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067917524 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067927099 seconds)
  done (took 2.383055612 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.20538721 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068637322 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068049508 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065885528 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070570361 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06535908 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080311997 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067476969 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090600432 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065387304 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066129564 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067575023 seconds)
  done (took 2.538286467 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211154411 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075750614 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238615162 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149360827 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11022879 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1154911 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111518018 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113152698 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141857606 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10028276 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167473502 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166108013 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106914006 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136361276 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08822869 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100081842 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153021255 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162226369 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104244974 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165407739 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145479509 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125411363 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152644595 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101159683 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105146504 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120870453 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07028532 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078933204 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16973473 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13261608 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145499784 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112280178 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091742155 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17647657 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171485113 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14052508 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146369154 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083388088 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.103868333 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134115439 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199986571 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087872564 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161003471 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108128279 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.21832789 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133719745 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119927042 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118875152 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106013037 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089131002 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144525874 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183133742 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.13727261 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087007119 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123564643 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112543086 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114274332 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112846349 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181417524 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1610107 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127836432 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070698467 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107362097 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152622119 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133742798 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107233974 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.12425075 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091258726 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134250454 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155393996 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119967102 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144945332 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.116039559 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087862484 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119519143 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139597721 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127061205 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160837355 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123699947 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072258427 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123465979 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101292812 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08044685 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144831522 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074429797 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175854992 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098226451 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10775627 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123434645 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108656908 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10933569 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158630677 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142993698 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101786943 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064416079 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2447489 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120751124 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146087624 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086868226 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109894384 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116261042 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077106685 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137288856 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074313195 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123422075 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076865294 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12956302 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131347827 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07643394 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121936252 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103970925 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100835162 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132356253 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15939802 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087839903 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081710194 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168441409 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121607051 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102687735 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143586517 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15782004 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.101607759 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101222958 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147195198 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17818712 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088864134 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162909703 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105990547 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082401634 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087121904 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122715498 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111141543 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123009832 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083303851 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118194021 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16825477 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073840506 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095098412 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132897106 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078478845 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079774948 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105106571 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104475328 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094232673 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099193975 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102352243 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134850695 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123109816 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104705452 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122614165 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097048067 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31390058 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086982893 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101623359 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104136955 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069729527 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135128595 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157218867 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079035154 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164244797 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123259631 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115652652 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119910419 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083036304 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140331343 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07903582 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069383514 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14388241 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109440352 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110199821 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151386359 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116154675 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126232185 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118363405 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134240404 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130753898 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129843284 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104052591 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088760513 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111783282 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126224128 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072288332 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089956688 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079608053 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104005231 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095597539 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082250657 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140971254 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123521483 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108535824 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112007981 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095905721 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147390424 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075655032 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12749079 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118604816 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095537857 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152609312 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152416281 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130966362 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098339643 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135891242 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069332705 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073158043 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087219051 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121800052 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082061804 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081965119 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258746474 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147486704 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130641323 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136558072 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12271373 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121039119 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155984333 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070281259 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.11696207 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147276487 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120648089 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.10341902 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089701093 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098196486 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143864003 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10667013 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184131832 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116840636 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123122506 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153525017 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100098621 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078805136 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102747833 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135446389 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102947186 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144160094 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098879577 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08724483 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109116405 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073432982 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098494163 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125718034 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118645436 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133964128 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114588534 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131776585 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076681288 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11477087 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121332735 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121454101 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06309629 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119997973 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161614709 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094374786 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11822858 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152346977 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077709233 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.133515556 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174197887 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143587294 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084176481 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107090539 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.262275091 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127985858 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120328208 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141185847 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106271321 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137809858 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109931732 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085761092 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087244989 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096777851 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103913959 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094727647 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.105787591 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113050935 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094795051 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132090379 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103808655 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11026028 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118147025 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097867983 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090456717 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095125061 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176436284 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118208147 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169644956 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098972599 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144113893 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163021462 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07426662 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078758275 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077472818 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139330167 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08400752 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130696766 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.106392157 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116650864 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122951734 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142690488 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095019753 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068087144 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109088687 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132173827 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123069671 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097916647 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102790476 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163504531 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100287297 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078508469 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113954384 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115137364 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102081307 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170998095 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060326724 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104631132 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075952551 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079687208 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126186069 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.294260064 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080504059 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102630314 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119182557 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112042338 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128598424 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099820563 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107669408 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124957899 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150628278 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132356859 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.093888653 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114610995 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130328552 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16095653 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106766501 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097835137 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173151383 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153475258 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160853785 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086812982 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113957515 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113729405 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108021681 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137934061 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083060011 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163039941 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081229511 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136141365 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102860137 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088582941 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128460782 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108291488 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087706294 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148054865 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116973218 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082155516 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077984342 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116709184 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119338395 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105306082 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074761745 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13837417 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073211947 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134724334 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159773623 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079608751 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107299495 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095324814 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078213949 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105156948 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100708957 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086726366 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098002965 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.315974747 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087314664 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152806145 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135591223 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114030018 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140538352 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106204112 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643204723 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081047449 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156679205 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119862377 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178536596 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103661908 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121107941 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112454365 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12628756 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14690774 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104045243 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.180142683 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131404365 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115768988 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078637524 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101164543 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103997259 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08777065 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106974408 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113635188 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115838881 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091964791 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115665007 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123823801 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081226399 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095419437 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155901643 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116675727 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142966444 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140709987 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084707523 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116941846 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137365844 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07893096 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120686548 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152160506 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105182786 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097816473 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.07989682 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099513595 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157362648 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072369406 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157735737 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118379698 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.252267197 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113552099 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113081953 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131639979 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106204554 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12151249 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093747065 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.113311587 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117954937 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084322152 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079476958 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109141502 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115182512 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099824778 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101045102 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.101749182 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157051555 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074358246 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103019978 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11656121 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144043898 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176119746 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088826502 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081572472 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118048287 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11352462 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112464252 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119812125 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078396638 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080367289 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080681059 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077140381 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108433284 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112191797 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113607587 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11042257 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163424441 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.08249946 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.232289031 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094832053 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104256822 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069002266 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077552726 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095403158 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097409482 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106637637 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109434289 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158723274 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094930418 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089156233 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091103242 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073460111 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083068432 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128101717 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109428419 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118900707 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098085238 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061417176 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10627087 seconds)
  done (took 58.845238385 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111856176 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.08187763 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095990362 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144152053 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121711374 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.201284888 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.152391616 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188196203 seconds)
  done (took 2.773926656 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070444725 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.098149164 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10358132 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083281668 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065926364 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067794339 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.231141225 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.0798121 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065611133 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.097533274 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077721084 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068044181 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.42654688 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068336946 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069339161 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063189894 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066456103 seconds)
  done (took 3.454680377 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.388180874 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.610219379 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.379961688 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071972687 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.452542954 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090897908 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.131404494 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.130526446 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.07360201 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.53944276 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.703681986 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.124832463 seconds)
  done (took 18.361656633 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07840303 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071227722 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.086098691 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086151937 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074296085 seconds)
  done (took 2.05783274 seconds)
done (took 107.725812422 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083309662 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.610090199 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054723884 seconds)
  done (took 2.355672803 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08593008 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088686624 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087615316 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084695795 seconds)
  done (took 2.016283264 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076316446 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.079006198 seconds)
  done (took 1.817224485 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.234712018 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.168238029 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096427641 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086234861 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081507112 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082543132 seconds)
  done (took 1.914472498 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074408155 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078251275 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.075426039 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078634849 seconds)
  done (took 1.967420504 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080127812 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053894146 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056119226 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.06040363 seconds)
  done (took 1.912174255 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088629243 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.081576227 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081545467 seconds)
  done (took 1.913467507 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105619659 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.088738139 seconds)
  done (took 1.856261248 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085039782 seconds)
  done (took 1.748838358 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.104170493 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.105372907 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.134574188 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110678569 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139216731 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109124132 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.083868731 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085084099 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.075606764 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086346561 seconds)
  done (took 2.696188438 seconds)
done (took 22.440484484 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08166729 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.37187495 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362939393 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093411456 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671609557 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358493621 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.000921249 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096708687 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119569084 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069786186 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087070905 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651479282 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.994651784 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.325433363 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.980736787 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325794625 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652666428 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070554642 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070018328 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070620606 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.985318372 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070062789 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070280818 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070948678 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649593841 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374628499 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07020249 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.321022804 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069139912 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072543354 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358205271 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07074117 seconds)
  done (took 16.285576404 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073494114 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123644617 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075812697 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087688158 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072361186 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071939006 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073648335 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072100861 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126096498 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07101627 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087909627 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069964198 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074537973 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071095616 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091237803 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.088789214 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071258963 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070915603 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071154283 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070770096 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089122569 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07023594 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070633506 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07113201 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070370916 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083309945 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07135356 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070582202 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069833575 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070376278 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073609209 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071022469 seconds)
  done (took 4.179480237 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121663875 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.131914597 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077000183 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108778029 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117273255 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072871306 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.151822077 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097357262 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.132181756 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070701335 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089487799 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070477265 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105768071 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071048954 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091813657 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071178812 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071372418 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071396907 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070726436 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070695843 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091660845 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070141525 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068774727 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068782214 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067798838 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080915239 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06752109 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067622281 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067502227 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069125642 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070550963 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068256458 seconds)
  done (took 4.403804031 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075178768 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077761362 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.086526854 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087589127 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.072365966 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074109335 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075707597 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.071916784 seconds)
  done (took 2.301784331 seconds)
done (took 28.84152423 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081662137 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070696075 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.075268367 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085056986 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075453338 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081404014 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068859857 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077247633 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073605377 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072551906 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075033889 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068280503 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071222581 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066645223 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073504169 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067163852 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078525406 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071287599 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078608261 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078683851 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069593445 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072116188 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074661104 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078874365 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.07852305 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078291258 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077333066 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072124713 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068176304 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069825678 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076211361 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083719964 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068876861 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081906602 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067663456 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067457082 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07134916 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.066963051 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078977046 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075817049 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069294218 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075385406 seconds)
  done (took 4.770059391 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090656313 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096307209 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08816265 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.063985008 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067401909 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065756491 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088678401 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059302522 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058698709 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088189331 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056215595 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060660921 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065667046 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.052656629 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059546672 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055709154 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061422304 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.054866344 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059533292 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059037267 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088321995 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053671513 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077346123 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063318622 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055482112 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.060929769 seconds)
  done (took 3.440858757 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07695784 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088308642 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089459507 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129301326 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.10561962 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078955126 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080230965 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.0947871 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.087483852 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066303953 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07056648 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092044203 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09080761 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073530971 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066769155 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085264809 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083014163 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068567497 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072428493 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095884946 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086405014 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08538664 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098267828 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082883913 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066350886 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069814059 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070943659 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08146821 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072463917 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076481564 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071028881 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070945108 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069419674 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078785335 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071111705 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068981541 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092029845 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077202197 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078720706 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068161823 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070604042 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068433083 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092724195 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132769262 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066656156 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07441274 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076142849 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077756081 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067092432 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088199606 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07916216 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067107809 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070619391 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066901261 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067563148 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081512365 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069895791 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069933772 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076607721 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071263694 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.092481206 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072298308 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083413974 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067144522 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075164535 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06671832 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06848429 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066141081 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095749412 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069229292 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112146812 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068558288 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068463344 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077005253 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075207077 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073852514 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067943289 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083801185 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077983829 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071226279 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077056501 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070481803 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07041596 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.09134815 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069823206 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069474296 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068039798 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073392823 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070102298 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06879468 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080847537 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067410743 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070312608 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084952086 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067155928 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068614789 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073402643 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073351518 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066826243 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078382251 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072492369 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068084631 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076719375 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067231998 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070297651 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080717403 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073572902 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066217167 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07197065 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073227222 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067755213 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068395713 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069911317 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069294613 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075926679 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074347606 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071884628 seconds)
  done (took 10.670417079 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.167007303 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157448299 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069935155 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.159510787 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075754794 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078619184 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.150639844 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094736886 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068144078 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06762046 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068373039 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110075277 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105895602 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115804975 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.07824799 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067538285 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084213893 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.11462881 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152822611 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146164347 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084354409 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077182768 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069407447 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068560694 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069718447 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07797318 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085173332 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076210565 seconds)
  done (took 4.45939986 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083395671 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104905881 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073971307 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090903665 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090974269 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067340336 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.06953597 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069510623 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080590899 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07775989 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066642887 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072233133 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07482888 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070485608 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068009324 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074359847 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074603256 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069525557 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07125427 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072960285 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07813532 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091530496 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071546846 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066602671 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072193457 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066335114 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.062909286 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084072313 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067866508 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.094565055 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065747679 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075453866 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082070058 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06838311 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06710791 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067688628 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067244928 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067251891 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06907297 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065649319 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065832636 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056369033 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.0665291 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078712767 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074385995 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055959788 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07157255 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072787565 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072535804 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064739331 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07016204 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070327598 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070500981 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074670026 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072278132 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072818101 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068757 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074115305 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076436651 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067253366 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064364185 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066060659 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072662491 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065226175 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075912434 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072033725 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065715897 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067121375 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069486999 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074276959 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066890683 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070223801 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065000044 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069349941 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072070726 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069145766 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068626728 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066201833 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067145846 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067703167 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.0548421 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067668777 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053028902 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070566857 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066117424 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065690553 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067487245 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072945835 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079154195 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068954576 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073688412 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068520778 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066434335 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070820515 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060069366 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070594416 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08376668 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082778382 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067493996 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065160066 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082333011 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072400279 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066752256 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05553932 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07471038 seconds)
  done (took 9.18821007 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094167547 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07212553 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08615928 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093659357 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086974727 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074886002 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077251523 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068623839 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083232036 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073910304 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076372196 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067210008 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077952251 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077467955 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069236118 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078043966 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071847362 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084566045 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082473833 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068547382 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076007709 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080457004 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090651078 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.081719457 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080788174 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081999126 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090726932 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071491312 seconds)
  done (took 3.942146131 seconds)
done (took 38.146555303 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.755771161 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.926684238 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.752910521 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.115698381 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.034321341 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.769115179 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.93430916 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.752572233 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.958068133 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.790800298 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.99479444 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.87286996 seconds)
done (took 65.348187468 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.798791782 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.896964168 seconds)
    (2/2) benchmarking "String"...
    done (took 1.996313175 seconds)
  done (took 5.584280089 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.988380961 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.324189438 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.007020698 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.751147596 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.755793004 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.094841884 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.559102686 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.264345166 seconds)
  done (took 30.447732193 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.922909049 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.987086156 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.456102279 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.488558787 seconds)
  done (took 15.596697162 seconds)
done (took 63.19238168 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.766952037 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.766585854 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.76563889 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.735308597 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.810948563 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.769474156 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.273625262 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.786145239 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.754727573 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.741356514 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.754279091 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.212189817 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.765299283 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.36249952 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.75427898 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.765470272 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.754163611 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.307772556 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.915766253 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.772283851 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.754303862 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.763929768 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.755749397 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.758412994 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.757733055 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.757772832 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.197603246 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.757706866 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.377161783 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.753092061 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.782966435 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.322488552 seconds)
  done (took 203.965686506 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.755980917 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.817237325 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.855833297 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.801128257 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.323724168 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.940180329 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.877612807 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.359706554 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.757915905 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.764940648 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.937809008 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.752520785 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.951484337 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.705088285 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.786161686 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.842037909 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.919916498 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.964085159 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.78551248 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.933652451 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.78174245 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.804011144 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.753086758 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.927631677 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.776710905 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.77249063 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.928905969 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.790187898 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.953868353 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.913699257 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.798451805 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.763711758 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.983626834 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.635718857 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.782146324 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.764171741 seconds)
  done (took 169.656442812 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.144502523 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.757014903 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.758442276 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.757534021 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.770268127 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.755390527 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.879978136 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.88215498 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.361404413 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.416402191 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.808212824 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.602913859 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.755500474 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.826166571 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.768287312 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.757441752 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.773379716 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.787688741 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.758769652 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.758387293 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.882565662 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.767984996 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.743260813 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.765618788 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.758563088 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.764997857 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.128092964 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.753313324 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.760121518 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.764676106 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.021644249 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.756134423 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.760285061 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.653462352 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.407913699 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.852109617 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.757180175 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.766334067 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.758938881 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.980836085 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.757320605 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.758876126 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.759551925 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.761885594 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.941115536 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.756016553 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.885950738 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.756942428 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.275146533 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.756019724 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.758798518 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.448781441 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.462656172 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.75871883 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.760130146 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.761465971 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.761707267 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.760988675 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.76573474 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.439745551 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.832580601 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.759212535 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.765601826 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.766907679 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.758268125 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.939676342 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.756482671 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.07984809 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.820836546 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.894169094 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.882285044 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.76178643 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.831012536 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.856280018 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.758418558 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.76078419 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.759363836 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.760855622 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.841992397 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.757290184 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.889309327 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.765400845 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.761817367 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.815173937 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.831816346 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.758167925 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.662753892 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.760767714 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.760814561 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.759817118 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.08096399 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.760343012 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.831189287 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.757528294 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.760952514 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.761913376 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.896314135 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.882963504 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.560306612 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.764053555 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.492561456 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.763762611 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.925593383 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.760749441 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.964999521 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.763380035 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.847972844 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.764220071 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.763853143 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.761248104 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.793272093 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.763162482 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.824274524 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.761798109 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.134122959 seconds)
  done (took 400.786834957 seconds)
done (took 778.302433216 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.445913945 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.387869428 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.502263171 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.416742272 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.391034893 seconds)
  done (took 13.843126617 seconds)
done (took 15.540905431 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.851511685 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.853869483 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.786908035 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.854323687 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.782452862 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.850751959 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.834144877 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.789108314 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.824015057 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.786735584 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.820242354 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.787146382 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.773131906 seconds)
  done (took 25.29201687 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.002755871 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.011706425 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.836731276 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.996272127 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.813574042 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.005422775 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.928798734 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.928567675 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.9208962 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.783193131 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.782604984 seconds)
  done (took 22.710424655 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.010531952 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.008117871 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.845197894 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.007762711 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.817479496 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.011023767 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.931675917 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.919896252 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.91986888 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.785558156 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.782080698 seconds)
  done (took 22.738898812 seconds)
done (took 72.440683974 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.772255677 seconds)
  done (took 3.470253838 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.798103736 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.958366096 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.777101596 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.77524527 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.772338377 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.77572678 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.777015093 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.772087601 seconds)
  done (took 16.110635102 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.773442182 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.781205047 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.774925066 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.776619856 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.777558434 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.776316324 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.773145192 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.779182468 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.773317698 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.773778989 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.773873104 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.772988072 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.773254825 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.780891534 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.773405473 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.77635017 seconds)
  done (took 30.111158953 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.776374806 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.776724794 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.774446531 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.774351434 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.774232351 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.773671492 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.777038885 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.778851877 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.775584186 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.773332463 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.775884452 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.77545051 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.776175624 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.778309248 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.773905797 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.775497938 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.775256377 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.775671906 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.781088828 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.77522401 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.775272223 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.774579622 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.775398514 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.77615088 seconds)
  done (took 44.322823042 seconds)
done (took 95.713667551 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.737297391 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.15869599 seconds)
  done (took 8.596588593 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.779489104 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.777023061 seconds)
  done (took 5.301492766 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.776611394 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.784440943 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.775607887 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.777398843 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.77690213 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.775864701 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.777035653 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.779747644 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.77590271 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.777422034 seconds)
  done (took 19.478381612 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.777551899 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.776289324 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.778249676 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.775378027 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.776334928 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.774963361 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.77745716 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.778787789 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.77614293 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.775601664 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.777226158 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.775297005 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.776678399 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.777363371 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.77667248 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.773749559 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.774220797 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.773650588 seconds)
  done (took 33.674081078 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.781272751 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.776253559 seconds)
  done (took 5.260073977 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.774040403 seconds)
    (2/7) benchmarking "second"...
    done (took 1.7736163 seconds)
    (3/7) benchmarking "month"...
    done (took 1.776279989 seconds)
    (4/7) benchmarking "year"...
    done (took 1.776612973 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.775948124 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.775416396 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.77656365 seconds)
  done (took 14.129600249 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.784317061 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.932265986 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.002900519 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.442998606 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.782821171 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.787388509 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.763785713 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.782119083 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.786201301 seconds)
  done (took 19.767630448 seconds)
done (took 107.911385851 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.616414535 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.770889522 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.117223891 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.81846015 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.827102905 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.117424041 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.799100458 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.07660869 seconds)
done (took 42.846628484 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.843770866 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.343016827 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.375188079 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.290299043 seconds)
  done (took 12.713501559 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.756628357 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.313477427 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.806323644 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.369592412 seconds)
  done (took 19.975111858 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.142145957 seconds)
    (2/2) benchmarking "read"...
    done (took 2.125893033 seconds)
  done (took 5.981768865 seconds)
done (took 47.221432472 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.783988922 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.783992116 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.780678096 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.783587545 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.778570255 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.78043275 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.782155849 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.780869747 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.779550125 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.782600602 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.783329413 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.782570826 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.78321721 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.78328988 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783968801 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.779892261 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.781147018 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.783440142 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.781405762 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781571407 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.78090476 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.783633587 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.780488894 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.780946009 seconds)
  done (took 44.471041431 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.785971239 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.782610565 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.784911367 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.78414716 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.781949388 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.785002969 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.784379417 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.782498391 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.785189914 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.784574613 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.781896385 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.781955624 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.784889094 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.781468775 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.786159666 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.78318175 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.785285491 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.783218676 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785550523 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.782394485 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.78665142 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782518448 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.783510296 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.786652311 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.783942897 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.784613142 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.785248306 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.7846381 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.785921086 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.784079311 seconds)
  done (took 55.233089804 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.791166475 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.794383821 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.78731178 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.786206501 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.786826604 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.786277249 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.786727178 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.786543955 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.786782648 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.785952433 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.785014139 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.785329679 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.786137802 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.785425384 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.786602104 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.784707075 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.786743969 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.786734129 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.788456958 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.786770938 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.786000809 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.786552079 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.788142875 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.78682264 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.787524819 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.787260507 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.787489481 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.786583892 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.787515118 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.787242056 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.787494754 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.788856613 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.787482796 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.787409612 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.787043885 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.787780671 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.795089779 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.796836513 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.789817597 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.787854884 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.787980309 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.789619776 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.789538693 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.789207078 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.78932168 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.789035633 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.7902365 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.790162766 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.788070649 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.789426589 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.790151944 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.789164476 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.789119365 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.788386198 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.790064741 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.789457358 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.790236332 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.789806142 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.788621963 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.789531365 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.790412373 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.789194267 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.789642597 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.789220838 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.790415012 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.790390831 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.790238339 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.790319698 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.789903658 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.788874153 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.789511869 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.790520384 seconds)
  done (took 130.484265114 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.789333516 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.788502297 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.786484095 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.787086284 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.787778147 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.790384986 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.78571767 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.789622128 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.786109593 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.790068587 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789270076 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.787884093 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.785577526 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.790754769 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.790360204 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.786938359 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.791040699 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.787743115 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.79071822 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.790569161 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.791352521 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.788676406 seconds)
  done (took 41.066013358 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.790586189 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.792157688 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.788292504 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.790998073 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.789942313 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.792409805 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.792177492 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.793118381 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.790181617 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.789131688 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.790754593 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.792122453 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.790435598 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788606778 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.787960085 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.787729445 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.791306612 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.786835081 seconds)
  done (took 33.939268362 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.789332445 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.788633825 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.791878511 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.789178292 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.78806369 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.790613409 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.789234517 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.791473734 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.791485798 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.789893992 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.791474352 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.792422369 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.792882269 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.788897745 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.791907719 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.788678515 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.791009096 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788515141 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.792484118 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.790074048 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.790497052 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.793012157 seconds)
  done (took 41.106610608 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.793440544 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.792721179 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.790546926 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.788621515 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.788836828 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.792561433 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.7927398 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.789346251 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.79241281 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.792780749 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.78912758 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.793139427 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.790704667 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.792022048 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.790713945 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.790674646 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.792674017 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.791352193 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.793719995 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.79033934 seconds)
  done (took 37.544840143 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.791094104 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.789530736 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.790942348 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.790221961 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.792046263 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.789890261 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.792059315 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.791208391 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.79114125 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.792325238 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.791955398 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.789488756 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.791177104 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.790384949 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.791657494 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.790998486 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.791342498 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.790514987 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.791547633 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.791490434 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.79191046 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.791002813 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.790715741 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.792284392 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.790585994 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.793205913 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.791596943 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.79085287 seconds)
  done (took 51.871292106 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.796081335 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.796988182 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.792301164 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.792227433 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.792185937 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.791858022 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.792239394 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.793325589 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.794210892 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.792151012 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.794437091 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.795038876 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.795115099 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.79618748 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.796496767 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.796512592 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795401948 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.79340747 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.79267486 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793361872 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.796376574 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.796653908 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.795919967 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.79329689 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79402339 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.797797712 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.792666737 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.792926197 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.796110043 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.794216712 seconds)
  done (took 55.552336005 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.81613726 seconds)
    (2/2) benchmarking "in"...
    done (took 1.814715346 seconds)
  done (took 5.350111011 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.795104747 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.79859655 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.79704238 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.79313001 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.793445591 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.796973136 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.796800607 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.794637751 seconds)
  done (took 16.085922001 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.794040189 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.796988772 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.797115804 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.797952957 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.793278113 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.794931672 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.800115588 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.79864753 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.794745765 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.794988127 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.80066226 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.803608967 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.795183993 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.792686125 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.794126836 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.79485255 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.797082254 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.794885103 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.795429779 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.799189982 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.796051489 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.797452003 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.79618443 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.79535454 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.795071189 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.80601781 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.796033215 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.798243155 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.793799353 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.797937445 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.79438208 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.795550791 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.794156368 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.795708183 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.800593106 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.795328819 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.802674438 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.796664727 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.801789954 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.795336273 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.800423721 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.797663171 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.795048538 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.796357407 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.795553738 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.795441191 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.801698359 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.796904541 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.79337431 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.798674861 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.805857492 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.794957421 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.796102891 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.799729778 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.796498997 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.801858026 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.797941056 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.798994164 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.805877008 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.808394785 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.809734272 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.804346594 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.797141386 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.795316436 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.807181015 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.823773642 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.80222066 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.799239195 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.7975456 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.801673869 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.802914354 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.811139498 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.807637033 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.797097926 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.796161956 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.803401117 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.796487184 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.802884787 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.80226305 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.80076508 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.796515795 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.798535131 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.808628889 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.821688761 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.795912251 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.797181064 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.798244916 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.797415425 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.800248718 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.80897674 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.798491997 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.802242746 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.797671343 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.797676291 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.798532772 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.799928275 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.799687342 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.799078057 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.799676104 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.803300998 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.797621949 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.802888917 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.808859495 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.799092315 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.799816383 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.806066587 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.803623323 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.797731509 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.805244759 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.802614925 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.799175789 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.7983311 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.805453449 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.799585572 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.80242169 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.808157357 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.799276813 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.799559729 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.799480946 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.803355196 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.80960704 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.829606891 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.803979163 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.803687582 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.805937974 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.813294924 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.800051173 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.802038769 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.801676974 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.800518728 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.801576511 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.801594015 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.803137276 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.800290582 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.799915862 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.80152847 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.802024243 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.805168933 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.801005156 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.801296769 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.800671478 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.801592226 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.800948382 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.801994917 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.80032131 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.802167917 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.806400024 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.800298216 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.801941621 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.802108316 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.803560742 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.804564964 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.803199936 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.802181893 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.803438052 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.801577863 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.801512586 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.803111857 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.806504802 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.806362908 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.806639235 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.802974915 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.807476655 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.802429818 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.806256019 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.799992111 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.803139905 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.805326379 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.805989652 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.801525431 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.806854906 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.800089847 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.80580332 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.812881002 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.809751446 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.806067148 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.808061623 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.806902117 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.807960882 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.808770858 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.81108324 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.812457162 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.801010714 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.808078943 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.802039632 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.801661605 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.806785364 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.803390984 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.803648946 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.804290085 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.805332505 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.817786226 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.817998257 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.812966582 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.805012641 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.811627149 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.804429992 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.808855029 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.807591891 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.802425402 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.808728992 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.803838743 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.802729424 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.803868532 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.804109149 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.802352556 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.804357272 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.807206623 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.80940983 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.80431946 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.809463002 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.804782571 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.805673429 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.806121501 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.80964694 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.804115733 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.803336681 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.806917923 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.802793437 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.802959085 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.808690312 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.804590413 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.811358784 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.806123029 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.806188095 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.80696888 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.803642278 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.80318688 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.808565944 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.806733281 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.803232756 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.809585445 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.805976205 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.805168105 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.809698737 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.804917083 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.804147688 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.807802241 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.80905301 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.805559333 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.807151093 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.818731918 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.809730681 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.807153937 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.805309754 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.805043176 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.809921841 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.812144081 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.805893804 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.804132688 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.809678389 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.807718137 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.807472664 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.807263322 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.80642965 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.807602923 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.80859388 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.81042884 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.812090579 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.807973394 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.807958402 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.806120289 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.807499251 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.810581638 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.816857398 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.811596867 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.807331863 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.807205976 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.808033673 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.816385618 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.806146602 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.806207975 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.807447873 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.821708838 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.817948399 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.813956853 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.808947059 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.8114674 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.81288666 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.807096415 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.813016899 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.807577991 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.808933035 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.807654603 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.80656686 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.810021081 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.808238394 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.813079371 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.810297197 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.807178211 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.816201235 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.812706569 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.806186713 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.809758619 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.807600229 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.812623502 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.807533628 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.813928978 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.809412067 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.809146456 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.807030823 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.807463086 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.814895587 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.807518281 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.80931912 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.807735406 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.80944985 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.806987632 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.808270035 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.808614001 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.812407475 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.819186173 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.812022724 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.821744427 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.810870659 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.81978635 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.809074492 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.812713737 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.818276986 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.812309438 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.807508297 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.808527851 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.807831179 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.815539147 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.809918043 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.811037782 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.816406237 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.811183962 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.810046094 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.814962948 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.810372056 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.816088809 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.810145353 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.817316345 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.811987831 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.815117263 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.813463661 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.811934753 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.809206018 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.816313599 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.809923024 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.81368804 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.808946084 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.810912934 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.81004613 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.810349731 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.814114196 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.812189887 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.815097265 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.813539487 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.815871841 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.818394529 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.810060799 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.815057157 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.816290385 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.818769232 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.81041347 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.818269527 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.811567239 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.811451464 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.811580933 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.816251213 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.810978756 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.810926599 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.810558407 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.810829742 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.814092069 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.819668713 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.810169908 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.815613701 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.811523715 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.812213627 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.812283677 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.821758371 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.839190267 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.815995231 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.822417565 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.814855945 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.813874362 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.818273884 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.814272598 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.815038624 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.814376196 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.82444439 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.827637846 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.814213605 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.814538777 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.812674374 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.813419003 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.818411421 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.817911799 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.812669638 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.819128066 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.815046624 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.813469124 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.817173971 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.81912927 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.812633864 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.814794732 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.814648007 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.82505025 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.81442811 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.814957895 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.814605367 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.818761275 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.814842259 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.815911232 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.814039926 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.813903622 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.819884603 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.815444523 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.82300487 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.820503578 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.816870309 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.812776072 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.813670183 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.815275983 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.813725058 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.814845943 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.815414018 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.815925539 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.81678169 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.815057462 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.816494449 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.813980185 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.821201291 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.816367413 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.820481646 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.817328122 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.822982187 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.817653377 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.816802478 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.819486642 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.821526667 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.81428845 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.815904105 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.821723275 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.818099448 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.82947045 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.82708728 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.821435507 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.815960314 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.818459599 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.827073553 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.816390855 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.816449271 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.819021482 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.817781678 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.817943195 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.820776926 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.816950917 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.822186901 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.814989773 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.81629046 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.822289663 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.818290855 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.815905799 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.819971251 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.821768393 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.815168689 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.815566419 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.820223951 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.816124812 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.823881386 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.818886166 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.816871045 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.818869057 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.81335187 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.81777002 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.822929719 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.821121585 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.818459846 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.818218649 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.817042324 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.818818213 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.823634714 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.818652376 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.817554017 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.81711567 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.820126799 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.827738693 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.820159187 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.821916536 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.820062037 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.821325912 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.819838928 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.825385281 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.820753416 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.820643227 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.820620165 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.820698171 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.820282559 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.822575762 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.821152622 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.820864481 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.826641599 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.821073139 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.823498405 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.834177871 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.834000442 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.820386628 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.82102432 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.824127062 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.822594246 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.81947403 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.819712013 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.821705611 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.821111878 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.824679492 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.822033878 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.825945625 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.823844357 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.836851233 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.827744938 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.819602159 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.822153945 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.824698932 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.824789808 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.82094209 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.825428915 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.821804585 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.823573894 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.831113783 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.821149848 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.827953985 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.821358312 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.821904312 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.829620628 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.82439144 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.832707242 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.822658169 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.819492463 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.821556325 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.826451911 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.840741968 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.825188294 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.8321036 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.855606511 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.824178539 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.821737713 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.820989729 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.822409484 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.821753097 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.826014508 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.824391839 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.830363807 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.831518097 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.824929919 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.828467009 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.832988803 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.826278733 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.825752046 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.824518364 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.819197898 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.821096233 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.821908319 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.821693576 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.827416632 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.821053002 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.822763335 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.822922799 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.823805206 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.838189556 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.833283581 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.827351099 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.823450044 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.825575837 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.825984258 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.824711054 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.834595768 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.837411641 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.823441744 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.823898547 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.826338144 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.822367169 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.824478063 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.823504928 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.8232725 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.821615624 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.826084251 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.837591146 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.832547742 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.828341256 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.823644017 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.823979662 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.827459937 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.824555196 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.824809796 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.824088673 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.826365409 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.826530296 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.829510197 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.829137753 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.828764362 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.825942306 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.839896816 seconds)
  done (took 1081.536700867 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.827338283 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.825078277 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.824190778 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.825911242 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.826641781 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.825281544 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.827772082 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.826243218 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.827449743 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.828024081 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.826675088 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.826710033 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.826898256 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.826904874 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.826844356 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.828256911 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.827716213 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.826805217 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.827610346 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.826541699 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.827027559 seconds)
  done (took 40.113492555 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.831092395 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.827035865 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.827698207 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.830913975 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.828575718 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.830557521 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.828615819 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.830433705 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.830943858 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.827881845 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.831817206 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.831046858 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.828810983 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.8287411 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829195462 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.830676194 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.831408327 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.829257909 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.832289395 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.831236464 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.831418944 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.829468037 seconds)
  done (took 42.012189714 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.829511076 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.827728019 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.827569477 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.830574158 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.831094978 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.828234162 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.82599113 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.832456364 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.830336295 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.827444829 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.825426931 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.82869808 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.83567557 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.839639802 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.827860324 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.830873694 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.975873037 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.826548568 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.828515805 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.830186823 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.829439861 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.832642068 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.829483637 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.830022235 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.825835604 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.827552475 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.83284825 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.833476192 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.828236487 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.82971904 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.832497988 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.833053764 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.827799234 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.831370655 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.827681139 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.830008369 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.838749951 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.827999414 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.830358908 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.833784297 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.838742653 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.857914489 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.827325292 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.83483117 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.832203621 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.833347103 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.830701336 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.838612261 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.830016213 seconds)
  done (took 91.632379427 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.834187126 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.834118153 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.830512292 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.833245737 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.832566278 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.832875101 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.833184445 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.833160116 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.830510916 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.831752183 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.835787309 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.826788881 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.826829456 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.830986454 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.830547085 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.828729836 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.82748784 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.829295159 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.829175377 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.829719347 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.828259171 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.83254605 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.829953141 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.829385719 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.831169996 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.829889221 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.829349099 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.832270549 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.828730139 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.828136992 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.831767973 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.832656797 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.833140694 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.830832729 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.832044713 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.830804358 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.833991288 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.829145967 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.833597197 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.834082085 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.836114045 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.835621955 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.840015701 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.838225584 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.833341003 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.834441963 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.833235571 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.832130761 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.83074349 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.833266113 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.831932999 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.831814994 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.832799611 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.830284321 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.833655102 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.835410009 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.832078682 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.829333277 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.833841616 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.832517527 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.829974688 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.834838085 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.832025162 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.834482056 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.832982506 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.830671919 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.831258234 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.833890696 seconds)
  done (took 126.333015604 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.831438329 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.830229525 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.831390682 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.831065488 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.83354419 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.831771748 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.831014334 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.832634947 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.832115739 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.832479251 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.830375514 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.835054345 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.830620927 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.837277805 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.829958921 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.831071763 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.832515755 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.829737756 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.830093757 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.832373307 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.833465804 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.834029473 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.832947071 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.832257198 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.83274711 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.830338114 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.833101483 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.831890539 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.832127488 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.831623113 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.834198745 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.8319236 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.83105548 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.83431594 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.833745206 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.830198462 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.831586538 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.833304115 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.831961212 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.833212808 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.831709706 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.834466482 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.832277916 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.832278228 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.83190605 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.833490344 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.833339711 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.835007059 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.836387106 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.835189398 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.835095677 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.833179602 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.833620458 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.832786807 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.835225671 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.836409282 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.832144842 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.833803164 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.833487038 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.835118524 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.83452523 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.838291688 seconds)
  done (took 115.396370964 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.838129447 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.838626674 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.836376498 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.836956414 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.838187937 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.836978441 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.838649555 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.838484433 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.838889236 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.8385238 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.83769222 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.836464495 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.836223472 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.838802265 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.836355084 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.839925829 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.8352091 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.835994363 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.838441331 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.83723848 seconds)
  done (took 38.512880666 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.83527804 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.84044111 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.835720048 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.83821624 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.840711626 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.83781133 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.840847399 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.839433148 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.836588996 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.838324162 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.839339281 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.837808454 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.835049092 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.835167436 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.838711766 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.836490138 seconds)
  done (took 31.168108705 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.839603117 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.840738611 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.835956535 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.835947088 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.838519519 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.838457239 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.840333992 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.836666098 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.836950404 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.838952836 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.840079379 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.84058413 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.839943416 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.836594967 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.838199534 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.841804483 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.83839346 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.837641898 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.840325636 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.838745033 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.843590901 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.840782611 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.842736229 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.843246227 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.839974322 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.842544671 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.840436364 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.840860855 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.841766889 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.842910762 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.843447173 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.842283787 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.841136408 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.841369255 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.839308327 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.840665563 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.842164417 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.842196646 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.842079481 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.839817026 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.841401644 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.837706654 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.84212331 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.843279056 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.838167022 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.842049945 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.836584541 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.841277299 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.83918735 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.840605323 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.840871753 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.835880974 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.843204525 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.842919747 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.842316276 seconds)
  done (took 102.978810881 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.843256469 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.842450021 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.840486939 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.843034575 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.842321594 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.841280743 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.842813838 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.840892537 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.839061085 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.841871389 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.842732664 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.84402113 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.841259039 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.841710582 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.839939534 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.845343021 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.840273757 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.841318059 seconds)
  done (took 34.919863799 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.843323438 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.840888134 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.843777343 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.840696956 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.8402117 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.845720348 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.839814598 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.846012117 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.8442083 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.841527456 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.840007919 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.844224351 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.844613754 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.843092369 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.842856607 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.843328479 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.845836066 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.844411942 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.841720703 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.841726902 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.845470025 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.845321764 seconds)
  done (took 42.315858191 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.840539872 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.838134045 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.857543645 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.863655602 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.863916188 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.880618678 seconds)
  done (took 12.911065929 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841550047 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846247716 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.841469311 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845380614 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845775432 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842666941 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843075972 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845245814 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846190233 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844517078 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843583588 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845451525 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845765224 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844341331 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8484906 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846000566 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843198911 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843097279 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842773876 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848096336 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843231024 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846830429 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844278825 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845165483 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843426355 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844698116 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848801843 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844127661 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845134016 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848213361 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847443155 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843800694 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847537399 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843535559 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848002482 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848440052 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845245593 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846718685 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847215436 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843922398 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.847309349 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848075422 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849744912 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845123125 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847710275 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844240129 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845330065 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844791888 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844845591 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848367439 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848487332 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846905258 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848790841 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847863463 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848888059 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850215672 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848922591 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84691975 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851165315 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845695617 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845790137 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847435328 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84775753 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847695295 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851390092 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845361445 seconds)
  done (took 123.612044106 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848900903 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.846755448 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847642992 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848312095 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847859717 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84695875 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847382401 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847102375 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848580729 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845734891 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850618932 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847373735 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846953078 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844882676 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846165947 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84579338 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84871095 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846406562 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847489406 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849316619 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846188437 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848844637 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846426614 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849381257 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847305721 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849826532 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847006252 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849061256 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846643937 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847841189 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848183121 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845977801 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847768144 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.84654639 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849132777 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8483028 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84630436 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847683297 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850274028 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850582203 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850308357 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849784888 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848227483 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848044303 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850779151 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847169901 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848049985 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848039878 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848876613 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849046004 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849176566 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850172245 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849972099 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849579341 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849384356 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8495644 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849427284 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849345445 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848969645 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852697836 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851271638 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848637777 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851456358 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849808159 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849751779 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850228835 seconds)
  done (took 123.768909049 seconds)
done (took 2521.621994036 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.912755324 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.953452703 seconds)
  done (took 15.637839793 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.010093228 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.964055778 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.84564078 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.895304869 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.844243461 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.843530068 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.854962726 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.842292511 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.847943583 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.847150079 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.847368564 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.036079083 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.85564187 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.843299289 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.84571198 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.93970576 seconds)
  done (took 51.954114117 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.849323499 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.851832686 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.858182058 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.852338424 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.847520227 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.861428234 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.880796101 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.852376419 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.882895123 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.860308374 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.918840127 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.858103372 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.849453833 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.89749727 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.860995516 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.86285418 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.942704191 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.924430014 seconds)
  done (took 35.485521079 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.929688932 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.853087285 seconds)
  done (took 10.568714488 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.872091317 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.863516353 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.848758652 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.838552107 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.871637509 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.876267613 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.872971551 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.872945221 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.855314529 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.85619859 seconds)
  done (took 70.43290736 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.855100462 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.853003209 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.853715357 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.849394065 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.84416507 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.846948344 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.852043155 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.847042893 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.540714375 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.885536851 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.855760587 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.857502497 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.851513686 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.854012093 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.856234712 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.875685204 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.047169943 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.854884909 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.856413459 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.859092133 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.853023152 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.911086846 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.867085131 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.861209323 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.883680434 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.550296785 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.86163541 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.859859882 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.980847966 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.8568111 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.855059069 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.854872684 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.856140009 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.239979124 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.146705217 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.851879274 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.861451309 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.860988818 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.856231873 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.964427344 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.854237372 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.859435593 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.743881573 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.141999427 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.969911076 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.897137427 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.23900355 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.855888201 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.856005899 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.88666596 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.858317808 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.856696376 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.869154167 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.361898485 seconds)
  done (took 131.862035975 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.850100983 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.113414202 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.004982285 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.850465121 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.137607805 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.057327019 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.852230279 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.900950418 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.850995912 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.078475295 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.071657523 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.960901981 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.852024351 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.852495118 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.84707788 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.846935877 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.011450262 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.925902466 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.850327564 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.848669489 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.881555504 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.098130667 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.986059136 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.851252236 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.86969323 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.065206874 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.986393152 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.958173165 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.300046789 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.848453997 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.916760748 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.853676341 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.849108488 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.846564794 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.008776839 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.947492509 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.942198118 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.850934032 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.848292347 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.85031747 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.533298254 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.051579682 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.951632826 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.998498422 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.100084671 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.056423857 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.643774105 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.848942442 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.598263335 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.013701264 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.087136998 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.090287842 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.978576583 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.851244816 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.374109836 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.849500914 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.851418889 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.086877114 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.084273495 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.956316365 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.85279389 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.853480493 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.848321302 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.104253911 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.856485365 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.94795518 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.854649822 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.848625416 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.948796637 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.959106429 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.084263712 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.06739318 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.887724026 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.187071455 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.41147291 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.104736241 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.923454565 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.089891855 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.854044151 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.85020326 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.942723979 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.809501442 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.053991228 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.108841957 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.111498736 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.891544513 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.579703729 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.852846041 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.08428033 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.081955845 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.156475844 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.097466971 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.008402955 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.518506198 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.853510259 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.85426021 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.160941144 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.993414233 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.856176578 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.21881818 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.089823403 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.428926403 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.884481012 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.200309463 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.992045081 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.85336128 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.495408351 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.853441909 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.081931955 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.89559753 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.855096359 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.85505968 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.078086844 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.940069186 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.853760401 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.512079435 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.920269623 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.857223414 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.094095537 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.855778153 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.122583849 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.856685841 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.100497829 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.100306127 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.889027201 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.084807554 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.098567926 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.858608939 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.104926145 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.104063153 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.975628901 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.082519437 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.511136216 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.855979022 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.148915149 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.855513785 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.856433704 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.028723823 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.855374215 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.036047157 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.856386174 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.195509129 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.882216366 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.016617747 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.858020454 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.123489809 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.893986043 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.910349954 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.858340233 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.991233506 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.858575998 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.781332806 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.012290817 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.857742261 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.853011937 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.58226065 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.865098255 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.017702187 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.094594537 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.882349825 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.935827127 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.528724793 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.856954256 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.946895794 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.883570638 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.21806286 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.856255997 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.076102524 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.858076118 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.4026679 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.857923917 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.107416719 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.041522421 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.858439159 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.857291521 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.77061487 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.857226995 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.858274333 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.022038351 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.277064524 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.855434047 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.065952467 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.8578861 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.000996949 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.858124549 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.934057269 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.217524096 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.855601216 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.856555224 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.856749179 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.857863592 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.85808562 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.127657403 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.890663176 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.39630121 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.000815925 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.132787194 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.179043167 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.118053628 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.907473956 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.860902565 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.11105201 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.860014939 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.9239833 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.861219198 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.885154915 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.101129454 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.862022768 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.076798631 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.149930059 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.778437764 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.911501967 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.86243377 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.858482285 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.82403393 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.01986179 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.953890864 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.859511613 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.860112767 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.990229871 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.995794089 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.075854943 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.859658695 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.219664458 seconds)
  done (took 902.267306973 seconds)
done (took 1219.98078636 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.860744145 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.859078139 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.844685105 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.86188561 seconds)
  done (took 29.21790132 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.870763818 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.867641404 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.869495549 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.86887628 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.870474996 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.867589853 seconds)
  done (took 13.008931285 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.097966954 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.85673021 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.862896867 seconds)
  done (took 21.611120805 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.939419917 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.282788326 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.982512118 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.317646423 seconds)
  done (took 10.319130131 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.870019276 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.869135986 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.869709494 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.871624976 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.87063924 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.872049906 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.869804628 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.870922773 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.871082733 seconds)
  done (took 18.631356538 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.244302959 seconds)
done (took 98.824824052 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.010702008 seconds)
    (2/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.675169661 seconds)
    (3/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.951873279 seconds)
    (4/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.861206206 seconds)
    (5/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.250963181 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.017814257 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.848605866 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.920180989 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.983014979 seconds)
    (10/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.891508344 seconds)
    (11/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.423635469 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.237916981 seconds)
    (13/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.992075087 seconds)
    (14/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.434871468 seconds)
    (15/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.082019175 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.103070076 seconds)
    (17/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.174666167 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.161137248 seconds)
    (19/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.051436347 seconds)
    (20/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.015207029 seconds)
    (21/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.96455774 seconds)
    (22/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.060682029 seconds)
    (23/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.326277627 seconds)
    (24/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.561521611 seconds)
    (25/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.962162536 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.034983046 seconds)
    (27/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.988300305 seconds)
    (28/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.099536458 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.660902547 seconds)
    (30/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.852618737 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 3.098337503 seconds)
    (32/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.898882573 seconds)
    (33/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.166718349 seconds)
    (34/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.803916395 seconds)
    (35/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.864639627 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.978057473 seconds)
    (37/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.056963627 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.250597261 seconds)
    (39/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.851051654 seconds)
    (40/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 3.636233784 seconds)
    (41/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.962835729 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.551941474 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.952534363 seconds)
    (44/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.007619501 seconds)
    (45/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.849838049 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 3.592619494 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.20145944 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.949140101 seconds)
    (49/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.865629224 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 3.745649388 seconds)
    (51/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.483484219 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.112883271 seconds)
    (53/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.884366701 seconds)
    (54/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.948353512 seconds)
    (55/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.956679626 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.123776093 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.163384191 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.200110778 seconds)
    (59/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.846336949 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.948771945 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.943346051 seconds)
    (62/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.866195191 seconds)
    (63/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.063683025 seconds)
    (64/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.104404959 seconds)
    (65/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.088767843 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.783334689 seconds)
    (67/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.433261408 seconds)
    (68/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.131043599 seconds)
    (69/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.929725062 seconds)
    (70/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 3.333276754 seconds)
    (71/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.995723563 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.972548006 seconds)
    (73/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.250902549 seconds)
    (74/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.798681907 seconds)
    (75/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.868642036 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 5.611402282 seconds)
    (77/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.997693265 seconds)
    (78/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.968953959 seconds)
    (79/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.868458359 seconds)
    (80/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.129361419 seconds)
    (81/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.888066285 seconds)
    (82/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.127948682 seconds)
    (83/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.172345959 seconds)
    (84/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.066971728 seconds)
    (85/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.086104188 seconds)
    (86/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.873271847 seconds)
    (87/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.202962994 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.932947276 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.774443833 seconds)
    (90/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.564360251 seconds)
    (91/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.98986774 seconds)
    (92/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.952104897 seconds)
    (93/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.860854391 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.256079094 seconds)
    (95/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.349807761 seconds)
    (96/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.081835058 seconds)
    (97/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.97033933 seconds)
    (98/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.052971639 seconds)
    (99/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.89889512 seconds)
    (100/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.864283314 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.867869449 seconds)
    (102/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.358316316 seconds)
    (103/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.444698919 seconds)
    (104/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.451564455 seconds)
    (105/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.058057977 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.864530342 seconds)
    (107/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.961344435 seconds)
    (108/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.975488814 seconds)
    (109/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.193655053 seconds)
    (110/309) benchmarking ("sort", Bool, false)...
    done (took 2.310171794 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.888644563 seconds)
    (112/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.145933812 seconds)
    (113/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.947562535 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.849386955 seconds)
    (115/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.245513129 seconds)
    (116/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.128612823 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.979139128 seconds)
    (118/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.860296287 seconds)
    (119/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.15415326 seconds)
    (120/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.890413731 seconds)
    (121/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.116863857 seconds)
    (122/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.392896272 seconds)
    (123/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.044786414 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.507324109 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.959821424 seconds)
    (126/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.042376472 seconds)
    (127/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.860671961 seconds)
    (128/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.100654821 seconds)
    (129/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.976883491 seconds)
    (130/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.887010102 seconds)
    (131/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.34981522 seconds)
    (132/309) benchmarking ("sort", Float64, false)...
    done (took 5.62645057 seconds)
    (133/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.195360991 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.770738618 seconds)
    (135/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.850283934 seconds)
    (136/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.92066126 seconds)
    (137/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.967702183 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.101410091 seconds)
    (139/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.891912892 seconds)
    (140/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.038809594 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.115215958 seconds)
    (142/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.861950477 seconds)
    (143/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.184628617 seconds)
    (144/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.690617729 seconds)
    (145/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.01674346 seconds)
    (146/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.954763328 seconds)
    (147/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.994274705 seconds)
    (148/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.888761346 seconds)
    (149/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.997814692 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.157626096 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.993990245 seconds)
    (152/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.897725779 seconds)
    (153/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.204373867 seconds)
    (154/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.946753632 seconds)
    (155/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.20623094 seconds)
    (156/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.19052446 seconds)
    (157/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.096818936 seconds)
    (158/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.161275362 seconds)
    (159/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.338505634 seconds)
    (160/309) benchmarking ("sort", Float32, false)...
    done (took 5.635425375 seconds)
    (161/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.999302418 seconds)
    (162/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.021649937 seconds)
    (163/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.989478702 seconds)
    (164/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.968204039 seconds)
    (165/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.857479729 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.354238078 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.190754675 seconds)
    (168/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.924589173 seconds)
    (169/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.924428839 seconds)
    (170/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.134982617 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.559177221 seconds)
    (172/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.984388997 seconds)
    (173/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.882688423 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.073657344 seconds)
    (175/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.039454669 seconds)
    (176/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.024284362 seconds)
    (177/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.165407403 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.878522103 seconds)
    (179/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.418065572 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.882257441 seconds)
    (181/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.929360424 seconds)
    (182/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.855455676 seconds)
    (183/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.004420321 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.901939088 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.880677942 seconds)
    (186/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.874960309 seconds)
    (187/309) benchmarking ("sort", BigInt, false)...
    done (took 6.849347845 seconds)
    (188/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.80652179 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.944553175 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.940481696 seconds)
    (191/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.068824796 seconds)
    (192/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.854790691 seconds)
    (193/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.030531309 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.241400337 seconds)
    (195/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.244006286 seconds)
    (196/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.147223033 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.914561008 seconds)
    (198/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.88964815 seconds)
    (199/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.022895626 seconds)
    (200/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.886176438 seconds)
    (201/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.034402846 seconds)
    (202/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.856930112 seconds)
    (203/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.485380363 seconds)
    (204/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.989951901 seconds)
    (205/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.85550816 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.917216406 seconds)
    (207/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.482950946 seconds)
    (208/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.649863725 seconds)
    (209/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.967074619 seconds)
    (210/309) benchmarking ("map", identity, Int64, true)...
    done (took 3.662076712 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.961681511 seconds)
    (212/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.879964551 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.88461664 seconds)
    (214/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.880285097 seconds)
    (215/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.879341197 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.846343514 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 8.165295587 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 9.289749685 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.778299697 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.080231153 seconds)
    (221/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.136755369 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.754560284 seconds)
    (223/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.835945369 seconds)
    (224/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.948660778 seconds)
    (225/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.835132034 seconds)
    (226/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.846615073 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.849198689 seconds)
    (228/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.91117735 seconds)
    (229/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.303822025 seconds)
    (230/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.830813872 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.906780327 seconds)
    (232/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.873083985 seconds)
    (233/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.187570619 seconds)
    (234/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.944340467 seconds)
    (235/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.392791354 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.892746058 seconds)
    (237/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.24983696 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.141583785 seconds)
    (239/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.463637533 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.140706464 seconds)
    (241/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.91543648 seconds)
    (242/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.066844902 seconds)
    (243/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.963720721 seconds)
    (244/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.971033115 seconds)
    (245/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.091773216 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.726961281 seconds)
    (247/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.362277018 seconds)
    (248/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.213618073 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.845349664 seconds)
    (250/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.117998389 seconds)
    (251/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.871221659 seconds)
    (252/309) benchmarking ("sort", Int8, false)...
    done (took 4.856097794 seconds)
    (253/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.047850232 seconds)
    (254/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.983685208 seconds)
    (255/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.829398296 seconds)
    (256/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.993807248 seconds)
    (257/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.029407894 seconds)
    (258/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.90628791 seconds)
    (259/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.926180478 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.92508313 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.08580783 seconds)
    (262/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.241625171 seconds)
    (263/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.824570745 seconds)
    (264/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.918802225 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.531885763 seconds)
    (266/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.904171306 seconds)
    (267/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.308748085 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.880087954 seconds)
    (269/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.215424896 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.2047114 seconds)
    (271/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.765498342 seconds)
    (272/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.821556768 seconds)
    (273/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 3.340385243 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.476477164 seconds)
    (275/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.904239612 seconds)
    (276/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.966120834 seconds)
    (277/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.339183699 seconds)
    (278/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.924746462 seconds)
    (279/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.438815873 seconds)
    (280/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.834663155 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.973717609 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.647640628 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.934437871 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.159731964 seconds)
    (285/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.838323908 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.95843266 seconds)
    (287/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.998890234 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.907850321 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.075637643 seconds)
    (290/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.863558396 seconds)
    (291/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.864043263 seconds)
    (292/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.356894624 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.587699532 seconds)
    (294/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.956168071 seconds)
    (295/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.230443813 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.886128616 seconds)
    (297/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.90143754 seconds)
    (298/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.237161809 seconds)
    (299/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.923216225 seconds)
    (300/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.169689711 seconds)
    (301/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.838018891 seconds)
    (302/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.78504639 seconds)
    (303/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.891232207 seconds)
    (304/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.229779135 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.866579977 seconds)
    (306/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.663563305 seconds)
    (307/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.826554263 seconds)
    (308/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.196995483 seconds)
    (309/309) benchmarking ("perf_sum", Int8, false)...
    done (took 3.373563169 seconds)
  done (took 1017.460600629 seconds)
done (took 1019.540080899 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.868744356 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.863833342 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.845972752 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.866076259 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.957437822 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.879129531 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.854147254 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.848036032 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.893229836 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.895016523 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.846110443 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.880859198 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.847331783 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.847019482 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.845530548 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.86341174 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.160845771 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.876865816 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.863132412 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.855779335 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.860577833 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.846587343 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.894992245 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.879630891 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.852059016 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.84876558 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.848851554 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.86872527 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.960631345 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.851170794 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.850103273 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.857237949 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.161058343 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.874181608 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.839611949 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.866473265 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.856957598 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.85692665 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.849396369 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.880864368 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.301519659 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.853602241 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.849317595 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.846261529 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.846525783 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.850627251 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.846529129 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.853884309 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.86016897 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.860195762 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.294954907 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.867649478 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.849030329 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.847238063 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.85527104 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.847156397 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.853011565 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.862915312 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.86840882 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.862634602 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.149564929 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.879280023 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.848556764 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.863106295 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.857630705 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.329410591 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.848533993 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.848944887 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.299071202 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.856997501 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.333114428 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.862316464 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.848334339 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.861644204 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.880775456 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.160114151 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.869012083 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.846214414 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.855916766 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.84717316 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.856525029 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.861944286 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.8521366 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.850635862 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.862326734 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.88151937 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.859234643 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.851558634 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.857491742 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.868530308 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.857310237 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.858889796 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.85014622 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.84362571 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.85989834 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.85530793 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.851404117 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.851298726 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.851383336 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.859385916 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.295562743 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.871454049 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.846088329 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.844493987 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.848627767 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.86432237 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.297538877 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.858092001 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.869444774 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.893773035 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.850506608 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.151671195 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.883067976 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.865168029 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.855994969 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.852500847 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.844561932 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.151194528 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.323189185 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.870696373 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.852043934 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.851629269 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.865787706 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.850452354 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.84751195 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.163877175 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.881251143 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.865208298 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.970665429 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.859175109 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.881270585 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.849767554 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.854462006 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.884923205 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.865461945 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.882281715 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.853890459 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.866878493 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.867783883 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.846079569 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.8623238 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.861242817 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.85270793 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.857297991 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.844351899 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.888933882 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.864201472 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.864981431 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.872685741 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.974230123 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.850096389 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.15191274 seconds)
done (took 290.845749482 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.918443738 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.841891491 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.947239812 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.852115717 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.928213316 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.932078291 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.849666871 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.851370381 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.850055713 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.216857724 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.850593259 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.850146595 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.843797868 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.850933359 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.930473045 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.853532501 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.84949171 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.180390314 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.850646045 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.919925389 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.847763444 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.85250121 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.855337358 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.219294168 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.845241078 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.844222716 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.921776786 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.856206757 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.187804444 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.843566003 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.848257925 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.185245893 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.938615158 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.872608178 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.864178685 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.859163566 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.930577851 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.859007796 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.942309713 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.929111234 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.94838044 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.889007147 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.847369732 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.841833244 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.856581067 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.851284607 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.852487771 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.891381397 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.841689555 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.851509922 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.183114901 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.865813046 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.853007166 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.851802702 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.851674105 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.879792445 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.855593273 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.851160956 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.940301151 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.851846531 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.912203758 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.222897003 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.220420271 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.85405756 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.840689326 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.852820949 seconds)
  done (took 183.008255344 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.915458326 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.925446835 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.918506429 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.85292341 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.898876282 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.918517699 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.852707545 seconds)
  done (took 15.061387437 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.856124802 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.856045888 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.899129367 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.898756473 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.850011464 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.999514225 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.855256916 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.861431709 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.852763787 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.903224857 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.853012119 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.856561498 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.863118455 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.85098466 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.898989038 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.862251278 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.968043149 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.85199416 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.852183252 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.001741368 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.855141751 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.864159317 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.906540136 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.862941667 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.852834446 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.858359481 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.443864228 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.85139879 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.854462586 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.854743729 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.853684258 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.892737032 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.857200779 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.845581134 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.853819019 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.966956337 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.852572473 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.855669531 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.857312717 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.855447937 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.856926288 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.856621007 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.858182752 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.856851924 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.856673458 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.875929782 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.857497873 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.857237019 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.85831462 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.859808121 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.902229598 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.857637303 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.855291265 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.855131592 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.90733155 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.864054588 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.854084198 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.856292036 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.858417744 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.854931947 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.004354658 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.901031458 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.859232826 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.901552942 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.860223724 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.859281399 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.857622251 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.859395694 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.949060247 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.859163933 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.900928892 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.856467783 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.014282236 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.87824396 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.861247222 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.856810432 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.856553612 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.855266778 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.849218659 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.86169669 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.857705327 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.854998173 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.859763091 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.859040034 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.857401748 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.966056796 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.961891449 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.860234984 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.866454336 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.862618524 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.856607646 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.90671691 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.859437036 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.856737795 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.909577876 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.969714944 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.910254362 seconds)
  done (took 204.406019304 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.859801758 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.86226322 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.857354766 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.871306854 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.856187921 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.854461094 seconds)
  done (took 12.947054741 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.857143489 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.861154319 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.859818003 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.859630609 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.854464234 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.857465654 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.854233309 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.857340655 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.859198818 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.859535595 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.856171243 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.856993531 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.857418729 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.856437488 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.858160821 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.861483399 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.859575431 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.860753319 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.863822909 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.857736328 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.006584718 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.856776258 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.85774613 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.857342603 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.860246771 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.863764855 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.867140328 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.862785685 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.864910543 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.866935041 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.859999414 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.859711278 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.855895055 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.862145896 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.863453145 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.859697215 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.865872747 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.858881313 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.860490245 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.860115076 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.861851096 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.858652564 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.865154556 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.859266577 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.861034963 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.86212346 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.862654453 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.868281408 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.860301842 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.858609394 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.859058991 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.864181871 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.860242946 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.86001624 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.860676402 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.866992215 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.864073691 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.860149655 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.863267984 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.859748168 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.863447104 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.861050208 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.862025842 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.862620891 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.871545658 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.860047218 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.862245465 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.863507277 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.860888111 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.866845402 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.86140709 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.860637616 seconds)
  done (took 136.918075587 seconds)
done (took 554.131704139 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.947587948 seconds)
  done (took 8.737119642 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.046990154 seconds)
  done (took 8.929046763 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.536709949 seconds)
  done (took 10.326147811 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.857967805 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.863823709 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.855844018 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.861432844 seconds)
  done (took 29.240169297 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.234198167 seconds)
  done (took 9.023309586 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.871015418 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.857247833 seconds)
  done (took 15.577116213 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.945814604 seconds)
  done (took 8.741547986 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.964258152 seconds)
  done (took 8.758023175 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.875726901 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.896532369 seconds)
  done (took 15.573804832 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.839045822 seconds)
  done (took 8.626170924 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.507435408 seconds)
  done (took 11.299884726 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.863924571 seconds)
  done (took 8.665814861 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.877722648 seconds)
  done (took 8.667593572 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.010806204 seconds)
  done (took 9.798387357 seconds)
done (took 163.750381108 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.85711105 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.857554445 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.854690992 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.857939605 seconds)
  done (took 29.215075722 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.902056692 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.895908248 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.898445125 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.905989578 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.900456323 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.894613366 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.895405524 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.891442488 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.91077028 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.900723843 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.901737497 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.905331302 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.898980044 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.890336456 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.901244166 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.900772513 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.912283402 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.900390357 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.893210139 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.900772209 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.866126444 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.912680498 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.903192736 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.866926331 seconds)
  done (took 47.337487843 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.058337084 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.930794012 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.015301452 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.910085202 seconds)
  done (took 9.703944036 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.917128889 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.919149537 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.930961483 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.969681342 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.992893556 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.928193313 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.890458195 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.888763938 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.873356041 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.91923274 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.993490975 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.91465118 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.006807098 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.864751914 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.051646155 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.86518455 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.86490084 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.920717504 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.968571517 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.983338563 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.866853759 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.916273767 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.921276846 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.918137003 seconds)
  done (took 48.07523699 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.863821174 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.872128228 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.870320914 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.867654012 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.863902916 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.865614023 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.873229376 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.868492442 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.889942003 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.866989182 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.864977765 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.865338988 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.864939806 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.865976407 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.867206317 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.879381083 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.881109718 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.866789827 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.871087574 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.873398586 seconds)
  done (took 39.192718601 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.854376957 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.715350478 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.208793616 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.114605131 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.857239063 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.863195845 seconds)
  done (took 31.404156597 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.877292294 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.869791583 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.864482499 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.921791311 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.003417686 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.873499867 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.864149644 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.874131718 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.909983239 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.933266829 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.884146905 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.889822378 seconds)
  done (took 24.561691265 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.861357194 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.861772886 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.861090015 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.879570206 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.876659716 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.873130627 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.872981945 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.858057815 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.879784571 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.883430538 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.871914015 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.880073654 seconds)
  done (took 44.25808801 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954061472 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.754216865 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.907075317 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.606513747 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.337676615 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.080356153 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.372620708 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.200068694 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.868430474 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.137747839 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.921033468 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97246044 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.120993329 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865406619 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.884802185 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.348963081 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.159669829 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124963121 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893625961 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.644165948 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91623872 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.401661018 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.709009192 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.924184217 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.079504865 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.998691025 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.128562254 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.833917908 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006113195 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.905691049 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875716296 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.866582638 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.141862504 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.250616522 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976151126 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878505222 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.518580453 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.58650782 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.857858815 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.666425616 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.681678663 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.995840596 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876936084 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.867616398 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.804950432 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.345516442 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242073373 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.877837699 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.581536953 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.868534516 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.881549861 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958215451 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.873723714 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.685492833 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.81796184 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.146280044 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.866880534 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872529573 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.43811677 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.9910561 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392916975 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.846111425 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.055195888 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.747205596 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.274597739 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.022770655 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.872233851 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.87525326 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803236952 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.663443591 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923495491 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.015378039 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.889047799 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.518700076 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18054676 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.987725994 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.228353528 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181054394 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.650080201 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.843336112 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.097613252 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.825865586 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.8028781 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.725791421 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.800271702 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136781911 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906220936 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.518761803 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908344114 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.203296064 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.881808547 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885921274 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879805748 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.09898803 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.751938897 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873490881 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.718667466 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.080499462 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892179035 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.203494982 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803385669 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.872936205 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124158479 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.08027175 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.091001113 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.396411542 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031255295 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872854005 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.951447498 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.774543376 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.922600493 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.149444125 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.928782883 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.025969148 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930049875 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.822421174 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207460643 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.899755191 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.037831773 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.988301592 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.997395711 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.205282865 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.164018992 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935067649 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.880315876 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.869021491 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.796341089 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.424242972 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.136525433 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.867036569 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369698915 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.918858842 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.869162012 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.80852186 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.470029884 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.962273039 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.842569961 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.094847236 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.817969657 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184857234 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.804516632 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.01510691 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.982955499 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.096962915 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.521593863 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.950481234 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.129031203 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355644554 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.139196523 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921206322 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890209355 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989179331 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891114404 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.276157643 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.165320376 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.877249193 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.873168915 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.74036349 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.873711883 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.871943233 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.879038264 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.665097728 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15989706 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.898083353 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.884770572 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.759911432 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.887076309 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936852662 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.875963275 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.881428025 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.418128217 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.621094539 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.882927885 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.497679863 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.101873832 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.880888742 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.682392427 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.987953464 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.955590248 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.157647151 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.935770851 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.806789956 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.582908897 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.565269677 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873007587 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.809013075 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.873647371 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884169106 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883869946 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.250736909 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.16052603 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.924513791 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.807617802 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.917523918 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.885953494 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.882971151 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876352597 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.421651316 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.035349335 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396321271 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.924885485 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014729686 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.889070253 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.811320782 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.884650766 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.883923394 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.878892591 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.831472225 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929777297 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.700358942 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249386693 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.136444039 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.56424025 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.895414192 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.735706919 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.936494145 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.898830677 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.81023734 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.792811651 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.030123702 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889680759 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.888748111 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.706755277 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.573083829 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.444091286 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223240083 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.198366809 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331870315 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.336519894 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.182217895 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.214463615 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113812535 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.410855092 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.937794016 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.220440932 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.825940569 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965651827 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.536448159 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.248668017 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895754006 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109782911 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.27858515 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.741695488 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.060247398 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.097057459 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916059964 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.7707782 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.846112031 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.080826527 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024064291 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.727775394 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.094896604 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217556639 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.672116361 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.007151555 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.874949669 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.570351197 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967575082 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.593067746 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.244270892 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.39251871 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.946579859 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358540644 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.889490308 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.325791504 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.27649929 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.179518989 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.001915519 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.81888546 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.89011401 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.891211795 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.875623931 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.877540448 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.73698791 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.137249459 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892156429 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11567893 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.134250937 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.206804834 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.786782776 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.886433828 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879477344 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181181574 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.646346213 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055388926 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.297940021 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.401991289 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884456042 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.81440656 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816690934 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.573983602 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.880607337 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.857915254 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116604061 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.060454852 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.830305132 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377603595 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122584321 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.134964469 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.89207672 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.163096056 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.157597182 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.613646357 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912949971 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.98188639 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.703331062 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.995706943 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.152538149 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.120328881 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.680093526 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.114197226 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.924500096 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.665188493 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.878516066 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.100648034 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.153226941 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.933426606 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.12966859 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.607339791 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.894686367 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348771022 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943524706 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.935945391 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.047411167 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.074269934 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887040877 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971105514 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.896404229 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.894452463 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.898359583 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932123227 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.955813821 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.023150753 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.897281828 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973217628 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.095244434 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.415311435 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.890830085 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.178307232 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260128951 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.222905917 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.94620557 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.88562283 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890888324 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819236046 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019679148 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.330367777 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.157429867 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.013961963 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.180254058 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907728753 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.72155464 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.252316161 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.12451959 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.159113824 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.779764634 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884474437 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.913727651 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.15080973 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895033667 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.095880785 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121059458 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208809567 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.354775688 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.09840629 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.246292284 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158618893 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.253056368 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.884601728 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.473345746 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.889377217 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.69123579 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.927829125 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.947939857 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.16366422 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.895898588 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.262412421 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.906683836 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.086089171 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.400804412 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.737527712 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.177524163 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.885776704 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.950403999 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.173361384 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.282601128 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198047599 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956913583 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.89623761 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.593283858 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021815681 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.74975259 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.159190164 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.886441877 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098400224 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.596237221 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.895839471 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172596874 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195945803 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.883460899 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.771212303 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898554894 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.898054408 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.110173356 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.183675259 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.138405495 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.896396597 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.887391114 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.701844139 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.197036077 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.94737466 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822197523 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.891734056 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987629774 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.135165062 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.910062201 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.405416532 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.597997736 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220251855 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.805340413 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908131796 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376944194 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.270974534 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.223066047 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.427049054 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133875576 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.446012828 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.818423867 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.189721642 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.893864669 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.346100553 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.198174439 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.891440862 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.465575311 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927520244 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.171986193 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210730966 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.90073309 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861051303 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.858219713 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112143439 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.475837289 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830480916 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.898596269 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.943983335 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.890012811 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.020106001 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.900276064 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.783951721 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.788658352 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.638175953 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.382483077 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.895108778 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.871233273 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.714478586 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.48026943 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918724273 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032170839 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89586408 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.599434452 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.182093273 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.143600536 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.470030627 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.892927536 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.894199281 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890307971 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.819838566 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.089425905 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.266262133 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188313876 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.282828118 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.925622945 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.894434721 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.106362007 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102622909 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.94037939 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.042468709 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330863279 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.926797877 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.655748707 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.572828104 seconds)
  done (took 1693.144268042 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.896591385 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.93724793 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.885093953 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.933955734 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.883442011 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.965565469 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.937773602 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.940122565 seconds)
  done (took 57.204839988 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.886185345 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.086702695 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.895365575 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.887336371 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.894582877 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.886167998 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.053584748 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.895308516 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.898107589 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.896798686 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.889255342 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.886643306 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.202320777 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.909648156 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.890981932 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.88750711 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.897363245 seconds)
  done (took 74.669533246 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.889014766 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.101903292 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.914644368 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.909016568 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.836303604 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.907018918 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.817255693 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.945872083 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.891051093 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.107159426 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.525032206 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.905119619 seconds)
  done (took 90.570613067 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.899686798 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.894182896 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.895292878 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.89561914 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.896434375 seconds)
  done (took 11.305326357 seconds)
done (took 2202.456176708 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.141350647 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.113561748 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.122316908 seconds)
  done (took 6.055681792 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.038924755 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.082730833 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.205088924 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.228756259 seconds)
  done (took 10.37877671 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.184163625 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.258937892 seconds)
  done (took 6.263091904 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.291049071 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.89346691 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.28324362 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.891762908 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.895483059 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.894912755 seconds)
  done (took 22.508331858 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.898212073 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.899775062 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.899178835 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.901102473 seconds)
  done (took 9.417967361 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.877217118 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.626014044 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.872350623 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.885084306 seconds)
  done (took 21.082311638 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.639839245 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.29572795 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.651365839 seconds)
  done (took 9.408645189 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.430741589 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.784687549 seconds)
  done (took 9.036054175 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.177072403 seconds)
  done (took 3.997703314 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.927886771 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.167300476 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.422107298 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.406834424 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.512102632 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.73020809 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.200779522 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.128942421 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.298408176 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.323967579 seconds)
  done (took 24.938848905 seconds)
done (took 138.515442132 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.269274859 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.127746056 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.087829441 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.239516244 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.110980424 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.101300298 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.09934231 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.225074327 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.73469262 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.736707975 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.235237316 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.111229076 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.051298395 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.132166246 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.059397845 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.137517483 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.108757411 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.285097005 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.93044154 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.129882759 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.104359755 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.866262735 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.079878258 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.877075404 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.110056236 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.04390737 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.455414509 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.131411429 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.086158834 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.461045475 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.04369494 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.288020473 seconds)
  done (took 173.283447305 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.627255581 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.894278341 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.891759014 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.9010163 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.371884175 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.890843598 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.890915315 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.892133581 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.021281347 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.032354466 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.891880026 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.362509736 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.891737747 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.891595623 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.89175456 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.891083463 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.226246176 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.710670178 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.910227915 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.917642665 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.922840113 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.332363387 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.918593196 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.370358629 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.247861053 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.922285567 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.879058845 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.921308496 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.901989307 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.867028972 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.905545578 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.891425516 seconds)
  done (took 208.906492905 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.891958988 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.892517686 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.892346523 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.890659165 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.892226164 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.895037027 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.893208757 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.893840879 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.582330491 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.57359709 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.904064583 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.899161613 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.904393562 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.894310731 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.905819409 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.892986047 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.902059625 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.904361833 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.898241203 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.903645302 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.905958553 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.72864436 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.907734954 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.734048221 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.901358505 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.901231177 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.894473489 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.900461951 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.903277996 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.904748457 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.902791428 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.894151653 seconds)
  done (took 221.628663961 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.097410078 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.90929681 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.90955154 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.84751921 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.909514007 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.90770819 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.863520751 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.100859789 seconds)
  done (took 19.388538541 seconds)
done (took 625.038431129 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.392627492 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.226861439 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.072347525 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.931887613 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.171908445 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.951468063 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.928181978 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.989910226 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.659135495 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.991893799 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.609185035 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.935511574 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.704410974 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.945019585 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.051501226 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.980747888 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.466574528 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.563384114 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.097201418 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.994149511 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.095403755 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.864720628 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.997202327 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.684247146 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.713062385 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.898837893 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.118031575 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.475528024 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.934157233 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.089004431 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.709823638 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.300893886 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.92913054 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.918222727 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.981888065 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.961795532 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.286722266 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.927730267 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.041652677 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.673559719 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.994492304 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.539695557 seconds)
  done (took 104.627933539 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.89387744 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.892643659 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.893398067 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.896527389 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.893931013 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.893207806 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.892376306 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.894281517 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.893706479 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.892513105 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.893204683 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.895163469 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.893041083 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.89425837 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.893426559 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.893715708 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.894532904 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.894699448 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.892471767 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.892691955 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.89443253 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.895391846 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.907662323 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.891992968 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.894004224 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.894008339 seconds)
  done (took 51.09003409 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.912893005 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.065136504 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.151977511 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.922868443 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.906694808 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.911502414 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.923718834 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.917318504 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.909774403 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.908277095 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.01052809 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.916563811 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.924000245 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.152398424 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.919422843 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.911479176 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.9125413 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.907498776 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.07536845 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.922365374 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.9240979 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.916462034 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.925488823 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.918948839 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.906789028 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.907116494 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.912262862 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.358506118 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.914133509 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.013595636 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.949720206 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.926918345 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.327975886 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.162933327 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.956500968 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.917235168 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.913934514 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.014692483 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.912524514 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.90564766 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.925217826 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.911107763 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.151327118 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.385726666 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.917306819 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.912140803 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.366970063 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.021900834 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.946643602 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.91887175 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.15500004 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.918789368 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.915212034 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.90919695 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.943793235 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.915991092 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.9071706 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.247904692 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.917987367 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.925383057 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.918426227 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.909678027 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.077788439 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.914945896 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.067875188 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.916161529 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.916367728 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.909340785 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.157039237 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.919364564 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.401828615 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.920036284 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.916513682 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.014621894 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.071540653 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.391769879 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.919411987 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.084706931 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.342848384 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.930744956 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.915822786 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.347277949 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.933771862 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.916375604 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.916905638 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.91578834 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.914024231 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.958887025 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.92538938 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.334458758 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.40143083 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.262260408 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.933721108 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.926268736 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.909447015 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.248856555 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.922116608 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.915341784 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.149072917 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.406434861 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.920408274 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.918262343 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.387617512 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.924055357 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.930060362 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.918992989 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.160097988 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.921593524 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.961175305 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.917360425 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.917296933 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.914479283 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.928398635 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.918732783 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.917550401 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.372840461 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.033113611 seconds)
  done (took 236.734875475 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.906556439 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.904439299 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.903816807 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.912607586 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.905761646 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.910466817 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.90306094 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.905046873 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.910821679 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.903103792 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.904528248 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.903670186 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.907231082 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.905160004 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.937822574 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.911737789 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.565051229 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.907674345 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.903935023 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.904545201 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.556003171 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.911257628 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.905059658 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.909170161 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.906977713 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.909109296 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.915460382 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.931096105 seconds)
  done (took 168.599954746 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.925182122 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.034056496 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.930271027 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.941269935 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.924454673 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.916176932 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.935450612 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.923401018 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.916389282 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.916009903 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.916624346 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.971864892 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.926804032 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.016450965 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.93907319 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.943898701 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.011800344 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.922316046 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.916585205 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.916228095 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.940442755 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.905117562 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.971296639 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.033411268 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.930845048 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.027687262 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.913641484 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.920461031 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.912813616 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.029515306 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.926295345 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.976108859 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.936474202 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.929196548 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.029373635 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.022520134 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.022654826 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.947288063 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.914765196 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.918657661 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.917968944 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.902875296 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.028642951 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.931018734 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.914083953 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.02084517 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.932337025 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.920418594 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.928463414 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.918277932 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.926432174 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.926704819 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.974638698 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.038278151 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.946389565 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.942702269 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.937795876 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.210981915 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.923501754 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.013686097 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.908221926 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.036065824 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.935145567 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.903023186 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.919409606 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.92522805 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.947230431 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.945161524 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.015901718 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.920016095 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.014525787 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.951095053 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.922836112 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.919128648 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.922768054 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.027412172 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.026455419 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.951830699 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.946686891 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.941256302 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.907429208 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.915368877 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.905590735 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.93179726 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.922920222 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.035702989 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.02822974 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.927295271 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.924175685 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.922324598 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.923294935 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.938656365 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.034800118 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.946905096 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.010817105 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.978127396 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.983204469 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.933492699 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.934697181 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.923093492 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.977448535 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.933334565 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.932692887 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.264761603 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.984062096 seconds)
  done (took 207.349081284 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.375708742 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.969925945 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.970140737 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.234316016 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.339954752 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.771095422 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.956895641 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.969724933 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.986922867 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.165477929 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.051349918 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.00173783 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.949600038 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.93604688 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.970146304 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.982725477 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.975900506 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.29842286 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.079684954 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.053777934 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.939516084 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.27942299 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.283762816 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.353564966 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.992814492 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.289205514 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.639824 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.210722375 seconds)
  done (took 62.875478398 seconds)
done (took 833.103134984 seconds)
SAVING RESULT...
DONE!
