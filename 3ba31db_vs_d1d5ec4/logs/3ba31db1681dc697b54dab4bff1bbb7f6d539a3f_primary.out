cset: moving following pidspec: 5769
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.341570878 seconds)
loading group "string"... done (took 0.625304443 seconds)
loading group "linalg"... done (took 7.307495136 seconds)
loading group "parallel"... done (took 0.160251635 seconds)
loading group "find"... done (took 1.168252358 seconds)
loading group "tuple"... done (took 1.760335092 seconds)
loading group "dates"... done (took 1.26102519 seconds)
loading group "micro"... done (took 0.22381928 seconds)
loading group "io"... done (took 1.02149438 seconds)
loading group "scalar"... done (took 39.299165657 seconds)
loading group "sparse"... done (took 11.983024669 seconds)
loading group "broadcast"... done (took 0.936090286 seconds)
loading group "union"... done (took 12.193987038 seconds)
loading group "simd"... done (took 4.444219832 seconds)
loading group "random"... done (took 9.083972875 seconds)
loading group "problem"... done (took 1.834502853 seconds)
loading group "array"... done (took 20.898518831 seconds)
loading group "misc"... done (took 1.686201912 seconds)
loading group "sort"... done (took 3.348731956 seconds)
loading group "collection"... done (took 17.286302715 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.518476763 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124452643 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.117811871 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119059984 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147277921 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.111977209 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123444754 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085640864 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.810936236 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.150812614 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117777357 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.428928204 seconds)
done (took 5.153317009 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172234264 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082785262 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082309712 seconds)
  done (took 1.285381456 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064423625 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121980859 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066649132 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066675305 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06659127 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065387832 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065613125 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065779095 seconds)
  done (took 1.639704854 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072803903 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06864534 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.065740479 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068299554 seconds)
  done (took 1.396154354 seconds)
done (took 5.688184083 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.787537062 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.20257715 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.186942726 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.413584995 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131304276 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.158356786 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.64966904 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.31150121 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.188622759 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079941314 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108685203 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.327497926 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.110793205 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.638864296 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07610053 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090023271 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137219087 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.412985972 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066855047 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081388842 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.08794256 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128228274 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087648761 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073445739 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14527 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067099144 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.135910002 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079450093 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066102192 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.21121275 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172033031 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.652405231 seconds)
  done (took 10.226193246 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096316179 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.09712017 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068117505 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122484281 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095623549 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.06885558 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070215444 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066405236 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086768484 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126867437 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088498319 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.10100662 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064985993 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067862917 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085245286 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.207348162 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082349913 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082230121 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.06977894 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075477026 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104654579 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077616899 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.07694953 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076260913 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128074992 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179462191 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098536022 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096822328 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068676004 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081203165 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11648134 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124365027 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06538813 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065373558 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123252905 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094250211 seconds)
  done (took 4.556700511 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.003271267 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.143780891 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090054217 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.134310744 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.063984901 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108217783 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064868708 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080416506 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.209107342 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.379840339 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.597344318 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110712702 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103653848 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066926566 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067835386 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066743934 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.487346553 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.098707589 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108786922 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083329003 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07195756 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071185143 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.71549981 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069745887 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064975263 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069829289 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058950346 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129366335 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069706907 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.961451986 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.129380288 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065896303 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101050488 seconds)
    (33/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.109010142 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169378916 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088563208 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064917632 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068595605 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.278115769 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065767033 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.151818452 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070161916 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065471633 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083255856 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103156315 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113489283 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064501615 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066461121 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.164130051 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064113069 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079414203 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.634487637 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153865788 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078094317 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065706164 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.260124689 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088982514 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069220382 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065947988 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.206758267 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133859153 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069195227 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068098837 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070012931 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071386695 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.362626069 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067727811 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.172651683 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067002838 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075449441 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069223549 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069108624 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073276278 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071952097 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087129045 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065516698 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074438229 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065444488 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065440181 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063723797 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.065871752 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.082879675 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.383687168 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066216243 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067764014 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064624708 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.088991629 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097200133 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066331137 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064858776 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099786839 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067650871 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066067221 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106398161 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066102427 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.082859868 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069214227 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11242197 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068279146 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064968232 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.193443623 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067636201 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097504962 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.068797976 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097913726 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079040856 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070362741 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.424561933 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064344023 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064247281 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068002726 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064778178 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.06760821 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065869731 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078684661 seconds)
  done (took 21.718940004 seconds)
done (took 38.624872542 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.235459547 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075884197 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.07376489 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.080247063 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073628028 seconds)
  done (took 1.74947219 seconds)
done (took 2.938206401 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122974423 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099729103 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064137758 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096576614 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063498692 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101601947 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100968038 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081225195 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100060284 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06353649 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09705362 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063622477 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063674069 seconds)
  done (took 2.327675915 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083743282 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083965949 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069657566 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082864807 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063196458 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082107646 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081066221 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088593026 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080958522 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072737716 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063226789 seconds)
  done (took 2.037141025 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082297765 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084368955 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069817153 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083633504 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065170416 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08427934 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083539685 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088725121 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084252852 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076421748 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065033918 seconds)
  done (took 2.049686405 seconds)
done (took 7.592378077 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076632036 seconds)
  done (took 1.250976224 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.592130457 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.06910965 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081067262 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110769701 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.191664205 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118364793 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.271483453 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086045154 seconds)
  done (took 8.874245108 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102358544 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068394313 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071561046 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069071675 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068611627 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068386309 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071669911 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070804133 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072255525 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070178286 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068084964 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071376543 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067870085 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069609476 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068996828 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070476553 seconds)
  done (took 2.397718586 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092037207 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090767472 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073804879 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074571613 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072473024 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07171227 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073556304 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073296136 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07036109 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071357906 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073957348 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073000395 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071227069 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064184897 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07360075 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074448886 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07016432 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07339817 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073515529 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075094603 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074081079 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063538698 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070507111 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073033843 seconds)
  done (took 3.051503465 seconds)
done (took 16.757486253 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114702328 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070495644 seconds)
  done (took 1.368726296 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080809387 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081819724 seconds)
  done (took 1.351270323 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083012865 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065085532 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090461291 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077540288 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065592139 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065560611 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087691591 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065324176 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06495004 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06549207 seconds)
  done (took 1.920320221 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068085329 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077439161 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070097799 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080355148 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072951627 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063693074 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071111143 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067101857 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076983646 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062471022 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07067545 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081985343 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070599613 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084043911 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071176605 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068301751 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070472576 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066720723 seconds)
  done (took 2.487328873 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065068955 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066644537 seconds)
  done (took 1.327002038 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066054254 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063804231 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066083454 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066306567 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062964147 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061760994 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063147157 seconds)
  done (took 1.641944817 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.384707955 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112560742 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.310051107 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07052678 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08112469 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.25708376 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065446926 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069973036 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070040683 seconds)
  done (took 2.657462885 seconds)
done (took 13.950807035 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080099155 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086434002 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095871232 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.375683507 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091355429 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065453997 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114256706 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.192628428 seconds)
done (took 2.307562087 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.211875368 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.637480388 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.402830509 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.202610531 seconds)
  done (took 2.441454651 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.341143972 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087498634 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.057702143 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066241143 seconds)
  done (took 1.755780017 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065426153 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068069141 seconds)
  done (took 1.335383589 seconds)
done (took 6.948136134 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065831618 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084818755 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065295954 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063296982 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065485972 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063140286 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063136298 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065219372 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065585829 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065570354 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.06792314 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065619579 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062914798 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062986192 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065752283 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062521398 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063341654 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062995242 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063722055 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063234243 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06538925 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062950774 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062750085 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065259695 seconds)
  done (took 2.802169359 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083353936 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065053441 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070736026 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.07070737 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068967112 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07249498 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072469398 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067252019 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072532856 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069479675 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070564899 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071060487 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069641768 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071246865 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069853881 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071036411 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07300511 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067636778 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069959765 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.06887587 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071167028 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066087811 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068735386 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070795208 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068791054 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070293564 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067669157 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065461733 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070550368 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068425425 seconds)
  done (took 3.314930628 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068530078 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063019839 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06329855 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070238882 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063165857 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065029167 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062483169 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06377068 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.0637651 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062988002 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064032195 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063091224 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063236151 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064177438 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06390264 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06672269 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.07872367 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063710154 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063187951 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06454727 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066160938 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062998732 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063052941 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06376289 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062693895 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062617542 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063277615 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063174224 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064142746 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062842101 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06620531 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066706249 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063161951 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07049192 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066940878 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063177366 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066883208 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062523106 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063622561 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062955482 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.0626259 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062935239 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063051105 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069823795 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062817074 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064131523 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062728037 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064186423 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063413258 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065738602 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062486821 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062754318 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.176870036 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064480747 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067099142 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062374038 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063735974 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062461209 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064116996 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06311317 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062219214 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062319755 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065791541 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063662763 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078569401 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069619178 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062250944 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064357588 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063712972 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065109032 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06414589 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07608239 seconds)
  done (took 5.991222031 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089741566 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086860326 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064998833 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064541011 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061471539 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063616091 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069538707 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062897873 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064459511 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080963344 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063845555 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06485943 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064197417 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067085245 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063335196 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064186245 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07124416 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060779456 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063141556 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066401273 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063324038 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068537929 seconds)
  done (took 2.712708482 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154748343 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069870981 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104946405 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074987429 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069889566 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074888574 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069109502 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069244196 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070210284 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067104395 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067078093 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069399444 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069291937 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066667208 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066756108 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066674575 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070256198 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067028501 seconds)
  done (took 2.586833533 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075436613 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065821879 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08688029 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065972685 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065520399 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06776834 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069678621 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073094047 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06826949 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065559884 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074277122 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067457198 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068220051 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06482013 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067646834 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065227624 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067669234 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065167204 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073403669 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069628375 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069140303 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073399529 seconds)
  done (took 2.749959499 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079058897 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067267362 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080745111 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068108703 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061464523 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063324611 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06917479 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065330347 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069390068 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067237207 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065836165 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063277518 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.067841234 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064901267 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068564302 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065592944 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067597022 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065773817 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068134425 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06269807 seconds)
  done (took 2.572969906 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086024127 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067087216 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067418091 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075023562 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06698718 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066655843 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074156129 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066767667 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066801428 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087148532 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066706668 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06654701 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074575054 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071344566 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066307878 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073469904 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073734416 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073636136 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066687862 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066593096 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087651247 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066752932 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074060411 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067297478 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066806672 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06683591 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066479343 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070917394 seconds)
  done (took 3.214492103 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065734084 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065167438 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062797472 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062750677 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063435836 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063229649 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062310453 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062552363 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065093304 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063012806 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065225504 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064995927 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065187436 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065261491 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065285017 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065229716 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065682802 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062832135 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062618465 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063419937 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06525895 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065432251 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066239673 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063320066 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06277992 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065783805 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063208648 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063012735 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065287055 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063556259 seconds)
  done (took 3.151939601 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075176439 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072420627 seconds)
  done (took 1.374451317 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06258818 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079565755 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062459318 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069247196 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069218317 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066091538 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072726638 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068900694 seconds)
  done (took 1.773896612 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08166945 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076800652 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067045498 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078986488 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076664794 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082798661 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134244242 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068424591 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073658853 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06369654 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080260502 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066759967 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073934848 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068525765 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072185823 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072060214 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064875391 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07403231 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070382219 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066422976 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068347739 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076557415 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070825151 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063020209 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069694139 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091083741 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078845169 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067291249 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070912949 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074995946 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073298539 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061477524 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067266326 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067636163 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06481697 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076700134 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083189149 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070324748 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07517162 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066284924 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075281788 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061912159 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072014042 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074489072 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07724324 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067744351 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068309453 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061994143 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06528945 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070188526 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062280344 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070134522 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061800812 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074501479 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071241141 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077474915 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064540484 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067602412 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069959236 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071081902 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074490102 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068344859 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068376219 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065195913 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076423261 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070720392 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074462616 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060635596 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059776417 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063982197 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075243441 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08880022 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072226527 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067546733 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068541559 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065968189 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071886062 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068403316 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074028232 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074078548 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067336246 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072988573 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075153462 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068182048 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069886804 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075680765 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065820541 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070066364 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065346009 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085647206 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06600094 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06500481 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064609522 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077296714 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071229666 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067028939 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06549108 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074587922 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059924917 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065582732 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06600409 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066695912 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075668306 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068460614 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069455952 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072983877 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071863081 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065193537 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066917356 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06115993 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064993967 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064075634 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071168344 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059060146 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06749981 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065782791 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064995264 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073444255 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062527 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064459095 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071976247 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070638389 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.189156918 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063474075 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069115275 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067342652 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068752821 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075028346 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06499062 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061185378 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061173431 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069104698 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067265312 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070256553 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07095002 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068458858 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060037986 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063815997 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070687691 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074615271 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066500921 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069609513 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074728925 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069880291 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067850633 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075513383 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07093092 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067473513 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075177203 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069455057 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062670953 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07153454 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071308538 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066793836 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07181868 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070841918 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070874175 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068550566 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065841437 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076566522 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068953613 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066795854 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068064494 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066482316 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078941418 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070232879 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06304114 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065180237 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077115551 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066755061 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068010865 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067084672 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069779609 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068662394 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066110793 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067072025 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069929564 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077801853 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071612989 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0681871 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073516774 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080640789 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067401457 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069707107 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067079646 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069087311 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068209666 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077151762 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071594725 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07091184 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068238125 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062772237 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071475733 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073199293 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064997674 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063633299 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064528781 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069567456 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07113394 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069851186 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06582597 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063298374 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06598097 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068222063 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068034128 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065469479 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064629576 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071970744 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063803258 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072490243 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065947068 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07532393 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068526671 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060387897 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068337726 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06368091 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072301723 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060965769 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064180899 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065515641 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066508629 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064759118 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068329967 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059610698 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072223749 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073939605 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066061997 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064609284 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065549922 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072629649 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067031029 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06886864 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.06815807 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070079626 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074550161 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064208522 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067832869 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074735029 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064673611 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058416998 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.069663431 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062957441 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063222853 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063570155 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062810121 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067320075 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07179478 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.070750429 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.188190478 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069696868 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064361768 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065436178 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.0617346 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070819644 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070163745 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067330467 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073008145 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066706476 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.065927672 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069778119 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065916255 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066815037 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067477831 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06872975 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066838831 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068020696 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.0660117 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069048747 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065488388 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064479149 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068432739 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066356663 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066729255 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071766452 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065853977 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067136546 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069303435 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066541032 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066579845 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066271723 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065515347 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068750332 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067693369 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066911337 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068331308 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061164931 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073408527 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065747939 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073592109 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066653872 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063037781 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072376865 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068215358 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07106119 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066637305 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066603096 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067442989 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065650718 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069738183 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073216162 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063488738 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076462933 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073771446 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067561183 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069728021 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066970861 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067918884 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065142853 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067284131 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065845286 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066928643 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066316241 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07071736 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068588134 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066640197 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066888998 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066596707 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066784761 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067045585 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060685911 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065547563 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065613449 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065082751 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075085917 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065490747 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065750002 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064084162 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06636338 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064709171 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062283175 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073280766 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074227618 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066487769 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073302186 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065819904 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067585044 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076731742 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060432277 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064137452 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06386457 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063826093 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073268611 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066254669 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07516129 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066484168 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06603044 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06327322 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066709977 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064639839 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060390897 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063639755 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069636037 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065320439 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064635429 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065932789 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068374285 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066533875 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075258874 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065444579 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066779473 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065742795 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062668937 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064890467 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064412928 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067923694 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065615075 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062735948 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062365149 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063996943 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065516525 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065968929 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066676435 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066602031 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071985335 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064567121 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067347332 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067424662 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059551732 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.200562099 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067205746 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067822359 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065521127 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070974847 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069937137 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067429204 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075941972 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066507844 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067140238 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066176318 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064177606 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06614184 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066190079 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066235158 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066218298 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067477529 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074563923 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063974832 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069681517 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065996767 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066413613 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072598981 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067200638 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069866596 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073592602 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066702494 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.06867858 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07453738 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069950121 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069371476 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066887409 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067501563 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071683592 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065681707 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072875535 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066853767 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066790954 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068301266 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064440876 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066325616 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065663855 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065042138 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073168062 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066573962 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065979068 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065155298 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064507803 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067391888 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068619223 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073241056 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068480644 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069266082 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060926429 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063460528 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067188342 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064723691 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067423234 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068912811 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073173598 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069180918 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066353306 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064869917 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07602692 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072127591 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069706599 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063620614 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069408119 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066713944 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068243071 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.0674462 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066478829 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068055359 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070431215 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068105094 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065937609 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073317629 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069545926 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066583285 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067597532 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067296286 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066225882 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060804906 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06629812 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068554494 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070690765 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068673274 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066060168 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076338737 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063980793 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066463896 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069214635 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06584502 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071231068 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061488031 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067877217 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066851723 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067563732 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061426863 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065750598 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064324264 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068384362 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065590331 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061201169 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076703114 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075296938 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068864961 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064903811 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06461122 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061210075 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061213021 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066036767 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066768749 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067830695 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075348465 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.0652472 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065172492 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060548718 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064637767 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068121207 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067900895 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062412422 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059784335 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064024426 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068182113 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070420761 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063646408 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065270579 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068597706 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.066994386 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06281026 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.201206154 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064724014 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.0719675 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079908768 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067483672 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067828725 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073128162 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074982601 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067309954 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06159267 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066630909 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069831122 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066977708 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067600926 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067821885 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082415164 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070395826 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065914446 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064967457 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.06957532 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066881014 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075233401 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067341341 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066666951 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071913359 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06825979 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07560351 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068633868 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073769779 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069388881 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069123534 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065576934 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06685588 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064523225 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065613482 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06737155 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067582771 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071608524 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074291894 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066128842 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078205229 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07574752 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068270362 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06360613 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066007491 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066089132 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061644523 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067410927 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06430896 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064604143 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064373177 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065881175 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06776027 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071500154 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067370907 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067086829 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066300885 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061058544 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.06854793 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068305322 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067314741 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063255896 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066886157 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065910601 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070708722 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069418741 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063797301 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06860613 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067866754 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067120997 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061861002 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07335957 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064679635 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068090209 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06575535 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066349195 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066390047 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069144182 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070299996 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066536674 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067775349 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069125162 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067368376 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062882604 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062963486 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071270558 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063805216 seconds)
  done (took 42.488890447 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.0996281 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063092673 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061609338 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061169243 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072589357 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062404553 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061139828 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062061175 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062417266 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064679331 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061448434 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061261958 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.06969298 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07722307 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072782368 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065838287 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061553775 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062420231 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061217698 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062163653 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069439795 seconds)
  done (took 2.715751309 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072972403 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.076986099 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075497947 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081592649 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070491736 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069940633 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074795393 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06998706 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077645121 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071999388 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077537631 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069404916 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071420396 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071431261 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071723211 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069680161 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078246957 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070303992 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069652066 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074963273 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070135692 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074165648 seconds)
  done (took 2.913061233 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066529203 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064713833 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067693699 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060018601 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065311198 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061166781 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068247633 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063039842 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068417688 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064806753 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06474128 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064325233 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067249561 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060754964 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065557497 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063017064 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106394871 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068347498 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064933881 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066161332 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06077039 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067039311 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.0611007 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061007747 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064295655 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068204699 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065423797 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063231447 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064657342 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063695689 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064433697 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062846079 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066568498 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065508007 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064311632 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064066209 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064430476 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064407157 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060645876 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062912531 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065665468 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.060781869 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065138184 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066106412 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062989716 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063516366 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066826239 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064945845 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059631605 seconds)
  done (took 4.501482576 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078815085 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108626824 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066339595 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090234073 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078843453 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072037052 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069424032 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089132361 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062720897 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063100278 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080520724 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078068384 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06451037 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.06920108 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071917861 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065124799 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066357508 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063702526 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068107831 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064101258 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068302547 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071325044 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078738337 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07710048 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068357491 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063536134 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064065063 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068727058 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076578558 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.06875299 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068776214 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070157954 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.07898273 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070088056 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063492172 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066690228 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080042266 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064337286 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066998115 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062606486 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066770565 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068888511 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07136972 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080315161 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064516399 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069283939 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064102497 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.0617706 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076433839 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066734273 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072298719 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078636673 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068107046 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064806798 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068925354 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.07940508 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065088758 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06349734 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067921376 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077366879 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062435932 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069192544 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077598538 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067097257 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072004335 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077834331 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069595688 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068566272 seconds)
  done (took 6.273693039 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074746086 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094390944 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08304984 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082393223 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07463225 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074399949 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074422257 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07484072 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074630288 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07916965 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07439485 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114341133 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.07001311 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077016751 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074540801 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074302293 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075182836 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074975715 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075056214 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074281111 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07452103 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081922727 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074855119 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082663242 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078516585 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.07013433 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07412316 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075468793 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082031819 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074883358 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07870568 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074919053 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083308885 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081850765 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078395081 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074511525 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064341804 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074012064 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074541183 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07454479 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069893866 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082075626 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074254237 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070089651 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07451101 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074230876 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082090483 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079314906 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077226336 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079008241 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07451463 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081907945 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074792309 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075000382 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082412517 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085526585 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082173597 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082008432 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074578369 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081884046 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081797286 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085020756 seconds)
  done (took 6.149117747 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082360805 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073129149 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081562429 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06125718 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063136026 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071138623 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063345203 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06384675 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073415696 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073865573 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075635535 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071146061 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074363143 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07545931 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071080739 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073970469 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07127007 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071215057 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073543408 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071499197 seconds)
  done (took 2.762553026 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073345608 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083303502 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065776252 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071448961 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.06851731 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071188237 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068401202 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069111107 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066186309 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068529817 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075519363 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075537434 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066590689 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070713082 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075658773 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070604715 seconds)
  done (took 2.459546657 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083406602 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072806331 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079744757 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065065097 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066241272 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061941954 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065657753 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061128406 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061645836 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07709136 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065545005 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075656238 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065350981 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064291426 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061819873 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070972498 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061833479 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062352345 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065121363 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077879772 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068992606 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063982422 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067901242 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064858817 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067352794 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069280446 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063862726 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065105115 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062318471 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065156599 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068022312 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068448757 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062182102 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062515225 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063849871 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06247081 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06479986 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065289435 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070345757 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064817113 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062702004 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067287224 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065095993 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065706704 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061591714 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065635348 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062019543 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067123455 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06267979 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067218406 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064680649 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067158066 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065137969 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071298864 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068072126 seconds)
  done (took 4.980832214 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07903189 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068863459 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061265655 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062693931 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068000273 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066081285 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068356304 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066121197 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066291596 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063264695 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06635602 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068055235 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066714502 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069024976 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066286279 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068556052 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061032065 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066006013 seconds)
  done (took 2.533498203 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070626833 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065332316 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07191162 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064662185 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06487963 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067181014 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061441347 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063703448 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063645329 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065123911 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064892164 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067649252 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063821269 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067258839 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065462314 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065240919 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067395806 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063668664 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064673953 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060942989 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067539702 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063970715 seconds)
  done (took 2.766055087 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093235196 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082346492 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139059858 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07851075 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.0841046 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070931132 seconds)
  done (took 1.875292808 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09068677 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0995522 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065542475 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068297074 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075209369 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069159884 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069169599 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069293414 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077648922 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075350582 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069712629 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077599953 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07706206 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076721712 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075181067 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074703257 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069010543 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069148853 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065167552 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082622744 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069568212 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077006749 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06932287 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068826665 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069769243 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07671304 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077560973 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074884484 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068924794 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077594233 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074492945 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069242568 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077595142 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075288408 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067886502 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077283613 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069037807 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082756445 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075097319 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076794826 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067852588 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074807176 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077629478 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073753211 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077524499 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06920897 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073835816 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069416001 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069417062 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085243417 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074931075 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0764353 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077497743 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078036433 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078225983 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084594377 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075377635 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076711144 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074874997 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07487956 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076410722 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074879427 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076669927 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075571768 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074727546 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076776239 seconds)
  done (took 6.26756574 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10316361 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066091359 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069525574 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076718322 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076480311 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069558955 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069762448 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069570911 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069682141 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066374839 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107398303 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069324726 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07742848 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076866071 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070031938 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069680255 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069479781 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076995826 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06615513 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085155588 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069516878 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076929665 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076870102 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077224387 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075304546 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074907249 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070099046 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069632448 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069258493 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069563543 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074009841 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069443112 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07686058 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065992423 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076876062 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069234922 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069062317 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073641428 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069084454 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075280559 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076699595 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082841957 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068905622 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069097613 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075413303 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068954344 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069647993 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066307932 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069608235 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065893104 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075444572 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075325646 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075844786 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076783698 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069392616 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069433766 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069301874 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069439306 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069082534 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074733088 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07707201 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069172548 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08509309 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069474243 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069849372 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077746008 seconds)
  done (took 6.185924673 seconds)
done (took 128.319028013 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.18290886 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.16384436 seconds)
  done (took 1.670846103 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068366921 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09817462 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.07617715 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127712099 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065807827 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099360827 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098946838 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077087453 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065351641 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.06588322 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065127883 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067888669 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130495974 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065820162 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065408998 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067817241 seconds)
  done (took 2.641820068 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098344195 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.160721457 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101823453 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064574231 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09897552 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.071878975 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064415434 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074777515 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069880838 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064365115 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072446729 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070160295 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064766907 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069702106 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070077526 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072311813 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064226528 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072008565 seconds)
  done (took 2.763104799 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099410731 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091430272 seconds)
  done (took 1.529546667 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156501618 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.110437364 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.144515932 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.34954689 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.163937473 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.147358697 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.143563227 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.146052465 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116994921 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.138628722 seconds)
  done (took 2.954702472 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098318073 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.154124637 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.265623997 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.11704101 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072047425 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093046419 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117630142 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077381908 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079677949 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.07928617 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079478211 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075453185 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099190029 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072659684 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.0727333 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075316346 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102351853 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072751388 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074043223 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075357206 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100124005 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065645484 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072688415 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072477517 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076302741 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076702215 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065341423 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065368646 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075104176 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074168355 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075489413 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092061245 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077187728 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105501848 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069986925 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106574299 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076249589 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072230696 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073854462 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072538061 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077079546 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077142157 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071753357 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074951213 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064662569 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075799389 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065049411 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064871594 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076604551 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065840809 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076681553 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075437141 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104885061 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066622796 seconds)
  done (took 5.919186117 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102505808 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105818712 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071718457 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112848553 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101598294 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071626495 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101952971 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095741586 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103143927 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069696123 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067927783 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.06954105 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081812925 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082107076 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114968696 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106378819 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072855379 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070967763 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106814133 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104740722 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067978487 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096642122 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09061821 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102560038 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066974035 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06970568 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067681988 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069710907 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076058123 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078060256 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068804686 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079514025 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084515139 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077720628 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066831749 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067406759 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067589242 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079240486 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078445236 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078298004 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076708929 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067244954 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067475777 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069061411 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069633247 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067175021 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077624696 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079666948 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077926707 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068604527 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.06977862 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067611567 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068345557 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079312491 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07663682 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079844809 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079796599 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067717232 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068296647 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071711768 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080086673 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078918175 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078654821 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06859741 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078730626 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067306605 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07971915 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083072191 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067683559 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069446652 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067971199 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068511291 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068744746 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076713528 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077122386 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06861721 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069076223 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067419685 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079617331 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077303336 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067166508 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075692044 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066319338 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067659356 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068654169 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068621606 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076885352 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079022601 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069409346 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067494882 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068649682 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068003897 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066539444 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076275992 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07956679 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077650158 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076712959 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067761976 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076898559 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076435204 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068367818 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077139596 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06668151 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068203026 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067458277 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076291176 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.074794034 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076732055 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.197925634 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068817336 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077640699 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080279065 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068181413 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078332299 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079555724 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078072742 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067283136 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081726881 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068440242 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079289642 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069656298 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07955945 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068600774 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079931886 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068610529 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068129573 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068801053 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078626864 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072930139 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068660162 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069578993 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069507207 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078515429 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081585398 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06985926 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077619215 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078338295 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069720951 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079235043 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067883218 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079226539 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069309876 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069150801 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067063723 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081075723 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068206966 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068014751 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068605092 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07961508 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06806194 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080552195 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078545544 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067381351 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080894721 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079601671 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077554836 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07991332 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07031171 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068089225 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068631 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069148905 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077065578 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079439913 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070185138 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068377325 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07666111 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078634003 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067002501 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077975481 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077844832 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077170897 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067786402 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070113145 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.07979087 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08071787 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07772763 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07719263 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077688635 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068120099 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077280455 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077119892 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067638943 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083242975 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067608995 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081939012 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078550283 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076226278 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078323052 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079164156 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079498252 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.07964 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082425326 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067241778 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067057749 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078885732 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067351841 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068511544 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077229182 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069016878 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068945022 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08231234 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068292447 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079380291 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066962475 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078017673 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066366275 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068457381 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081053292 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066982154 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06806745 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077174279 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06775789 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075285185 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077825892 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.075776273 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066377697 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068298864 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20832312 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079406547 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068509707 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068454464 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069846328 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078408224 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07771032 seconds)
  done (took 18.489893573 seconds)
done (took 37.31573405 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209752897 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153016713 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182750241 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118798063 seconds)
  done (took 2.109113573 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.116822407 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101926873 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.09255773 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064595004 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099479186 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064856614 seconds)
  done (took 1.915693564 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.310931062 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210751885 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.189151447 seconds)
  done (took 2.08540137 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.202292754 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189911764 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.423799883 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.263481134 seconds)
  done (took 2.56619646 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144433931 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089252989 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067144718 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083864352 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133407707 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160194078 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100398042 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125053897 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078494222 seconds)
  done (took 2.411429704 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148854909 seconds)
done (took 12.62241482 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094140514 seconds)
    (2/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.217328927 seconds)
    (3/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.253324712 seconds)
    (4/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.212781525 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.121989945 seconds)
    (6/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.21667623 seconds)
    (7/309) benchmarking ("sort", Float32, false)...
    done (took 0.132858701 seconds)
    (8/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.17292913 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.106325963 seconds)
    (10/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.08122017 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082612553 seconds)
    (12/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.176960564 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078872426 seconds)
    (14/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.225375191 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073989506 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.150104891 seconds)
    (17/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074192241 seconds)
    (18/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.176535005 seconds)
    (19/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074125033 seconds)
    (20/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.0718441 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.090294267 seconds)
    (22/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.178559552 seconds)
    (23/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.087454207 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.14287791 seconds)
    (25/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080582031 seconds)
    (26/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.180912695 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.123406265 seconds)
    (28/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.204783459 seconds)
    (29/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.111508505 seconds)
    (30/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070978133 seconds)
    (31/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.180482626 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071545137 seconds)
    (33/309) benchmarking ("sort", Int8, false)...
    done (took 0.141660326 seconds)
    (34/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.152643983 seconds)
    (35/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.212975178 seconds)
    (36/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102423512 seconds)
    (37/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075689166 seconds)
    (38/309) benchmarking ("sort", BigInt, false)...
    done (took 0.187176703 seconds)
    (39/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050272389 seconds)
    (40/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.160595092 seconds)
    (41/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076203218 seconds)
    (42/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.061713688 seconds)
    (43/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.100356005 seconds)
    (44/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.213899128 seconds)
    (45/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.118168449 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072934903 seconds)
    (47/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066921837 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071759873 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088426005 seconds)
    (50/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.072318393 seconds)
    (51/309) benchmarking ("sort", Float64, false)...
    done (took 0.129052906 seconds)
    (52/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.07129897 seconds)
    (53/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07364342 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.108791433 seconds)
    (55/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066525303 seconds)
    (56/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.074196537 seconds)
    (57/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050015059 seconds)
    (58/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088445417 seconds)
    (59/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.114876709 seconds)
    (60/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076470645 seconds)
    (61/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.109114464 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.091687974 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088599184 seconds)
    (64/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.108503804 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065067153 seconds)
    (66/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068719708 seconds)
    (67/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.151688609 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067239113 seconds)
    (69/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.155141435 seconds)
    (70/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.154644156 seconds)
    (71/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.139463481 seconds)
    (72/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.154658181 seconds)
    (73/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.194558256 seconds)
    (74/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.069849087 seconds)
    (75/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.153395555 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 0.065127954 seconds)
    (77/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.098587269 seconds)
    (78/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.05158617 seconds)
    (79/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071982644 seconds)
    (80/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.051224818 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064727248 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.136198288 seconds)
    (83/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072519815 seconds)
    (84/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064607249 seconds)
    (85/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072460918 seconds)
    (86/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.066726512 seconds)
    (87/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.049822181 seconds)
    (88/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088833078 seconds)
    (89/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.049361097 seconds)
    (90/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.131646187 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.063452987 seconds)
    (92/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07051351 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.087534972 seconds)
    (94/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.063141898 seconds)
    (95/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088878503 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.167984428 seconds)
    (97/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.065093074 seconds)
    (98/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.070484036 seconds)
    (99/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.070550338 seconds)
    (100/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.151873471 seconds)
    (101/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.158246565 seconds)
    (102/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074354452 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.103196742 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.071322887 seconds)
    (105/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065471137 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090064137 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.092521352 seconds)
    (108/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.198572152 seconds)
    (109/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072981628 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135779448 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.099573991 seconds)
    (112/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.226959566 seconds)
    (113/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.050046272 seconds)
    (114/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.094083937 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089978689 seconds)
    (116/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071136941 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.087420934 seconds)
    (118/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.069881505 seconds)
    (119/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.190100757 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088660242 seconds)
    (121/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.214457831 seconds)
    (122/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.179313795 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 0.140752114 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.070606074 seconds)
    (125/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.049907144 seconds)
    (126/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.069018756 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.089116495 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071059594 seconds)
    (129/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.073163534 seconds)
    (130/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.113045963 seconds)
    (131/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.097482528 seconds)
    (132/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.051412665 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.105393214 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.069087554 seconds)
    (135/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.048856223 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.068945107 seconds)
    (137/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.139689656 seconds)
    (138/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067281372 seconds)
    (139/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077159437 seconds)
    (140/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.181092146 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.063050332 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.063244105 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.069387133 seconds)
    (144/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.17540462 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08783866 seconds)
    (146/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071088869 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.109131331 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086231947 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.062526475 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.086817128 seconds)
    (151/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.072345694 seconds)
    (152/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.059842054 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.063008053 seconds)
    (154/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.050735307 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.070636981 seconds)
    (156/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.048612523 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.062985257 seconds)
    (158/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.048614088 seconds)
    (159/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.049155286 seconds)
    (160/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.064424386 seconds)
    (161/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070201269 seconds)
    (162/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.139850874 seconds)
    (163/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.06727276 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.10624895 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.104992922 seconds)
    (166/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.284351061 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073701255 seconds)
    (168/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.048710405 seconds)
    (169/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068532698 seconds)
    (170/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.074948214 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.06261908 seconds)
    (172/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.048560499 seconds)
    (173/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.051184176 seconds)
    (174/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.076680925 seconds)
    (175/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.099873122 seconds)
    (176/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.107164286 seconds)
    (177/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.107378015 seconds)
    (178/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074381642 seconds)
    (179/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.050479111 seconds)
    (180/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.065710596 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092167378 seconds)
    (182/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068461442 seconds)
    (183/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.198996216 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.085327871 seconds)
    (185/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.073379363 seconds)
    (186/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.18934801 seconds)
    (187/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.082365652 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.062357917 seconds)
    (189/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.066994778 seconds)
    (190/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.062764054 seconds)
    (191/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069671721 seconds)
    (192/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.075710074 seconds)
    (193/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.069654808 seconds)
    (194/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.0630974 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071153357 seconds)
    (196/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.048874564 seconds)
    (197/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.171103006 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.049647447 seconds)
    (199/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.063503557 seconds)
    (200/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.049241017 seconds)
    (201/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072816201 seconds)
    (202/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.049186133 seconds)
    (203/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.345354028 seconds)
    (204/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.15772976 seconds)
    (205/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.158793804 seconds)
    (206/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082365499 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06629036 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.096601551 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.104914535 seconds)
    (210/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.186237203 seconds)
    (211/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.05182725 seconds)
    (212/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068934459 seconds)
    (213/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.123898649 seconds)
    (214/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.07758068 seconds)
    (215/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075045973 seconds)
    (216/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081166803 seconds)
    (217/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.071634795 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.141276447 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074226463 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076013677 seconds)
    (221/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051810513 seconds)
    (222/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.052142741 seconds)
    (223/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.067231359 seconds)
    (224/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.06631394 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066208399 seconds)
    (226/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052352677 seconds)
    (227/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.078401483 seconds)
    (228/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051882757 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065935822 seconds)
    (230/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052415727 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088443484 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071959241 seconds)
    (233/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051997968 seconds)
    (234/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074071952 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.128354057 seconds)
    (236/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.052987755 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064658829 seconds)
    (238/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.063777465 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.11772963 seconds)
    (240/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065934998 seconds)
    (241/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072593645 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.135021422 seconds)
    (243/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065641192 seconds)
    (244/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069205478 seconds)
    (245/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.06829233 seconds)
    (246/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.156150722 seconds)
    (247/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073591796 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.091061365 seconds)
    (249/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062690257 seconds)
    (250/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076175499 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088519649 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.142340333 seconds)
    (253/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087796102 seconds)
    (254/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053475324 seconds)
    (255/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067330153 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138195285 seconds)
    (257/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052125485 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111610146 seconds)
    (259/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.156152929 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064932985 seconds)
    (261/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052096106 seconds)
    (262/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065373724 seconds)
    (263/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065734987 seconds)
    (264/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051454176 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073531842 seconds)
    (266/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052044364 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.0733916 seconds)
    (268/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.17266411 seconds)
    (269/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066714434 seconds)
    (270/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.06754136 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065387437 seconds)
    (272/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064618135 seconds)
    (273/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072558905 seconds)
    (274/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.05141401 seconds)
    (275/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052106826 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087228231 seconds)
    (277/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080630906 seconds)
    (278/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073920961 seconds)
    (279/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052207004 seconds)
    (280/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082808143 seconds)
    (281/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051863078 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.074411821 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090998377 seconds)
    (284/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050975619 seconds)
    (285/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062635853 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064098005 seconds)
    (287/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.107564669 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064221665 seconds)
    (289/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050858037 seconds)
    (290/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065910101 seconds)
    (291/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066680719 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073136171 seconds)
    (293/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067669603 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065567926 seconds)
    (295/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061487175 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071525049 seconds)
    (297/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051337862 seconds)
    (298/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050902121 seconds)
    (299/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050904428 seconds)
    (300/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07263961 seconds)
    (301/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051445329 seconds)
    (302/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051231492 seconds)
    (303/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065895615 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071374703 seconds)
    (305/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050909725 seconds)
    (306/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052286074 seconds)
    (307/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071365615 seconds)
    (308/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051034626 seconds)
    (309/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051147887 seconds)
  done (took 30.579444141 seconds)
done (took 31.967016621 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08377843 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09339611 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074966934 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094188039 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080618703 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076117886 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072848105 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078620426 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080011 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08233022 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07794395 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053879382 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074524022 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074865855 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075455745 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091989315 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078358651 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073147648 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072824721 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064597895 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073086834 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065462874 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067052677 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053983272 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078279793 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071402144 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072172638 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073681975 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064980854 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065186451 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068995556 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073424267 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064532071 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078178796 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07167369 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072847571 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074147842 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077007392 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067346596 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065599081 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074732724 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065273748 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072371092 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074204401 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072135529 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071786012 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072744207 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077386848 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091580188 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067514232 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074470472 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076265412 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076279689 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072338929 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069567902 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073101838 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070735094 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090994443 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072903155 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067208645 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074714267 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.0744494 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071240671 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072943403 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072974475 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075339711 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075937152 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071309721 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074384097 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071746448 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064878177 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072448671 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068480137 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065034991 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076263422 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077914897 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063646062 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071663906 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072684325 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070819242 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064116003 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067016448 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066644188 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072137018 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067012878 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053719505 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069430838 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07148748 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063738176 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073641141 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07197515 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072688638 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066493467 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075623115 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064320309 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070546175 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06497406 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064932626 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067069693 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069502835 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065004231 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067013652 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074146975 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066216419 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071219227 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078795038 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064867139 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071247166 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063860722 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064290564 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079682679 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074298496 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065175844 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067471005 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064246043 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072564784 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06395868 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065162549 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064532277 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064865612 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071112395 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065672274 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066998304 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072568074 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077950202 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064650084 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068243811 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066132262 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.0646613 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070302469 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064664734 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065103353 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066095238 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060986624 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066762956 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064482619 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071992653 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065957872 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.206454073 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067550635 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073996953 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069851943 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071799375 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071730514 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066206852 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060991662 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068150515 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066761314 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066665414 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065319239 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066868221 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065048143 seconds)
done (took 12.470862336 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065916496 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.139830662 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096356876 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095144494 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085299905 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066044539 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075744721 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100543353 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067367107 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101319574 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086975724 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085441992 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113474094 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064338405 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065576616 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069687204 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066407758 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080700539 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100367603 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086422117 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.114952567 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064603943 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092483794 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.08880975 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087551133 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.102884518 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068982111 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069084626 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069042734 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.092643044 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087388003 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069693811 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066633575 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.097664573 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093503196 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083312342 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065733923 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082970691 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065472116 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064881773 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066521582 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098551159 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080190758 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080280194 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069249383 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068738038 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066741429 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083849643 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089823818 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078435257 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085850783 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101299451 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068212057 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064977288 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063853923 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085404702 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.06498025 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068387001 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065263993 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067672158 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06604623 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.06829366 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079912114 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.079845223 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069319903 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079215848 seconds)
  done (took 6.813154873 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08337559 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090576238 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083039087 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082929287 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064688832 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066022415 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065573601 seconds)
  done (took 2.084809893 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066171669 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087100687 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089249311 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.087966606 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.080733877 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087180184 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075246468 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065456033 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.087683689 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066731465 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086828175 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100455585 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069280294 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072997591 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090132065 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066368386 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089856663 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066201836 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068632231 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089685215 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068479119 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095177075 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.06906437 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066330761 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080123694 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065836309 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113848869 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070408307 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067471366 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068449973 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063893714 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106903195 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079589429 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.073449777 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066277807 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080908998 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080412407 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064192752 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08221247 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.074325182 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079618151 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06629244 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067096471 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063861563 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070376799 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076346395 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066897331 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066956895 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068493046 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086013847 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067079758 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079806864 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069213252 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071813785 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06828991 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073033645 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076561175 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067385681 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086183319 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067348379 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083253109 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082084842 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079953001 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082664606 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068668838 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08001408 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079783581 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068282761 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067492485 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.0691795 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081733423 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064263994 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067142471 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077224057 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067598873 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088896136 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089031251 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067313145 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.079177881 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066105672 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065961627 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065607237 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088493288 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071134505 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065662643 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070175826 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069398796 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064064484 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064906689 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069587922 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063812904 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067401398 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068833493 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068860269 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068619271 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082630133 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068661698 seconds)
  done (took 8.801719132 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067564015 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.066871027 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069148149 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066951901 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066993855 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066751667 seconds)
  done (took 1.971057273 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09279394 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068792645 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079554519 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071491928 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104042204 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086868771 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08610458 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077353204 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083454298 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077958796 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08595083 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088047073 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091431073 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071712318 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085876761 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071183366 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086816689 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075043588 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077906289 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072115474 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086183461 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071535932 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072184959 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081066547 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075153535 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.070685048 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067165176 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078174646 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077136188 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077644 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071872128 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075104793 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070081529 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.076956636 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086252823 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070432709 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070869924 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076591387 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072137448 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075054029 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087127833 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071659964 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07322304 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076305385 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077057015 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069805674 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076456962 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.073772746 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085414878 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076066404 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076299383 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07033743 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074432942 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076387094 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070183431 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077134656 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076523169 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085987149 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071847436 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069485464 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067859945 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074820325 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076717891 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075324815 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.07819324 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076086912 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069742282 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071401482 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072014757 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070865359 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076666139 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067849211 seconds)
  done (took 7.075816397 seconds)
done (took 28.277335358 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.53144786 seconds)
  done (took 2.066999532 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.618179036 seconds)
  done (took 2.176458398 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.587645904 seconds)
  done (took 8.143045965 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.398740687 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.494400194 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.721839151 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131133371 seconds)
  done (took 3.342572965 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.693963281 seconds)
  done (took 2.263225755 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.214029284 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.201204883 seconds)
  done (took 1.989645929 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.374539004 seconds)
  done (took 1.931851907 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.136660689 seconds)
  done (took 2.696607138 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.255866967 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174659298 seconds)
  done (took 1.998438085 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.477171599 seconds)
  done (took 2.043076933 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.866814126 seconds)
  done (took 6.435500124 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.20983479 seconds)
  done (took 1.819562918 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.237829135 seconds)
  done (took 1.804649591 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.715860954 seconds)
  done (took 3.284642804 seconds)
done (took 43.560177263 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080194376 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080418382 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081149517 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077673928 seconds)
  done (took 1.875719354 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07594414 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072225657 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075758602 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072966737 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077092425 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072637435 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07435953 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077127421 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072656716 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073293993 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073502635 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072923323 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07515554 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073838687 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070890803 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074898778 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076067049 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072101251 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075471537 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072252099 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070109071 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075037184 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074911951 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071773725 seconds)
  done (took 3.343135119 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077976597 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072944693 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074534518 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07127296 seconds)
  done (took 1.873152075 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078202926 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094560238 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089222066 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077659045 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092776816 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086695497 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.06910998 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069043509 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070529757 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078012817 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068142364 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096572868 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088792127 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077958792 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079590495 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066167973 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068090681 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087537948 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078032131 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078139556 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070014137 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077905177 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067720627 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087959754 seconds)
  done (took 3.471250966 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086575241 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105347591 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082024795 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089491252 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090926841 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065164564 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.08718616 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090343047 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127731524 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065043753 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070455242 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065089316 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072743493 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065538974 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080759872 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107542406 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111038157 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069023335 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097370543 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065353036 seconds)
  done (took 3.277180579 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072855748 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069733997 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065428454 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068687945 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076910485 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072842702 seconds)
  done (took 2.010907668 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068530296 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06779374 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066886339 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066262182 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072535041 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067040875 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065723573 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067470101 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068046261 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066642859 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067032154 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065564417 seconds)
  done (took 2.388250903 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.201845824 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06831608 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069936327 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066064906 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070594417 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06594593 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080271361 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067760005 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091278933 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066307562 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066609849 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068300641 seconds)
  done (took 2.565256198 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208234682 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075782834 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23825782 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149611386 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11012027 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115477195 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111974894 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114338642 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141345908 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100393812 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167984936 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166576595 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107704297 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137170328 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089011876 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100369067 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153560285 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162529171 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104890154 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167368922 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145353113 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126633731 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148728391 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106364433 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106164031 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121582049 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070978468 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079987394 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16880794 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132611994 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14397381 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110882073 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091994171 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176800518 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171877971 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140675643 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146999336 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08493472 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.104540752 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134337393 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200418321 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088585027 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161934557 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109032871 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219908199 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132977555 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120984949 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120009698 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106872661 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089885634 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145749054 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184561648 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137160195 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086872486 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123774992 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114086426 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113911827 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113961103 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182047794 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162061084 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127485357 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071154732 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107882089 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15441325 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134015182 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108207811 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124964546 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091961095 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134922559 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155521742 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119880208 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145211706 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.117151486 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088535906 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119456841 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140638739 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127724195 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161446378 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124341782 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073055284 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123563085 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101185393 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080455068 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145437822 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07548673 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176348139 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09915614 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10901383 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124758724 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109854225 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109402695 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15934048 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144986219 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105921703 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.06769947 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24803526 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122054232 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145630907 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087599214 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109307902 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118940804 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077636749 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138706392 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075430295 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122882111 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077340551 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127958468 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130521794 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077090691 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123781898 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104460748 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10226514 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134499206 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161486635 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087879284 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081740407 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170747799 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12262855 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103610516 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14507 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157557127 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102040111 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100372273 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14798738 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180325846 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089123185 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164252389 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106435765 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083248763 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087889603 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123562694 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111835602 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123149501 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081773065 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117829022 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169400017 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074681093 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095826177 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133952799 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078835239 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08116414 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105805238 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105564634 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096140239 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100755299 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103357876 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136979228 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125675733 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106437288 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123537722 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098133807 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315636289 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088248693 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102201738 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1049351 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069695254 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135739577 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157680366 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079369861 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163694211 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124982925 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116258273 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119549504 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08341175 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140519885 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079308968 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070104755 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144287535 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111001398 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109666256 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151785621 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115941527 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126824057 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118461044 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133529115 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132736209 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130943404 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105602133 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088621252 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112652052 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126416594 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072902571 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090687395 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080140856 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104410496 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095528206 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083007108 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140910005 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123642377 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109017427 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112509926 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096280088 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148016756 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075984513 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127780978 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119293094 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095479028 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152959104 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154046652 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132128141 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099128426 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138935337 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069819906 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073700083 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087905168 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122751337 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082138027 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082692497 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.259023368 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149295878 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131068582 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137716668 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123368023 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12139816 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15651077 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070133129 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118065349 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147781991 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121129992 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104342117 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090253928 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099384057 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144344896 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107715175 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183374926 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117470448 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12378658 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153379127 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101487276 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07958432 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103722386 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13589557 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103256387 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143812304 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099567392 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088038866 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109834127 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074519818 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099785079 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127045379 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118241225 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134406556 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.11548198 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131853135 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077391578 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115544275 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121543876 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122427464 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063807702 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120514391 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161789973 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09464518 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119323492 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153867814 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078780987 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.133823597 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174754938 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143967798 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08487195 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107667142 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118645524 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127433741 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11895395 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139303305 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105097676 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135942309 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109069172 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085055723 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086831361 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09617172 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103435651 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093678709 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.104167046 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.110964811 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093607895 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127976313 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100235914 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10704114 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114566011 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096736874 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089167946 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093575436 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172305173 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11516019 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164028368 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097620475 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.140020234 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158294936 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07356955 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076923613 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.075820314 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136521736 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082696339 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126601695 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.104586058 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113984033 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120588746 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138498754 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093028282 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.066996731 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106708276 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128568333 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121358425 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095532018 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.100667743 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158232289 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.098986364 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077901087 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111835715 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113094364 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100436503 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166222876 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.06040531 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103795727 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074661409 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079015412 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125029512 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.407302176 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083238171 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.105018006 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124105902 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115391282 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131855873 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102701144 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110544718 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12923028 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153220326 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131119014 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.0920174 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115181106 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130871314 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158530306 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106830273 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097287942 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174224342 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155139105 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162099616 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089136805 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116075129 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115854722 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110578066 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138602792 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084419337 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166856324 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082848054 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136734429 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104704461 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091220558 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129735704 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108073104 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089044123 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148584455 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118258133 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084217441 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077226557 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118959502 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121379671 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105542572 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075488672 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139770765 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073964172 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136215628 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161902321 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081393745 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108933146 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097671334 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07876091 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106143976 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102048605 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087098782 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099515065 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.323832478 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088141165 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151296184 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134508712 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113173903 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137538985 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103656101 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.63760488 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078608548 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154678163 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117390384 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175184396 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100803135 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118316877 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110725415 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121797705 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143438903 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104063486 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.17979731 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131879704 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116224498 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08003861 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101832902 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103571218 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087539252 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107687044 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113770505 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115009522 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093270377 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116328538 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125055563 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081779849 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095919402 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157078783 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117075452 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143677084 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140844359 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085539059 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11872146 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13769998 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07977907 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120999238 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152728308 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106519651 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099579506 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081431122 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099598244 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1585017 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073476916 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159328936 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119780633 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.256675667 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114012465 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113058969 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131378567 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107128003 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121070898 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091553478 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109475447 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114427707 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081779266 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077460515 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106703883 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111463053 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099168464 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096763585 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.09760733 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15243945 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071936111 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0994463 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114291676 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143762 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174103492 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089123073 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083384963 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117950823 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113233411 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112547444 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121237329 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078657416 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081546131 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.08065133 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077753217 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.10859489 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113143591 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114785313 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110783569 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163455723 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083279006 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.233157479 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095606248 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104912117 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069425629 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078268011 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096159757 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097972532 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106894104 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109752511 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159555598 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095846715 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089975455 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091356711 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07436187 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083085322 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129316219 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109870832 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118762149 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099536779 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062475068 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108137668 seconds)
  done (took 58.938131785 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109492242 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082500619 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.0968588 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144268916 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122727787 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.20267314 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.153662926 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188538204 seconds)
  done (took 2.829931082 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068367301 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095947457 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103182603 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082535864 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067075496 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068476601 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.23291907 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081467745 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06658246 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099055227 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078708793 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068667735 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.428305546 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06580539 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067472728 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062739931 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067271263 seconds)
  done (took 3.509643628 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.387143899 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.615778029 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.382292597 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07355636 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.470526312 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088658719 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.164602636 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.128199322 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072500146 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538671374 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.708857787 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.123900457 seconds)
  done (took 18.471693015 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07537173 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069963423 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083571226 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084023619 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072257062 seconds)
  done (took 2.102678482 seconds)
done (took 108.280859288 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081072347 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.60817272 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052656812 seconds)
  done (took 2.406465877 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082688243 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085156125 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085428047 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083610253 seconds)
  done (took 2.059729311 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.073889272 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076699103 seconds)
  done (took 1.867847695 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.233674835 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.170199918 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095787859 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083902937 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079823992 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080329259 seconds)
  done (took 1.963359933 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072430838 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07538159 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072612195 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077103799 seconds)
  done (took 2.01200585 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077535689 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052525047 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054047658 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.0578271 seconds)
  done (took 1.956226108 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08656125 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080099018 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.07917461 seconds)
  done (took 1.962122599 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102381601 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.086185232 seconds)
  done (took 1.905433422 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082246445 seconds)
  done (took 1.799809938 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100607334 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102659449 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132089137 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111334655 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139646191 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110277995 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084690445 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085450801 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076470447 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08680405 seconds)
  done (took 2.745262571 seconds)
done (took 22.97515853 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07870516 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.367138812 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360107574 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090423903 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668528797 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356351394 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.994061549 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092923582 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115345252 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067330521 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084720708 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649042959 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.984640229 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.322711396 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.968420663 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319215815 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648179837 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068125097 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068005724 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067812847 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.975785163 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067679729 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067750474 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068613642 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647272004 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37166033 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067672753 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.3184399 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067506821 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069659076 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354538246 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068403361 seconds)
  done (took 16.219939604 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070030567 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119627721 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073754763 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085144666 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070551517 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069880397 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071710759 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069072816 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121123436 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067984884 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084873272 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06787361 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071724512 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069096689 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088229234 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.085494462 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068985919 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068214541 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068493671 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068285702 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086949995 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067501407 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067995394 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068529544 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067971753 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080984562 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068006533 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068008023 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068152644 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070295214 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070900242 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068853087 seconds)
  done (took 4.144640412 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114681004 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12571766 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074757522 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103569485 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112570063 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070150295 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143330992 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093551099 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127434797 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068280998 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085243941 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067673464 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102307193 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068810782 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088274673 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068114021 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068959951 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068586699 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068161475 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068112665 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088047096 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068173825 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068162007 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068699592 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068627948 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081435038 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068181337 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068121858 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068206887 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069833372 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071132039 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068278046 seconds)
  done (took 4.377352869 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073476072 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075969376 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083282717 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084237407 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069760115 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072446007 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073564306 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070169018 seconds)
  done (took 2.338220623 seconds)
done (took 28.803420542 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078734662 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069320507 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073335554 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082781106 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073169703 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079553389 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067094979 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07578099 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072882567 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073617443 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075698775 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067217764 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071060635 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067158293 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074214028 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067912764 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079986651 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071970912 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.07973134 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079179035 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069774587 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073122965 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074798815 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078978476 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078970912 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078785552 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077176376 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073233979 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068913497 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07125679 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077283254 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084139037 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068370727 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079171157 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067782997 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067619433 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071831096 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067406185 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079250528 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076779188 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069606809 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076718337 seconds)
  done (took 4.826419731 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087831025 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093415722 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085020393 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061611627 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066616175 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066286936 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.0898362 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059712734 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059334149 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08852125 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055338548 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060019572 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066252403 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053231918 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.05993632 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056250171 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061648641 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055545727 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060342865 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059540475 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.0895032 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053611871 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077393375 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063248491 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055451173 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061401918 seconds)
  done (took 3.491429982 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074655629 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087190102 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089330834 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13083019 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105144059 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079592463 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081060612 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095636473 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.088662425 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066476477 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071079653 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093112185 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091045599 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074072814 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067487001 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086714551 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084010614 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068958982 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073414435 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096103417 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086998684 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086284547 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099036675 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083883928 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066765567 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070130052 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071299503 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082062251 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073053264 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077509379 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071795482 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071165614 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.081014923 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079470535 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071236669 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069767032 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093222811 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077816563 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079427143 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068867482 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071000297 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068962113 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093582927 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.134413194 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067324694 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074278543 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076361304 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077492933 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068198177 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089134313 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079318788 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067633439 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071455823 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067315672 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068218196 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08189984 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070354127 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070963703 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077598631 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071306714 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093816686 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072914163 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084155043 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067519816 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076643339 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06733857 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068601041 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066805948 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096445524 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069534914 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113407451 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069451677 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069511604 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077168225 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075908562 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074428906 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06848285 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084099446 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079252439 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071272835 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076727282 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071745492 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071075851 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.091981261 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070251318 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06962556 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069117707 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073831165 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071037036 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069685147 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081106254 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067547821 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070482745 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087119917 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067820637 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.06909397 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074118489 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072543772 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067375994 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079281331 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072788669 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068757705 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077756786 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067741464 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070493552 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080936971 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074650369 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066592326 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072480692 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073715308 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069009466 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069265992 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071274622 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069927713 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076613771 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074308049 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072476561 seconds)
  done (took 10.807055375 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165858282 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.158741902 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070635969 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148836414 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077145861 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079405714 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151592008 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095025201 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067804717 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068424345 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068635856 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110750793 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106025359 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116959186 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078836508 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068448126 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084889802 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115250742 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.153051598 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147827457 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.085330501 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077413447 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07027439 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069022197 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070768922 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078189374 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085905769 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076804161 seconds)
  done (took 4.517457855 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081735587 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106436793 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07506535 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091698819 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091182902 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068442634 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070687598 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070192458 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081625477 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078918611 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067834406 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.0733478 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075095245 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071396055 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068789747 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075071824 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075480614 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069265724 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071668232 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073529744 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078771498 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092598356 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071885867 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067268535 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073093376 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067423011 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063497895 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.08467339 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068486251 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095226319 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06574492 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076353765 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08220621 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069269635 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068402399 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067928532 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068168475 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067800103 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069633681 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066289949 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066691108 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056837581 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066791919 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079317841 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075169168 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055845425 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072714903 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073230284 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073234309 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065228603 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071183701 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070772752 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071293631 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075291667 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072744889 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073247468 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069410821 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074135465 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077015305 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067275295 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06518269 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065812545 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072400681 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065352612 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076220561 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072283075 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066378124 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067479664 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069606133 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074717384 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067292188 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07087908 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065497584 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070203617 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072857889 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069665996 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068682608 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066356075 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067581559 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067753836 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054829199 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068440634 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053002699 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070568649 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066357057 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066045982 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067631482 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073002392 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079879963 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069689056 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074301083 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068635787 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066546686 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071627684 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060687431 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070695967 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083394433 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082880174 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067536214 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065689978 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082337734 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072212018 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066589109 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055809955 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075458711 seconds)
  done (took 9.291242322 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090693692 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070675568 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085798167 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094269397 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087084139 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075406272 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077485468 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069190676 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084036604 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074000466 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077788536 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067848001 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078304437 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077281755 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069860214 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078144068 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072994939 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08528761 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082939411 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068171578 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076740273 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08077019 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090524555 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082140023 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081077623 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082387554 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091468297 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071778739 seconds)
  done (took 4.0058264 seconds)
done (took 38.668802699 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.829741114 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.989886888 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.815095801 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.174030806 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.896934943 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.153542812 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.952066709 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.804614486 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.987794234 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.848364552 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.021550403 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.929036028 seconds)
done (took 66.151319865 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.859184389 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.957142951 seconds)
    (2/2) benchmarking "String"...
    done (took 2.054538714 seconds)
  done (took 5.761463989 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.067995759 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.366312416 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.063646105 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.808235761 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.817622022 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.149560796 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.604360854 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.311272459 seconds)
  done (took 30.870369914 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.96927003 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.041747392 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.504223329 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.537353063 seconds)
  done (took 15.849584493 seconds)
done (took 64.239935402 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.817718659 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.854367063 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.818202824 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.793655003 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.868478688 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.825021278 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.486769618 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.96506574 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.809855248 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.796964734 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.81121636 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.259602591 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.828220987 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.354422639 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.812501838 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.817186654 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.843485852 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.530790012 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.971346243 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.827668987 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.819388743 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.88154135 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.8178766 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.820992678 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.838042872 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.811282606 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.256181382 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.825014794 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.435630047 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.816890583 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.842232713 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.940197018 seconds)
  done (took 205.947650827 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.809122657 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.874639367 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.938962437 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.84963901 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.304465532 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.993896566 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.931725897 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.345373747 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.81544298 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.841710553 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.122645325 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.81115696 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.143369858 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.760424244 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.841002551 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.812829506 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.080291932 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.114387869 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.845391531 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.98509978 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.832555218 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.037170583 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.988344681 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.06207688 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.814225202 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.89990966 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.834187413 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.82716012 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.005446779 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.033059102 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.845354107 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.854029078 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.947136226 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.68759513 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.832284825 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.836086947 seconds)
  done (took 172.309345737 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.197754726 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.81152562 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.811313811 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.810858469 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.818441384 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.812071993 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.93381332 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.939279497 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.404022549 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.376540515 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.866798734 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.652562461 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.812247345 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.879268569 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.825934251 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.814060956 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.828129782 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.838932269 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.815734575 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.812937395 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.938544583 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.825243077 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.871739431 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.820216801 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.813842681 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.817293322 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.183817031 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.813091206 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.817733342 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.056937151 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.813509613 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.812880554 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.707384044 seconds)
    (33/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.815925937 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.106671252 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 2.088635333 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.813885746 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.818074976 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.814723198 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.814229121 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.041880743 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.815065959 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.814874224 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.817186786 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.087683275 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.814056923 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.939702785 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.814454278 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.325206281 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.814293256 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.813137917 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.755290881 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.543386163 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.815954448 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.813998622 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.817259214 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.814980059 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.814274591 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.819625368 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.605060203 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.894791834 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.816462478 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.817843231 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.819945156 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.814282671 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.881116713 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.818912056 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.492314633 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.871594655 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.944876069 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.936848398 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.817028375 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.882281409 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.908833562 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.815663597 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.81487582 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.815663719 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.815392555 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.897117857 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.815456468 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.815104938 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.962621293 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.822380753 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.816045289 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.868017341 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.884745949 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.81579818 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.718813143 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.818476544 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.815428042 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.146193832 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.882651487 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.816399999 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.815511546 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.816084863 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.948087337 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.938634873 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.62257882 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.820068151 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.815642227 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.609660816 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.820168586 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.965996094 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.816276297 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.016218613 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.820659575 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.897823406 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.821795052 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.818278101 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.816603481 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.849440821 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.817461991 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.875279729 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.82016029 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.189410544 seconds)
  done (took 408.695964231 seconds)
done (took 790.955858261 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.471624688 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.434891469 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.553945454 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.450221547 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.423516777 seconds)
  done (took 14.090939262 seconds)
done (took 15.84643812 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.906962516 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.90900911 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.841425649 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.90818376 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.837936792 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.906333162 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.889619123 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.843982158 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.874833892 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.844091655 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.875960311 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.843740057 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.831729271 seconds)
  done (took 26.070591642 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.057599733 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.062266128 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.890096227 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.058342958 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.867215185 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.053771204 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.980578138 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.972658044 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.973120801 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.832899074 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.832865271 seconds)
  done (took 23.340179811 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.055363976 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.063266128 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.898261121 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.056413155 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.871296053 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.050991471 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.986198214 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.971411365 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.973031171 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.835336655 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.831972441 seconds)
  done (took 23.352794777 seconds)
done (took 74.51849403 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.827309273 seconds)
  done (took 3.585435962 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.854392303 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.010112 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.834723228 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.832234888 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.828067405 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.829378692 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.832445158 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.827958099 seconds)
  done (took 16.610193791 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.827388463 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.824392199 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.828027648 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.825058663 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.825415211 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.824700786 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.828090644 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.829116198 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.827752025 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.828001262 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.824873962 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.827556559 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.825430082 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.824329501 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.825380704 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.827880942 seconds)
  done (took 30.983259505 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.827121336 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.824500239 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.825283704 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.826396917 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.825675179 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.82666574 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.826826571 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.825879561 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.825981402 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.828144072 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.825863685 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.824820532 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.826899312 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.824640586 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.825760353 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.827191245 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.82659091 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.826147517 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.831058148 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.82621511 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.827165394 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.825957387 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.826709245 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.827037772 seconds)
  done (took 45.597476244 seconds)
done (took 98.533472059 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.719618932 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.228183407 seconds)
  done (took 8.710020051 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.8304403 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.828136119 seconds)
  done (took 5.455958644 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.829127627 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.830132758 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.828607666 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.829690287 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.830087309 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.828995783 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.830483457 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.829755339 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.829790461 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.828880061 seconds)
  done (took 20.056702539 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.829583683 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.830455525 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.827040796 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.830296975 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.830297222 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.827459442 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.830531798 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.83075398 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.829695974 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.826659962 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.83085236 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.827463691 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.83053589 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.827887883 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.831416302 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.828298884 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.828303696 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.828090272 seconds)
  done (took 34.687976324 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.831520513 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.831560718 seconds)
  done (took 5.426527828 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.827502931 seconds)
    (2/7) benchmarking "second"...
    done (took 1.828376891 seconds)
    (3/7) benchmarking "month"...
    done (took 1.829157745 seconds)
    (4/7) benchmarking "year"...
    done (took 1.827582554 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.829751267 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.830778914 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.830102895 seconds)
  done (took 14.566535326 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.832319678 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.990458618 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.058988172 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.513724262 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.831919411 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.834843458 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.781939607 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.835349151 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.837630483 seconds)
  done (took 20.281406421 seconds)
done (took 110.945242348 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.679967605 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.82817814 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.162645801 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.881477105 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.876085967 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.172407922 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.82694224 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.13424417 seconds)
done (took 43.325130909 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.891195824 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.384310707 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.414830731 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.271988511 seconds)
  done (took 12.836360935 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.81158873 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.365447485 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.863567958 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.421538241 seconds)
  done (took 20.247637456 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.196521212 seconds)
    (2/2) benchmarking "read"...
    done (took 2.174137504 seconds)
  done (took 6.139306878 seconds)
done (took 47.880164072 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.832891097 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.833262142 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.833098654 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.8311909 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.833837821 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.83127361 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.830463871 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.833452787 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.834165281 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.832679851 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.833021425 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.833455378 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.830836634 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.830644044 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.833156439 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.830751083 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.832054038 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831717689 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.830904274 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.830357916 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.834879143 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.831537966 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.831352839 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.833984502 seconds)
  done (took 45.741232189 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.833828615 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.832321532 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.833407041 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.834285374 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.832421417 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.834476638 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.83465134 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.831283474 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.834729951 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.833945579 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.832048609 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.832572894 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.835619331 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.831665245 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.836122746 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.832808656 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.835844695 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.833421996 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.834543303 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.831774861 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.834766919 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831576226 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.832264354 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.835500463 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.833322866 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.833056975 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.83533926 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.833441943 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.835872251 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.833781299 seconds)
  done (took 56.777745793 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.845463723 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.849929276 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.839177446 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.836027364 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.836266554 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.835131288 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.834777024 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.835673968 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.83529309 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.835479755 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.835828507 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.835821651 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.837107164 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.836875063 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.837447732 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.836474655 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.836729037 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.836758645 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.836453141 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.836175276 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.836469988 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.836498772 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.83701586 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.837626056 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.837123126 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.837162007 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.836701344 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.837152374 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.837644104 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.837856837 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.838896175 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.837612454 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.837573652 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.837445639 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.837746624 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.83752639 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.843444909 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.846620283 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.83746589 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.836534969 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.837504676 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.838176199 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.837952502 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.837343282 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.837834819 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.838833854 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.839283714 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.839621329 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.838387192 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.839003236 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.83867347 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.83826814 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.838705992 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.839365544 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.838634891 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.837450477 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.838027768 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.839056076 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.839054371 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.839962837 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.838747249 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.837955806 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.839844855 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.838630479 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.839327866 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.839267022 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.83925147 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.83930525 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.839539525 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.839519981 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.838890219 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.838870517 seconds)
  done (took 134.122068794 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.840486801 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.837930022 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.837423325 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.836849852 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.837119104 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.8408165 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.837391438 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.840444665 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.837903086 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.841130086 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.840502074 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.838283114 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.836580603 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.841976877 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.841303761 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.837053803 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.841634166 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.836764019 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.841276013 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.84145967 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.840283371 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.837366425 seconds)
  done (took 42.234862454 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.841709922 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.840873778 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.83709428 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.840627415 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.837725058 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.842177533 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.840113961 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.841055795 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.841349702 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.837421845 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.839554553 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.841559891 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.839160092 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.838855185 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.838758951 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.839886775 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.842421876 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.838889334 seconds)
  done (took 34.892995997 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.839563918 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.838759264 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.841906705 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.83899645 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.838576524 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.842727663 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.83995462 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.842348077 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.842282382 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.839275393 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.842814145 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.843062142 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.84328058 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.84045889 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.842873112 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.839676342 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.842774177 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.840248134 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.843467426 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.839620493 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.840386186 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.843296995 seconds)
  done (took 42.280428226 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.842274692 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.842849482 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.840063345 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.839476435 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.8399693 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.843728391 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.844073496 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.841341614 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.843787058 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.842846626 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.839991387 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.843432253 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.8401214 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.841775938 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.840578076 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.840230055 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.845100603 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.841462197 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.843748585 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.840623993 seconds)
  done (took 38.61310816 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.844136978 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.844528161 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.84570996 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.845187132 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.845230214 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.844979315 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.845717616 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.845193243 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.844848916 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.845600854 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.845156804 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.845598847 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.845375211 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.846818762 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.845509239 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.844984573 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.845449383 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.846197352 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.845199122 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.846629126 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.846211883 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.84603495 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.845535234 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.845648668 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.84595984 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.845878326 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.846270317 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.84589868 seconds)
  done (took 53.452984994 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.845364897 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.845535016 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.842407157 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.84312021 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.842463751 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.842633133 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.844434768 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.844195751 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.844565922 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.84268207 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.845760851 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.845340303 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.846263101 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.845771434 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.846328906 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.846209278 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.846400801 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.842601628 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.843774637 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.84228809 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.846788603 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.846551889 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.847757662 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.844038684 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.84235689 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.847217487 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.843269367 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.844080122 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.846457774 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.84365848 seconds)
  done (took 57.119408798 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.865055272 seconds)
    (2/2) benchmarking "in"...
    done (took 1.864326845 seconds)
  done (took 5.507354121 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.843350692 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.846554276 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.846665722 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.843686867 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.845802828 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.848987481 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.84678732 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.844486559 seconds)
  done (took 16.544405294 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.848005658 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.848481065 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.847894877 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.848721268 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.848337876 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.847525896 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.853328334 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.847838275 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.850356435 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.849132868 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.855241704 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.856411974 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.852387959 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.848648032 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.84813613 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.849799472 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.84785088 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.848059436 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.849886225 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.847609835 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.848612504 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.849824125 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.850050756 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.844973685 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.850259652 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.860797461 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.851728848 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.848095301 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.847731343 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.852828965 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.847739042 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.844638224 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.849633281 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.850398216 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.850385126 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.849906931 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.856534854 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.849282323 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.855006892 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.848965483 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.848851242 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.84544718 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.852024711 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.851008462 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.850369772 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.850545856 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.849766071 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.846455979 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.85036733 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.852885988 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.854932854 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.848810666 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.846400033 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.854373822 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.853015777 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.856421915 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.850834292 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.853041122 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.859497518 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.859086571 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.863044006 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.858383918 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.851550366 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.851575255 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.860781056 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.874790518 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.856324529 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.847797856 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.849045121 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.851503041 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.857192482 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.864332312 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.861332895 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.852289258 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.852073909 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.85049573 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.852421055 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.853148108 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.857866843 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.854841058 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.852165631 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.851924772 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.86062086 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.875318852 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.851267777 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.851233798 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.852304784 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.851023481 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.853806127 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.861431589 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.852123274 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.851562211 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.853099233 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.852347777 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.854224677 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.85341063 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.851093938 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.853162237 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.849533042 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.852336738 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.852319471 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.85493703 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.862453504 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.852813615 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.853141851 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.858599366 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.852109308 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.851651009 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.859568123 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.852799271 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.854857731 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.853610711 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.858213574 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.849355126 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.856039999 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.86259159 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.854927108 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.854517176 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.854028637 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.853535883 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.862516277 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.880857781 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.853404933 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.8545367 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.858860761 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.865590726 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.855553601 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.857754161 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.853520073 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.850737737 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.850921249 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.85571779 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.854158672 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.854479673 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.854166798 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.854351372 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.851381813 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.854446065 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.855099973 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.856258206 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.855554322 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.854695984 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.857617635 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.856431664 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.856011948 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.857311603 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.860730781 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.855793645 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.856198628 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.856004774 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.852322914 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.855220811 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.85620826 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.855152304 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.855674403 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.855331883 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.854710641 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.855930062 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.85515792 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.855786857 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.854428755 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.857400875 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.860799568 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.856736136 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.859998485 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.855097146 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.854227631 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.856749037 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.856448648 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.856568393 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.855943364 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.855340328 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.859977717 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.864903102 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.856765001 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.857403022 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.859256893 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.856570369 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.857291046 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.857037534 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.86127798 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.86537644 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.857335279 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.86299977 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.85810622 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.857366888 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.857367123 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.858013855 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.85721401 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.856706419 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.860497174 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.86535889 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.869591267 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.866653283 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.858205724 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.861307317 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.858257422 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.862288425 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.861176997 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.857929896 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.857557251 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.858396019 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.856918342 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.858256128 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.859063193 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.858063203 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.857325691 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.859027508 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.858525234 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.857723653 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.85887218 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.86359983 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.862534311 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.856077995 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.859071503 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.858920645 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.858512053 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.854993453 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.858744065 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.858616873 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.85833938 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.859657952 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.864613139 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.855957938 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.860073361 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.860119641 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.859419911 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.858782971 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.859504737 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.862128815 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.859831392 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.864288324 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.860134089 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.860609173 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.865584565 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.859560489 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.858500883 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.863078794 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.859524382 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.858121137 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.863200274 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.867307625 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.859253138 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.861024978 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.861111881 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.862127771 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.859429589 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.864939042 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.857324148 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.8594874 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.859541182 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.8616111 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.857108598 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.861545784 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.861887203 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.861635625 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.863065068 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.85981724 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.861063168 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.862141192 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.862059296 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.860861774 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.860510072 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.863423123 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.869551448 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.864744079 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.861511417 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.862462535 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.862787789 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.866306578 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.860845663 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.861922631 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.862430546 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.874368312 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.869948632 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.867246137 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.862319989 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.861500461 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.866255868 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.863739714 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.867471405 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.861304832 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.862515834 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.862632016 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.861620795 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.85972294 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.86372219 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.862150521 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.864442902 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.863189707 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.86542067 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.862431059 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.862080098 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.863592558 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.862412959 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.862791449 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.862358685 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.863390142 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.865159792 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.864478459 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.863367993 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.862956625 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.867696048 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.863653014 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.864544675 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.863986134 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.862799696 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.862750055 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.86438563 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.863359814 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.867669754 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.871619322 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.866833519 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.873731217 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.864955094 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.872901289 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.864064311 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.867767607 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.872625998 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.861499423 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.86507386 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.863928299 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.86428106 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.86935748 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.864839349 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.865935619 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.868733714 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.864661382 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.864510252 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.864306853 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.864372899 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.864553944 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.865169894 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.872745766 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.866126473 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.868698246 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.866866936 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.8627591 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.865040935 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.86528169 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.863766938 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.868486098 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.865876783 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.866762856 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.864105314 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.86574567 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.865375006 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.865382893 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.865881092 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.862974532 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.86545338 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.871463566 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.866317362 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.871172326 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.867789845 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.872655408 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.865720907 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.871530519 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.866860638 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.866373173 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.865741188 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.865282897 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.867504064 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.864917674 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.866478918 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.866378935 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.867748354 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.870922389 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.866484132 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.869042016 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.866764906 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.866837166 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.867416128 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.876783226 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.890005297 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.868005618 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.871644055 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.864246103 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.868386974 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.870784083 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.867825235 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.865937281 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.870426448 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.877910426 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.875713568 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.870003705 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.868716087 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.868143667 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.868497954 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.867821123 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.868213214 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.867736498 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.868322453 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.868470399 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.868462967 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.871634514 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.86888821 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.86884416 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.868519357 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.86893011 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.877777147 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.869321438 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.870142773 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.868464359 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.867919294 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.868730374 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.868222177 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.869039199 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.869506759 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.868795567 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.870618416 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.875362976 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.87615886 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.872201242 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.869027717 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.868499713 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.869334776 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.870314037 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.870323579 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.869662909 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.870377202 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.870178693 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.869190574 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.870352057 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.868527128 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.868649004 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.870252714 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.869542932 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.874043451 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.877483791 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.869793217 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.866798658 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.869817828 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.870291122 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.870142839 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.870569761 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.877630647 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.873709985 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.879926717 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.878957481 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.874902337 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.871661896 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.873585006 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.879128064 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.869934882 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.871458408 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.870873116 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.872819578 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.873139117 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.875197147 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.872039325 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.876659097 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.871225023 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.871831391 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.878126094 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.873458155 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.872227491 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.873708588 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.876750264 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.873609075 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.868456473 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.871831763 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.871742489 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.877269394 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.87389753 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.871849548 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.874810833 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.870540552 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.872260553 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.876556395 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.871971286 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.874357816 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.869287929 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.87323956 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.872366646 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.87272017 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.868945626 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.871999648 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.872419805 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.875266731 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.879713836 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.869494678 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.874546456 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.872884762 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.872744893 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.872528433 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.87234415 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.868861648 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.87046306 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.871834809 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.873517348 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.874263948 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.875883547 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.873864547 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.874781966 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.87503215 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.87384343 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.878147933 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.88510727 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.880678751 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.870613286 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.873907321 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.87479279 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.876694578 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.874417746 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.874287285 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.874195138 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.875146741 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.873483734 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.873808996 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.873692775 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.877291574 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.888811202 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.874302764 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.874633127 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.873783632 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.877878054 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.874121275 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.8711645 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.873312701 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.87758235 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.877332464 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.883126017 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.875266648 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.880772197 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.874677258 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.876542622 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.879125034 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.878493788 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.883272691 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.87793009 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.874676282 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.874900449 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.879691621 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.891171955 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.874789255 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.885889403 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.904655131 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.87616128 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.876784512 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.87639113 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.875009899 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.876621374 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.877853049 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.876291475 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.875814065 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.876208645 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.876342945 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.876345749 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.882104653 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.877479691 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.876052398 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.876345557 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.876815262 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.878006247 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.873603398 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.877344825 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.876629062 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.876512067 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.877121753 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.877225154 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.876306713 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.888541296 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.887727898 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.875393887 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.877559082 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.873514935 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.880900188 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.879907247 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.888223447 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.885464587 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.877893184 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.877255439 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.87798086 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.878569361 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.874202062 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.877129827 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.877137701 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.87704975 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.875272264 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.890791057 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.886841169 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.88325408 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.878126416 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.877820683 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.878215931 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.879213733 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.877671652 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.878472897 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.879756623 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.87908074 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.882669061 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.878241838 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.877854145 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.882297396 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.886522714 seconds)
  done (took 1113.237583205 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.875419169 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.875862625 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.87569493 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.875743362 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.875284298 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.876639889 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.87633937 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.875627867 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.876963377 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.876155461 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.877009756 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.876011264 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.875916234 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.87600402 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.876497309 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.875889865 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.877002805 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.874860803 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.875195941 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.875890406 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.875049071 seconds)
  done (took 41.204655901 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.877163224 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.878050866 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.877632947 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.879944524 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.877998349 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.879503614 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.877166018 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.881145016 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.882035546 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.877546831 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.881984785 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.880377887 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.877626174 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.877575247 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.877582398 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.880516995 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.879554362 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.877309638 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.880372582 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.878085749 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.880523122 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.877455639 seconds)
  done (took 43.147464267 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.882015757 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.881732089 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.880555425 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.878641199 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.879729021 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.877393069 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.882288018 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.880737456 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.882169585 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.880855115 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.879374045 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.880902573 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.886916949 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.885395602 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.88013627 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.879084057 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.034391325 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.879746356 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.880205438 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.878256979 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.87396876 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.881298825 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.873788142 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.873863013 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.876809023 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.876323093 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.875462731 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.876002765 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.876264229 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.877649782 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.878670614 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.874678707 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.875687009 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.878042089 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.874941976 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.876776067 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.87742968 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.875537003 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.871340877 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.874459543 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.884828608 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.894684496 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.874577343 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.880814566 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.874488899 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.875035521 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.878872573 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.883256409 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.871972546 seconds)
  done (took 94.021175155 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.874141555 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.875557547 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.870830767 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.875254546 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.875404119 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.874846691 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.875412869 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.875085594 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.872099399 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.87188476 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.875792369 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.872914798 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.872033544 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.875252783 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.87654961 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.873746195 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.87260432 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.872665383 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.872111217 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.872363306 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.87231342 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.875285837 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.875779265 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.872787353 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.8754495 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.872456577 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.873904514 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.879683341 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.876917862 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.876214131 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.882139506 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.880621604 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.882353899 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.875202656 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.873571198 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.874825419 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.876071186 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.872655981 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.87666622 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.873775107 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.877297168 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.876655038 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.877045203 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.878664529 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.874004299 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.874779222 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.874178222 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.873507436 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.87480347 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.87822248 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.876272849 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.874784154 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.876407988 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.874122306 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.878122851 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.876800346 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.874458034 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.87314962 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.876687699 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.87621464 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.873790913 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.876728741 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.875398576 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.878048228 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.878077352 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.875804079 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.874527949 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.877485255 seconds)
  done (took 129.329650916 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.878991285 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.878284378 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.878101208 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.879278429 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.878093958 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.878493501 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.879195327 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.873820701 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.873446641 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.874651976 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.873737561 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.873558233 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.874285331 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.87052317 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.871757586 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.870870141 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.872117953 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.873194758 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.871410506 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.871461703 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.871126091 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.871749445 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.872810993 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.870952388 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.871192982 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.87156263 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.871124571 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.87135581 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.87179036 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.869796006 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.87100416 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.870842355 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.870118845 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.87093574 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.870760751 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.870753994 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.870320038 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.870622305 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.871656384 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.870468519 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.870323859 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.871401947 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.871015467 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.871162611 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.871724641 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.870453465 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.869644035 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.871829455 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.870522939 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.871794733 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.869901854 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.870715278 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.871328652 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.871627895 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.872022775 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.871331478 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.871746058 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.872730941 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.872039643 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.872116697 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.871362331 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.871258392 seconds)
  done (took 117.895510189 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.869821941 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.871028415 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.868854264 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.86837045 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.871609518 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.868600248 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.870604647 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.871521209 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.871037172 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.871415438 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.871215807 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.868720003 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.869530972 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.871992852 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.867475318 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.868867609 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.86778449 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.868215736 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.870832825 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.867315682 seconds)
  done (took 39.196592183 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.867182911 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.86956152 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.869386147 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.867243799 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.86907163 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.868568871 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.869922534 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.869095029 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.868453509 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.868084857 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.86995741 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.868731481 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.865477611 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.865982259 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.868194944 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.865355393 seconds)
  done (took 31.691182783 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.865813024 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.868582319 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.869694347 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.867845215 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.863701551 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.864832484 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.868219078 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.864644949 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.863816332 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.867857953 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.866838133 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.867681375 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.868571647 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.866118251 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.862741543 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.866251022 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.863308529 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.863328892 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.866300466 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.866021927 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.863914426 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.862759641 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.865022857 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.86647548 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.864028792 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.863006376 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.862004895 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.862965728 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.862487903 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.864428389 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.861797591 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.861897828 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.862508993 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.863070315 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.867405888 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.86092017 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.864473302 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.864540092 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.864815365 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.865591445 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.866105715 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.862194153 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.864108158 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.864578073 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.862031559 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.864836537 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.862355687 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.86163409 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.862132645 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.862227287 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.864560743 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.865276843 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.864422129 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.865156146 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.864652366 seconds)
  done (took 104.353544315 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.865095151 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.863787893 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.861575855 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.864051011 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.863893265 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.861809612 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.865485897 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.862107656 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.86196135 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.865429939 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.864150735 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.865011761 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.862271847 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.86625039 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.863148321 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.86631062 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.862335461 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.861801034 seconds)
  done (took 35.345313598 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.861944514 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.862635047 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.864939405 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.860842966 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.86066204 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.865003891 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.861107603 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.865109285 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.863373222 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.861517746 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.860830639 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.864450437 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.864528657 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.864457658 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.861641018 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.859882494 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.863615309 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.863622819 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.860957963 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.859666961 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.863171605 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.864022372 seconds)
  done (took 42.77439312 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.863835722 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.861799146 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.878230806 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.881096227 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.883729806 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.892685566 seconds)
  done (took 13.056225028 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859833423 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862519231 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.859366078 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863777602 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864092307 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859869659 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860192532 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859471867 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862409619 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860877567 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860488081 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862317627 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861926453 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860747956 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862587067 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863399379 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858880363 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860262562 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860608006 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86224734 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861441037 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862835562 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860589211 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861069301 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861057173 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860510385 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863117989 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862042095 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859793569 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864147677 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863267319 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860510609 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863239615 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860102931 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863441272 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862215515 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861507741 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862834834 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863316046 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861605127 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.86294994 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86272792 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864146915 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860453581 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862453549 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859749043 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860223437 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861912744 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860082942 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863145893 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862407134 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86046356 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86459603 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863446543 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862622074 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863470179 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861010773 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860633852 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864137629 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859925621 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860085653 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862477042 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860580674 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86112634 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861054285 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859341883 seconds)
  done (took 124.667177112 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85967231 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.858593141 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858848055 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859350912 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859107036 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858319034 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859431967 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859686894 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858416077 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858793698 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861971249 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858893849 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85857176 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85924044 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859168762 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858986484 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858796521 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860168873 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859493169 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860720224 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858049276 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858175016 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859340393 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860068521 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858691477 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860897932 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85871861 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857687817 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859234136 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859273539 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858181959 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85858959 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858354966 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.857710482 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857908927 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858486855 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858148183 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858523508 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859403868 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861890855 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859093962 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860916268 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858555284 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858699942 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859257568 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858796621 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85933719 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858823335 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859903467 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85914885 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859749177 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860183854 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860653562 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860195699 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859181834 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861008716 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859734516 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860146945 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861832813 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862590644 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860280208 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860926865 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862715873 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860125426 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859079015 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859621221 seconds)
  done (took 124.51937998 seconds)
done (took 2583.48963116 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.918117862 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.858257012 seconds)
  done (took 15.570175581 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.025386777 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.976996616 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.862385531 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.905009933 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.862105078 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.877820737 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.881009616 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.861378251 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.862829876 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.864117729 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.862102429 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.046949837 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.862290886 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.862833123 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.862084043 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.954576487 seconds)
  done (took 52.229916763 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.865364875 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.866172094 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.87694222 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.867930033 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.865318819 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.877638949 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.899992412 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.870100835 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.901731993 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.878150559 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.935902499 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.875656504 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.866915766 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.917580263 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.878695469 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.880754068 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.955782646 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.940511368 seconds)
  done (took 35.817974698 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.943390691 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.867377274 seconds)
  done (took 10.613945566 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.875946325 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.887239355 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.884682367 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.870659949 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.882184462 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.868784976 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.866639174 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.905689738 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.867793269 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.921302852 seconds)
  done (took 70.629515459 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.871987751 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.86953427 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.867030249 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.866147098 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.860071145 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.86373704 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.866908146 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.861195472 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.541452622 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.903717614 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.873183264 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.871346897 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.866535155 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.867695321 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.865075932 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.891186956 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.009140639 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.863589553 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.86434946 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.873522446 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.866473328 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.930909457 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.879722492 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.866491309 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.897744201 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.548037171 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.874106818 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.872778762 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.992317265 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.867025836 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.866800042 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.868259914 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.869593179 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.248245238 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.142722085 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.8663043 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.875665041 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.877560902 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.863660222 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.023276695 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.868193857 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.873033877 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.832471114 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.117300268 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.982693716 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.912094192 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.256488571 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.872614597 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.869813472 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.899839386 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.870044195 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.870494551 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.88142582 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.382288071 seconds)
  done (took 132.60428892 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.861857633 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.1242477 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.020088648 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.864130262 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.153513992 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.069951897 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.864057069 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.91268844 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.862554727 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.094522966 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.085210036 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.972617306 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.864298795 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.863610311 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.867008792 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.863292712 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.024333859 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.937939787 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.868006254 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.861137745 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.899585113 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.110093629 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.00066202 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.871330343 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.88716495 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.075193217 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.9980936 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.972475452 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.334603826 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.862865187 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.930212746 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.865355465 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.86565476 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.86220853 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.020617015 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.959318701 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.954045055 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.864980863 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.862137672 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.86443238 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.539206319 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.063406852 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.961878061 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.007470165 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.111895349 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.07097256 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.65500581 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.86436051 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.602901969 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.025926307 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.098427999 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.094962966 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.990033631 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.866306111 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.376219184 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.864092126 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.864445406 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.10047764 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.094398318 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.967337174 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.86732731 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.864077106 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.864513498 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.11274789 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.866838322 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.961066392 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.869897894 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.866375715 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.96234406 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.970706252 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.095715869 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.08240121 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.899919109 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.186599248 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.354836261 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.113563054 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.934330616 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.099127638 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.868184793 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.868493113 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.953853753 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.818610409 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.067433533 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.119871569 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.120593785 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.903745952 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.589332206 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.865762405 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.095591789 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.089897885 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.170282019 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.106479804 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.017985037 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.194448613 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.865712245 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.86614303 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.100474921 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.004811886 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.871666868 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.229160408 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.102818531 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.438558072 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.896721139 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.208171835 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.003405676 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.868225631 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.512540439 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.868471122 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.094902676 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.91089651 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.867374993 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.868693134 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.088798208 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.940895457 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.868007953 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.497896553 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.932262486 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.86957685 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.102853048 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.868771065 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.136435572 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.871182394 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.108087737 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.285498537 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.903834746 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.096697624 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.108009158 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.870439573 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.114889547 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.114256762 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.987661258 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.089783682 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.493117356 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.866735298 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.167047953 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.869774731 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.86767226 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.040990663 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.869160766 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.016198274 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.871854657 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.203467269 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.896607593 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.022479609 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.871417123 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.12745023 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.90576432 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.921357922 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.873308885 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.002348757 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.871020851 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.908144845 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.023557412 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.871173796 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.869239593 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.5765374 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.869678199 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.02613747 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.10191654 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.896740542 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.9456754 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.542966332 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.868980661 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.956479424 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.896623063 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.2172981 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.870553739 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.085774663 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.870590317 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.406474281 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.871587851 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.112122403 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.053501884 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.875814409 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.869790385 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.775378177 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.869531706 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.87027078 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.032359387 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.315922516 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.868789901 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.073528088 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.870238381 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.011777644 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.874310234 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.945981707 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.227757664 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.870305537 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.870089656 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.870848373 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.871312238 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.872649311 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.13629131 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.902146064 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.398089086 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.009900594 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.142164889 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.191303002 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.122717438 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.917934973 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.873312073 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.120994969 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.87477523 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.940509196 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.873475297 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.89439986 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.107907489 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.873452751 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.084965623 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.152740549 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.794312312 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.921177108 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.873358572 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.872321614 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.829340021 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.028937436 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.966447849 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.873662338 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.873259096 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.99696605 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.004397895 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.089802924 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.871908987 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.206252812 seconds)
  done (took 904.640356733 seconds)
done (took 1223.900051084 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.871799846 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.874187286 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.864736794 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.876876431 seconds)
  done (took 29.297253475 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.882793078 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.879137424 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.88207663 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.880565144 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.881134858 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.879772431 seconds)
  done (took 13.096276505 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.918230081 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.876992294 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.876432314 seconds)
  done (took 21.483202758 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.948208436 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.284317809 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.990163904 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.319505667 seconds)
  done (took 10.353915332 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.883685367 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.881956604 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.881636241 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.882815953 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.884424058 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.887741981 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.88288585 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.882761143 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.885406062 seconds)
  done (took 18.768477619 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.337614145 seconds)
done (took 99.145421664 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.917621666 seconds)
    (2/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.01082374 seconds)
    (3/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.880954597 seconds)
    (4/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.348914881 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.951289773 seconds)
    (6/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.254813263 seconds)
    (7/309) benchmarking ("sort", Float32, false)...
    done (took 5.658072119 seconds)
    (8/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.89290883 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.232247291 seconds)
    (10/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.028834829 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.062639288 seconds)
    (12/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.065864629 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.934461087 seconds)
    (14/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.185754322 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.921512536 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.015026127 seconds)
    (17/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.913229499 seconds)
    (18/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.087670744 seconds)
    (19/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.980105112 seconds)
    (20/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.076025182 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.185950429 seconds)
    (22/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.893370414 seconds)
    (23/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.948885275 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.993569556 seconds)
    (25/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.888100636 seconds)
    (26/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.30414379 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.349999614 seconds)
    (28/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.200929219 seconds)
    (29/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.923525901 seconds)
    (30/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.99087101 seconds)
    (31/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.88775154 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.002408942 seconds)
    (33/309) benchmarking ("sort", Int8, false)...
    done (took 4.877024247 seconds)
    (34/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.194782723 seconds)
    (35/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.874279156 seconds)
    (36/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.295509817 seconds)
    (37/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.911658034 seconds)
    (38/309) benchmarking ("sort", BigInt, false)...
    done (took 6.887656234 seconds)
    (39/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.179841517 seconds)
    (40/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.08865533 seconds)
    (41/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.579702967 seconds)
    (42/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.185287786 seconds)
    (43/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.037457812 seconds)
    (44/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.013033733 seconds)
    (45/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.957372111 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.074000017 seconds)
    (47/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.079225131 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.149842456 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.807410762 seconds)
    (50/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.093754715 seconds)
    (51/309) benchmarking ("sort", Float64, false)...
    done (took 5.687954327 seconds)
    (52/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.984685072 seconds)
    (53/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.002196423 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.87471873 seconds)
    (55/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.001871581 seconds)
    (56/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.97374526 seconds)
    (57/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.266364806 seconds)
    (58/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.908772689 seconds)
    (59/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.079478371 seconds)
    (60/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.098107991 seconds)
    (61/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.069409264 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.898774228 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 3.945242725 seconds)
    (64/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.093954457 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.200728995 seconds)
    (66/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.960307092 seconds)
    (67/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.162650429 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.892765135 seconds)
    (69/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 3.629751442 seconds)
    (70/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.170798145 seconds)
    (71/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.894295047 seconds)
    (72/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.277778308 seconds)
    (73/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.496393129 seconds)
    (74/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.364849863 seconds)
    (75/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.971794558 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 5.588924903 seconds)
    (77/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.061902584 seconds)
    (78/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.681312336 seconds)
    (79/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.249025592 seconds)
    (80/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.362386936 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.20646889 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.927349869 seconds)
    (83/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.914902003 seconds)
    (84/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.035821595 seconds)
    (85/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.451271701 seconds)
    (86/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.41387246 seconds)
    (87/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.133897462 seconds)
    (88/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.980663705 seconds)
    (89/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.072247738 seconds)
    (90/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.895335105 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.200719298 seconds)
    (92/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.923621534 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.275220969 seconds)
    (94/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.230548953 seconds)
    (95/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.895708745 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.94867648 seconds)
    (97/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.883122129 seconds)
    (98/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 3.388518716 seconds)
    (99/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.300241236 seconds)
    (100/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.994600002 seconds)
    (101/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.090015307 seconds)
    (102/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.984516753 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.908702659 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.124685775 seconds)
    (105/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.891925936 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.155179054 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.940115308 seconds)
    (108/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.392900126 seconds)
    (109/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.859929015 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.987423454 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.809285683 seconds)
    (112/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.90088753 seconds)
    (113/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.02550723 seconds)
    (114/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.893738824 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.536570762 seconds)
    (116/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.929787181 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.219401399 seconds)
    (118/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.982194866 seconds)
    (119/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.878379806 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 4.601772057 seconds)
    (121/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.26060661 seconds)
    (122/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.89624849 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 2.34695981 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.916566021 seconds)
    (125/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.237068459 seconds)
    (126/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.118138356 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.531221275 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.148380515 seconds)
    (129/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.894510895 seconds)
    (130/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.477746422 seconds)
    (131/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.241789152 seconds)
    (132/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.882511145 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 8.343284442 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.137202133 seconds)
    (135/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.00056088 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.152893196 seconds)
    (137/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.068184004 seconds)
    (138/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.969343592 seconds)
    (139/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.580989268 seconds)
    (140/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.902411095 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.220132897 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.137398668 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.005502137 seconds)
    (144/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.203906369 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.128943299 seconds)
    (146/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.923832467 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.967029696 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.807552034 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.236379691 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.70090806 seconds)
    (151/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.90346387 seconds)
    (152/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.223765798 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.136297143 seconds)
    (154/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.883435277 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 3.291301984 seconds)
    (156/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.089051455 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.023207665 seconds)
    (158/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.06490692 seconds)
    (159/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.227080867 seconds)
    (160/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.032850786 seconds)
    (161/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.921576671 seconds)
    (162/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.258043708 seconds)
    (163/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.031848797 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.168506401 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.653909207 seconds)
    (166/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.327270788 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.919149161 seconds)
    (168/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.203793429 seconds)
    (169/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.470694687 seconds)
    (170/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.006047067 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.587850868 seconds)
    (172/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.141896317 seconds)
    (173/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.884410968 seconds)
    (174/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.487985387 seconds)
    (175/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.044577144 seconds)
    (176/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.111426839 seconds)
    (177/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.410555898 seconds)
    (178/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.915639997 seconds)
    (179/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.882603467 seconds)
    (180/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.983623632 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.957841988 seconds)
    (182/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.456974844 seconds)
    (183/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.88301146 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.906892329 seconds)
    (185/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.912553504 seconds)
    (186/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.927142093 seconds)
    (187/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.941590509 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.285409975 seconds)
    (189/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.9192905 seconds)
    (190/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.852765709 seconds)
    (191/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.915670385 seconds)
    (192/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.594898849 seconds)
    (193/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.935534642 seconds)
    (194/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.898556346 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.987359402 seconds)
    (196/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.512731613 seconds)
    (197/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.897950084 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.284776766 seconds)
    (199/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.505350425 seconds)
    (200/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.15534983 seconds)
    (201/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.026819902 seconds)
    (202/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.203729951 seconds)
    (203/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.130180114 seconds)
    (204/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.93549019 seconds)
    (205/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.229211264 seconds)
    (206/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.417750548 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.969527286 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.584001353 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.989695115 seconds)
    (210/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.833126838 seconds)
    (211/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.088050132 seconds)
    (212/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.900942907 seconds)
    (213/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.975647727 seconds)
    (214/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.935316365 seconds)
    (215/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.00453584 seconds)
    (216/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.470621467 seconds)
    (217/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.379671056 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.908306395 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.115978729 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.696929296 seconds)
    (221/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.139534366 seconds)
    (222/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.247479411 seconds)
    (223/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.548767753 seconds)
    (224/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.00920703 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.257476284 seconds)
    (226/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.888124578 seconds)
    (227/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.951554492 seconds)
    (228/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.03601979 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.286397348 seconds)
    (230/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.384733975 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.916650077 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.938538311 seconds)
    (233/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.367379196 seconds)
    (234/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.92814708 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.004436618 seconds)
    (236/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.891769361 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.038255393 seconds)
    (238/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.384079056 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.001146703 seconds)
    (240/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.900361002 seconds)
    (241/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.219449152 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.854274393 seconds)
    (243/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.908678789 seconds)
    (244/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.989644496 seconds)
    (245/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.964598869 seconds)
    (246/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.52921688 seconds)
    (247/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.927626255 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.95064403 seconds)
    (249/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.236429068 seconds)
    (250/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.019188956 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.126693697 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.924809644 seconds)
    (253/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.066539218 seconds)
    (254/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.054703136 seconds)
    (255/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.983280239 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.900378277 seconds)
    (257/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.472118745 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.977404155 seconds)
    (259/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.995125106 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.001035015 seconds)
    (261/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.890829246 seconds)
    (262/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.062285048 seconds)
    (263/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.235391031 seconds)
    (264/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.273183938 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.929141452 seconds)
    (266/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.383619458 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.374444284 seconds)
    (268/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.123529773 seconds)
    (269/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.029543136 seconds)
    (270/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.020424687 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.277671718 seconds)
    (272/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.987662083 seconds)
    (273/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.988730393 seconds)
    (274/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.002495622 seconds)
    (275/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.125147227 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.819178653 seconds)
    (277/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.842928845 seconds)
    (278/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.918946914 seconds)
    (279/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.952254826 seconds)
    (280/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.733255507 seconds)
    (281/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.043266263 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.989375423 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.540451249 seconds)
    (284/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.267563447 seconds)
    (285/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.122714026 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.996083007 seconds)
    (287/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.072103743 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.054389827 seconds)
    (289/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.072930898 seconds)
    (290/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.908228235 seconds)
    (291/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.067636121 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.728082406 seconds)
    (293/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.985511552 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.6007059 seconds)
    (295/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.423883269 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.937969578 seconds)
    (297/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.88871457 seconds)
    (298/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.133832348 seconds)
    (299/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.118482119 seconds)
    (300/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.940033707 seconds)
    (301/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.060071271 seconds)
    (302/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.037332456 seconds)
    (303/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.310148568 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.925244513 seconds)
    (305/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.833406157 seconds)
    (306/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.485418374 seconds)
    (307/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.9279519 seconds)
    (308/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.98248394 seconds)
    (309/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.022960561 seconds)
  done (took 1027.086269091 seconds)
done (took 1029.187242359 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.936327098 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.931689427 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.914196044 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.936074849 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.027109226 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.945917411 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.924352697 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.917091639 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.963171589 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.964823828 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.914893043 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.945424967 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.917840865 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.916254183 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.916656555 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.930244122 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.228989412 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.945133252 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.932696894 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.926349117 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.933211865 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.916686027 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.967020695 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.947641836 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.921037698 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.9173844 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.919909969 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.935468396 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.029047683 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.921683523 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.917507844 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.927952386 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.228462998 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.94222303 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.912157619 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.936675918 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.928207938 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.924943947 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.921094774 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.949732857 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.3764596 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.923370527 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.918881387 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.9169307 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.919463331 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.921822537 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.919199942 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.924377919 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.931349495 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.931856619 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.368130146 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.939065406 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.921086343 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.91859348 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.927766919 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.918591309 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.92328068 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.935104091 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.938003395 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.936247615 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.2232599 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.951144585 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.919473018 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.936094245 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.92702133 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.411787654 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.921142433 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.922669851 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.37618281 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.930676803 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.4148024 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.939027053 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.920763412 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.933818999 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.952737201 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.230696731 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.940886696 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.918500393 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.926686333 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.919122563 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.927610557 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.931849083 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.92434883 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.919640148 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.933983637 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.951343373 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.928950231 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.92161198 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.928036619 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.939448515 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.92720938 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.932523289 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.922666023 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.915318011 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.930301839 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.927169815 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.923891925 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.923666246 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.924745082 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.930141391 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.375798369 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.944138651 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.917777455 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.919192158 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.919371064 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.93621965 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.378073701 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.929246091 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.94162717 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.967024086 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.923783608 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.225269753 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.95290024 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.936991082 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.929417728 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.925407987 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.917158694 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.225155429 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.402147066 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.943106861 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.923901346 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.920381611 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.938139421 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.924392231 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.916730485 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.235276927 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.950297789 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.936489721 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.044264865 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.931119259 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.955958063 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.921808257 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.92577712 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.955527914 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.938684685 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.955853897 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.927446823 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.938045931 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.939508561 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.918471133 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.934253393 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.932056295 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.922580364 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.928979592 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.917568825 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.954166878 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.935209218 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.935951519 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.943307953 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.043493925 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.921685702 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.227876761 seconds)
done (took 301.774503274 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.993483758 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.911093033 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.023670385 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.920327024 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.005701695 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.006623394 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.916959694 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.916429017 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.918104991 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.334203266 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.917369027 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.917293608 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.913437318 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.916893774 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.005859793 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.920027012 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.917808312 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.256654691 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.921659687 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.999035472 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.915158631 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.918151886 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.919740956 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.29408479 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.912495699 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.91866335 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.994023999 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.920569976 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.299865801 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.921661913 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.917198695 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.262305247 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.012481747 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.940344064 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.931240006 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.927940326 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.004779701 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.92603628 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.002376159 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.004025237 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.025579866 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.962613639 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.918001955 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.915165737 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.925621209 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.923270829 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.919601797 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.949936005 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.914296256 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.9210701 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.277294476 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.932556935 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.920905427 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.919326081 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.919798729 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.954260701 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.920867784 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.924631676 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.016956474 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.924181703 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.985208485 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.342044945 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.296881494 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.923527785 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.915783076 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.920426622 seconds)
  done (took 187.894262545 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.988767534 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.997474484 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.991067972 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.927312274 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.971893694 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.992235699 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.928147881 seconds)
  done (took 15.646816583 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.929979257 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.923382705 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.973621909 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.972894449 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.923469824 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.072624714 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.92315448 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.935050608 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.920350843 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.976372795 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.92593322 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.923814727 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.929773442 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.915705759 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.983177376 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.945251491 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.04807797 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.926977651 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.925511588 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.074856797 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.931011433 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.922574031 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.979764488 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.936587026 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.925121013 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.931063211 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.511167261 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.925510465 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.921962409 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.924342535 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.922222405 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.965989887 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.924178138 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.923364844 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.92234868 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.041083426 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.925485007 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.922189292 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.92434151 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.926014068 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.924489605 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.92487195 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.925573838 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.922024106 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.924353824 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.949545978 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.925433035 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.926256353 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.926635974 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.925618722 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.976081171 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.925847091 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.923201615 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.923735836 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.980219674 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.933825537 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.926212419 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.922994294 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.925880772 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.92333998 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.077417757 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.97418783 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.92598241 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.974785279 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.926960602 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.925782459 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.926042315 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.926042469 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.021019085 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.926527904 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.974571851 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.924714107 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.085412715 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.950637498 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.926738585 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.930578814 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.929537044 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.927756909 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.922396096 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.933445021 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.923782386 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.928596134 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.933215425 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.924419959 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.923737176 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.038757659 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.035429255 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.925529049 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.939715108 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.93597936 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.925129714 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.980902748 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.927690784 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.925486602 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.982044026 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.043821037 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.982542325 seconds)
  done (took 211.333929559 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.933014105 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.938642697 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.929327608 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.943696686 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.928483364 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.927343542 seconds)
  done (took 13.456679017 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.930039016 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.928986147 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.928364613 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.928697048 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.929369083 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.929899177 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.929957553 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.931717633 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.933278661 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.928686648 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.930323205 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.92967692 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.931647267 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.930258253 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.931081819 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.930128743 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.930483437 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.926311791 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.928616587 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.929413064 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.089185913 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.929921181 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.93071601 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.93232795 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.934118179 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.929343124 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.93732 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.930174845 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.929586333 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.938016091 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.933999871 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.930676946 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.93136758 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.936314706 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.934757097 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.931009949 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.933958487 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.930848378 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.928373676 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.931797558 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.930348574 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.931000986 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.930673107 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.931921917 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.933057083 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.936790383 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.935069551 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.938332033 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.932209037 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.93134358 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.930747747 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.930285076 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.932949993 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.931740901 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.932496496 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.936315771 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.936344699 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.932545025 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.931138179 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.932717816 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.932201464 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.932628518 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.933244818 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.937423004 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.940436553 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.933179414 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.934201886 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.937583399 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.932857776 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.931692538 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.93303918 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.929305972 seconds)
  done (took 142.124891621 seconds)
done (took 572.319511128 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.035560721 seconds)
  done (took 8.894747809 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.089091862 seconds)
  done (took 9.044811595 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.606805538 seconds)
  done (took 10.466581216 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.937836087 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.958112949 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.924081015 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.93235352 seconds)
  done (took 29.623469628 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.966264589 seconds)
  done (took 8.826902353 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.938109158 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.925364362 seconds)
  done (took 15.754973252 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.996641357 seconds)
  done (took 8.858998442 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.040487436 seconds)
  done (took 8.903795111 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.95106301 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.962709448 seconds)
  done (took 15.786762201 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.912043872 seconds)
  done (took 8.772051685 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.720273852 seconds)
  done (took 11.584115982 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.931058666 seconds)
  done (took 8.805209011 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.951119932 seconds)
  done (took 8.811945855 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.165226078 seconds)
  done (took 10.02492816 seconds)
done (took 166.018469769 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.930058413 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.927131454 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.925108352 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.926137613 seconds)
  done (took 29.568685768 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.966693552 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.965922495 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.968218045 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.977684092 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.970213971 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.966489652 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.960065426 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.959116601 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.97879167 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.971846874 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.96860982 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.969238771 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.966623262 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.959723692 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.969147827 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.9692914 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.977373416 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.969079 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.960091365 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.971177668 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.935514357 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.977844244 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.97127538 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.934854465 seconds)
  done (took 49.046302352 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.1339332 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.006289686 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.087856599 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.987357216 seconds)
  done (took 10.076869875 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.986222641 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.988583881 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.999070451 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.038621583 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.061130097 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.997259414 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.96214376 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.957349097 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.943113377 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.988157582 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.06308286 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.984044323 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.094114246 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.935954024 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.120836424 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.935327918 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.935675136 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.988718372 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.03914822 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.053833814 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.936462999 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.987683213 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.991951122 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.985306685 seconds)
  done (took 49.836003342 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.933646764 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.94279428 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.940429234 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.934897779 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.935644934 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.935116373 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.942151333 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.935591612 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.956593974 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.936447645 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.934225868 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.935742775 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.934966106 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.935549763 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.934274254 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.947173661 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.948362324 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.935156156 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.938460035 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.943235439 seconds)
  done (took 40.644641219 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.93068418 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.783805533 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.28140779 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.186493427 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.928207973 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.928719003 seconds)
  done (took 31.904245317 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.950265051 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.942131236 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.937523734 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.995223092 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.079723486 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.947592972 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.93813766 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.948233367 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.983794561 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.006281874 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.957006367 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.96565956 seconds)
  done (took 25.517448261 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.932255958 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.934671011 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.932844171 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.9491421 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.947491151 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.946111078 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.944631735 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.929806936 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.951288976 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.958183359 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.944692742 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.948685355 seconds)
  done (took 45.189403745 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021595306 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.823478302 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.951994191 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.648079026 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.405302341 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.144027481 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.446189242 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.287452758 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.936443699 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.206009335 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.026516736 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040264988 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.18661001 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932259402 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.950539298 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.407154131 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.232177507 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.162165904 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.959011022 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.713874478 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982754947 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.526287677 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.845373277 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.991158803 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.145364431 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.061496309 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.194366264 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.890709339 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065248233 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.97549759 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944374524 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.932907752 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.207640526 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.304095234 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038869697 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944545428 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.587868161 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.653921044 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.920665829 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.740294667 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.759337005 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.064563159 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942854244 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.935110097 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.868901223 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.478399357 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314147568 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.939350982 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.64637155 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.935289142 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.945342839 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023400148 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.939037764 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.752834448 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.889767432 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.214543243 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.931458327 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941886139 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.502899627 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.063273272 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.514248931 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.917898212 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.129796825 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.731793735 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.325077271 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.082650796 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.938951551 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.939164749 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.870260231 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.714846947 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.988967136 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.081650339 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.955490053 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.584945009 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240227739 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.088753553 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.880541586 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.669121499 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.770990366 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.916659397 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165104242 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.887029923 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.870739661 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.796416472 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.871224167 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.190639155 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971880973 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.556339594 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974803632 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.270083264 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.947718149 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954196834 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943989062 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.160936547 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.503187822 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.938295364 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.821130097 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.082858691 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960302294 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.274473012 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.871765942 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.941398695 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.193450133 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.149296741 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.228819755 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.449273745 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096032924 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.937408533 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.01891889 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.905898763 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.993032866 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.214935866 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99827865 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.076040469 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000173556 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.896029843 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.227801497 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.966181016 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.105166499 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.065100492 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.067597555 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.254438655 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.231569495 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004109427 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.947014073 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.939342892 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.845712852 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.497108586 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.20775319 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.940767257 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.498690951 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.992026161 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.939892248 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.874670932 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.543490845 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.050178632 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.911089903 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.16551941 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.939908931 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.257324532 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.877487635 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.085593106 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.057888359 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.16258872 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.581503175 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.01726705 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.201518955 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.489519013 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.258856513 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994431912 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96087966 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059486536 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96346819 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.415677686 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.236058704 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.944371923 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.945004035 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.805017458 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.946600821 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.945546922 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.947669538 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.741031028 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.218436934 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.965695317 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.95148945 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.832277444 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.955293518 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009254016 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.947225059 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.951642092 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.488180723 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.693990534 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.952718259 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.572166244 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167059434 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951685074 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.736480451 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.05921831 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.024591657 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.213705278 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.001161276 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.877744524 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.654092355 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.635218427 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.943543435 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.878336142 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.94268615 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952797305 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.955027865 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.323464576 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.225410354 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.985592374 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.73691251 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.989712901 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954626071 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.948841254 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.942484709 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.485535579 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.082179639 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.528585373 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.995909894 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080737666 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.95738948 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.877643392 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.94712434 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.948028558 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.943721919 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.900124379 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996859078 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.741150142 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321952952 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.201196824 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.593235246 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.960984422 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.758452187 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.006051516 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.96591771 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.837889947 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.943340588 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.998269496 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956615999 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.955127296 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.768421095 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.656667431 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.508338358 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257847438 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.244174072 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377212974 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.484754695 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.253711538 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.280665154 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.180516041 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.474849639 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.006702019 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.285612761 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.889328535 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029276883 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.587597987 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.299414491 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.960079836 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.174327059 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326725855 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.766819626 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.130496258 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.157538459 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980957734 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.917924747 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.911198642 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.153686863 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088793443 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.737624027 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.15545717 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275189347 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.695965761 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.074013532 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.945128831 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.618363614 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029336524 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.660443575 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.307811108 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.534759343 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.949794212 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424799816 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.956705561 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.40028791 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.296125131 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.321797238 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.072336783 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.884450344 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.959071541 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.958709092 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.947764893 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.94388709 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.828302142 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.199893623 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95909971 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183815835 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.271543096 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.259251335 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.852888523 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.95420776 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.94861243 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.234537642 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.794235241 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116448125 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.443447766 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.477003327 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.95332851 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.882680425 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.883843951 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.641352788 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.949482405 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.923729407 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.16352774 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.131699699 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.903937395 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.513220919 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.196183586 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.20364783 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.963448745 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.218321126 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.222733182 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.685797018 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977588552 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.048760689 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.699531357 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.064780628 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.217969125 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.185697896 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.749665359 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.181044075 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.971380572 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.762465156 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.948903185 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.164783325 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.218547398 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.936308996 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186197727 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.672037074 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.028233613 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.280466366 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006859233 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.917181435 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.108730588 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.143762002 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960408385 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034894641 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961113637 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.960937551 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.962299646 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999027366 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.91981821 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.081213265 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.964318196 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039760851 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.090604078 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.484520631 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.957230186 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224983707 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314219063 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.276709772 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.008053339 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.951386818 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.95802345 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.886018842 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088124088 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.399565171 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.225259457 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.081915242 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.252693101 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97712887 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.706703327 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384325998 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.197754869 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.227023453 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.848080582 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.951942294 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.976345516 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.219829702 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962847227 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.163373617 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.171532812 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.255063175 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.421966262 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.253352427 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.31959455 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.226864499 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.320988647 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.951403241 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.542659304 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.043344288 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.625338175 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.990611989 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.939598218 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.227822486 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.964243406 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.33085625 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.97544344 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.154901947 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.470117895 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.753183868 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.245799312 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.93000209 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.011508067 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.226755854 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.331978243 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2637803 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02548726 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.964617728 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.657947229 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091984352 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.849561556 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.225241604 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.954777932 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165386224 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.664219452 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.963040421 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233705651 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260495599 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.952636364 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.858026888 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962837421 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.965202012 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.178661148 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.212803005 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.203188949 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964435379 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.95671039 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.771273741 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.236006186 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.012845458 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.890084249 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.959553526 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050497172 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.202298095 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977311807 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.47248211 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.666700953 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.249932181 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.869480527 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97770521 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.547760085 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.333295851 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283314066 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.496721449 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.175177054 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.510478613 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.956794206 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.260063902 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.960920858 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.502096674 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.267287855 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.960166402 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.616112978 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999783428 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.22448846 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.274905795 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.006491534 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.74920367 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.926894591 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180461766 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.552531959 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.903635493 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.963786623 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.0196604 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.960583255 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.087912495 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.968939248 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.857818177 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.947108364 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.708493949 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.451110089 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.962401022 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.944460168 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.73317399 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.642378175 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995674659 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100832235 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.962302595 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.669160351 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.250584469 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.21243847 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.635659769 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.968586375 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.962351635 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.959425109 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.887790772 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.157332744 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.338890542 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.243678847 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.4595847 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.998003199 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.962439818 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.174835886 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170530479 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.900773039 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099848909 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.493331504 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.00061474 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.695106138 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.638662928 seconds)
  done (took 1725.503364277 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.980133477 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.003432871 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.006714483 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.995261929 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.022248382 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.020042039 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.038333969 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.001391438 seconds)
  done (took 57.961121891 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.962154535 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.16469736 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.969339804 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.960535622 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.968548609 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.957657343 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.133051762 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.970768416 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.986206001 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.968914895 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.958750863 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.969056068 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.316148883 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.983231107 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.962358883 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.988011962 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.976526309 seconds)
  done (took 76.119271527 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.962164347 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.180055374 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.994657414 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.976351949 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.906172046 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.977270991 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.04562624 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.975104402 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.962551563 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.185669912 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.602122966 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.98325503 seconds)
  done (took 91.644848108 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.970431161 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.967485955 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.966771553 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.966764599 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.966772338 seconds)
  done (took 11.737122016 seconds)
done (took 2246.636658542 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.210099649 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.188561383 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.20396743 seconds)
  done (took 6.286639374 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.109165166 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.15491275 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.276792761 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.280352322 seconds)
  done (took 10.718198271 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.257383089 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.329401139 seconds)
  done (took 6.479653284 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.366781914 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.967777008 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.358868803 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.960480488 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.9621418 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.961563392 seconds)
  done (took 22.781992888 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.96357138 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.967235941 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.963348744 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.966641713 seconds)
  done (took 9.754654977 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.944333911 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.693735695 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.943579263 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.962058376 seconds)
  done (took 21.438472615 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.711804613 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.360927866 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.708388919 seconds)
  done (took 9.674134858 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.519621204 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.860073422 seconds)
  done (took 9.272859205 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.239738072 seconds)
  done (took 4.133703709 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.990910348 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.233430611 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.492009731 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.478786738 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.58895283 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.832804143 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.293126327 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.213199937 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.370367278 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.406127256 seconds)
  done (took 25.793245246 seconds)
done (took 142.130545242 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.342050421 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.201524896 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.162462029 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.307675047 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.182921652 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.161494536 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.171939063 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.295744663 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.808654087 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.805247463 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.310654457 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.183441811 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.120213196 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.200249903 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.124804884 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.19984909 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.180984037 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.358080852 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.006005959 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.202790901 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.182020542 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.936921027 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.153967683 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.97129386 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.182327827 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.113399926 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.528629775 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.20159909 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.159776402 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.539796353 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.114731308 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.357710952 seconds)
  done (took 175.664137904 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.958800289 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.962465313 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.967677483 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.964447517 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.372044647 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.974116569 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.963551414 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.965163693 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.268863852 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.258214289 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.986275016 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.345660982 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.969032351 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.963424554 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.974894505 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.963881861 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.415623057 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.979390305 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.983442913 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.987045995 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.990515181 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.247501493 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.98810513 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.292691419 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.423639627 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.987025203 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.964474732 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.990886263 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.969662584 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.972741904 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.974616421 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.963999634 seconds)
  done (took 211.887923168 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.963955125 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.96371499 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.964829512 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.964896287 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.964871521 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.962937817 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.966790101 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.964923156 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.583336414 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.576314864 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.963746831 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.965746313 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.9697322 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.965363262 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.967921121 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.965536405 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.96831159 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.968921579 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.970706961 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.972210052 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.978514349 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.741068726 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.975300835 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.747226249 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.972136381 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.971848991 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.966162837 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.973037947 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.974092193 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.975801483 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.974958356 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.966591088 seconds)
  done (took 223.680263993 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.167761496 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.973043061 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.973918023 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.915093885 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.974469148 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.974063807 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.914195795 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.173741784 seconds)
  done (took 19.979016802 seconds)
done (took 633.119534838 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.446794237 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.291444239 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.144410133 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.996262112 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.244293716 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.029883311 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.992310147 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.055307994 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.728603789 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.062243595 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.682649086 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.011777727 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.772877304 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.017129627 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.118727163 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.048853974 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.594170105 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.690230329 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.177120985 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.067770674 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.166668651 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.933304359 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.070501545 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.759456269 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.794030681 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.972603981 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.16965745 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.597592755 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.006125202 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.162040703 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.762644888 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.387939642 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.005904475 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.991721181 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.049278431 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.028687332 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.340260514 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.004980316 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.114368506 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.735293875 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.066626614 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.621425545 seconds)
  done (took 107.81934238 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.963523695 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.962125031 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.961465893 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.962759247 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.964348241 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.962617267 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.961833716 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.96183031 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.963352683 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.962007409 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.962894235 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.963472226 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.962647692 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.964049109 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.963455551 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.962257973 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.963136363 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.966104342 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.962452841 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.961798417 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.963810122 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.963637621 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.97698748 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.962550497 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.964709644 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.963392945 seconds)
  done (took 52.96404788 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.976864006 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.137600269 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.226453788 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.994729289 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.975868601 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.980083735 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.995143387 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.981181667 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.979966614 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.979969777 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.070399298 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.983706634 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.996566286 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.225403354 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.992965133 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.97856516 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.977423009 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.979120956 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.145105487 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.9936141 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.996845585 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.981907563 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.997183886 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.992011461 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.980334297 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.978908391 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.982980875 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.430970671 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.986832861 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.071872608 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.02260381 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.002190837 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.41333933 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.237428829 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.031499324 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.987328686 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.978871338 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.074669956 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.984600424 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.979767228 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.996204813 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.983831607 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.225371709 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.462783317 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.993185037 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.979928477 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.44305941 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.082901172 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.019271237 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.992054618 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.229823114 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.995884145 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.98040295 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.980272442 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.017019303 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.991755783 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.97926071 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.323290839 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.990721328 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.998905851 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.985323106 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.981032464 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.15606655 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.987922472 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.139416625 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.988522094 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.986788775 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.981184011 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.228483122 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.996393799 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.473480909 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.993881043 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.98145762 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.074243273 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.145264864 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.468707135 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.993961639 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.157382988 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.420026399 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.004938653 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.987383363 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.423824505 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.008993225 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.989102467 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.983157814 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.984490636 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.98180804 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.02672141 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.999792964 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.40477622 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.481676849 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.342231237 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.010813111 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.999526211 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.983828844 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.325265214 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.98981075 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.982314191 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.223113262 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.484142136 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.995517339 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.989436377 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.459957751 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.996970706 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.001479086 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.990953044 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.236381973 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.997566809 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.026656493 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.982372071 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.988173997 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.986181498 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.001929561 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.989942435 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.982061424 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.453906368 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.098820429 seconds)
  done (took 245.190883212 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.984858829 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.980268583 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.976036798 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.977519957 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.977307282 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.982388565 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.976580351 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.977127082 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.982256404 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.975629716 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.977701036 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.979252907 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.97757778 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.984790636 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.012247662 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.985201757 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.633528997 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.976805266 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.976419279 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.97838865 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.627598271 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.9838889 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.977493628 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.981495547 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.976659883 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.980617101 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.987745402 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.006649071 seconds)
  done (took 170.714491799 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.984659669 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.099512492 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.999946298 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.01188897 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.99194599 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.983332532 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.007884881 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.99926408 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.990097661 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.981949601 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.983140064 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.046213119 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.996513926 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.08431839 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.014070117 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.014251936 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.088237209 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.990741142 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.982167447 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.983281194 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.014459428 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.979783854 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.04469154 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.112859806 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.000562705 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.099839912 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.987366989 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.985714975 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.985161587 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.101501445 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.997235453 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.043997813 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.01625932 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.003644864 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.10516266 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.100756256 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.090400161 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.013670261 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.990938735 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.983414875 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.9831139 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.972799155 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.104711935 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.001023293 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.985673087 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.092509495 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.000876231 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.986982447 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.995354523 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.984415349 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.999807191 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.003426788 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.051062217 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.118399633 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.017201396 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.011162326 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.009736344 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.262525352 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.993675163 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.086093498 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.977633749 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.104348845 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.004274329 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.974417969 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.98776206 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.991447427 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.015199867 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.017346744 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.092125557 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.992502858 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.087340835 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.021361188 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.9926145 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.986221564 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.98882785 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.105271366 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.103671616 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.021609974 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.024027019 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.019249039 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.982636804 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.986918274 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.975989697 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.004790374 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.99035273 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.101876587 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.101140257 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.994808504 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.988788516 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.989570944 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.98877578 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.013180115 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.112618267 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.020450314 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.085853313 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.054253369 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.060113718 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.999910031 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.000170149 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.990205735 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.050030645 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.999974623 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.999443022 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.310609932 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.057496592 seconds)
  done (took 214.833476427 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.445467407 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.0384776 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.044869869 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.316958704 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.420585113 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.847803783 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.031463529 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.038415859 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.061161122 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.230937482 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.108868488 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.065272175 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.02428407 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.010415648 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.03832223 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.059867817 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.067431692 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.362495286 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.159201264 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.124948806 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.016021387 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.35325942 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.360196867 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.485904946 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.07291742 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.373139382 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.711890255 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.284948741 seconds)
  done (took 65.077002527 seconds)
done (took 858.501283635 seconds)
SAVING RESULT...
DONE!
