cset: moving following pidspec: 18351
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.291556606 seconds)
loading group "string"... done (took 0.581115141 seconds)
loading group "linalg"... done (took 7.122381325 seconds)
loading group "parallel"... done (took 0.16906269 seconds)
loading group "find"... done (took 1.132884648 seconds)
loading group "tuple"... done (took 1.998836394 seconds)
loading group "dates"... done (took 1.284000048 seconds)
loading group "micro"... done (took 0.233591074 seconds)
loading group "io"... done (took 0.962433506 seconds)
loading group "scalar"... done (took 38.679693244 seconds)
loading group "sparse"... done (took 12.267551896 seconds)
loading group "broadcast"... done (took 0.963963154 seconds)
loading group "union"... done (took 13.083207472 seconds)
loading group "simd"... done (took 4.424760456 seconds)
loading group "random"... done (took 8.923880548 seconds)
loading group "problem"... done (took 1.940466518 seconds)
loading group "array"... done (took 21.078800286 seconds)
loading group "misc"... done (took 1.914985974 seconds)
loading group "sort"... done (took 3.196178188 seconds)
loading group "collection"... done (took 17.864775085 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.534251305 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142581307 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118041437 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.138789526 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.185126276 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.132466377 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.145480273 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085941465 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.033878376 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.163242349 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140021856 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.476049708 seconds)
done (took 5.053939739 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.201908963 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086968016 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096815107 seconds)
  done (took 0.884000382 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067359374 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128085849 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081476959 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06870905 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067825883 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082070459 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067942084 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06704294 seconds)
  done (took 1.270685734 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075295734 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069527583 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.08586881 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068569388 seconds)
  done (took 1.007835494 seconds)
done (took 4.149326149 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.895360843 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.237967399 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189293197 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.452177038 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.148161057 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.188781911 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.668199822 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.321773044 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.210086036 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100906097 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.105422535 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.378248115 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108037632 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.665634274 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076093579 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106455731 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.160087133 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.425228853 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082691144 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083834334 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104954466 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142189007 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.100914987 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078020856 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.168547889 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070108575 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.147186337 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096069081 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068927577 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.244714213 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190506718 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.685920064 seconds)
  done (took 10.446678391 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100841467 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.118114488 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070012867 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.14087412 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101461202 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086780017 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072604215 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083794703 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092241985 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.160074442 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114938864 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.106392979 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.083075368 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071340797 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.102036955 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.212341691 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107935643 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086566763 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087643135 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.0766079 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122726349 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.08383557 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094922748 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07998501 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.15330313 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195691968 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111967237 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112504821 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069866278 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08239286 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132534384 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142099495 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066842637 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083287196 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.141298868 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111262498 seconds)
  done (took 4.581467035 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.023370219 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.114824748 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.15988495 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.109319058 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.153077782 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068839555 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.127399429 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.081275717 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086419081 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.245694218 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.137672049 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.130788007 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.474366131 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128565199 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.066838599 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.085200205 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086255165 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069474849 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083562773 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.514951487 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.111027445 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.136897929 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08481174 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.092365566 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070825854 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.382487312 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083169117 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068365904 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069248069 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.077371014 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144737008 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069544877 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.30416677 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.08860271 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.090134574 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085417331 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103043808 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109779531 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124333417 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067441457 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066884853 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.167725451 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091274377 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067021751 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.105519712 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11840751 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.105439812 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084286663 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068861147 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.181085473 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068111263 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.10044364 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.873828843 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.16654949 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078072471 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066683211 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.289877735 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084548274 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086069438 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065302957 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.253718726 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.1537088 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.0658264 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084593871 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068505896 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066172613 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.085548679 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.337483385 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068709742 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.725758911 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072306927 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079548563 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086147345 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068950493 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089005147 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073555556 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101658885 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067807117 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068677213 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.08382234 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067221409 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084539329 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086940035 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.204367816 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.08401312 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068824462 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065638891 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103655297 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111801527 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070959254 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066168176 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117779984 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069827092 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084188714 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.102748123 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085099883 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.100966445 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070675669 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129324808 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067700694 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.134944514 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.07393186 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.113669353 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073298161 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115597153 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.094286754 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069639009 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.15296829 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065326309 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082671912 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067948283 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065358019 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084564636 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068911431 seconds)
    (114/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.080782168 seconds)
  done (took 20.98193439 seconds)
done (took 37.741774573 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.290451079 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.091762053 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.091521434 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075838991 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.092337767 seconds)
  done (took 1.426558526 seconds)
done (took 2.184723065 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120326531 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117381032 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064774261 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112943197 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06456209 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.117511755 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114116876 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081855894 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11623803 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.068171523 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112322726 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064740683 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065183861 seconds)
  done (took 2.005254996 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084614607 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085865336 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085977978 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082962671 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079303812 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083704192 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081396973 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105289756 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080946638 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088939478 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065342769 seconds)
  done (took 1.67823616 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082913681 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085706743 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085703885 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082078737 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07951607 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083281538 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081268356 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103250087 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080896597 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089584985 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06489791 seconds)
  done (took 1.675012665 seconds)
done (took 6.107792742 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078981574 seconds)
  done (took 0.828581736 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.693168748 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.48675202 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083947163 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.135068456 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.221778768 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.153123085 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.43568987 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.110697614 seconds)
  done (took 10.243611034 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104399559 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.089051625 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073513228 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.086188676 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072205547 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.087155097 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072799442 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072660844 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.086118218 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070866167 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085237959 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071710524 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.08793349 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069390365 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070694502 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084317295 seconds)
  done (took 2.102864843 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094978364 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092379658 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.091335252 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076251124 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090313792 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073184916 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.093461487 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075216885 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088380218 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074020397 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09288136 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07513004 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.08948985 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066923458 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091849953 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076779514 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088510047 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076646237 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092259098 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077333284 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092379146 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066320852 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088727801 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076783518 seconds)
  done (took 2.864051609 seconds)
done (took 16.796483559 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.130746711 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076315652 seconds)
  done (took 0.965452855 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082314041 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098309423 seconds)
  done (took 0.947309267 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083848983 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081966465 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090715495 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094622409 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067787039 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.082381174 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103378106 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067251758 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082319925 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067442539 seconds)
  done (took 1.588307015 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069956186 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094610733 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071575179 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097859349 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075349519 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081219214 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074560797 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085070598 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079391255 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080130134 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07260447 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099210436 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072936436 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100984471 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074165665 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084623615 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087838211 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069169323 seconds)
  done (took 2.239054614 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066567526 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068102042 seconds)
  done (took 0.903309927 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067971859 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065427116 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082259085 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068240053 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079798791 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064770197 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080046505 seconds)
  done (took 1.276742678 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.399325908 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109196216 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.242318361 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.088294806 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.103818156 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.263498895 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.083657375 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072520887 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089085189 seconds)
  done (took 2.257558171 seconds)
done (took 10.943086961 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080826113 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088450325 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110654894 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.415988237 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106723077 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067207161 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.132899252 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.216431404 seconds)
done (took 1.987783796 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.125947727 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.613475724 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.400812365 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212539909 seconds)
  done (took 1.996176852 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.378005286 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09307165 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074408329 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067569591 seconds)
  done (took 1.390068862 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066970002 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070577718 seconds)
  done (took 0.915630654 seconds)
done (took 5.197079121 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067582757 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.101755736 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064403801 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068028523 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.083792083 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067016655 seconds)
    (7/24) benchmarking ("one", "Float64")...
    done (took 0.065224619 seconds)
    (8/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.084642513 seconds)
    (9/24) benchmarking ("zero", "Float64")...
    done (took 0.064985714 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065179288 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.082318051 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.070203551 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.083042782 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.067335084 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068421125 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080537897 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064624435 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067449251 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.080847191 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065179602 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065364059 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082542882 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065330223 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065482674 seconds)
  done (took 2.552232078 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085384075 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084213432 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072297992 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088768 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071418073 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088755482 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071954528 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068461941 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088323642 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.07032637 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086560732 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071772158 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.084799774 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072674329 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085941585 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072085288 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.09108839 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067989428 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069898672 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087583847 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073105474 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083980069 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072776298 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08906684 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071577279 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087075316 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070042894 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084204686 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072418824 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087268668 seconds)
  done (took 3.152725478 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072466311 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065066203 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081285456 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072176509 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065464785 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082789262 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064973052 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081314969 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065745446 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065431186 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082364551 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064772848 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066089219 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.081596154 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066754631 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084431256 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081763909 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065933819 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081534542 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065916743 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067830993 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080594364 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065245438 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081394281 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064746473 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064795435 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081523843 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064574173 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066244798 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.081566695 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068281968 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068926115 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.081324343 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072488059 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084536951 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065278846 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069551387 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080505379 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066409745 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065571778 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080263192 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065356579 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06530209 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.087960262 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065632975 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083180549 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065020655 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067285586 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081500897 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068072602 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080703733 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065351959 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067168246 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082370316 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069556973 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064513655 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.081280618 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064878638 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081767673 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064696032 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065198985 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080304666 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067554444 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066532754 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.095970679 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072205512 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080808974 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067012576 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066422918 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083399075 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066979952 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079253173 seconds)
  done (took 6.024957585 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.117099651 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092884951 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082998576 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06740347 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080495069 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065381277 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069792475 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081305938 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066938156 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087151778 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066131279 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067295554 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082435496 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078266485 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081625149 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067036717 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086832511 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064001305 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066176477 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084754402 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065865515 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085223404 seconds)
  done (took 2.494531313 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.183528951 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088364087 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10988002 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090719635 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085947431 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074406194 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071437513 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087232269 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071968962 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086801558 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070051603 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087015771 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069872261 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085229174 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070349462 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08545531 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072133 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085568838 seconds)
  done (took 2.364370328 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078071707 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067978677 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106355391 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067483351 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.0839187 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070161838 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088484601 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077225128 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086030615 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068258341 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092060725 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070681433 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086464875 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067819246 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070219336 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083626655 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070790725 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083730425 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076212318 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088668266 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072574598 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091567403 seconds)
  done (took 2.536062661 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081925635 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069562473 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101227631 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086288411 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063976836 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066621047 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090157576 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068757415 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089692502 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069196215 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068102384 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081683995 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072446714 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083358846 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072926534 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083765543 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070156854 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067661691 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0861888 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063604787 seconds)
  done (took 2.327045803 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087949907 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08505141 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069190605 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093383864 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069028559 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085079378 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076512814 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085016268 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069096874 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109570605 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06945704 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084781831 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077139597 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090241902 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06933719 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093012059 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077613325 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092844764 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069760839 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084651077 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.219114417 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069159493 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093729497 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069275066 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08476997 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069796129 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069453052 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089643274 seconds)
  done (took 3.198567753 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067631756 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068012097 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081729443 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065453378 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065916122 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082196891 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064953015 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065482731 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084761453 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066098147 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067686198 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.083260051 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067929236 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083358499 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068593934 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068634585 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084233149 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065691045 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066211697 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081708133 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067894156 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068195157 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083958858 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066047395 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081458373 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068136946 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066120217 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081244696 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067357145 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065736917 seconds)
  done (took 2.958565663 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077711362 seconds)
    (2/2) benchmarking "in"...
    done (took 0.091888192 seconds)
  done (took 0.966988016 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065807936 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082423756 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081822416 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072008734 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088057709 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.0684346 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092352018 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072281404 seconds)
  done (took 1.417272463 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08301254 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080036907 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086186904 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.07962952 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094583477 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08404918 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.154316531 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086298851 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074805807 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082967815 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081229942 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067340124 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090854755 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068551027 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089971771 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073854566 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065917118 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089390308 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071413558 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083171406 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069490851 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092545309 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07000594 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065309314 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085773016 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.076476323 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095504017 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06933079 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08699389 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075089885 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073038862 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.078411854 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068236707 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.0848682 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066594097 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094387505 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082802397 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087270123 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076876939 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070284369 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094053002 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063876615 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088201862 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074103265 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094115474 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068439507 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068650612 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080146503 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066655233 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086384388 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063731335 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068211637 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079113855 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074984272 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087235634 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078847248 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.070058472 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.086172782 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070790195 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087284471 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074535215 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085818642 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07013892 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068570862 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094111267 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072109563 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092993362 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063349134 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062414033 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082341777 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077517256 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106620583 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073790576 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085165521 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.0689872 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082237765 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071184232 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069344353 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089312989 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074372296 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085386223 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074105894 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091480814 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068339582 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069907907 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090874386 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066966404 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085887295 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06587532 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100577707 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067493899 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066990522 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081929718 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078373405 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087722765 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068564875 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082039481 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074649121 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063550251 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085865622 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069284198 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084457792 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077979402 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090308134 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073628178 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092185766 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076008894 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068000764 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087380299 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065595641 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085316002 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066448143 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074688835 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079203651 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071315221 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084298942 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068300823 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075601317 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.08324809 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068802533 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090936627 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073810214 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082756321 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064893692 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070910131 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084284066 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071583342 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092195374 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067448888 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064454104 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.079377847 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071403626 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084662012 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071095197 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088935243 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070706137 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063751636 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.08298897 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072795087 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093607708 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068542926 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068558005 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.090544806 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069331401 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083712563 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074211645 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086262765 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067129861 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073573442 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08545571 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06416688 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088306618 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070200621 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067335162 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088156534 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072132957 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086781759 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06864155 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066324104 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.090265958 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069255823 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08376159 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068367199 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083296856 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077721547 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069890709 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080215342 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066150116 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091757477 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065843613 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068220277 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083967967 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070902424 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085168736 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066642654 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068003906 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085999166 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078320782 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088815152 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069296385 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089749417 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07883501 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084639269 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070042293 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068487582 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085700615 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069697319 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092856833 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072952676 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089885078 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070534173 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065143994 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090517848 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074841519 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.08368412 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06641731 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067251836 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088600189 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073424142 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087645298 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069355079 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083234858 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068176189 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071589736 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087445015 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068257214 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084061441 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072801243 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067270593 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092743896 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069451117 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094331171 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071771027 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080619843 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071942933 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0833776 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073921618 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064644458 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083166141 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067443452 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069633925 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083817704 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070402513 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079469983 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074763397 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09235506 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067858369 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067190035 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085180873 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074748171 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085702697 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071577366 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071363585 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090121223 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078624999 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084177264 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071840945 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095085314 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068676192 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062861698 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090420478 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067329313 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084530421 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068292168 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066942338 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08712987 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075981792 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091399756 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062906343 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086997077 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067256131 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067536559 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081223254 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072336259 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070338461 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.085317227 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074802093 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08561443 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068560341 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08821387 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067317048 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068255686 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.085680415 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070960278 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085923773 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070483612 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067100878 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08731554 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06714036 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082853106 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.0698608 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068564532 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084698169 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074576815 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085073783 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06871084 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070728859 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.085589742 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069416915 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085099674 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067810394 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070653338 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085286599 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069276477 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.08747553 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064203908 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075588676 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085052738 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076156096 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085136424 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066204633 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.08961193 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071513101 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072841746 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086324965 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069751129 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086243275 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068646978 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070843866 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091105077 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066212839 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095608926 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075862277 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085178778 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070988462 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067699005 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.085979429 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067836851 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085273308 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069122825 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067914268 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084562067 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072756582 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.08753472 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067973264 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069308747 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.085812492 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068215178 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086733942 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063243234 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067056495 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084252689 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068625224 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094061566 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06865527 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084160062 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066942417 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069323338 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084316781 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065241516 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092505625 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077092207 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085645558 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075038299 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066659252 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086488623 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078168667 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.079749969 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067068099 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066304329 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083309952 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075051361 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.08600839 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077767225 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08426608 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066945489 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065702896 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.08622552 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067081779 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062710455 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.082677122 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071880799 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084446655 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067446849 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068642053 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.087621449 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069627842 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094186981 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068054832 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085761225 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068148287 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065280439 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083737263 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066997021 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069862631 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086627002 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066195856 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.08264273 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068198902 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068479786 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086006385 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068392212 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086345171 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075195706 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067753233 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087599745 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071813404 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.083569905 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071031393 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068249444 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085354739 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067495886 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.08879258 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071611683 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086109251 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076570534 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068216485 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085783369 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069262215 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083674258 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068679232 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068096362 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.085251404 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067273949 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.086097051 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076081057 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065878843 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.087278314 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0682859 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085352127 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074549373 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.086311354 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07025295 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074557815 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.08603594 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069875188 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092213056 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072079714 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088160671 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069218611 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069449938 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090695278 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06766105 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092450696 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068390939 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069403301 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.086335596 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066532869 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085291126 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068488279 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068026553 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.091335071 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069439925 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084648612 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067219762 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067039821 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.086453885 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071603545 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092221226 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070751335 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088124435 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063974473 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065876599 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086551681 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066000784 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069502464 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.088732707 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074287103 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087024867 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069521331 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083875144 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076497512 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073356731 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088438594 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066682049 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088981471 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069621161 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070183413 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086383744 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068990347 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086724278 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072186796 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069170375 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.084783907 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075245222 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088613337 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0700764 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086461069 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069300506 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068098899 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.080768636 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069460551 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.08651162 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073207673 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070374992 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085447008 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078338481 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083264892 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068103517 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071922313 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08568657 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073061746 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080920067 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069617567 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086479083 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069845435 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063777537 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.084396176 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066032909 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069786084 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.084882176 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064648882 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095357219 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07693091 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088079473 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068045487 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066818906 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080699396 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064462437 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085136324 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068900533 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069694356 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095134413 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06785206 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084400035 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064023678 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068420178 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087984286 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071280825 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082586536 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063906795 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067321824 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088437818 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074025013 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085170091 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067953479 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071449741 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087576178 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066861997 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088284183 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065139979 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071629524 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097750707 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06885356 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085647138 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07398 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092824924 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069104922 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063152228 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.086205277 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070660182 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086292334 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06949095 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.08673841 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083084307 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088164653 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066859386 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067618441 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088406882 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067351183 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093973007 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069537015 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068440873 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090256952 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070960208 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094070709 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070794764 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09283099 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071719561 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071038399 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085428335 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068233772 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084255037 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067275508 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069553974 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.08686562 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073216305 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.092572307 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068047646 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096151887 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077345414 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087531418 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065312976 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067692954 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.084945639 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06488596 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068925379 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.084730401 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066738064 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084512815 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06811234 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069311606 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090930498 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069996832 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.0871748 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068607467 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062708447 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.087827272 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071033579 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086353537 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06592773 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06880421 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086248967 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073043364 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089321547 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066772589 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069734176 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.087263819 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068822361 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081753339 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074769297 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06782703 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088347631 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067950801 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086361236 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069758996 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071224334 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091219565 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070083722 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087696723 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.076917394 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088329902 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065820487 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065508324 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.09028544 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066636321 seconds)
  done (took 46.817545419 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108285295 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083004476 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064098868 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081653014 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076082891 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082968184 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063406791 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064245593 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082595555 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06694513 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081289037 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063941229 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089655593 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087247329 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093490165 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067984895 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081525827 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064683846 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081326003 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065498315 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090727883 seconds)
  done (took 2.48714368 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07621602 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.090896847 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074693422 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095797923 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069640783 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089675236 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074781942 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089362483 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095389724 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068933034 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.095453356 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072509327 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.086693339 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069394749 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086342598 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073273054 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.094847451 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069795191 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.089944776 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075010755 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090271392 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074825752 seconds)
  done (took 2.646370473 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068208749 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067371857 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086606619 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063701637 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067159311 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.080986045 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071288615 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083208761 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071432875 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.074636766 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084230246 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066468521 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086523239 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063859148 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067125859 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083497674 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.130734958 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071434525 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066756687 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087694056 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063216837 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087886872 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063543701 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063215784 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.083853634 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.0716638 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086243519 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065758493 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067001901 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084343263 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068079543 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083257648 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069322802 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067679357 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08450818 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06726207 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067565776 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085339558 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063345112 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083779054 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067785389 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06402855 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086110161 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069753676 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065184195 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.083344464 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06914102 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.086108879 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063704034 seconds)
  done (took 4.523476519 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.085836817 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.130341429 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088311753 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091025687 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.101957357 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.093770763 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071890111 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111374151 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065563064 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.0854141 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08518304 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.103909554 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08707686 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072155305 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070993169 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086081372 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068961023 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084368944 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072310864 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086027607 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071675577 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.092399576 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100119641 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081927809 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089482619 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066831943 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084930552 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072339982 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.09862068 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073424074 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.089965605 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073303276 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.100990501 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07332656 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085834806 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069877472 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.102085451 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068155804 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088622087 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065897357 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089148002 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073872778 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.093724719 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085476726 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086089911 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072372947 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085793041 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065331625 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.098602542 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069588545 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.093889891 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101239674 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072168354 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085792314 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07219921 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.100840793 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068196027 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084546483 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070613092 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098542286 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065776853 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089689025 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.08180079 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087420838 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075511488 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100192037 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073586788 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089845429 seconds)
  done (took 6.695161937 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076368496 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092441671 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082287538 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101666733 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092846748 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074456719 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092817734 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074459816 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.091528809 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079133326 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092783452 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11355688 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.07056865 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.09496793 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075077036 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093387292 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075230692 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093649086 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07450988 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093907939 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092571262 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.0823117 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093004576 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.100824703 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104827084 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087817697 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074543638 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092793998 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082581894 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.092738927 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104006296 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074702887 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.092919533 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100240119 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.085941287 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092516261 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067255881 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091791949 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074765314 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092009056 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070324906 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100564265 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07390025 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.088070144 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074441888 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092248849 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.100152967 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086134213 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095857245 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097579272 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07513625 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100576306 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074229878 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09257872 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101107534 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.107350611 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100819166 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100093344 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074503673 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10111036 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100232959 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108052476 seconds)
  done (took 6.382154271 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089095462 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095190977 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.096933011 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063939003 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065846993 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090776695 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066596114 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.083618375 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076366536 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094236822 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07927986 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089367514 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075256642 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097740682 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089887589 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075056951 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090497333 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072203895 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094659632 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072257989 seconds)
  done (took 2.513149865 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076893996 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103339251 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069255872 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073320874 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089510921 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073084143 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089394507 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071145723 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087323746 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07173581 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096587111 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078090133 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087863463 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074703829 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096301351 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074543134 seconds)
  done (took 2.172599427 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.080465455 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.097213871 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083246182 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087525356 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06723692 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083913849 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068164507 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064271639 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.083851396 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082278267 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087219607 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070218208 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.086889578 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067071745 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065239521 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08932003 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064589598 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.084625835 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067611843 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.100909457 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079618422 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085245235 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069630377 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068940075 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.086952994 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073056825 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.087002718 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066003064 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08517774 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068809579 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086634989 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075685286 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083311932 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067042002 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066316659 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083871199 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067719646 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086345063 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070994453 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067177213 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085500947 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067765713 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086013068 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069558487 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08273854 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068615827 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065099652 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091954691 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06592508 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086658863 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067618562 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.08905384 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069598803 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.078606931 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.091181388 seconds)
  done (took 5.135050773 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081819915 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070820771 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082759456 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066089822 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090157359 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06962112 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070567039 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088535287 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070294589 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084875264 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070256705 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088994552 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070139277 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07084641 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087993485 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071917778 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082799938 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070144625 seconds)
  done (took 2.255539864 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073253429 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067863276 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093815479 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068086671 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086912544 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070038344 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063941701 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085687677 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067236764 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086325636 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067914937 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069745976 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085621486 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070799313 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086249082 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068246702 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069756038 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085075107 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068933112 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081943166 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070142049 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066513781 seconds)
  done (took 2.522422558 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073554195 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093955892 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.163450353 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.107297039 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083828563 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.099874604 seconds)
  done (took 1.490722809 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091792066 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099137376 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06905807 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107414507 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076372075 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088305736 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069881853 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088353227 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079668815 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101606193 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070002664 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096874489 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097158895 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079089623 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094450777 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075244159 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088470644 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070069845 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086740147 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106622365 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070245392 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096185935 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069957643 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08867975 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070616254 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095294897 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078814058 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102164529 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088103763 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078200384 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093369481 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070079808 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097425926 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101298596 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072263127 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096645983 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070589838 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106723744 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074693518 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097476359 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07073502 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095425397 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096421189 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075086138 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096494511 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069720216 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093554349 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070074522 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089462919 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112431673 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076395521 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097752255 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094675474 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078925834 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0963486 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112989461 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083091807 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096662726 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094148413 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083479832 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096919878 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075585915 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096773289 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101112012 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075878084 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096142179 seconds)
  done (took 6.651054563 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086940759 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10655493 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070636174 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102284306 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096719305 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070649482 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088343508 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070462867 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088685696 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070642562 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128860481 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069795411 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096935406 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096642991 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070662747 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088664712 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070272663 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096487015 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069378458 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112837756 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088246261 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078200528 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096767166 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096419208 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083591127 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0937677 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070010058 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088101809 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070088602 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088290732 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074461393 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088774719 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096837154 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069485752 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097157103 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070876229 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08811207 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07482136 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088326739 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076170043 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097099194 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105691226 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070489413 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088095396 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082533474 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089147739 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069601555 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088422984 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06968303 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08773383 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082621972 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102860074 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102113818 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097053668 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070734471 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08864423 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070773274 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088151873 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070355864 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094254981 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078137885 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08865201 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113333275 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070692719 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08868401 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077914276 seconds)
  done (took 6.53679109 seconds)
done (took 129.598378928 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.200469454 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184310718 seconds)
  done (took 1.252442018 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070009558 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095845992 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09787017 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128954814 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087304458 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101905271 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118835212 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.08011949 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06761073 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086504002 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068012467 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088428357 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132027674 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067438086 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.08677735 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069654746 seconds)
  done (took 2.318054807 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103333249 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.195454162 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109322821 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066678441 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099296547 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078627678 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085908833 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076929819 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094814399 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066347152 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078773644 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096235048 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06607836 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095493807 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075124327 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.097501297 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066213306 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098217016 seconds)
  done (took 2.524689759 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104009144 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141390403 seconds)
  done (took 1.118694705 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.199459082 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.122356419 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.200914417 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.413252341 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.204779051 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.275448412 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.172486774 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.171128464 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.156314963 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.168326595 seconds)
  done (took 2.955708262 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099558978 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170856173 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.310105387 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138094662 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.086597054 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.115308714 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.138170766 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.090329271 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.101692857 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100736402 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081694018 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097438916 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098025033 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.096183719 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075579066 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097795614 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121533949 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075599236 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.096736779 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076545057 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117988822 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068042987 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075814859 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.095204808 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078319276 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098460734 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06774968 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087266477 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077464792 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095614094 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080027288 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.113796663 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097779411 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.130817902 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.082566762 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.131677702 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098827057 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073905202 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.095972544 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073692915 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097631602 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078350473 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103607626 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077578127 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086417319 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078929185 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.086357098 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067901878 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.099739208 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.077977885 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099823714 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079234611 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.130389234 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.097690851 seconds)
  done (took 6.244084261 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.740657702 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110826962 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094063607 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.796130588 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089825375 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10559556 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.705272968 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117151634 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.20840476 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.759664584 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089465738 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099007326 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.179427977 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.213419873 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.898171153 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.281520147 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.630379743 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104147763 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109043048 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.131180497 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138748826 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.174597003 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.149287482 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.435813208 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.075890006 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093022656 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.138182932 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075440002 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.138843167 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.105661089 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094506834 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.155274789 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.226379441 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.154544088 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.096990543 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071392015 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091416856 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.14674762 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.221639138 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.188821056 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.157787667 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069222025 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091331775 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.139327146 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130939474 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069236746 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139871274 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.151532661 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.16841827 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074389701 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075667034 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.161329927 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.138729097 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.142643432 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.101587623 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.265387998 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.281364625 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070003295 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120079043 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103149148 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.214456814 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104442634 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.197064314 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139916008 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.1663577 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091008653 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.733821849 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.147703038 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09165808 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07535484 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118855782 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073794995 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.158602718 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.123431464 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.370243763 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.161144424 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074872173 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070836435 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228968047 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084059099 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091947037 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140502378 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076479473 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122783698 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.142732041 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.161682177 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.145890125 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.20756046 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.142543734 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.137995071 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095541739 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123102589 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.0774863 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.189579523 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.192091843 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.140754386 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.184109343 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.139178052 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.163004926 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.146015752 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077629466 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.148842217 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118880822 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100650599 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138570447 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.188871122 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.102284174 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.104585424 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074044295 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.159097357 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.125920739 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085778001 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.138830833 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.147507486 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.477635466 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.146565371 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069215719 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107918546 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140754812 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.140581016 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095693974 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.212681922 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122407263 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.14593628 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120822088 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089400393 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.098571923 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.160588398 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079813853 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123943438 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.137221201 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.09756096 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.212423209 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.166694766 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098315356 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.191785342 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.161847915 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096527871 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.148640532 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119528932 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145505694 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078086352 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136425091 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.0968507 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.752086121 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.162510793 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121658227 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074497277 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.173129052 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071777303 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104495664 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.084455675 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089430196 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.742565593 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106865166 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.084787622 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.105121934 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095375811 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.100437995 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.156265624 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075009168 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138695874 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.200257284 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075794802 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118232727 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.104111248 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.140052781 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.076002394 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.1056532 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.104042351 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.085627268 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123237181 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094046822 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084906515 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.146816046 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.140329488 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.191349222 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.560851937 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072617032 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.104362011 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.180348909 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092162389 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.240478797 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136630917 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.198413988 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141068924 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.10152379 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.263081596 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.163392544 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.15612887 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.107440594 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151810979 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069131793 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.157704669 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.143951239 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070890084 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09625443 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.140925642 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.145059157 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.140831604 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.932279562 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071887368 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.201660697 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090272135 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.149383738 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075840147 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098947222 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.258235008 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072006345 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145787776 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.141529741 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094532088 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10388649 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.700808283 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.084189417 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.158345432 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076054991 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.191493183 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.141088317 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.136449688 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136351269 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097020558 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.139338845 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.187013431 seconds)
  done (took 40.30297325 seconds)
done (took 57.589366101 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.255702341 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.177916733 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.240682353 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144423059 seconds)
  done (took 1.785723214 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.14433549 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105037913 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.118251273 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.086948838 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103663121 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086212105 seconds)
  done (took 1.539936186 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.400212251 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.264122703 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.229265195 seconds)
  done (took 1.790877736 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.259099207 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.21278479 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.445540514 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.296395316 seconds)
  done (took 2.239208356 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.174790458 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.11331572 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068850739 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.106932374 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.15856835 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.252073361 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.127772957 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.187343895 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.08086624 seconds)
  done (took 2.216559855 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197237391 seconds)
done (took 10.668642595 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.252410687 seconds)
    (2/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.275180496 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.148133528 seconds)
    (4/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.104457104 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.116907518 seconds)
    (6/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.116794099 seconds)
    (7/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.07939674 seconds)
    (8/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071728862 seconds)
    (9/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.114416563 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.180965109 seconds)
    (11/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.100909089 seconds)
    (12/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.190210133 seconds)
    (13/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.076837686 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082564754 seconds)
    (15/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.183696753 seconds)
    (16/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.115167793 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079852596 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.098217465 seconds)
    (19/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.081883793 seconds)
    (20/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.094750675 seconds)
    (21/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.215566685 seconds)
    (22/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075242413 seconds)
    (23/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.180811031 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.160624033 seconds)
    (25/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.215211209 seconds)
    (26/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.136677327 seconds)
    (27/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.073529461 seconds)
    (28/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.184050608 seconds)
    (29/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.080297398 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.123713228 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.119833652 seconds)
    (32/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.146573332 seconds)
    (33/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.116641412 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.142821895 seconds)
    (35/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.211932776 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067333426 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.187824023 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.074476461 seconds)
    (39/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.098438923 seconds)
    (40/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.150675192 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.088936331 seconds)
    (42/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079914447 seconds)
    (43/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.099654668 seconds)
    (44/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.166528083 seconds)
    (45/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.192497557 seconds)
    (46/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.171916775 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.148985714 seconds)
    (48/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.173724986 seconds)
    (49/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.149386178 seconds)
    (50/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.097813666 seconds)
    (51/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.115216832 seconds)
    (52/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.20082645 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.117776568 seconds)
    (54/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066949041 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.121703813 seconds)
    (56/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.111243847 seconds)
    (57/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.076491278 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.067180895 seconds)
    (59/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.118863704 seconds)
    (60/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.107378791 seconds)
    (61/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.096776791 seconds)
    (62/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.079389267 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074355888 seconds)
    (64/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.121141527 seconds)
    (65/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.198503413 seconds)
    (66/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068612136 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.11543535 seconds)
    (68/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.136934795 seconds)
    (69/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.092780413 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068895097 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.116908081 seconds)
    (72/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.07106334 seconds)
    (73/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.075082317 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.117191356 seconds)
    (75/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070154876 seconds)
    (76/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.089237007 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.102111681 seconds)
    (78/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.222167305 seconds)
    (79/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.074368635 seconds)
    (80/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.193032356 seconds)
    (81/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.165845996 seconds)
    (82/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.074236566 seconds)
    (83/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.130708587 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.078032919 seconds)
    (85/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.171698033 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074266417 seconds)
    (87/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.191439558 seconds)
    (88/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.201855762 seconds)
    (89/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.157006352 seconds)
    (90/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.076111125 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 0.068627091 seconds)
    (92/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.07133857 seconds)
    (93/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.090940771 seconds)
    (94/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.054598389 seconds)
    (95/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066187903 seconds)
    (96/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.159495148 seconds)
    (97/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.126184952 seconds)
    (98/309) benchmarking ("sort", BigInt, false)...
    done (took 0.209438991 seconds)
    (99/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.171603708 seconds)
    (100/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.174120916 seconds)
    (101/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.169980679 seconds)
    (102/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.184763058 seconds)
    (103/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.05493574 seconds)
    (104/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.070810284 seconds)
    (105/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.125643658 seconds)
    (106/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.074664455 seconds)
    (107/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.177937644 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067294053 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.116346607 seconds)
    (110/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.0557197 seconds)
    (111/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.076209499 seconds)
    (112/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.168771035 seconds)
    (113/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.159479742 seconds)
    (114/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.074959463 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.109854438 seconds)
    (116/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.064917346 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.173004246 seconds)
    (118/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055530162 seconds)
    (119/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.158849751 seconds)
    (120/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.100129005 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.112250069 seconds)
    (122/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.137846915 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.137571373 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075219293 seconds)
    (125/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.074961195 seconds)
    (126/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.053127805 seconds)
    (127/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.083557099 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.113801257 seconds)
    (129/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.064450359 seconds)
    (130/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.169202102 seconds)
    (131/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.085024631 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.089533797 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067872218 seconds)
    (134/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.078599062 seconds)
    (135/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.074891565 seconds)
    (136/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.08340384 seconds)
    (137/309) benchmarking ("sort", Bool, false)...
    done (took 0.1580883 seconds)
    (138/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.096851822 seconds)
    (139/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092599946 seconds)
    (140/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067045209 seconds)
    (141/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.074643852 seconds)
    (142/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081247832 seconds)
    (143/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.065002921 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.116317532 seconds)
    (145/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.099803132 seconds)
    (146/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075681806 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.073461201 seconds)
    (148/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.093285253 seconds)
    (149/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.054896293 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075193126 seconds)
    (151/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.17239915 seconds)
    (152/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.097362306 seconds)
    (153/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.068159584 seconds)
    (154/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055234709 seconds)
    (155/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.093060066 seconds)
    (156/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.056381447 seconds)
    (157/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.053139647 seconds)
    (158/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.075428064 seconds)
    (159/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.079287208 seconds)
    (160/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.054194964 seconds)
    (161/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095676814 seconds)
    (162/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.05405645 seconds)
    (163/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.05367687 seconds)
    (164/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.073930142 seconds)
    (165/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075662485 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092899011 seconds)
    (167/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.089171339 seconds)
    (168/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076400196 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.117515574 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.068084196 seconds)
    (171/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076121492 seconds)
    (172/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.075398059 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.07905738 seconds)
    (174/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.098260958 seconds)
    (175/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077263535 seconds)
    (176/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.054730603 seconds)
    (177/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.201233372 seconds)
    (178/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.158945055 seconds)
    (179/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.053438791 seconds)
    (180/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092039152 seconds)
    (181/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.076148218 seconds)
    (182/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072505189 seconds)
    (183/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.100684202 seconds)
    (184/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072647881 seconds)
    (185/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.05455866 seconds)
    (186/309) benchmarking ("sort", Float64, false)...
    done (took 0.1501378 seconds)
    (187/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.088137948 seconds)
    (188/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.089149757 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.116137278 seconds)
    (190/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.052536275 seconds)
    (191/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.101225434 seconds)
    (192/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075102185 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.136758654 seconds)
    (194/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.137767537 seconds)
    (195/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.097130881 seconds)
    (196/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069014463 seconds)
    (197/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.100672537 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068030403 seconds)
    (199/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.160316084 seconds)
    (200/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.109370099 seconds)
    (201/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.20237798 seconds)
    (202/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075331574 seconds)
    (203/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053258525 seconds)
    (204/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.099819153 seconds)
    (205/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.385338457 seconds)
    (206/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.054775028 seconds)
    (207/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137556541 seconds)
    (208/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.091151087 seconds)
    (209/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054323133 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.149755626 seconds)
    (211/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.196971286 seconds)
    (212/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.054424579 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.096488152 seconds)
    (214/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.126703714 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066646402 seconds)
    (216/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.08555934 seconds)
    (217/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.149304943 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.111883257 seconds)
    (219/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.054804014 seconds)
    (220/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062841029 seconds)
    (221/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.160426041 seconds)
    (222/309) benchmarking ("sort", Float32, false)...
    done (took 0.149993094 seconds)
    (223/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073354344 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.117479011 seconds)
    (225/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.076391107 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075017793 seconds)
    (227/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.099266192 seconds)
    (228/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.053717698 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.152661176 seconds)
    (230/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.053208852 seconds)
    (231/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.054094295 seconds)
    (232/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.074661863 seconds)
    (233/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.172294462 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.110175888 seconds)
    (235/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.070056126 seconds)
    (236/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.090653664 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067237271 seconds)
    (238/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073967048 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.089082631 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067769314 seconds)
    (241/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066543637 seconds)
    (242/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.095467193 seconds)
    (243/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.068412667 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.090011355 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067218211 seconds)
    (246/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.112322858 seconds)
    (247/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073988785 seconds)
    (248/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.053562868 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.162280015 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068990401 seconds)
    (251/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.097899295 seconds)
    (252/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068067892 seconds)
    (253/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073633998 seconds)
    (254/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.088613713 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092018309 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.110365328 seconds)
    (257/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.172453071 seconds)
    (258/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.075003912 seconds)
    (259/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053895052 seconds)
    (260/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.055688861 seconds)
    (261/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096522633 seconds)
    (262/309) benchmarking ("sort", Int8, false)...
    done (took 0.162977484 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066803541 seconds)
    (264/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.054730641 seconds)
    (265/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.076969835 seconds)
    (266/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.168629491 seconds)
    (267/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.075115376 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074891514 seconds)
    (269/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.054145243 seconds)
    (270/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.090571189 seconds)
    (271/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.05607155 seconds)
    (272/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.082619547 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.09876462 seconds)
    (274/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.05515498 seconds)
    (275/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.062049241 seconds)
    (276/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.113919362 seconds)
    (277/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.053988575 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.115612903 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090024175 seconds)
    (280/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.091458141 seconds)
    (281/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.065819568 seconds)
    (282/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.066953352 seconds)
    (283/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.111527809 seconds)
    (284/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.053550965 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075288835 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.164529429 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.151308754 seconds)
    (288/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073807242 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065570677 seconds)
    (290/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.088705923 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066703576 seconds)
    (292/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.052574732 seconds)
    (293/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.074522552 seconds)
    (294/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053504398 seconds)
    (295/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073285271 seconds)
    (296/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.089586143 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075814763 seconds)
    (298/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.092422425 seconds)
    (299/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.054084839 seconds)
    (300/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.054808199 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071975002 seconds)
    (302/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.095788909 seconds)
    (303/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.054237321 seconds)
    (304/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.141213699 seconds)
    (305/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073811319 seconds)
    (306/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.070107287 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.096745916 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.099608322 seconds)
    (309/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.092424349 seconds)
  done (took 33.405246792 seconds)
done (took 34.317023118 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082422709 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114299783 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076257039 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.115532958 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081984684 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.100645092 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074465302 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079734139 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.103469523 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082969929 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.102394771 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056774878 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097715392 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077233571 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097770958 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092817794 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102615914 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074156453 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075647657 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.08851842 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075782034 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088666679 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069987668 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056585092 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.101469796 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074279003 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074286803 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.098218651 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068006018 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.088736139 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070508301 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074460719 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.088808904 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080292786 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094958172 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07547963 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077297122 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.099300434 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069845487 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087785312 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075201587 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067322813 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.095029902 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074926694 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072889108 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.094248703 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075418463 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.102397003 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092519536 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090746413 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075846198 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.099762703 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078174327 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074437198 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093034815 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075411642 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.093722206 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092885811 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.09816257 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069136574 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075720932 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.097315345 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072693659 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074434352 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.097699323 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07703192 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099549297 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073432299 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09787582 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072441511 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067923417 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.096715045 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070786143 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066863192 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.099175847 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078902141 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.088163107 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073609458 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074216843 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.094585834 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068158197 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068445908 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.091042916 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074570381 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090666082 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056407193 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071420274 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094774127 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066769261 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075909494 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.095263244 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074494967 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068999412 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.100329815 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068375613 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095000629 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067548235 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06757605 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.091147736 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071383366 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066790432 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09128966 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076699144 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.090989234 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073969911 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080850431 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089290605 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073721158 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066448766 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.088831478 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083505203 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.098981961 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067867107 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091061417 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067006157 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074835462 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.089215161 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067521561 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067106594 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.089202365 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073531646 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067352577 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091617702 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075560623 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.102422207 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06719867 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071450728 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091050316 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067092164 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07287304 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.089317164 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068027677 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069324322 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.086131205 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069908029 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089112079 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074864058 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070008524 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.096956275 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069718808 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076502847 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.094186013 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074074386 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094615818 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066738015 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060613688 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09141367 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069016248 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069516045 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089008764 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06973915 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06710283 seconds)
done (took 13.335082092 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067289142 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.168124552 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.126864944 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097460153 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.111111089 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067737644 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.10066988 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104843282 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092088496 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.127236886 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088762074 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.108805508 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115734845 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088958305 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067380654 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071868969 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.091392671 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.090269361 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.126186354 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.109954757 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.118050489 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.08953731 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.12231306 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091673672 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113084269 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.095664064 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.089824066 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072671958 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071023443 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.126143126 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109357756 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071583174 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068239687 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123552165 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.118288289 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08723276 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.089038032 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086114389 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.089532256 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067563113 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.114846313 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.10141431 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.10498337 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082880065 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09636549 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071096667 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.091332273 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087582833 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.113649328 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082130649 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112388027 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.1347026 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071388044 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.106008599 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067658912 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.111060032 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.105617724 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.07072506 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068506167 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091896608 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06766405 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071587411 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.111375928 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.117106808 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071687631 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106563327 seconds)
  done (took 7.314857296 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084993943 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.117297093 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085868237 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108097916 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067780223 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06825963 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.08998452 seconds)
  done (took 1.590644472 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068464096 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090884468 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112910785 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090967275 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110193229 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088784913 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.100944131 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068566267 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.107778595 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069580932 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089218405 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.128164793 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069644702 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.098090543 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092015695 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090655427 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092792309 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091179629 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072234659 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114870564 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071826525 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.111106464 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069995138 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068695534 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.105323099 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068560416 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138973745 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073700289 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091732546 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071955311 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067563067 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.139367822 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105152761 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078856007 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068693784 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104884522 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083573093 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089214745 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086002333 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096251314 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082974667 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069730438 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092562808 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06779209 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073251858 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.101038979 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070310797 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092311272 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072134233 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088725155 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.091674044 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082973071 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.091387582 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072384023 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070365102 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097213023 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079218362 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091900755 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088882091 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070553806 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.107626835 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084822182 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.105239687 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084820444 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094142762 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082956921 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.105201988 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071923101 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070026129 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.094976855 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085231501 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089365204 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071316646 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.080004047 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092868529 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092197444 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.114539725 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071075569 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101648106 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069088236 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070286707 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.09194602 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091823225 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095297644 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068668828 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072887288 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094032573 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067289748 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067962573 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.09497786 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067738887 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069483881 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.094512202 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070023857 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093203574 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085530037 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069632763 seconds)
  done (took 9.392724039 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069774134 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069974928 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093304125 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06938909 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069455504 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092001427 seconds)
  done (took 1.448812314 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.10017347 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.093385979 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083019802 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.096524886 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107641645 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.106515774 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084712477 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.105714896 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087316252 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.103914066 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084142433 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.107859355 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090229631 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.098191646 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083257177 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.096619709 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085080928 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101408336 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080679723 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098483953 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.09020687 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.098044208 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075211843 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.107898863 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.073353086 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075016264 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101642784 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081125685 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.103157352 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.084918483 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098120162 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073094362 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09551525 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.084643889 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.105502541 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074091716 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096927856 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073319577 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100417401 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072359026 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.107671609 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075324473 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.102330676 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.072975907 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.107026557 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073074239 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074155134 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100904285 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082987034 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096227239 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073859164 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096334421 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073011354 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096075839 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073629405 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.106642319 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074067244 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.10708055 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075179951 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073314294 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.094633403 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.073085294 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.106018541 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.072884927 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104624204 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073495465 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095343955 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076385897 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097564656 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.0753552 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.096424282 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071683042 seconds)
  done (took 7.421798851 seconds)
done (took 28.135046237 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.650537609 seconds)
  done (took 1.629167485 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.760113373 seconds)
  done (took 1.740428828 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.471414791 seconds)
  done (took 15.456538369 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.610705515 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.750985896 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.805385776 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134735404 seconds)
  done (took 3.281285982 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.881875745 seconds)
  done (took 1.888547042 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234349046 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.222984851 seconds)
  done (took 1.44488966 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.729432369 seconds)
  done (took 1.726937471 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.333016637 seconds)
  done (took 2.320585528 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.31851446 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181977046 seconds)
  done (took 1.497519032 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.521075 seconds)
  done (took 1.519212223 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.652910028 seconds)
  done (took 7.655809138 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.22871953 seconds)
  done (took 1.241210281 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.270164215 seconds)
  done (took 1.270560772 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.12730034 seconds)
  done (took 4.126225029 seconds)
done (took 47.78788193 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079020816 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083019488 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105517883 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079946974 seconds)
  done (took 1.341533095 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079482041 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075332394 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101477214 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075090888 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102081713 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075248916 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100280324 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079329312 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074904884 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.098463851 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075444363 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.097210957 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077481888 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.099750822 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071842179 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078078881 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100553394 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07545585 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.100666047 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075407534 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072627126 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098717798 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078060393 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.096419582 seconds)
  done (took 3.065461386 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078820342 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075271859 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098587647 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073732911 seconds)
  done (took 1.328631601 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078460734 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.11680864 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090340426 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079399967 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.117882071 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.111968089 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.071932678 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072316892 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.096708223 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079455613 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.093548517 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099561065 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.112419984 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079301054 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103917498 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068275578 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071558672 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.111170169 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079692246 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102156697 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073009833 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081721571 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.092763542 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092383175 seconds)
  done (took 3.185152635 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079005686 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105131287 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.103321358 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090599272 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.116747729 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067496149 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.101278967 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093720073 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.150315355 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068184471 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.095451467 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068128745 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.098844797 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067221112 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079336927 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.132795067 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113485217 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.093605513 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099527732 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.09107789 seconds)
  done (took 2.926051432 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07572595 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071874937 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090643807 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070240685 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078696293 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097148425 seconds)
  done (took 1.492598991 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069646101 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069513314 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092264639 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067676449 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073622365 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091791875 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067540866 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069141145 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092351655 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068717257 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068590047 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.090405473 seconds)
  done (took 1.92986861 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.382143549 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093069745 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071009777 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089066833 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072994781 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091413282 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081270677 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070175104 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.115507781 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068904848 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092568951 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070251444 seconds)
  done (took 2.310555446 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26094186 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078480732 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.322110066 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167320476 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141465555 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155619377 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105419192 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140513186 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198390652 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138540802 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200597537 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224162128 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134972639 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168569358 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116649566 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.108833331 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210438655 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222268229 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106496996 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224836124 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20684804 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157471424 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181058757 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129636255 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135251243 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151803306 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073734435 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106057069 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231908917 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160843352 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201185203 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138684437 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098660251 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229894898 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22455987 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195230226 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162987056 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086720394 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.157235941 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.164545833 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255410921 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114976964 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192582416 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134573096 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107259905 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171898793 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146609594 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.147093423 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.136536015 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116071851 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173650842 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239939386 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.165102 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113120709 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137974832 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141240923 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.14413424 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103902819 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241546164 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216482194 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159296272 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097506433 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099325278 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210459457 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159937353 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142354113 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.153698201 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120463358 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168198251 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.210580378 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145966691 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173641639 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.18139743 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090797106 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147641186 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195839888 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155994131 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201784333 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178849421 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074829782 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152997543 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130989376 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083896294 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.170402416 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101885794 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207753602 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126772528 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.140184323 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140057968 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138487701 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113008013 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21924514 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201825928 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106697318 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.092027008 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131632566 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.150124192 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175782115 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115212527 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136317601 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147153566 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.08134347 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192611214 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077495203 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154021591 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.104222769 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152136815 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16208895 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077885358 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155336276 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129400469 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.129763136 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165493041 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220882941 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092344976 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109180955 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200908122 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179699654 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.13256074 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17566556 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189451355 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.127864644 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130087828 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204649663 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241980039 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091527156 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223594119 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13619143 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085673771 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.114499164 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155077768 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139461928 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.1501651 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084921278 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.179089029 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199691952 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.101756872 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098226355 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190521036 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083928153 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109347168 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140649433 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128183238 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097963635 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.128496166 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.13520199 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170183979 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154717205 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135116564 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153940971 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125675854 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225147393 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115612802 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.131466235 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106238316 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097472986 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.165625557 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215676598 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082075854 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225720987 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.156651348 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132478455 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149280529 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086660283 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16845975 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105441064 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073480938 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19830914 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139126275 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112981564 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.209992942 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131174938 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.155175501 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.151624001 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163910698 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1615791 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.186809039 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108650059 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.113751516 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140098586 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153843127 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.100493727 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.096271979 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.108922441 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131265474 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123248227 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085225272 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172898703 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180361407 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100674597 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140265381 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124431705 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180097326 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.103288463 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159539447 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.147932398 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122103871 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.187086707 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212050037 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166696609 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128456124 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176446473 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.097723417 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076414976 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.118242599 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156383734 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111873868 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085343588 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145964849 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20550663 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158162903 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167763335 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138182197 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1512527 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188292922 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.09818822 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119137719 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204193454 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153654292 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.155991823 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09258792 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.126165682 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175699373 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135419147 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242625928 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143173505 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152303012 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207233442 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.130506255 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082733836 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134293537 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166681738 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132822011 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.207514656 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127507131 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091149727 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137768982 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.108396729 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131254379 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156956958 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149262023 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164462942 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.144026438 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187027128 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079912732 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146013993 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152191403 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150837988 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.091399382 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148705927 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221561269 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097901501 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147174302 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210278825 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081580109 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.152808414 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237369132 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20103587 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092802963 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138731073 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151338716 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158791587 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146898218 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194539442 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140653354 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164992149 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137862755 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087522147 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115832759 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100293174 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133940158 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.122635034 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.139346017 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.145179362 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.121550685 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160478184 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140274305 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139357864 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14922165 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.100888324 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.118726753 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126564716 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209240484 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151190867 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232156469 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.128106484 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.205493446 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22486391 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077793144 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081806074 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.107571601 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17112218 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113073813 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16422056 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.124119936 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108218017 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155908985 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19746344 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122834183 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070988669 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138512236 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164352774 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13934636 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126737674 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.108837878 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221846535 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.131697326 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081986011 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153943482 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133509779 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131507659 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235456957 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.06396392 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12413981 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08065854 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107890339 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158926685 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214419958 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084768643 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.154148721 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147714355 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149963029 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158876484 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130328194 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125479057 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116190485 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205713481 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158034218 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.118305633 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141760551 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158928522 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188536431 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133205306 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.122885712 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230219162 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187453143 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.22216184 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.117482161 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145589663 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144441159 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138493383 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172031236 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111042763 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201231949 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110690419 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167175371 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132621829 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119716951 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158262852 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.124414591 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13349657 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179904359 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149275519 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110361254 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082291214 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147543795 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15023076 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134576445 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.102700422 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169221635 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.101259417 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167943344 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229021997 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084459054 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135699084 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124545327 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084268751 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136502628 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131646745 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11426686 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.120371125 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228595998 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.118309235 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182414507 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197779987 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143235432 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168836658 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128249833 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664094804 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.105265891 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187105466 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148750859 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237509498 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126600493 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150278314 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139306286 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152799037 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175098597 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132820179 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.205458358 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163014568 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.148626625 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107543828 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131687955 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140107742 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.093443631 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134692174 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143592992 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144157596 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.130042923 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.151289015 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156841015 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.109545896 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12405331 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190888837 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147173142 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200315277 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171010149 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087126754 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148016583 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197256805 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08260995 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.177664736 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187557203 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137021654 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127385109 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.10966727 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.107826702 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230616725 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.100730603 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194742032 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152977559 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138573818 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143010077 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.173767476 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163148075 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137348166 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154981034 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124197714 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.142091638 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14520623 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086438917 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.106312386 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136027552 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141696482 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.102590841 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130942447 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.144824861 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183021045 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.0994357 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098234977 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131347987 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201518365 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238433182 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.090997553 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11194003 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148048855 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141876253 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.146476172 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154940523 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084132017 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11100935 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.110200323 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.113999029 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.136344146 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144008102 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131628531 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140033215 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20068332 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.113363426 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.253775083 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097557581 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135987735 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071555554 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.107494963 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124967998 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100800535 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135685517 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126168154 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232669566 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099520417 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.118706185 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122407684 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076331686 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110993745 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159830246 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139417605 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151780289 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126556343 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065550703 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138579126 seconds)
  done (took 71.586570403 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.132455982 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.10490702 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.117287912 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.172890561 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.146769927 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238161388 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.180992596 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.223211448 seconds)
  done (took 2.409895575 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07054738 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.117356466 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103608002 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.115994888 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090731017 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070203491 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.293741599 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.110560286 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067728798 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.115151364 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.119158421 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092005163 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.469811797 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066486937 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.095483907 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.084757559 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068392332 seconds)
  done (took 3.234728078 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.424770183 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.630957274 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.450499594 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074558461 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.915311436 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.107401971 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.428331442 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.163581039 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.092105648 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.429703424 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.726764555 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.150130547 seconds)
  done (took 17.687580934 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075808026 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070505848 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.110389125 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084996571 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.09994693 seconds)
  done (took 1.535538274 seconds)
done (took 115.029318042 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080805011 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.340724699 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054615989 seconds)
  done (took 1.520780953 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084288854 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08567433 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.111728229 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08468338 seconds)
  done (took 1.468753481 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075482258 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07796543 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111802879 seconds)
  done (took 1.36633261 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.278400028 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.165881963 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090045213 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083952443 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079695802 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10581262 seconds)
  done (took 1.372292633 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07365064 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07667406 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099802053 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078105792 seconds)
  done (took 1.424560837 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076839323 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054187658 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056446263 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.082504808 seconds)
  done (took 1.372748068 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091597507 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.107503887 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081386477 seconds)
  done (took 1.379892168 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107440185 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.11318863 seconds)
  done (took 1.322976898 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082655941 seconds)
  done (took 1.180098971 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093441659 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.140805008 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.157093926 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.137225103 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.165313168 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.137368492 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088226748 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115382754 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104912114 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089927448 seconds)
  done (took 2.33377844 seconds)
done (took 16.447947585 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079237846 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.393506982 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361901578 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118066135 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668614005 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358051548 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.005364327 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119768312 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121283282 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095388819 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085087577 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676259669 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.004878167 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.345527519 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.993547311 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.420564824 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676191371 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069757402 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068979914 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095166523 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.962478602 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094204839 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068514333 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069619438 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.675025114 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372254369 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095381547 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.412232685 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068883933 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09723611 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355976815 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095240528 seconds)
  done (took 16.21658198 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071120901 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.143934198 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074302729 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085189764 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.097782663 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070880095 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099209947 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070243071 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152666682 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069807154 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112171078 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068577798 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098780779 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070035218 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088560855 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09551657 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069710166 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069940906 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095191271 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069865062 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113206745 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069153393 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069478414 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095272541 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069753955 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10736144 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070217862 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070068115 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094671548 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072020027 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097925893 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070227498 seconds)
  done (took 3.874721782 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115715447 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.154053245 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075498395 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129570814 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114029696 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097796366 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.170559618 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09391677 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155065764 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069678817 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111280399 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069317688 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128180794 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070511605 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115732912 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069811629 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070553644 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095490286 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070211924 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096088803 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088282221 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069362859 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095908294 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070772692 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096118168 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082494546 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095530603 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069639154 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070360979 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097759812 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07313497 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069786109 seconds)
  done (took 4.161565484 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073740946 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077351106 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109966774 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084787871 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097503945 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074007038 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074397536 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.097270346 seconds)
  done (took 1.800118979 seconds)
done (took 27.154639418 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079543756 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071659406 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.100259161 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082624786 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.100240147 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079871247 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069243945 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.102663083 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078531644 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074839901 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.10314882 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069099027 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.099238461 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068769406 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077017867 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.0955261 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080487495 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.09962562 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080019584 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080624906 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.097549195 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078837955 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.101473551 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080304889 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.106910744 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079748069 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.084805509 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.10113286 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070682068 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.097831032 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077554473 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.11150604 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069597157 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081647714 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.096022541 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069373525 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069373727 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095251425 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081147656 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.101482316 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072296725 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.101847861 seconds)
  done (took 4.719433364 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089536801 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092713558 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.113085562 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067111969 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098556778 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066521663 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.116049644 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.06484752 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060791091 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.115595767 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057350363 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.06074123 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.090444547 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055199027 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060896376 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058336635 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.089471115 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.05754396 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060759074 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.087420838 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.059674906 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056227816 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088342802 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064186292 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058602174 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063300205 seconds)
  done (took 3.063890201 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076015095 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084597666 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.124605908 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.158004285 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.10824708 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.10559937 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078815694 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089582945 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113822659 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068576732 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.099788524 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.098586343 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.116058666 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075678046 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069126475 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.115520851 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084150534 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070902083 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102553544 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091719089 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.112559315 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.079725947 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120591715 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082148995 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069048381 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097877501 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072590864 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109506642 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073733889 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078776691 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.10026092 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073278003 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.097500733 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080228077 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.100103016 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.071895655 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091799537 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105490253 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079198023 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.096493705 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.072427497 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070275315 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.116025584 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.113088732 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.095657364 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076639105 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.103557727 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078194992 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06938776 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114775977 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078326191 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.095229206 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072298484 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068670729 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.09552083 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082215297 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071113956 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.097496405 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078098158 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099146373 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.081641833 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072948254 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110855918 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068914772 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103276337 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068315891 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069945671 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.094195713 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092213358 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097427755 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109669817 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.097599972 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.07070513 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077368488 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102838282 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074810207 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.096198299 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083763183 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079013588 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098744127 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077854262 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.09913225 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071806727 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.089500319 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.099002041 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070761424 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070460831 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.101898859 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072227864 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.096629594 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082374535 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069328195 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.098610775 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085924933 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.095960833 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070466689 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076088909 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.100520229 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069329058 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107507698 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074518425 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.096833416 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078108842 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06882424 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.099071159 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079353737 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.100202293 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067939579 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074463507 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.103010542 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069996885 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070156062 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.099441999 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070527101 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.105650459 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074553968 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074217823 seconds)
  done (took 11.45841118 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.192379596 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.186524518 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071476321 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.179386092 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077596297 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.108380845 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.182388914 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097283588 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097599357 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069594257 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070494328 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.130639895 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.125094429 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.106592425 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.107257816 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068613546 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.114944903 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.10510834 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.181963288 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.176485358 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.116262325 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077332439 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071123582 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.098246359 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070799391 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078768429 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.113718423 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077585045 seconds)
  done (took 4.285158418 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082756741 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.130173569 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07585085 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090496644 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.119883204 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070415474 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102430601 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071175209 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109410613 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081080513 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.097478286 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074962778 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07603862 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.10724773 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070387566 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107334172 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079269361 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072087046 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.100657845 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074329741 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.106699452 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081905849 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.101095224 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068134493 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076628001 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.09629121 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066311117 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.114160925 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068747641 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.118212626 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067179789 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075838396 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.110100906 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069800534 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.096786542 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072208905 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072362719 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.100453598 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07042573 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067997549 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.095540666 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058679233 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068262547 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.10928244 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076236022 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.089065782 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075855495 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074905447 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.101290738 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067286436 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099799643 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071454676 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071715192 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.105985929 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073352604 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075589731 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.101330587 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.067193868 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.104919722 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072819855 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065766162 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.095441069 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073613718 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067843435 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.104316814 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073919074 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.095439687 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072247651 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074558004 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.103496162 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072285566 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071416648 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.094121854 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071315671 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.101930464 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073735813 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073437871 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.095725233 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068899301 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069869563 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.085002184 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069157908 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055447663 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.099728209 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068097524 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067723164 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.099761879 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074750888 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.109930051 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070663735 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.102979302 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069818377 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068102287 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.100116426 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065098469 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072932099 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.11292784 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.112513644 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069121073 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067419288 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.111519433 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074202619 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068141834 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.085824076 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075400848 seconds)
  done (took 9.969202028 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095743145 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093525967 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.098131036 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08364155 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.124597644 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094735377 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.104874911 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075589615 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070260588 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.11357404 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069204747 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.105578131 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06916965 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079095534 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.124487859 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077495847 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.098862361 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078098308 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073148228 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.136087256 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083948276 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.111518776 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.082792261 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.097971251 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074451757 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081500155 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.125749105 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081418672 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108032405 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.086008349 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.081879209 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.12450126 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.087678395 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100771247 seconds)
  done (took 4.337025301 seconds)
done (took 38.936971977 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.204181494 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.396672819 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.184409408 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.045685826 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.193690669 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.221026745 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.195522272 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.192187864 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.306821017 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.188189925 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.417647335 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.775438232 seconds)
done (took 58.458412005 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.187843336 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.3283099 seconds)
    (2/2) benchmarking "String"...
    done (took 1.45832296 seconds)
  done (took 3.919312562 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.577693898 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.193121955 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.571532512 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.188020563 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.189088651 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.196183358 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.778845699 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.01190167 seconds)
  done (took 28.260165894 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.192483765 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.547407581 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.500575905 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.501414247 seconds)
  done (took 17.876534554 seconds)
done (took 59.954830068 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.221746391 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.215172453 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.190582423 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.1730628 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.293660307 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.207733627 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.482875786 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.438927291 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.188686309 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.197355588 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.190372217 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.187521846 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.201392573 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.475777551 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.190332544 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.18865812 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.254075661 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.66756794 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.573430071 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.202257104 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.196764666 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.220085647 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.192611423 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.186902539 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.214239935 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.187327491 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.196016829 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.209798086 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.381819474 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.189992475 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.276886466 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.668332466 seconds)
  done (took 190.997783815 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.188036531 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.174665197 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.242710416 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.225281196 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.627510565 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.38979944 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.316544043 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.694509329 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.205295087 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.211110533 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.481948064 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.187698027 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.525931668 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.158397929 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.197710781 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.300418066 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.461621036 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.502511595 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.204320742 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.433077418 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.203827941 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.501740631 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.433542764 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.401518094 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.230473721 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.213067161 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.206071342 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.194571471 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.383448594 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.385273225 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.20704356 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.224960494 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.753934407 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.052043426 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.211787387 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.193082762 seconds)
  done (took 149.66131762 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.443761982 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.583558029 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.188537494 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.189227299 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.189643267 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.219523494 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.190221584 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.712664581 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.704359281 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.693103389 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.469741064 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.193078059 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.248559282 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.432614678 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.191550655 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.189847568 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.281419493 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.201638437 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.191485515 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.206337964 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.216060653 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.193472188 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.189911337 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.712588127 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.20535732 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.42654319 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.198421399 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.190097329 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.22052938 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.584538294 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.190753475 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.2197198 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.366266318 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.50770441 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.233532591 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.191118931 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.489914306 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.301171201 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.192668417 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.220349669 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.190865692 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.458646428 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.191137546 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.192296501 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.194738328 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.766855406 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.194219573 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.716038876 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.195105557 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.066685952 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.190403657 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.190521515 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.428861866 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.591013688 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.191685524 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.191159661 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.193486546 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.19247406 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.191915169 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.22206647 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.395462735 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.288708752 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.192098071 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.193154146 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.196332556 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.220995571 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.193280951 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.402408052 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.195682807 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.337887895 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.250662301 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.408771706 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.717950804 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.195761919 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.283357411 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310875953 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.193463978 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.192928352 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.193192446 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.193796484 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.297202042 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.195036396 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.588564013 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.199935445 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.194058347 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.251783765 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.286826096 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.194444003 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.482362152 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.195888946 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.193479315 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.881461834 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.284534435 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.193327628 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.19291565 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.193842145 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.591775538 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.708308426 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.376202714 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.196447379 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.411064706 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.196144607 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.60059105 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.69884634 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.784928159 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.197366748 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.300112486 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.198977863 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.195355193 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.194168282 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.222338882 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.19544722 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.252838901 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.194682294 seconds)
    (114/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.194483753 seconds)
  done (took 343.313879202 seconds)
done (took 686.55152088 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.861192483 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.848132257 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.957830293 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.84480893 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.828003661 seconds)
  done (took 10.480937629 seconds)
done (took 11.62262691 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.374352237 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.372498411 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.253282466 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.377635815 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.223588079 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.393421247 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.353927879 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.217455896 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.293102263 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.269259903 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.295345695 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.243828011 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.223979242 seconds)
  done (took 18.032377356 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.490682225 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.485596864 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.263480278 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.497247644 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.238429901 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.487772825 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.384983455 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.394328156 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.380957876 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.214236323 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.212245971 seconds)
  done (took 16.19283852 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.495418579 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.489085335 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.26589013 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.493778817 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.239594631 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.495435031 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.385892691 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.395998137 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.386392387 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.215705212 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.212503783 seconds)
  done (took 16.217517663 seconds)
done (took 51.585029907 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.205129033 seconds)
  done (took 2.347327338 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.238996691 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.405051725 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.222573669 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.210398814 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.207049264 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.207896464 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.211626785 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.207279998 seconds)
  done (took 11.056071041 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.208909594 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.208679859 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.208576613 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.205365256 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.207947706 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.206548223 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.208435067 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.207932818 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.205597495 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.206353975 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.206766302 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.207760307 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.208798006 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.20784707 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.205968239 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.206906793 seconds)
  done (took 20.46187218 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.208709699 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.207366966 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.206969235 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.207557796 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.20661341 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.20971553 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.207577549 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.206660697 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.206306702 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.207735064 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.207894282 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.205770382 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.207803678 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.208753683 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.20675668 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.207882856 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.207242581 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.207086831 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.211384639 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.207515835 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.208092217 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.208415677 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.20820654 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.2089801 seconds)
  done (took 30.13418156 seconds)
done (took 65.142761612 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.230660645 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.763630415 seconds)
  done (took 9.13993546 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.210317759 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.210254045 seconds)
  done (took 3.566925676 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.209915583 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.210365397 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.21058036 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.210820722 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.210949729 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.210482522 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.210779676 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.210924033 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.210780466 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.210938112 seconds)
  done (took 13.253129164 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.210132366 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.210854203 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.207628659 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.210859541 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.211298773 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.209006564 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.210381151 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.211331583 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.210951362 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.208615764 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.211109756 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.209088174 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.210577989 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.209603804 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.212148727 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.210272726 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.209106291 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.208841746 seconds)
  done (took 22.928273041 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.213404548 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.210525319 seconds)
  done (took 3.570980313 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.209357494 seconds)
    (2/7) benchmarking "second"...
    done (took 1.209486406 seconds)
    (3/7) benchmarking "month"...
    done (took 1.210959239 seconds)
    (4/7) benchmarking "year"...
    done (took 1.208979557 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.209819926 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.21023139 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.209106372 seconds)
  done (took 9.615112938 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.213212795 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.382719504 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.462114313 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.831802491 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.213495878 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.21599657 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.025821933 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.21730416 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.218272384 seconds)
  done (took 13.927841802 seconds)
done (took 77.147454705 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.186070341 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.201401624 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.052561423 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.210585934 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.217261605 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.544594678 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.206399149 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.32753234 seconds)
done (took 37.095398327 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.21693056 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.925114712 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.92807703 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.218921334 seconds)
  done (took 11.220913723 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.194152909 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.147299966 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.207771466 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.220068849 seconds)
  done (took 17.918038905 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.798207305 seconds)
    (2/2) benchmarking "read"...
    done (took 1.537792149 seconds)
  done (took 4.48333445 seconds)
done (took 40.987583623 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213437052 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.21199383 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.211870625 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.21399869 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.214367766 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.213919404 seconds)
    (7/24) benchmarking ("one", "Float64")...
    done (took 1.210553714 seconds)
    (8/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.214139136 seconds)
    (9/24) benchmarking ("zero", "Float64")...
    done (took 1.210850235 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.211088038 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.21389969 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.213294747 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.214834003 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.214208405 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214890993 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.211476199 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211471422 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213897248 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.211636118 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212128783 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212264942 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.215251443 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.212901015 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.212529979 seconds)
  done (took 30.260672273 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.215051507 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.213502247 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.214426661 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.215032398 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.212366543 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.214715919 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.215261349 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.2125059 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.21501196 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.214843973 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.211961424 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.212593593 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.215274533 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.212812355 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214889621 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.212854064 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.215956811 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212882368 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215177336 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.213578064 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.215235266 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213051731 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.213153734 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.215531624 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.215658675 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.213392008 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.215690208 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.214021166 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.216029046 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.213812229 seconds)
  done (took 37.578096057 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.221127611 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.22319502 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.216069281 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.21669375 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.216381817 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.216865211 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.216313569 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.216651015 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.21700402 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.215911909 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.216445124 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.216439928 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.216557072 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.217682318 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.216822884 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.216964248 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.21696192 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.216458319 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.217335381 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.216910361 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.217363582 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.216642023 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.217003659 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.217755552 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.217827793 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.217453432 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.217303386 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.217633745 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.217077581 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.21729804 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.218163144 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.217650673 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.217379431 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.217813706 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.218260729 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.217808802 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.223073379 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.224299632 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.218424635 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.219179161 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.218809211 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.218518633 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.218577868 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.217894123 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.217839927 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.217444212 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.218325199 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.218865083 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.217430609 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.218887057 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.218395357 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.218556968 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.218524152 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.217816237 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.218896496 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.219153097 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.218360647 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.217838285 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.218560878 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.218861091 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.218114811 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.219262946 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.219432344 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.219134934 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.220283837 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.218473373 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.219244785 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.219085014 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.219741665 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.218931937 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.219382226 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.21930287 seconds)
  done (took 88.862260971 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.218587235 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.216835843 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.217549263 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.217039196 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216974293 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.220015264 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.217014018 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219685201 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217158274 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.220006771 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21935027 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.217710227 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217276319 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.219673188 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.219616793 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.217357736 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.21967056 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21796544 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.220091742 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.219844623 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220073622 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.217887834 seconds)
  done (took 27.962728383 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220328493 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.220834319 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.218914662 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.220698186 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.218567467 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.220340787 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.220483807 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.220648208 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221023263 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.220176936 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2184518 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221361558 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.218800604 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219477212 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21828458 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.219317369 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221185964 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.219134959 seconds)
  done (took 23.114655098 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.219116146 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.219466536 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.222745235 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.219366093 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.220722295 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.222369629 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.219357641 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.222064281 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.221382531 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.219646773 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.222276481 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221878573 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.221904748 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219605614 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222403787 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.220296567 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.220792731 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219921263 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222844174 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.220367067 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.219533728 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.221884657 seconds)
  done (took 28.018330592 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221564844 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.22306072 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.220481413 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.220292491 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.221148446 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.223019383 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.223583115 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.219500484 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.222978361 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.222253497 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.220362392 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.223322726 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.219609153 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.222189235 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.220496965 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220881517 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.223009491 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.221047393 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223537342 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.220842448 seconds)
  done (took 25.592236173 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.221631012 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.222925696 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.222080286 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.220994133 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.221353505 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.222803508 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223018235 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.222283808 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.222845541 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.221564386 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.221979591 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.223003233 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.222148999 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.222748072 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.224606069 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.222955048 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.222423486 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.22281208 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.223399812 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.221974157 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.223182902 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.222987916 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.222812268 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.226054883 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.223229035 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.222519375 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.22271833 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.223360812 seconds)
  done (took 35.396487477 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225208635 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.226972778 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.22437526 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.222096823 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.222699378 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.222831278 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.22243754 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.223189706 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.224582943 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.222154014 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.226514789 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.224926697 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.227115765 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.225198498 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.225710029 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.226663827 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225671588 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.223937225 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22546925 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223313111 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.225920351 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22579296 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.22578884 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.223353355 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223822415 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.226606929 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223124473 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.224066601 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22743228 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.223824223 seconds)
  done (took 37.90304562 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.245638628 seconds)
    (2/2) benchmarking "in"...
    done (took 1.245371555 seconds)
  done (took 3.65221635 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.224072438 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226296712 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.227641987 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.225009234 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.224098495 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.226240272 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.226379487 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223949452 seconds)
  done (took 10.96579739 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.224189842 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.227582809 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.227309555 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.227360029 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.225030382 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.22576418 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.233808978 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.242784448 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.227121131 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.226040041 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.230060346 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.231736731 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.22918346 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.225454041 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.225190449 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.228598742 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.228136524 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.225172346 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.225293798 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.228612693 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.225470279 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.22862304 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.228404829 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.226221354 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.228465633 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.239796466 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.233208382 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.229203303 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.226222792 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.232669163 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.225513823 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.226687232 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.227040429 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.226434774 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.229307886 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.227414747 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.237922611 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24501638 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.234903837 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.226581178 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.229006743 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.226806595 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.228521541 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.229685589 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.229971157 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.227134876 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.23022689 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.228034276 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.226560471 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.229465125 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.23488817 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.226526025 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.22780472 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.233623526 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.229760273 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.236747748 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.244713759 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.230468295 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.235587338 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.240155304 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.243545928 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.23521306 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.23061615 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.227420664 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.237470682 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.251354339 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.237639952 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.243915666 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.228274337 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.230350377 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.238627359 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.242991583 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.237780882 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.22890164 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.229015219 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.230713027 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.228326333 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.232044588 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239482202 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.248692624 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.229127576 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.229527856 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.238881003 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.249462415 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.227531033 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.229034893 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.230058677 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.229839479 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.22988521 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.241875918 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.246130426 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.232419425 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.229076177 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.229771754 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.232510524 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.230940771 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.227638809 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.230530531 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.230612065 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.233404159 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.229141487 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.23224136 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.239319932 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.230877285 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.229538833 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.239820696 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.233502041 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.229295756 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.241472403 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.233728321 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.230800889 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.230172456 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.238249336 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.231325146 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.234915451 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.239043715 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.230828712 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.232378737 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.231479304 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.234545187 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.240623851 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.256663541 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.234187229 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.234304044 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.2363467 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.242025499 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.23176578 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.236204791 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.234740493 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.231679411 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.231970038 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.23338181 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.233988866 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.232997471 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.2318871 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.233466014 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.232066822 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.235762721 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.231990944 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.233754395 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.234258837 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.232389072 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.233776565 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.235132877 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.232770875 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.23434654 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.242006679 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.232895034 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.233473741 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.234356468 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.233537059 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.235464432 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.2350028 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.232479068 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.233000614 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.232776429 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.232391358 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.233352339 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.235759756 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.23611228 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.235619388 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.234007074 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.235929515 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.233552745 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.239493886 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.23203248 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.233588727 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.236618037 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.236103215 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.234179382 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.236562197 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.232424464 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.236188288 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.24086952 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.236532675 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.233556998 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.238660167 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.233881071 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.235197445 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234449872 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.236435064 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.242523079 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.234492064 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.243722038 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.234832331 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.234378344 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.237500619 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.235021689 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.234638515 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234405847 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.237277348 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.245182644 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.249679524 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.243771553 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.235396764 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.240805068 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.237667801 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.238481593 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.241343087 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.235960765 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.238041063 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.235443019 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.235052288 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.235218618 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.238599599 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.235428037 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.235649747 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.238054128 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.238964048 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.236976513 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.23811267 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.237691904 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.23763139 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.235774625 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.238305839 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.236407223 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.235204673 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.236948466 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.235465668 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.236132608 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.239801425 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.237040946 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.247510067 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.236234485 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.237716697 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.23776696 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.236482496 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.23483239 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.240045617 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.239618371 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.237509656 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.245565108 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.253733155 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.238197401 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.245184807 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.253756241 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.236576833 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.241183704 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.240627686 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.237660829 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.239312355 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.247076508 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.240160913 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.238044971 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.237923927 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.237192866 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.240764013 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.246659733 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.238257538 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.237095234 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.241318839 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.241423838 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.237682281 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.239135184 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.239068008 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.238782278 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24105821 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241137272 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.241972462 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.240695428 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.238434318 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.238881505 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.238872344 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.241038399 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.244781171 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.246103545 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.240315276 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.241700025 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.239631871 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.245350817 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.239719219 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.23800508 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.239161515 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253682794 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.247062663 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.248941695 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.242489094 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.242147653 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.246898948 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.240619245 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.243926991 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24024014 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.240697728 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.240697509 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.238863526 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.239699923 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.242346021 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.242807429 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.241974885 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.241814597 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.247265881 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.24343534 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.239485755 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.240263088 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.240127612 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.243132748 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.240385314 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.243623751 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.24478034 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.244143017 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.240247513 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.241384094 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.24986942 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.257273557 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.242633038 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.240652923 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.24073158 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.240944192 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.24204009 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.24115942 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.244302802 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.248408691 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.243910015 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.251012816 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.242994274 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.252185329 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.241764872 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.244362023 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.24872203 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.242266137 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.240251628 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.241873533 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.242054553 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.252759087 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.257511698 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.241771286 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.245203788 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.241578151 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.242357776 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.244358604 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.242045763 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.245635481 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.242180398 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.252652448 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.260015424 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.244989279 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.243126344 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.241751083 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.242210147 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.249499572 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.239811321 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.247505762 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.240983495 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.242418665 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.241118111 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.24215473 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.244210173 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.24510653 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.24289559 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.24151061 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.242864738 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.249548038 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.257371145 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.243891559 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.243787486 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.255855303 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.241231769 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.25066416 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.256652687 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.241259138 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.24129682 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.243828835 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.244332782 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.24249312 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.243342659 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.240861817 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.24220756 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.248052935 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.241580627 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.2444037 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.242599994 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.241245176 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.24169916 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.251549583 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.263090363 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.242584822 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.247888078 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.242447386 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.243205781 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.244990316 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.241882121 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.240299298 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.244166566 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.251219368 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.25119628 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.242053501 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.242463226 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.242804439 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.24234685 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.244123944 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.245498487 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.242334429 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.246008292 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.24539296 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.242892838 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.248443015 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.246125319 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.243718409 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.243799022 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.244040838 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.255087511 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.243198367 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.245088841 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.243237961 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.246616343 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.243763409 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.242793549 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.243718812 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.244286232 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.246909821 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.244900072 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.249393679 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.249129149 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.24630053 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.242824243 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.2431401 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.244674708 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.245145913 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.243380264 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.243405948 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.244195642 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.244962269 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.24249672 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.246314356 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.241892168 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.246325009 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.244285205 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.245662005 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.249218862 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.251623192 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.244197122 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.244354877 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.247706785 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.246995086 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.243933882 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.245332992 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.256811275 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.247495352 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.254140066 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.252574187 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.248308181 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.244756341 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.247665484 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.253459747 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.243540288 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.24535458 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.244246028 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.248494225 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.246145708 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.248492715 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.244473412 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.254042711 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.246073967 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.244656283 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.256135853 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.264243283 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245254202 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.246472301 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.249671397 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.245738899 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.245305122 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.248486364 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.244579754 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.255493009 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.265177162 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.245913807 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.247219548 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.245058101 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.247175845 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.249607026 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.249500041 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.247570494 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.24635599 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.24679913 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.24598312 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.248976044 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.247687282 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.2460466 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.247242831 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.249111168 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.252150613 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.246773407 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.249397857 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.246673836 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.248144267 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.2464849 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.249211015 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.24604896 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.246978975 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.24719421 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.246700696 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.2480623 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.249235608 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.246593181 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.247507213 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.24944336 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.247071228 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.249869434 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.256547611 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.256019138 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.247321451 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.246852887 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.247587816 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.251280414 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.246889984 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.246222401 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.247224518 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.249696294 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.250222493 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.247120658 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.249869007 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.251307231 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.265859469 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.268550921 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.249101819 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.248295922 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.254654441 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.25090037 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.249636723 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.251261891 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.251651127 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.252364063 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.255084962 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.248140183 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.255642664 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.265132038 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.248744583 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.254614029 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.252096458 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.255537718 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.25231858 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.248653944 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.249611924 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.252945819 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.267863773 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.252395741 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259404961 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.28081435 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.266536658 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.249577308 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.249172496 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.248787248 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.247941904 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.253137853 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.250055542 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.251885635 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.252080486 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.248111483 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.249329112 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.254524642 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.249861264 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.251213705 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.251682971 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.250242131 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.252196291 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.249029269 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.249060371 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.252278418 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.248950409 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.250029334 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.250565538 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.250280201 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.263889281 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.260596252 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.252539929 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.249933697 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.250970708 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.254974141 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.253184773 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259972663 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.259983337 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.250629702 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.250354976 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.252692577 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.24930498 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.251520564 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.251590496 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.251215748 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250601116 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.250821754 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.265813222 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.258578498 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.256676641 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.251665366 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.251301796 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.254585693 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.253614582 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.251992917 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251264533 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.25373238 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.250400356 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.25470079 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.254919021 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.253271257 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.254796676 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.261775077 seconds)
  done (took 741.523500032 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.253125796 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251875549 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.252583937 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.252346494 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.252437031 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252920684 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251895899 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.253135785 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.253314058 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.252375441 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.252267274 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.25333466 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.251990388 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.254285689 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251861201 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.253835495 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.253294756 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.252149147 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.254293683 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252458736 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.254213823 seconds)
  done (took 27.499340419 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.254733328 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.252025098 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.254325038 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.25586129 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.253784538 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.25595269 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.253048753 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.256187942 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.255294413 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.252529819 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.254677512 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255553061 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.253482954 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.252712231 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253975585 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.255834745 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.254698313 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.253464314 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.255846671 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.254116717 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.256492144 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.253796101 seconds)
  done (took 28.789438435 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.254327955 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.253115041 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.252432469 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.254260922 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.257390995 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.254398907 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.25303752 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.256397306 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.256522413 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.255756587 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.253184281 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.255194562 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.260042745 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.26165636 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.25705594 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.258156498 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.401957814 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.255144493 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.254841939 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.254420758 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.255227363 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.263305611 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.254977359 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.254830012 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.254141524 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.25505633 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.258768778 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.25773614 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.254563716 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.255662921 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.258830682 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.258232955 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.254499 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.256688857 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.254082248 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.256086435 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.261951733 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.256821575 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.255904199 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.258956251 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.265358939 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.279164227 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.25611775 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.264113547 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.259144963 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.258859267 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.259739962 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.263007768 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.256472915 seconds)
  done (took 62.94997576 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.259302312 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.260466393 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.257210845 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.259588774 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.260348878 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.259180418 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.259304884 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.259105637 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.256814657 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.257205013 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.25951585 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.257228091 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.256863232 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.260167777 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.259971437 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.257162579 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.256650778 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.256792865 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.256971552 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.257022825 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.258058578 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.26055477 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.259205978 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.257745733 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.260741665 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.257629199 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.25769013 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.260737129 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.258219325 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.257610334 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.260139773 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.259233124 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.260168342 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.257745448 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.258542532 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.260494197 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.26101164 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.258296159 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.259324186 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.258368661 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.261028567 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.260563735 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.261735019 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.261402569 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.259115271 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.259170661 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.258551828 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.25844106 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.258849085 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.2613874 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.262002608 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.259265826 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.261596507 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.259537689 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.261379436 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.262591013 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.259235564 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.259473409 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.262377755 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.25991632 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.25918495 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.262143606 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.260430242 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.263183362 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.262710526 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.261053008 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.260966849 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.261860157 seconds)
  done (took 86.842604585 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.259853854 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.259807664 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.259832211 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.260202692 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.260605251 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.260235136 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.260145415 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.260156503 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.260338212 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.259402831 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.260995351 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.262402016 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.260733647 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.262878178 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.260481683 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.260410412 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.260223913 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.260392546 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.261816651 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.260179622 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.260547473 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.26056863 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.260114345 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.26078296 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.26127662 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.261823961 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.260003068 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.260601741 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.260094579 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.261231639 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.261500457 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.260825026 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.260130504 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.260297234 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.260697966 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.26225428 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.261512819 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262326603 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.260992946 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.262056269 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.260704703 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.261237531 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.261031404 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.261625998 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.260926542 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.260528028 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.261390033 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.262254482 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.26415916 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.26238606 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.261803961 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.2622474 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262152698 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.261783757 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.261742013 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.265030075 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.261881557 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.262266761 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.261620215 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.262085979 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.261736602 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.266303749 seconds)
  done (took 79.39587603 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.266896684 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.26563808 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.262222661 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.263645322 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.265018048 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.262700628 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.265318918 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.26580322 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.266445906 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.265621787 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265725633 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.263952073 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265091749 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265803934 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.264106913 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264172574 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.264251053 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.264192458 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.266171351 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.263649657 seconds)
  done (took 26.495968198 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.26474345 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.266502068 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.264017072 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.264668848 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.267017663 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.265091076 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.267119787 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267239232 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264096487 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267381218 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.268001309 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.267762241 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265708821 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.265225799 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.266953483 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.265924373 seconds)
  done (took 21.457933901 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.265290822 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.267312699 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.264901269 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.264365475 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.265231726 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.266230758 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.268389888 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.265740408 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.265693985 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.267838609 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.267796252 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.267646068 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.269313783 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.265416365 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.265755208 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.267112377 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.265552539 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.266246607 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.268450711 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.264674654 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.266295391 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.266202235 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.269147392 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.268142834 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.26644587 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.266416571 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.267056632 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.266489149 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.265439829 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.269272526 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.266694182 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.266556055 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.266420081 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.266846707 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.266200375 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.267829758 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.269456614 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.268588548 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.269289363 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.269384218 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.269397848 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.267093798 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.269466944 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.269495269 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.267901534 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.270131713 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.267102147 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.268080468 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.267459732 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.267099204 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.269339434 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.267187615 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.269934562 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.27020566 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.269922256 seconds)
  done (took 70.91001851 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.27013027 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.270421822 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.268179614 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.269244505 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.270013622 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.267949341 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.269482231 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.267743206 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.268005287 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.270393796 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.268848392 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.271327368 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.267818396 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.271715106 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.269138217 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.271056427 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.268167923 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.268229258 seconds)
  done (took 24.051539029 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.268909947 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.268892793 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.270947846 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.269443027 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.268671696 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.271786552 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.269333684 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.271453313 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270917379 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.269604471 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268319701 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.270960215 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.271178903 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.27216103 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.268292629 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268624005 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.271895896 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.271681945 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.269009714 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.269028522 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.272281347 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.271722511 seconds)
  done (took 29.149709747 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.268719016 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.268229841 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.285519348 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.311921358 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.29809924 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.267803269 seconds)
  done (took 8.904782378 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270384262 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270743395 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27016191 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27238592 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273417037 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269998503 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269872211 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270169691 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273023745 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271319294 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269720366 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273117529 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272521305 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270550709 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273832526 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272249782 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270015225 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270115795 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271020056 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273644068 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269654364 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273126843 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270603264 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269896871 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271029913 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270654027 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274761662 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271296564 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270592321 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274354439 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274759842 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27125165 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273617498 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271667198 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274968035 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274661276 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271520572 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274125452 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274666419 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271745165 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.274776395 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274728562 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274668629 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271447447 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27425539 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271972526 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272068553 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272872178 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27174857 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276272514 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275112465 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272787063 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276190034 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275519696 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275950582 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275751795 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272538294 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273406778 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275113481 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273566166 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273456788 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275420072 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272909964 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273000282 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275761772 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27280495 seconds)
  done (took 85.20974706 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272181979 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.272594931 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273692863 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273598941 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272990725 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273586106 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27389147 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272897455 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273263142 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274132365 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276786248 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272360851 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273237768 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27350274 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273442526 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273644251 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273793286 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273888833 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273768392 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277677721 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274533097 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274356622 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274469641 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274342847 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274795138 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277302164 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274560758 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274649767 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274243064 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274860202 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275175958 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274897704 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27522061 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.274811982 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275388843 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274525003 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274511962 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275782361 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274974514 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277691331 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276162565 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277809291 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274822999 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275429607 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276629925 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275827001 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275703735 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274805268 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276016405 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275683081 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27707208 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276227462 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2765402 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276452088 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27612341 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275465126 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275640111 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276875601 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276517524 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279044988 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275859511 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275624558 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279605937 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276176032 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276222474 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276738067 seconds)
  done (took 85.371577498 seconds)
done (took 1729.008196532 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.371951986 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.394335285 seconds)
  done (took 13.977897977 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.435935087 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.390148854 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.274404134 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.310153952 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.273998807 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.27393397 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.270488153 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.275526276 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.275644629 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.275107462 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.274977098 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.460142903 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.271548713 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.275216445 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.27469759 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.368267215 seconds)
  done (took 42.202332569 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.302907396 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.282478104 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.38887216 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.299024946 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.303062175 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.456149805 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.333565828 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.280917579 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.445167595 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.321058203 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.775985449 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.302453178 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.281313929 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.34296256 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.297095151 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.456792808 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.519815267 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.781962923 seconds)
  done (took 29.384535695 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.71226095 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.290600583 seconds)
  done (took 9.216145342 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.321996745 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.271811457 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.278785702 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.285157762 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.288837765 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.329742716 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.317014531 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.325392704 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.296834109 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.324695975 seconds)
  done (took 64.260489195 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.298047383 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.280317943 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.279796866 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.278443864 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.271573088 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.271995035 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.278290515 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.275757058 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.769941761 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.403003428 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.294233001 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.2872903 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.281358013 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.281674615 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.281063316 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.314961713 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.408399444 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.280678353 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.27993553 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.28586324 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.280808284 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.404778034 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.320159414 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.28252893 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.401020703 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.780298001 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.284884404 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.287283453 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.398851758 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.280771412 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.279538042 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.280798797 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.281911847 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.850337345 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.772655803 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.287349581 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.316768648 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.288195809 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.281310298 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.454033419 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.281272638 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.288410764 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.274497076 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.752187074 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.438714987 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.390939177 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.53425344 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.284126457 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.282014797 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.343447223 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.282381514 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.281489205 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.309266253 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.02220006 seconds)
  done (took 108.197424068 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.314667667 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.767645545 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.443731358 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.296125072 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.058851215 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.92743308 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.277230612 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.550604436 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.288345638 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.275271718 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.602112711 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.7664257 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.277208036 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.27727654 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.360185205 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.359773038 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.273932039 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.052112706 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.275842846 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.27751967 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.688001561 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.301680403 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.275341829 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.324799788 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.314952383 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.727781091 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.706610975 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.733191216 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.278738917 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.274513805 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.727820825 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.284654488 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.347609466 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.275372789 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.543637582 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.618947786 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.598119869 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.276598669 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.287304958 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.275374622 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.307813241 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.722927052 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.61079828 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.277007305 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.280426783 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.740739092 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.278232415 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.282750237 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.277234927 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.474371722 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.271817112 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.27876337 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.720146362 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.278631979 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.610541408 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.368939968 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.336506466 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.767196107 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.277932374 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.36959353 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.289456938 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.277036237 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.279663043 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.281177148 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.278980042 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.611646723 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.645774006 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.27843331 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.611535457 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.722212234 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.275894979 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.804957515 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.131043352 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.299291016 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.33889753 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.276886206 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.868884505 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.754104805 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.319289944 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.278113366 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.598327498 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.278663376 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.591287443 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.290143936 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.277014091 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.699154752 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.294474992 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.31640256 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.291432942 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.278453555 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.92388865 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.282171576 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.55952686 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.311777423 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.277148969 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.27878371 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.328051552 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.278708616 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.280418154 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.283501712 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.796965929 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.287001214 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.572054813 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.30008732 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.278212587 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.281654314 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.280423697 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.27980271 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.494507013 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.714663391 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.280169457 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.279982684 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.281928629 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.287551174 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.579511819 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.283290687 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.572482346 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.278637893 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.279518514 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.283736239 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.960434643 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.313697666 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.27896813 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.294878109 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.127904013 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.490470714 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.296740612 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.282117706 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.278878288 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.294280443 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.600814472 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.279495969 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.30877148 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.284367575 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.975985232 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.294753393 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.320399523 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.936314847 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.284320253 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.185598141 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.3023638 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.282232619 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.584910148 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.558357216 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.590734159 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.280140615 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.283377703 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.961309215 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.301256857 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.412445398 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.298753653 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.283517326 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.478497757 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.509220951 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.283109154 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.871712544 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.282308528 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.490932005 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.283776233 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.596283438 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.765170369 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.285252917 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.285571787 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.978613472 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.951098361 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.89866318 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.282169621 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.613047339 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.277722795 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.736638813 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.282191914 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.28286242 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.731557025 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.285224668 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.283851916 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.281350184 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.28235011 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.344540559 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.456403794 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.646261141 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.289706354 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.729250399 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.288357788 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.282492771 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.302553521 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.282968415 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.636370344 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.343662733 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.285812054 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.316918975 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.284786462 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.292404488 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.743555681 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.177946946 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.286017421 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.43524339 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.904628988 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.283256184 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.283635945 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.859743024 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.533699375 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.780687765 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.314846922 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.579950398 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.28762119 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.32189146 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.998442907 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.294409945 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.742888077 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.286387387 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.284475148 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.88758905 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.285379532 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.363116132 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.28483259 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.28407643 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.806476608 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.284792267 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.290749254 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.609550297 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.283385089 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.53128272 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.286220006 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.332781774 seconds)
  done (took 1098.617386309 seconds)
done (took 1367.06852142 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.284254982 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.289000456 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.274141808 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.284231026 seconds)
  done (took 26.358436262 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.291183351 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.287042969 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.287880275 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.286675664 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.290999159 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.286718859 seconds)
  done (took 8.954167054 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.353365473 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.283073446 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.28296818 seconds)
  done (took 19.143301403 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.500883521 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.521461394 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.645764446 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.394254208 seconds)
  done (took 10.286929015 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.288313228 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.289206836 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.287941772 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.291385184 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.292122984 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.29328915 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.291627475 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.29247762 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.293396354 seconds)
  done (took 12.843864545 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.147683148 seconds)
done (took 83.96256258 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.64825888 seconds)
    (2/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.114930312 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.354946329 seconds)
    (4/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.677090149 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.230040776 seconds)
    (6/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.313743978 seconds)
    (7/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.283194319 seconds)
    (8/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.82000087 seconds)
    (9/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.296553435 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.305310224 seconds)
    (11/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.345515916 seconds)
    (12/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.502089216 seconds)
    (13/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.344580253 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.558446761 seconds)
    (15/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.485058022 seconds)
    (16/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.239646317 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.329264303 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.313498924 seconds)
    (19/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.390200891 seconds)
    (20/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.403804654 seconds)
    (21/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.125816991 seconds)
    (22/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.314290159 seconds)
    (23/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.34789104 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.722555596 seconds)
    (25/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.784763345 seconds)
    (26/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.286087395 seconds)
    (27/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.63919718 seconds)
    (28/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.051796419 seconds)
    (29/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.287931155 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.249774272 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.899736886 seconds)
    (32/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.663321872 seconds)
    (33/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.308995317 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.39113848 seconds)
    (35/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.273461808 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.983090011 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.289155573 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.397991222 seconds)
    (39/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.339587045 seconds)
    (40/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.908296484 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.69766434 seconds)
    (42/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.522338979 seconds)
    (43/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.292384565 seconds)
    (44/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.692267844 seconds)
    (45/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.362562036 seconds)
    (46/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.909878411 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.276768924 seconds)
    (48/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.582574891 seconds)
    (49/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.894174285 seconds)
    (50/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.292142455 seconds)
    (51/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.660965993 seconds)
    (52/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.611102697 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.145815008 seconds)
    (54/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.73978973 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.281267682 seconds)
    (56/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.31105721 seconds)
    (57/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.375123166 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.202839395 seconds)
    (59/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.476865442 seconds)
    (60/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.649624991 seconds)
    (61/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.320068094 seconds)
    (62/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.407879973 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.405212931 seconds)
    (64/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.887070877 seconds)
    (65/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.67360707 seconds)
    (66/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.30897452 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.553443141 seconds)
    (68/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.538098283 seconds)
    (69/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.314592406 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.290526399 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.937290407 seconds)
    (72/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.349787636 seconds)
    (73/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.502945085 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.631237201 seconds)
    (75/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.353405509 seconds)
    (76/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.289098087 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.409080219 seconds)
    (78/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.830372544 seconds)
    (79/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.395048227 seconds)
    (80/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.278368946 seconds)
    (81/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.294330527 seconds)
    (82/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.747679527 seconds)
    (83/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.601486604 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.704010867 seconds)
    (85/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.301221014 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.060599392 seconds)
    (87/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.148793909 seconds)
    (88/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.29288024 seconds)
    (89/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.875924229 seconds)
    (90/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.887621218 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 5.471407431 seconds)
    (92/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.360411989 seconds)
    (93/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.375755288 seconds)
    (94/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.349420734 seconds)
    (95/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.39614425 seconds)
    (96/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.579906205 seconds)
    (97/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.279027702 seconds)
    (98/309) benchmarking ("sort", BigInt, false)...
    done (took 6.295310346 seconds)
    (99/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.921846801 seconds)
    (100/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.71341271 seconds)
    (101/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.058592191 seconds)
    (102/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.159532315 seconds)
    (103/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.831171827 seconds)
    (104/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.398156342 seconds)
    (105/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.668097608 seconds)
    (106/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.136335001 seconds)
    (107/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.920222647 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.875406864 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.63830974 seconds)
    (110/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.195750664 seconds)
    (111/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.291515313 seconds)
    (112/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.280263011 seconds)
    (113/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.746799 seconds)
    (114/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.579368582 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.694010091 seconds)
    (116/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.297045025 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.397028025 seconds)
    (118/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.646640038 seconds)
    (119/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.604699908 seconds)
    (120/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.302266487 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.678240425 seconds)
    (122/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.413307925 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.379529764 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.500383481 seconds)
    (125/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.063777598 seconds)
    (126/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.4410235 seconds)
    (127/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.00938754 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.157862333 seconds)
    (129/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.067479665 seconds)
    (130/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.295985693 seconds)
    (131/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.654368401 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.929908721 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.706515795 seconds)
    (134/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.4390879 seconds)
    (135/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.93771529 seconds)
    (136/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.004022229 seconds)
    (137/309) benchmarking ("sort", Bool, false)...
    done (took 1.819621272 seconds)
    (138/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.323270595 seconds)
    (139/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.323631923 seconds)
    (140/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.051349472 seconds)
    (141/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.600868668 seconds)
    (142/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.520390346 seconds)
    (143/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.282016554 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.611526033 seconds)
    (145/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.29326594 seconds)
    (146/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.404357294 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.052083031 seconds)
    (148/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.363801192 seconds)
    (149/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.279709403 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.561043304 seconds)
    (151/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.289548802 seconds)
    (152/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.309832507 seconds)
    (153/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.295270561 seconds)
    (154/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.290138769 seconds)
    (155/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.364931876 seconds)
    (156/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.28344477 seconds)
    (157/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.131755842 seconds)
    (158/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.174516622 seconds)
    (159/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.325021541 seconds)
    (160/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.89581182 seconds)
    (161/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.402726627 seconds)
    (162/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.676457618 seconds)
    (163/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.853402098 seconds)
    (164/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.800670543 seconds)
    (165/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.338992001 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.818724355 seconds)
    (167/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.061086508 seconds)
    (168/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.326967478 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.344648368 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.923342741 seconds)
    (171/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.323673052 seconds)
    (172/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.885999988 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.228855845 seconds)
    (174/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.297556477 seconds)
    (175/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.339770105 seconds)
    (176/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.483604356 seconds)
    (177/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.297889205 seconds)
    (178/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.863555609 seconds)
    (179/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.700983708 seconds)
    (180/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.366292478 seconds)
    (181/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.054485902 seconds)
    (182/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.439644989 seconds)
    (183/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.308770511 seconds)
    (184/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.380774492 seconds)
    (185/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.292670051 seconds)
    (186/309) benchmarking ("sort", Float64, false)...
    done (took 5.614624078 seconds)
    (187/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.710474103 seconds)
    (188/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.029564462 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.369679812 seconds)
    (190/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.876714855 seconds)
    (191/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.426646185 seconds)
    (192/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.380866959 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.373552929 seconds)
    (194/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.457723675 seconds)
    (195/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.309995499 seconds)
    (196/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.301573782 seconds)
    (197/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.387157554 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.652929316 seconds)
    (199/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.312938543 seconds)
    (200/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.70282187 seconds)
    (201/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.299951502 seconds)
    (202/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.330821197 seconds)
    (203/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.949640445 seconds)
    (204/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.342988593 seconds)
    (205/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.601779315 seconds)
    (206/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.203416986 seconds)
    (207/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.299510502 seconds)
    (208/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.400227405 seconds)
    (209/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.629703454 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.305211245 seconds)
    (211/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.301790176 seconds)
    (212/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.43226117 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.325508364 seconds)
    (214/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.521324121 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.360655546 seconds)
    (216/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.592452271 seconds)
    (217/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.297171558 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.720507269 seconds)
    (219/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.298228023 seconds)
    (220/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.62591363 seconds)
    (221/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.589378413 seconds)
    (222/309) benchmarking ("sort", Float32, false)...
    done (took 5.301048426 seconds)
    (223/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.567627299 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.772331687 seconds)
    (225/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.294559122 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.524726506 seconds)
    (227/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.834207741 seconds)
    (228/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.281661166 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.404363792 seconds)
    (230/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.491726493 seconds)
    (231/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.587852086 seconds)
    (232/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.522639484 seconds)
    (233/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.295460271 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.781378249 seconds)
    (235/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.406490016 seconds)
    (236/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.3833068 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.214829253 seconds)
    (238/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.321496 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.167769477 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.651999732 seconds)
    (241/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.354055518 seconds)
    (242/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.66937647 seconds)
    (243/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.295350339 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.310993975 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.206962627 seconds)
    (246/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.301528841 seconds)
    (247/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.383874489 seconds)
    (248/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.788464583 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.298782554 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.298537245 seconds)
    (251/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.343534294 seconds)
    (252/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.29562783 seconds)
    (253/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.32823893 seconds)
    (254/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.508081471 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.161732575 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.835764615 seconds)
    (257/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.298352266 seconds)
    (258/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.862668465 seconds)
    (259/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.725033532 seconds)
    (260/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.284664828 seconds)
    (261/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.363472165 seconds)
    (262/309) benchmarking ("sort", Int8, false)...
    done (took 4.348831429 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.509748526 seconds)
    (264/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.297466121 seconds)
    (265/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.072247064 seconds)
    (266/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.311293465 seconds)
    (267/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.513250722 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.343336105 seconds)
    (269/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.904157703 seconds)
    (270/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.298519681 seconds)
    (271/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.286607052 seconds)
    (272/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.445654398 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.694512618 seconds)
    (274/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.86457346 seconds)
    (275/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.653750532 seconds)
    (276/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.38169672 seconds)
    (277/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.087772725 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.345788424 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.789730479 seconds)
    (280/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.423448501 seconds)
    (281/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.068250149 seconds)
    (282/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.406878318 seconds)
    (283/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.320973732 seconds)
    (284/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.122539296 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.386653535 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.323434158 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.408968126 seconds)
    (288/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.330610697 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.387138597 seconds)
    (290/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.672207154 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.418309234 seconds)
    (292/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.57428003 seconds)
    (293/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.871416528 seconds)
    (294/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.636089078 seconds)
    (295/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.112288434 seconds)
    (296/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.300338246 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.506564455 seconds)
    (298/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.368175635 seconds)
    (299/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.111362487 seconds)
    (300/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.745769183 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.362737241 seconds)
    (302/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.331998092 seconds)
    (303/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.674847861 seconds)
    (304/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.305267258 seconds)
    (305/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.33260026 seconds)
    (306/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.403414932 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.327720166 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.304518691 seconds)
    (309/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.05743203 seconds)
  done (took 913.645444289 seconds)
done (took 914.87170512 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.333840792 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.327681913 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.311714641 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.333336886 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.424704728 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.342080214 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.322130491 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.314164535 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.359462689 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.361079707 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.311982941 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.33967626 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.314009395 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.312552236 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.311575399 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.327158225 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.330704108 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.317169412 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.329639847 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.321647 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.329880798 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.313441884 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.361764033 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.341372106 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.316040662 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.315689718 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.317508264 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.332611039 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.424700609 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.317306097 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.317281728 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.325859148 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.333680873 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.314287525 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.308958456 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.333940861 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.325668153 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.323820651 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.317695409 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.345455002 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.684937771 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.314117115 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.315781291 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.314119908 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.315408059 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.317818649 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.315912897 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.321720166 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.327696023 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.328553222 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.678414697 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.3299117 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.317946453 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.315320344 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.325785617 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.315062603 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.318412354 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.331710216 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.334590961 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.3305662 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.33024659 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.326163205 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.317154806 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.33216174 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.323377865 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.719302309 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.310898774 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.320346108 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.736822538 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.32208346 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.719618912 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.325039555 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.317743787 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.329667606 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.348199321 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.339417878 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.312418309 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.315845832 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.323863366 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.315099823 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.326832201 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.329977652 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.320850473 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.317412461 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.330674423 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.346341867 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.326105173 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.318606864 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.326817702 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.336848921 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.324075053 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.328493407 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.32013632 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.312578952 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.326552748 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.321101306 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.320956746 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.321291519 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.32146756 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.32760346 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.719296746 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.338740691 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.314001011 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.314613295 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.316862152 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.332751629 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.736012089 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.321429354 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.338672732 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.365637252 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.320447823 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.336365925 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.324086324 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.334716158 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.326522584 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.320757553 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.31399055 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.337535211 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.693920491 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.333598983 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.320043796 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.316902868 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.334426868 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.32039242 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.315808879 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.34455424 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.323080015 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.333694978 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.439840616 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.329235121 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.351324 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.31695444 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.322236072 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.349306144 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.334294218 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.351053501 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.321457826 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.335021822 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.335925085 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.315023803 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.331888292 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.330153961 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.321021502 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.325623489 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.314741901 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.352565615 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.333468734 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.333335864 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.340789441 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.441423252 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.316796396 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.338118978 seconds)
done (took 222.389120587 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.380331509 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.315437496 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.428381239 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.321604379 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.416499929 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.425555411 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.319492975 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.319225793 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.319291977 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.72440946 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.318996447 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.319327011 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.315931793 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.319751765 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.400582088 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.321812517 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.319659948 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.659758309 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.317988755 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.388646167 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.310176241 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.320136419 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.320943883 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.731827309 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.315997474 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.314145576 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.397460293 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.322452942 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.688417195 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.310582059 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.311878462 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.66612691 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.417852545 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.338985656 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.332318237 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.32929721 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.425398055 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.340729732 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.40856012 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.400595885 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.423975029 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.35815222 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.313184124 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.319969151 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.325392802 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.320854897 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.321414714 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.350448764 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.313974935 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.321007654 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.68611442 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.332465009 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.322300191 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.321508829 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.322068479 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.349361747 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.321881094 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.320171063 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.409061823 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.321052427 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.388532833 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.782737038 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.699372515 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.324380738 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.315245993 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.321710598 seconds)
  done (took 147.817407207 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.387004196 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.394067697 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.433081575 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.3235103 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.369977841 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.43630327 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.324560535 seconds)
  done (took 10.923659122 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.327203265 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.323866059 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.370611355 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.370258378 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.321823069 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.46944214 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.325662593 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.333517659 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.321740485 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.375481495 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.324518258 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.325496763 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.331767758 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.322347905 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.370783118 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.333133091 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.436519763 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.323010592 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.322398962 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.473154847 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.323286851 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.332322679 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.374125059 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.333927547 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.324113644 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.327833934 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.889119704 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.322943196 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.323820202 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.326251366 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.323471156 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.35974273 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.32709775 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.316360275 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.324400578 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.442412425 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.322772264 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.324839387 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.327494788 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.319563115 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.326934698 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.327676167 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.32698796 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.325712751 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.327973282 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.347034109 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.327255661 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.326654239 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.326900918 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.327661906 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.374402677 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.32740173 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.323997225 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.32478825 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.380976187 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.334218417 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.324034245 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.323816967 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.327855962 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.325082784 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.474062315 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.371579903 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.328065637 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.371899231 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.328135384 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.328275386 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.327197653 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.328290082 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.379771062 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.327348653 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.372832602 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.326422047 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.478751436 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.348998621 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.330640251 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.328658988 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.327430029 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.325797045 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.321280647 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.331646237 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.325335915 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.326673906 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.331148989 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.325821031 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.327008004 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.428225632 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.436723376 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.326633308 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.338640423 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.331831829 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.326857414 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.378141401 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.330023556 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.326880432 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.378362427 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.441244866 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.378996617 seconds)
  done (took 152.400495423 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.330872619 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.3369029 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.326911497 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.342080765 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.326772296 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.325670422 seconds)
  done (took 9.24956956 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.330350104 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.330496681 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.331012344 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.331458783 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.327136623 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.329742443 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.328412282 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.329772376 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.331464694 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.329781938 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.328426689 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.330187155 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.329880836 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.327742528 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.327727352 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.330754838 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.327574942 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.328646911 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.331822493 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.327611338 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.433802574 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.327598582 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.32740422 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.329285471 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.333348042 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.330768186 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.337335042 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.330688818 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.331618167 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.337194421 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.331063693 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.329413425 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.329728711 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.334579554 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.332612679 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.330507932 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.335827339 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.332187873 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.330664391 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.331210776 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.331717781 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.3303539 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.3327912 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.331996453 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.330780082 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.334156333 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.336060788 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.337943633 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.329818575 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.33211995 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.332111334 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.333663785 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.33149711 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.332463576 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.333843066 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.333471255 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.335330058 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.329824327 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.329038079 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.331543016 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.334728368 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.332622707 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.332187861 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.334166983 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.332831383 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.333476687 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.331321585 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.334120733 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.330517764 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.333711882 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.333053791 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.33253448 seconds)
  done (took 98.236248851 seconds)
done (took 419.878280428 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.748000083 seconds)
  done (took 8.012428558 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.415512107 seconds)
  done (took 7.682053253 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.465269567 seconds)
  done (took 21.736922093 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.327553993 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.406019998 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.336882757 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.333707164 seconds)
  done (took 26.670202454 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.732890929 seconds)
  done (took 7.998485264 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.334322849 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.327413311 seconds)
  done (took 13.928769459 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.330571624 seconds)
  done (took 7.596465498 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.00077048 seconds)
  done (took 8.271740408 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.354008124 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.338184168 seconds)
  done (took 14.226291065 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.311040436 seconds)
  done (took 7.576566541 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.360922444 seconds)
  done (took 8.62793727 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.332349664 seconds)
  done (took 7.599306159 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.347541667 seconds)
  done (took 7.614085989 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.211415494 seconds)
  done (took 9.476762809 seconds)
done (took 158.283390606 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.323863336 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.329202734 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.329164565 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.327316314 seconds)
  done (took 26.57552823 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.369453496 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.36921006 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.369889771 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.38046815 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.372487767 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.369624704 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.362058391 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.361925237 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.38023701 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.372738645 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.37128618 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.372197764 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.369527653 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.362322317 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.371838261 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.371769877 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.380798511 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.37169563 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.362308962 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.373657922 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.337294361 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.380937158 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.373184098 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.337133018 seconds)
  done (took 34.112252456 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.530353585 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.404921373 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.486454834 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.38519397 seconds)
  done (took 7.075225274 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.388774694 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.390611598 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.40308741 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.442984203 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.467608874 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.399600068 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.364066161 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.358786724 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.344477798 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.390420887 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.465682223 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.406418327 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.473169106 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.337990199 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.523559037 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.337539296 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.337970581 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.38972237 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.440991861 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.454254417 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.338537831 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.388985982 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.393081467 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.407153862 seconds)
  done (took 34.913675152 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.337010499 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.344896722 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.344088463 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.337835552 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.337439318 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.338128363 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.3429222 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.339083812 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.359299025 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.338532114 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.336418186 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.338275296 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.337620076 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.33792323 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.337432002 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.350292727 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.351839117 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.338192877 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.341439648 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.344295113 seconds)
  done (took 28.102721306 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.328519084 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.182099234 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.68026988 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.585853345 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.330554529 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.328748595 seconds)
  done (took 27.70660737 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.403242293 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.536498469 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.338134626 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.688314624 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.765635137 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.336198022 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.336174925 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.572478378 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.883535979 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.885614575 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.394497609 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.405404448 seconds)
  done (took 19.816962395 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.336026951 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.333665853 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.341853155 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.349756625 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.391397669 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.342273048 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.343487319 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.329401425 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.395156586 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.398233444 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.343363802 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.392667007 seconds)
  done (took 37.569606379 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421869562 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.384677544 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.349569374 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.162646304 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.720622483 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.546668018 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.216421576 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.771595057 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.342230757 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609309016 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335605352 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428217772 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.591767504 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338448094 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.338476432 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.33921172 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.566986782 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841028928 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337826492 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.293099861 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363566828 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.336536034 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.394614343 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.36648963 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.54732971 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.470945787 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.597252442 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.335986329 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.617320424 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.350132862 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347359917 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.335990901 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.610138374 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015583004 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431966577 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346783333 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.194279974 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.052156186 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.329291712 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.310058542 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.302801343 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.341650601 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347816648 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338045815 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.271219174 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.341266612 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.784101139 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.347694154 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.048980804 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.337133749 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.348011079 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431507862 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.340860718 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.156300075 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.428604643 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.33885508 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.335301749 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340888191 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912983417 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.833673435 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.35128615 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.27632157 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.806885624 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.304987132 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952860773 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.440898748 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.342086181 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.342015342 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.273542065 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.304545155 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.359563044 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476727055 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.359472796 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.000261455 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087190419 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.342918014 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.272158706 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889588748 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.347351162 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.275506506 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.568211248 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339038992 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.280030002 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.285207833 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.273832724 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.050634064 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347960798 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.754441224 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.343787447 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.773459862 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.353664854 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356830799 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363609346 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.563468662 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.221799809 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338864079 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.339696753 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460617187 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361921833 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.777918074 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278197384 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.344522767 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596842922 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.552149032 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.355050127 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.349109715 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.549605959 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351890297 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.358530164 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.348004832 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.354013134 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.932611686 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.355420364 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.847583124 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361500858 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.341083282 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08730736 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342630455 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.445082041 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.348778527 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.595577428 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.123989818 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343240596 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42357541 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.342875023 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.341663935 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.411437469 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.864229044 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.342225575 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.340502724 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.343356493 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.355221082 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.338454944 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305174731 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.339701512 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357541285 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.345786472 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.566263291 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.351719625 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620590883 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.276428131 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480494009 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.441988001 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.565734355 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.528406141 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.340941326 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.60325476 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354330884 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.357189534 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.357613208 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362460443 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440847845 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365013425 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.355079482 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.604137989 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.346814643 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.346973371 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.883403376 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.349302 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345273243 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.349541227 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.210410079 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926712802 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319509954 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.350767067 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.236810354 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.355939022 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407129758 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.348736952 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.353692433 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.173019654 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.318706781 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.350462385 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.340282896 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.567534074 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.354428034 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.407739752 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424065943 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.542645498 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.9285529 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358867207 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.276843649 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.053729522 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.036666855 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344161751 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.279313309 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.343779482 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352188062 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.353984813 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.994427792 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.937217801 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347899831 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.291745795 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.35188378 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.354533193 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.349225545 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343754602 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.134302304 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.82355906 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352220504 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.357700421 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487685275 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.357165861 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.277690719 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.347961652 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.349258864 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.344674284 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.344715335 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377342865 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.303156862 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.831840591 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.605227427 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.208586407 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.358983565 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.479570686 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.377074848 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.346351317 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.306643957 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373172482 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.348552564 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370864273 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.3555911 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.359029948 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.028701423 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916204469 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.117027715 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884078375 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.289447239 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.357893345 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.34972782 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.784174984 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.28454491 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.912289583 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.538521529 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.787866745 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304682875 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.548432723 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.558386165 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.114393828 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.357685088 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.575971405 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313068469 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.337454758 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.37508258 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.558899333 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381523653 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.351396429 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.277640752 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.867156676 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.58059209 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.299739597 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.427083209 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.784835093 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.331597676 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.36515551 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.343357449 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.719332006 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.521192118 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.06264848 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.525925526 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.3530892 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.361673144 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.828130596 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.353382528 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.577463565 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967216326 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.349404652 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.56609335 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.291875009 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.357042433 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.358549354 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.346482684 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.661879448 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.351022496 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.607191903 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.358768056 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.282843241 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.347218664 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91924137 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.206474887 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.353995102 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349537842 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098879279 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364882794 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633957259 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.357823661 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.138368875 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358244003 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.283832659 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.282802537 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.042014114 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.352619691 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317563731 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845559742 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.763371208 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.431501674 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380349377 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.198166763 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.605321457 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.364170803 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.933365997 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.57940782 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.27680359 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374235167 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.450944409 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.358989344 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.336817376 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.34979797 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.586814683 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.2107228 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.575306596 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.408512481 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.257253912 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.345566224 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.564784005 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.349958872 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.35541048 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.599908731 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.06327568 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.364727904 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082208178 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375401545 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.355801076 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.273015671 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.817450568 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.357156398 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430730909 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.362043555 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.361809629 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.361419991 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525326902 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356814503 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.355458766 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.36574064 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445916662 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.860318114 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.131203462 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.355559966 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.943535387 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089655011 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.952235784 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.368884341 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.351570484 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352430523 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.286621287 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499769119 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.582284891 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625482828 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471973983 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.899357679 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376995621 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.358468776 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364368367 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.567007048 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625825201 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.25240742 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365878097 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.369896346 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.352962082 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.364805799 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.564670105 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863481124 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929487545 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478486466 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.352948012 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.807845103 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631439426 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.353003991 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354109953 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.947628003 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.36818954 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.73206238 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.358765197 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358606931 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503359846 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.363515254 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030491621 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.366556809 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.514430161 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.126627609 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.327727436 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.613129121 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.822920475 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.365416239 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.945821797 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.061262097 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.621847705 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421224133 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.364955357 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.470527121 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501208207 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.366288522 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.353866572 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354998156 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.203542412 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.065126355 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.363949039 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.960409436 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622841972 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.353633601 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.36537724 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378497196 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.365645515 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.58017114 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089614131 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.582830686 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.366562009 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.35928269 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.172789519 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.956096384 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.371581527 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.290360372 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.359543515 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.605469036 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.595414794 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.3788602 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.808312723 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.06705429 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912161644 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.332053254 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378082727 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.35618887 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.07572002 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959017065 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.158224046 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857593119 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.917237232 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.359050567 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632928406 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.361931308 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.3553684 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635836589 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.361472171 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.357348057 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.371932344 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.946283586 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.135284829 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.371007488 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.345369203 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.296820866 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.705861231 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.049342067 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.296379563 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.360560898 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.541337535 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.362109044 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477534858 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.369056982 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.361527664 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370081907 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.092684998 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.637908675 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.364273645 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.346720523 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.351771264 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.369768654 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362923117 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595216538 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366937355 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.028876114 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.709396828 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.614509676 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.358872996 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.344350191 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.364018797 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359772271 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.356447938 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.567124631 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.001725849 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920364012 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.37062025 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.372033117 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.363010591 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.576103899 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.571467409 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.372535254 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.371508537 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362815255 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.376805201 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.261701019 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.869954335 seconds)
  done (took 1603.800367426 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.38355174 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.365427537 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.396572984 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.415387953 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.413306779 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.47523855 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.443067305 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.475071914 seconds)
  done (took 52.664047164 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.366870627 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.575724317 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.389061493 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.359516154 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.364128615 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.366283679 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.79534722 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.367096706 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.366253841 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.366200889 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.361018889 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.368192377 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.980792271 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.366187501 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.358362484 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.355740106 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.365389215 seconds)
  done (took 65.774433394 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.364544098 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.378427526 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.477503372 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.364825488 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.412867344 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.376334179 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.260042591 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.42274843 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.370979889 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.73104255 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.013808333 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.386274703 seconds)
  done (took 84.858022095 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.365184111 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.365307179 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.36475308 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.364871977 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.365747332 seconds)
  done (took 8.12382881 seconds)
done (took 2032.36008949 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.610759331 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.059048562 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.00977859 seconds)
  done (took 5.366327892 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.506552645 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.555534858 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.710985901 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.687108973 seconds)
  done (took 7.758211101 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.632996821 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.730125208 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.541383696 seconds)
  done (took 6.203184006 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.772453564 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.370490755 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.480584955 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.36046373 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.364088361 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.362406124 seconds)
  done (took 20.387996286 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.365291141 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.368686476 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.365557891 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.368244614 seconds)
  done (took 6.765967242 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.344684839 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.104530173 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.344027984 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.358798028 seconds)
  done (took 18.450678743 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.111812704 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.126785843 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.109917996 seconds)
  done (took 7.647140564 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.358240636 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.203945345 seconds)
  done (took 9.860939505 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.659947527 seconds)
  done (took 2.958826377 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.496780382 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.635618822 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.389360933 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.325267203 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.422233547 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.186977316 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.020944788 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.578652199 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.314829082 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.563937926 seconds)
  done (took 28.234146261 seconds)
done (took 127.165785265 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.165429177 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.379689469 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.562841606 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.177452231 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.594105025 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.562175819 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.640285259 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.146645917 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.645269086 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.637995016 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.14282932 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.593553152 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.808311972 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.379772947 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.807361635 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.754155976 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.593639714 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.211762703 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.825663458 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.07336063 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.637309705 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.772528417 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.972833874 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.791546591 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.593905417 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.514696303 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.368573542 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.755303289 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.993753936 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.381182994 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.514994299 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.235321239 seconds)
  done (took 191.535167586 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.36111455 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.361356379 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.362089337 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.371520364 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.365873552 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.362769223 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.364601788 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.361690293 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.376055958 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.361208479 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.366069857 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.366352772 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.362059663 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.379108631 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.380895572 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.376982406 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.37972117 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.362634705 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.363581899 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.362334063 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.378857522 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.375524711 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.377006525 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.363848621 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.365108578 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.364137069 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.362699003 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.369362449 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.362461996 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.365102968 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.36440507 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.363096885 seconds)
  done (took 205.061981663 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.373296601 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.365378801 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.36425852 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.363841479 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.363562164 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.378717662 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.365297038 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.368268416 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.369504492 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.364717078 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.363240876 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.378269035 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.379185809 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.36321549 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.364314225 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.368821885 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.364395247 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.379195911 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.364135753 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.364025875 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.365489403 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.377937076 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.363254378 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.377995492 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.372514436 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.366008225 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.364484092 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.364691346 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.364618872 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.372491413 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.365334878 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.374094883 seconds)
  done (took 205.099184675 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.563961183 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.375047856 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.376766651 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.316392049 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.377255806 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.375466398 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.372347574 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.567556532 seconds)
  done (took 14.629865083 seconds)
done (took 617.626400859 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.699214174 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.413794411 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.574251056 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.398650877 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.156403033 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.39277054 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.396905609 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.563369351 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.29544977 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.567599961 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.642206556 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.389521016 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.77330617 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.394145306 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.651400972 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.492532408 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.230290727 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.345679422 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.711528832 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.943330816 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.650142919 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.835304141 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.563199003 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.285285625 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.775352615 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.837769031 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.064898335 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.237365778 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.395703113 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.718727905 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.071674576 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.329975753 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.451113129 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.433172747 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.489666271 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.472694474 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.301513514 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.430234278 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.574525473 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.599512169 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.928159953 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.112027797 seconds)
  done (took 92.89739968 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.363422364 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.362715303 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.36227976 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.363400479 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.364780581 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.364067832 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.36305889 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.363342257 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.363290788 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.362726303 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.362786913 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.363917498 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.362692802 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.364990583 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.362327369 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.363770422 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.364231292 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.366051334 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.362732011 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.362506176 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.364675645 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.363774107 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.364366601 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.36272072 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.363891551 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.36449564 seconds)
  done (took 36.762486252 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.379930992 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.613592648 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.81145265 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.385855877 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.37663544 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.381846234 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.454670369 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.382666357 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.379182558 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.379705836 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.52830581 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.38657932 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.413830711 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.805838823 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.3826994 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.381298569 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.381047845 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.377736204 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.618963017 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.389978244 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.457303086 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.384349189 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.454432393 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.389144594 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.380396567 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.378424646 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.382140753 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.90702457 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.381257872 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.53102838 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.161915304 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.455377566 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.877594706 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.805996652 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.162623472 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.38506884 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.382542737 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.533446837 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.37995248 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.379580072 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.455758141 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.379823595 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.805245457 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.016134155 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.398720951 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.381879727 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.931376615 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.535586391 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.62703807 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.388317254 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.829041451 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.384410091 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.383652686 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.380403288 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.62324732 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.385840551 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.378418935 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.955855469 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.384671832 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.455321287 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.383481974 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.379969308 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.625091078 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.379723166 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.61319736 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.381331306 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.389059011 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.380617762 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.806688576 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.384884195 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.029138207 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.395682815 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.38318225 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.529170359 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.614113091 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.957949212 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.383746944 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.627982132 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.884987519 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.454683211 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.384011209 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.898650002 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.460560535 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.386033639 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.387515703 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.38728241 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.384505353 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.428043337 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.456442965 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.959124045 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.024197008 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.978963266 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.462861521 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.39513541 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.381813948 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.960641276 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.387008472 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.385578805 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.80189714 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.032215029 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.397907855 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.389474904 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.015054364 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.400115489 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.459654701 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.388848115 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.808701423 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.383230124 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.430062045 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.385721481 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.390019931 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.385009002 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.459010807 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.38560145 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.385817887 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.00489558 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.553482781 seconds)
  done (took 181.325920885 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.37562494 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.375131951 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.375357508 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.375911248 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.375442083 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.381250195 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.375810922 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.375929543 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.381953892 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.375435816 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.376380189 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.375927063 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.377003873 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.37911193 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.38728651 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.384269453 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.987998606 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.376658573 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.377571105 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.376121778 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.175335108 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.379320835 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.37738747 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.377137635 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.376765421 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.37724747 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.38324635 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.378855143 seconds)
  done (took 153.307460395 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.388762254 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.943795278 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.384586909 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.514530855 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.40815414 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.386025214 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.512104456 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.440759125 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.38612375 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.385676838 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.386182613 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.683884844 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.388451566 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.897878853 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.574120785 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.520286916 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.909703326 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.391162127 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.385857001 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.386507695 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.516698608 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.393250223 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.694439846 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.948996331 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.390213653 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.945467535 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.374485063 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.389428067 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.384914111 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.948245581 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.386860771 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.699486259 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.463517207 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.445159889 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.948498245 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.902756118 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.904094034 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.533957748 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.385185562 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.38586418 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.387343474 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.374726959 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.970503605 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.392596067 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.385695094 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.965426814 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.407928338 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.389934982 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.397791052 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.387851848 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.444819494 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.444790163 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.702222511 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.978237026 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.469049079 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.41282413 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.516827955 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.758695439 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.389082365 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.895707849 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.374148331 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.956946464 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.392564194 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.376759563 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.389641572 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.395566903 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.540542766 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.521657558 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.89722441 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.387871723 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.897341631 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.541729394 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.392252847 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.38927738 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.39258459 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.956428341 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.91672701 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.543208153 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.523542125 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.584235622 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.379979217 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.38749023 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.376568539 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.464284944 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.391707401 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.962817728 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.912234076 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.395162465 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.392043717 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.393353709 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.392253868 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.565083947 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.979544589 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.465790224 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.896035628 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.709003975 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.692639039 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.392731836 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.451122144 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.393110995 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.703972663 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.393115964 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.449446633 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.823376974 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.703455464 seconds)
  done (took 165.146651152 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.629940397 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.613331522 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.486243825 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.501900337 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.917737719 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.960402609 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.582069235 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.51350064 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.499522559 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.63067504 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.546845141 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.485262927 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.572866543 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.462352534 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.089536713 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.455996307 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.48690583 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.522882825 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.501685444 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.423465235 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.021623023 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.674763605 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.55863254 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.486693589 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.481375004 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.147020318 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.925466827 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.901217726 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.560532304 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.644017696 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.901134034 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.50669147 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.34366718 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.051673909 seconds)
  done (took 66.411478819 seconds)
done (took 697.156676516 seconds)
SAVING RESULT...
DONE!
