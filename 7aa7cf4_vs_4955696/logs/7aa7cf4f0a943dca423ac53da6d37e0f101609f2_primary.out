cset: moving following pidspec: 29626
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.293962211 seconds)
loading group "string"... done (took 0.581050825 seconds)
loading group "linalg"... done (took 7.111246459 seconds)
loading group "parallel"... done (took 0.164133095 seconds)
loading group "find"... done (took 1.117437295 seconds)
loading group "tuple"... done (took 1.974507201 seconds)
loading group "dates"... done (took 1.263968162 seconds)
loading group "micro"... done (took 0.23405405 seconds)
loading group "io"... done (took 0.963374379 seconds)
loading group "scalar"... done (took 38.226654864 seconds)
loading group "sparse"... done (took 12.286954984 seconds)
loading group "broadcast"... done (took 0.96506529 seconds)
loading group "union"... done (took 13.035863172 seconds)
loading group "simd"... done (took 4.424174991 seconds)
loading group "random"... done (took 8.92387095 seconds)
loading group "problem"... done (took 1.932924844 seconds)
loading group "array"... done (took 21.099436723 seconds)
loading group "misc"... done (took 1.917381107 seconds)
loading group "sort"... done (took 3.196129938 seconds)
loading group "collection"... done (took 17.870311765 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.534287585 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14249859 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118021251 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.139237679 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.18456374 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.13279889 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.144742642 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086236912 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.024274092 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.163159843 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139798806 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.476529881 seconds)
done (took 5.05565845 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.212792009 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08845359 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096604996 seconds)
  done (took 0.899157048 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066600289 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129233248 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081109523 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068425636 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06778887 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.081482497 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06799409 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066731136 seconds)
  done (took 1.280991179 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076076292 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.0695038 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085095491 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068838728 seconds)
  done (took 1.018021328 seconds)
done (took 4.20933032 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.894128071 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.236245349 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190219324 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.452686291 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.149224995 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.188032739 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.664460462 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.320899542 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.211249149 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101544096 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.105808837 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.378251656 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107247201 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.668282445 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077296693 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.10629825 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.159979065 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.418313572 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082155621 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083764964 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104725685 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143158713 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.10430893 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078115418 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.16949065 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070501004 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.146923727 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096259819 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069152913 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.244322503 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190164843 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.688163297 seconds)
  done (took 10.458000817 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100920467 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.118187581 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070389378 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140451158 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.104005314 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086651467 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071622646 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.08407755 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092756702 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.159688458 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.115496622 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.106077726 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082851103 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071372544 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.101605916 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.212016848 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107092726 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08561319 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088113868 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076955794 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12250761 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.084065037 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094573006 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079410103 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.153598464 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.198314876 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113660222 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112435747 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071316989 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08184156 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132600804 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145524551 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069276433 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083196226 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.140846666 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111925379 seconds)
  done (took 4.602019083 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.026866342 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.15993136 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.0920656 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.153666134 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.08634836 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110401461 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.084079062 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100148184 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.24596576 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.073628935 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.455242517 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129202494 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102287093 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069023362 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084249111 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069122075 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.509758265 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.145307607 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103495791 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103111709 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07462943 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086889919 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.368992148 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068913312 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067969738 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085291277 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060472088 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144642133 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069111374 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.208942921 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.09014632 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088041037 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103101121 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19291961 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.086234043 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110681955 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.107423915 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084711964 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066567415 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.168448645 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09097433 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067153883 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.105381284 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103682534 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119601311 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.08338291 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068154839 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.181307251 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066925604 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100008073 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.872621284 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.094632909 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.166572916 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.080589907 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.082770858 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.267376166 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.103123003 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071681066 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081936784 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.242989411 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.164298503 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06882993 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067283668 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083450618 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069408037 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.367617456 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083402001 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.682538716 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071819454 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077185227 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085913566 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068591832 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088586385 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073851863 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101271997 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067578545 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.06890773 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083795791 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06657879 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084392584 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086280804 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.204172088 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.084285411 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06890974 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065298426 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103430078 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11090965 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070623347 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066384902 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117152389 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065602452 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084135518 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068416204 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.119729481 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067932024 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.101988851 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08584381 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115398654 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.085020243 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.122202504 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06877691 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.115257195 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073503496 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114685017 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.093969217 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065020226 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068257877 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.153197591 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.082185001 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.066478721 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066584381 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082663181 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068433349 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.085112509 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.083515592 seconds)
  done (took 20.849021025 seconds)
done (took 37.653643784 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.291205652 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.091949995 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.091501368 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075478755 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.092303808 seconds)
  done (took 1.437186486 seconds)
done (took 2.205336633 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121127388 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117266288 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06449379 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113344222 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064437223 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.117455164 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113785645 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081903985 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118409201 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065171476 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111934177 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065417947 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064720159 seconds)
  done (took 2.015562445 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084451232 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084877267 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08610493 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083144418 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079685321 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082991521 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080298621 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104740806 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080608636 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088770322 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065031395 seconds)
  done (took 1.68282869 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084017303 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08411451 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086520275 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082568813 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079005076 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08280883 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081745758 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102817799 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081606215 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089600294 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064473037 seconds)
  done (took 1.683379114 seconds)
done (took 6.137876975 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.08004215 seconds)
  done (took 0.837869283 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.692205707 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.689613361 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085065787 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.134448896 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.223178243 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.15415671 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.439691252 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.110628688 seconds)
  done (took 10.458830453 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.089522129 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.099173252 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073240384 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.08949635 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072433646 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.086926863 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071473317 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.0722995 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088422272 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070047895 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084447693 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070033006 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087659318 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072706948 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070849043 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085293214 seconds)
  done (took 2.112141864 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094428848 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093161068 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092207474 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076388906 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.09069834 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074106305 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.093082682 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075797418 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.08778262 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073425526 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092417389 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075979824 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089038011 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066732513 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091516998 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078209369 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088405367 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075773959 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092296002 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07755657 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092072755 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066186481 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089047889 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076036474 seconds)
  done (took 2.870691826 seconds)
done (took 17.041476991 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.132541571 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077159457 seconds)
  done (took 0.976315916 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082533436 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098479578 seconds)
  done (took 0.952746056 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084199686 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081730335 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089516269 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.09435123 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067582938 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.082912287 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103398371 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067087243 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082537399 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06809385 seconds)
  done (took 1.592677401 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070929234 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093881999 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071717769 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098331349 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075710297 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081788648 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074141516 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.08501771 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07928076 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079482881 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072172626 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099992252 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072668101 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101133467 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074586192 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085277996 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087695013 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070119469 seconds)
  done (took 2.247627567 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067962285 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067747956 seconds)
  done (took 0.909935168 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069180367 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065419027 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083117624 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067823573 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080072987 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063962792 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080498535 seconds)
  done (took 1.284613583 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.399545561 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109831836 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.24100423 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.089399987 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.103708672 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.261845759 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.085316163 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072101986 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089124741 seconds)
  done (took 2.264598782 seconds)
done (took 11.000287306 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081318868 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087497806 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111022276 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.415923902 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107057551 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067060602 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.132137844 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.219493105 seconds)
done (took 1.996715619 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.126890123 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.615268006 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.400528983 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.214063086 seconds)
  done (took 2.00980011 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.380534038 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09343112 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075032493 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068233423 seconds)
  done (took 1.402112961 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068518036 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07076225 seconds)
  done (took 0.921907916 seconds)
done (took 5.240970682 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06916279 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.103710786 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067528594 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065382862 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.082279526 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068534202 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067046425 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.082606642 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064941944 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067296548 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.083098915 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.070161119 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.082880975 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067723632 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06508051 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080700896 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065569909 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06733067 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.08106283 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065247647 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065544162 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083228087 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065304764 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065310558 seconds)
  done (took 2.564289174 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08800439 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084472264 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07350195 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088747892 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072384085 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088135909 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073528239 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067963079 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08822649 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069969127 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087522726 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071960296 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085007635 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07199666 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085470065 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071948874 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08882705 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068035465 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069882313 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.09059562 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07296781 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083709229 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071910872 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088509702 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071701071 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08686674 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069516582 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083682775 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07329075 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087193671 seconds)
  done (took 3.161788083 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07284176 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064908816 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081291004 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071812794 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064980481 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082437561 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065236313 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081301865 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066652077 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064655754 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082051115 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065424977 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064890596 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082617868 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065974323 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.083665159 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081624761 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065578721 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081070373 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066224839 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068043082 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.081213833 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065148433 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081230108 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065527892 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064808993 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081595813 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065119957 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065644162 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.081537862 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068236471 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068430075 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.081209649 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072499881 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084427841 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065873739 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069337665 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.081284192 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066201092 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064830362 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080794457 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.0648981 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065008403 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.08809715 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065490103 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083209773 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065923371 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066537847 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.08168344 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068364327 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08107397 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065201008 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066916815 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082241688 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069546653 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064841675 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.081431113 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065082117 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081822681 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06522609 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064548831 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080269653 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067932626 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066337643 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096650922 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072241496 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080689999 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067596481 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066493083 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083716064 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06640293 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079379127 seconds)
  done (took 6.029964463 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.119265623 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091740225 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08380468 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066712597 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080049786 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065644302 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069149325 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081972017 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068032321 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086986227 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065860196 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067059165 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083024621 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078677265 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081956819 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067244199 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087177572 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063861709 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065679685 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085472931 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066022684 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085389826 seconds)
  done (took 2.504272204 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.186829787 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088526723 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110713141 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092440195 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086234474 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075300777 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072050898 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088732047 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071567665 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087603737 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069867802 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087099469 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069884105 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085902448 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070781849 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086053489 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072246774 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085963172 seconds)
  done (took 2.379357159 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080080461 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067160817 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107304946 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068103564 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084277621 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070750886 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089240058 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076189343 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085850571 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068676749 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093098379 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070423964 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086146057 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068403431 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070057588 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08397197 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069971125 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084194026 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076305647 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088643591 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073145972 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092056355 seconds)
  done (took 2.546951035 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083346735 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069027481 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101874869 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086310763 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063672397 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066165678 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090866551 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067781715 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.08990714 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069896514 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06714967 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082833909 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072238868 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083748106 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072748448 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084215609 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069340052 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067965836 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085996699 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064394278 seconds)
  done (took 2.334171349 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089421521 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084936252 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068916503 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093629502 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069054345 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085129995 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07688586 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085168577 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069479814 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109678489 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069348764 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085866044 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077357661 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089861498 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069932847 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092541999 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077993127 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093227216 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068838318 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08539869 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109397878 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.178550917 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09398429 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068924564 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084493852 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069670667 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068857216 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089829619 seconds)
  done (took 3.204477609 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068749378 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067635241 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082005694 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066259961 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065398777 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081740219 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065684472 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06635419 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084695722 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066119964 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067470494 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.083847078 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068411032 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.084018833 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068145497 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068519473 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084041024 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065610737 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065469607 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08197405 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068168906 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067846629 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083872144 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066034544 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081197218 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068236145 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065405176 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081853628 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068337601 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065380361 seconds)
  done (took 2.966415384 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079470982 seconds)
    (2/2) benchmarking "in"...
    done (took 0.091747447 seconds)
  done (took 0.972800343 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067033275 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082367777 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082243031 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071752986 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088667203 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068317939 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092593879 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07250558 seconds)
  done (took 1.424650792 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084398937 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078970024 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086339014 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079429212 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095023589 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084835785 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.155157318 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086101509 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07491414 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083070189 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082414884 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066933277 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091048468 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068501175 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090288547 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07377514 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065947343 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089757988 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071198783 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083201055 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06967473 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092496468 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070195362 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064909057 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086270592 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.076952647 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095696632 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069363992 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087470143 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075018805 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073651051 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.079189155 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068678614 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085901891 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.0668894 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.093943726 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082876546 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086672356 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076920345 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068949102 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094382765 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063027933 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088638327 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074753598 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094310204 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069477906 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069080766 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.081235641 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065679666 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087015456 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064307274 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068192738 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079819742 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074792599 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087668417 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078692359 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.068945082 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.0858867 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070362443 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.08781314 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07454379 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086196944 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071203221 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068256049 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093583564 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072934097 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093372667 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063900158 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062465206 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083219394 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077019341 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107152621 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073685564 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085250908 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069468605 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083021139 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071881666 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069521611 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090001558 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073877257 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085033716 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074082201 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091395847 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068365505 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070391186 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092622209 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067641805 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.08643072 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066037022 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101543924 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067440775 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065545315 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083133561 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077799903 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088582067 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068122175 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082097625 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075085067 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063027679 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.086046514 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069086534 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084790259 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078463169 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089808229 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074643801 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092225836 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076010623 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067392745 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087596031 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065317423 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08554545 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067155611 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074533749 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079808441 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070918737 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084945011 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068805967 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076146716 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082995093 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068589388 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091947858 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073478609 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.08343696 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06544312 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070533004 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085116341 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071656734 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092643294 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067547761 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06324784 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.08004835 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071157884 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084603615 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071248533 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089054575 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07104309 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062811905 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083609465 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072311644 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092831864 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068369861 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067934297 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.090159468 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06895442 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084195501 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074311326 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086978318 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067431002 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073279071 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085162009 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064128474 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088075581 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070289595 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066804542 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088222389 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071975947 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087422611 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068735334 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067148321 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.090236823 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068306128 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084152777 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068037184 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083418591 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078279001 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069763404 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.081098953 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065586054 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091511234 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066150695 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067014818 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084233198 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070517112 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.08560462 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066997169 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067182478 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086580019 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079204537 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089518702 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069575753 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090232715 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079573142 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084767651 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070110053 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067110561 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0865288 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069399808 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09340418 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073577614 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089606271 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071680473 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065559884 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090795516 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07543291 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.08380625 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066877855 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066692216 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089083251 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074026102 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088268509 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06955929 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083881409 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069095777 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071316056 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087180301 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068893729 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083634181 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07349619 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067016176 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092495998 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069184321 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094991329 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071129146 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080605324 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072142627 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083236212 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07409494 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063278001 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082927932 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067987118 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068643977 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084655492 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071407498 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.07910588 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074554179 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091576453 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068610984 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067375031 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085340192 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074980687 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085874575 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072181685 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070866529 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091068902 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078356856 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084321707 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071388945 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095665403 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068379122 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062571842 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090383071 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.068098499 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084125197 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067902973 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066434808 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087919356 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07710959 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091887607 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062964415 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087304274 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067706984 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066934652 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080736095 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07305889 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069572147 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086148775 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074296468 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086219989 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068716472 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088152569 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067877017 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06888011 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086880043 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071183177 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086155842 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070069174 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06669811 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087980744 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066690337 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083376966 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069986208 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068385375 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085239621 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073295638 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085353498 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068338888 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069214373 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.0858743 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068295611 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08522797 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067361541 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070575673 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086275867 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067882336 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086834756 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063664983 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073914167 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084993296 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074973202 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085641564 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065436591 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.089509083 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.0707213 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071916336 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.085984415 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069107605 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086533619 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06867563 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07012393 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092458598 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065707043 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095864197 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075692285 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085585353 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071068728 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068456914 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.086289711 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066854722 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086075778 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069604639 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067682702 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085601168 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.0719406 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087086755 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068499848 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069509231 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086392014 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068726857 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.08616581 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063050378 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067341929 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085099368 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068522169 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094897601 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068869613 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084061143 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067633755 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06966522 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085152223 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066083257 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092527814 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076799646 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085455379 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074781308 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066812666 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086218172 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078366845 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.079802184 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066435002 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065718646 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082863503 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074734655 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.08609251 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077597832 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084200717 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067814423 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06539936 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086428261 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06734483 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062541605 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.08367596 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071383654 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084189492 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067780868 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068543952 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.08854489 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068996923 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094211445 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067864687 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085278185 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068812172 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066023915 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084528277 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067373896 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069829038 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086879944 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065857313 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083065115 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068127153 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068156698 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086530989 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067981769 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086567714 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075170254 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068171599 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088634873 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071391345 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.083254581 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071089927 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067381085 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085865406 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067545289 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088797373 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071541885 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086174914 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076469579 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067647215 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086167128 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068181764 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.08326684 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067887938 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067629479 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.08512832 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067352561 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.086401186 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075682469 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065774301 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.088256799 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067506957 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085235509 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074571309 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.085666708 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.0715478 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073877526 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086163046 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069874377 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092782865 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071769523 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088190313 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069908315 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068879165 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091384142 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066842897 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091367306 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068889525 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068952278 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087004688 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066825239 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084848977 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068562524 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067265507 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.091581515 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068505369 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08444696 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067354539 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065712638 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.086260588 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071988286 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093171406 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.07018472 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088505024 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064091385 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066115151 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087351304 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06632283 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069129991 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.088768725 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072863887 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087966597 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068913895 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083414925 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077579098 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073685272 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089181598 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066353099 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088966934 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069543013 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070023274 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087375686 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06815141 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087239149 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071947865 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068935818 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.084812615 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074462811 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088989906 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07016063 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086875344 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069238521 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068854805 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081463644 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069202538 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086680336 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073920675 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070208156 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086467602 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077432721 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083008822 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068729362 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071154483 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086131339 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071698096 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081504722 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069199863 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085557216 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070109239 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064503619 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085194809 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066320135 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070774392 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.084987998 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063786244 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095831311 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076945395 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088769837 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068351098 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066947395 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.081592749 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064463763 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085436595 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070391429 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069931608 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096063555 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067365438 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085104558 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064170483 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068551399 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088483811 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07115298 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083564858 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064274069 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066948014 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088786427 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.0740922 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083946255 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068255837 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070533176 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087972041 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066970529 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089358 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065316317 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071721426 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097402689 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069108137 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086503486 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073631711 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093157271 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069212286 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062878128 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087153576 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070423692 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086131013 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070334259 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086558635 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082990089 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08832157 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067341538 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067336286 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088543041 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068248359 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.092451366 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070086045 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069125282 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090254283 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069932603 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09372131 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07132495 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092636659 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071145901 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070419698 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.08684252 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068130796 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084188386 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067252546 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06915046 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087395486 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072700751 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.093362242 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067271699 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096360298 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077283463 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087698393 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066019303 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067079481 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085576637 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064585342 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069204549 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.085117742 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066908477 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084263128 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.068182754 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068425925 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091446976 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069342878 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086436087 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068185212 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06227637 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.087844791 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070681418 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086431379 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065696144 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068052404 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.087333035 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072261288 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089264695 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066686338 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070695042 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.087238816 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06905874 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081312744 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074969025 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06680083 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088564841 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067986793 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085931593 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070440631 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070632568 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091348436 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069716721 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088402374 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.076953336 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088699362 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066179817 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065507185 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090787638 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.0665868 seconds)
  done (took 46.862088661 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110275741 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083899768 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064632868 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081595586 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075925326 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083395693 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064778141 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064756005 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083291818 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067771046 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081728653 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063988578 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090929387 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087520279 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09425879 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068634516 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081908305 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06515652 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082146703 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065655908 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090890907 seconds)
  done (took 2.501609863 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077510519 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.090378788 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075155529 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096467504 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069481003 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091639913 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074817798 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0909776 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095402855 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069985361 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.095479403 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072917865 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.087381856 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069133568 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08708383 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073043212 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.096751753 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070212711 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.090232308 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074988794 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0900119 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07455769 seconds)
  done (took 2.657454875 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070488258 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067254517 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086962407 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063879773 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067142219 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081298222 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071448499 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083596906 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071328176 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.074399479 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084964163 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067202411 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086655104 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064411665 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067651493 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083583764 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.131940956 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071214323 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066874551 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087732627 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063486032 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087650916 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063817129 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.0639937 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.084798162 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071802027 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086915367 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066296387 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067086845 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084558875 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068278079 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.082853045 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.06988576 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067855982 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084621996 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066544335 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067340504 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085469807 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06416736 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083121583 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068506637 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063840369 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086398573 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06937534 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065376902 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.084014561 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069224924 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085109282 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063991737 seconds)
  done (took 4.537555246 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.086713394 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.130053923 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088594316 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090799996 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.103593379 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.094325436 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071966023 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112265881 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06551689 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085767469 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083988904 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.104028792 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08695978 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073022337 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07098601 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086607378 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068392224 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085503747 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071456677 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086156753 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072062204 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.092782144 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100944193 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081969421 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090065717 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067291009 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08515972 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072479255 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099744368 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072282971 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.091474766 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073533995 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.101439343 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069609042 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085531698 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070409082 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.102914377 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067883071 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088387431 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065878718 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088022986 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072345471 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.092459906 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08403838 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086267694 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073377015 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08602059 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065546804 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.099130696 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069763311 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.09368422 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.100745861 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07212489 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067569883 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.090690459 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101289473 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068789515 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06580638 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.089652826 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098593277 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066149341 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070314964 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.100874567 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087815228 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074891391 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100276865 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073155258 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08948847 seconds)
  done (took 6.70234907 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078198697 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092737554 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081766521 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101283999 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092478995 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075373946 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092415961 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074508638 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092675824 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079993317 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093115825 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113743544 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070094106 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095237962 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074261989 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092959789 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074317409 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093302803 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073526235 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094027137 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.09305498 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083285668 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092306915 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.100464663 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104971313 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088079272 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074235231 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.091910318 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082933158 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.093329917 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104029266 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074601193 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.092246411 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100132925 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087090471 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09243749 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067417933 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092197291 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075291067 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092191647 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069471747 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101057302 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074066004 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.088036074 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074004529 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092570346 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.100647627 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086008388 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096114091 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096991808 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074778862 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100370835 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07375134 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093359321 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100646167 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.107220209 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101432987 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099327875 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074236185 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100575062 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101618005 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.107670016 seconds)
  done (took 6.389761922 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090074402 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095050109 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097544746 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063532673 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066198521 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091636749 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066379617 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084018873 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077502667 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094904948 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079040588 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090825746 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074730326 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097498192 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090215185 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075781598 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090394236 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07274648 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094988208 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071906866 seconds)
  done (took 2.523715944 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077471681 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103587506 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069341402 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072874272 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090887344 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073901116 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089568527 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071046381 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087338586 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071963111 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09687822 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07903057 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087742973 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074049007 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09628314 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073854126 seconds)
  done (took 2.179378576 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.0813435 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.097428673 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082865089 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087718059 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067186714 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084685099 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068373205 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064231527 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.083752691 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081815022 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088009456 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070579999 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087102253 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066709022 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064918472 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090253072 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064735725 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.084742751 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068179083 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.101285124 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079749534 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.084826755 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069608934 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069106197 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.088653317 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073263041 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.087440814 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066182963 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085228612 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068175423 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086743784 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07590839 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083635486 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067222367 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066044888 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084048619 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068088309 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086754869 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071286937 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066786228 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085265329 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067281369 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086931517 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068905557 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.0824687 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069596187 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064293629 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092240533 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06680043 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086742355 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068344539 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.08880716 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06923441 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077446415 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090808521 seconds)
  done (took 5.14511076 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08307101 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071100815 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083726991 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066363724 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08956486 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070248138 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070981228 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089395151 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069927366 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084818451 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070733311 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089163525 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071089144 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071114048 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088779893 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072667067 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082750217 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07037825 seconds)
  done (took 2.265234972 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07420673 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067718561 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094784468 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068546279 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086435251 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070963504 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063480441 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085828361 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066560699 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086074565 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0692202 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070121795 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085482091 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071286527 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085882744 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068167841 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070598545 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085883149 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068299719 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083005586 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071067435 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066548066 seconds)
  done (took 2.529183788 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.07506265 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093780661 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.163092214 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.108796872 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084195946 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.099934708 seconds)
  done (took 1.495167431 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092936213 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099412726 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068559399 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107825375 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07639186 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088525693 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070113885 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087948161 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078984014 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101977903 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069624153 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097976363 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097125286 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079765438 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093913864 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075052202 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089081642 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0694472 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087258993 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106361686 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070619856 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097390319 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071258445 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088267248 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070819784 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096620963 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078549778 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102556398 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088438136 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078910838 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0942398 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070584547 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09691009 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101501357 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07264303 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097353614 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070985203 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107138917 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074854523 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09710139 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069757878 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095562109 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096968358 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075829233 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097365974 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069672181 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093941308 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069176356 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090347335 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112436737 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075241852 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096839675 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094251069 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079089566 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097512746 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113533215 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083663654 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097208805 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093889156 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084200158 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097419994 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073801671 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097601219 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102313096 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075561219 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096954151 seconds)
  done (took 6.664176117 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08859859 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107105003 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070785334 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102292 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097313633 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071269815 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08802153 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070846699 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087901896 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070006738 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129543269 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070365979 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097485783 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09713455 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070710558 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088957214 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070477625 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097100867 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069301224 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113059123 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087890181 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078657456 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09721035 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096801352 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083338157 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094274331 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069749221 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088799077 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069240678 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089301251 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075230118 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089545162 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097128408 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070142126 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097087099 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070622331 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088630814 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076039896 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089552059 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075709295 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098120666 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106429505 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070604405 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088746354 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083236212 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089440274 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069457944 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088995882 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069394137 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089114996 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083571484 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10325818 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102631823 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097106634 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071335096 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088849069 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070583958 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088273167 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070684376 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094407122 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078478036 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088941246 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113563904 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070666011 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088956773 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078525148 seconds)
  done (took 6.559961195 seconds)
done (took 129.885828033 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.206524853 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.186165286 seconds)
  done (took 1.261298515 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071432372 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095901955 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098584539 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129223416 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087600989 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101785609 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119079299 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079852982 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067618842 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087086891 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068162138 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087347731 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133001468 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067795056 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.0871493 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070085867 seconds)
  done (took 2.326934348 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10462351 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.195469735 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109768667 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066183142 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100447407 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078631044 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085743202 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077348154 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094591543 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066997601 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077630005 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096805523 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066012526 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095894139 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075089951 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.098471038 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066231089 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098255441 seconds)
  done (took 2.533921668 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.105027391 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141619178 seconds)
  done (took 1.122832352 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.203020711 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.127778255 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.203306245 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.41367185 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.205220181 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.276525038 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.174311723 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.172034624 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.159253738 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.170445855 seconds)
  done (took 2.979739327 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101366064 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170376866 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.31032913 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.13829168 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.087199609 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.116238701 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.137804726 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.089425665 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.101440439 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100544999 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080985763 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.09818089 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099230196 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.096668511 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075293583 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098243077 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121348709 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076823919 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077603302 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.098160327 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118512075 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068620764 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076097257 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.095187806 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078089634 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.099089656 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067396517 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087289133 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076598959 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095729023 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079911785 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114142745 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098358198 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.131886005 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.083216414 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.130303837 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098597081 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072666323 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.095375383 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07383825 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.098955493 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079160127 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103762801 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078124562 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087547842 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079743248 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.087044238 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068812035 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.100196118 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.078464224 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.09916132 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079683594 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.129348374 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.098246847 seconds)
  done (took 6.261917407 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.7443281 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110828421 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094956573 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.805446859 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090311483 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105525652 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.711563192 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118584468 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.209572899 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.764514953 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.090447822 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099679625 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.182278117 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.213951601 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.899926461 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.284970474 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.634196956 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106428472 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110476866 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.132300951 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140701049 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.176880591 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.1500974 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.437501404 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.076492096 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093880218 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.138725813 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075625926 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.139537533 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.106705217 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093928009 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.155686807 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.226598316 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.156739651 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097961401 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071750215 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09199526 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.148984425 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.220690428 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191764771 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.158842677 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069282812 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091224878 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.139595409 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131561072 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069634605 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.141692496 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.152293331 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168969588 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074744591 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075320219 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.163680305 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139722493 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.143034309 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.100851116 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.265407696 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.283106909 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070242164 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120926624 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103345186 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.21662685 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104917271 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.200419866 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140493191 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.168367681 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09112599 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.73334488 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.147227 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092191707 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075865318 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120130558 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073784644 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.16067298 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.125623343 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.370031746 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.161876768 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074828525 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071429827 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227709905 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084905584 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092222992 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.14093077 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076664599 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12242819 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.14287381 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.163663272 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.147120154 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.208032397 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.142900768 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.137458737 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095563644 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123685466 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.077111175 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.190088455 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.1929799 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.141434134 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.187927589 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.138058065 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162068175 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.147713498 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077553083 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.149273567 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119576686 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101737455 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138123339 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.190779886 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.10224579 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.105292265 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073769469 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.160749507 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.125078733 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087171137 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.139014581 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.149467051 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.481195071 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.148246775 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068713113 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108238026 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141164724 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.141795704 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097414417 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.214094886 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124294607 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.146724014 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121371087 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088750549 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.099684747 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.160365369 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.08008402 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122961814 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.137647568 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098371701 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.215582773 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.167589462 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098742873 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.19390796 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.160738544 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096325686 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.1493125 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119320555 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.146456406 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078624053 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139077281 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09765237 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.749427692 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.164119878 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12246247 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075359097 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.176498288 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070847029 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104748384 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083451498 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090456897 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.727018104 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107328727 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080723449 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.105605361 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074648809 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122017013 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.156830056 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075197296 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139143177 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.201742906 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076215791 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119569401 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.104654525 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.140735863 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.07606488 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.105683973 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.103947193 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.085142739 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123046334 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094847497 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08562807 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.146858915 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.141162918 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.192001182 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.541395188 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09284608 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08266079 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.199868798 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09215543 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.243324536 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137601959 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.198785717 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140667405 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.101629177 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.26329653 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.142434796 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.174547814 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.107445564 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152093957 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068894022 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.157779469 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.143505217 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071743467 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096969378 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.142190334 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.145193449 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.141171218 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.940360367 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07096395 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.203186581 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090766832 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.151671788 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076161997 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097901488 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.260602377 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07267943 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145321469 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.14142467 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095632215 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.082966386 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.700332689 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.084260802 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.160098663 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076214087 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.191724303 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.141591904 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.136777437 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.13663026 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097033552 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.140022067 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.18561041 seconds)
  done (took 40.436738285 seconds)
done (took 57.801341021 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.257267422 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178222407 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.24155111 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144852924 seconds)
  done (took 1.797596621 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.144745383 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104510126 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119340761 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.086497914 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.104909738 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086900599 seconds)
  done (took 1.548255932 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.403597074 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.264823156 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.229768143 seconds)
  done (took 1.802610109 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.260215872 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.213187567 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.447555384 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.297260814 seconds)
  done (took 2.251383657 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.175638232 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.113870114 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068894209 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.106935149 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.158565695 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.252647677 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.128234042 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.188083943 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080484415 seconds)
  done (took 2.226186588 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.198258627 seconds)
done (took 10.731089819 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.114834316 seconds)
    (2/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.098133162 seconds)
    (3/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.274524889 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.135840483 seconds)
    (5/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.19693174 seconds)
    (6/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079736835 seconds)
    (7/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102230126 seconds)
    (8/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.206770867 seconds)
    (9/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.105549729 seconds)
    (10/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.243320125 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082989694 seconds)
    (12/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.21349736 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.131257887 seconds)
    (14/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.170987192 seconds)
    (15/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.199329044 seconds)
    (16/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.174326233 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.101635687 seconds)
    (18/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.092470153 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.09636044 seconds)
    (20/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.131351433 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.133446202 seconds)
    (22/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.101119869 seconds)
    (23/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.221642773 seconds)
    (24/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.170393109 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.128599667 seconds)
    (26/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.198011829 seconds)
    (27/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.08216495 seconds)
    (28/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.100774256 seconds)
    (29/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.190448522 seconds)
    (30/309) benchmarking ("sort", Float64, false)...
    done (took 0.148138803 seconds)
    (31/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.214605202 seconds)
    (32/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.079993806 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.119317155 seconds)
    (34/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.222191988 seconds)
    (35/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.120219823 seconds)
    (36/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.096908372 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.095039773 seconds)
    (38/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.101035736 seconds)
    (39/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053013022 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.11806035 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094095553 seconds)
    (42/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.129286155 seconds)
    (43/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.077981668 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.096264204 seconds)
    (45/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093381512 seconds)
    (46/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.09785031 seconds)
    (47/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.146383852 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.129720832 seconds)
    (49/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.178968582 seconds)
    (50/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.074311266 seconds)
    (51/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.202545502 seconds)
    (52/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.054104793 seconds)
    (53/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.092571233 seconds)
    (54/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.181398394 seconds)
    (55/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.074797931 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.099149709 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.09538477 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.117041587 seconds)
    (59/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073883118 seconds)
    (60/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.121605912 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.114000135 seconds)
    (62/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.169510399 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.113487214 seconds)
    (64/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.161987106 seconds)
    (65/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.09893007 seconds)
    (66/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075847727 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.091202614 seconds)
    (68/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073146111 seconds)
    (69/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.13591291 seconds)
    (70/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.055306317 seconds)
    (71/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.137580946 seconds)
    (72/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.075178066 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.098050245 seconds)
    (74/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.089363729 seconds)
    (75/309) benchmarking ("sort", Int8, false)...
    done (took 0.164843553 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.096051775 seconds)
    (77/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.095998642 seconds)
    (78/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.206090526 seconds)
    (79/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.169458127 seconds)
    (80/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.158894562 seconds)
    (81/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.100122632 seconds)
    (82/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082402251 seconds)
    (83/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.077858006 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.122232765 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.113586458 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 0.068679626 seconds)
    (87/309) benchmarking ("sort", BigInt, false)...
    done (took 0.209127394 seconds)
    (88/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.103653187 seconds)
    (89/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.070078161 seconds)
    (90/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.159613803 seconds)
    (91/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074809138 seconds)
    (92/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.054783791 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.118649905 seconds)
    (94/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.070147022 seconds)
    (95/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.062069909 seconds)
    (96/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.075272773 seconds)
    (97/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.230575942 seconds)
    (98/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.052865283 seconds)
    (99/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.095853862 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.068219788 seconds)
    (101/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.100458482 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.119081982 seconds)
    (103/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.090007406 seconds)
    (104/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.178614486 seconds)
    (105/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.075257721 seconds)
    (106/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.082158927 seconds)
    (107/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.171156282 seconds)
    (108/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.076540583 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.10020505 seconds)
    (110/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074075257 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066746194 seconds)
    (112/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.097054282 seconds)
    (113/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.135211888 seconds)
    (114/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.133550761 seconds)
    (115/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.124587067 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.116911489 seconds)
    (117/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.106852563 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075094821 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066814867 seconds)
    (120/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.094395431 seconds)
    (121/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.137297856 seconds)
    (122/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.074826219 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.147391997 seconds)
    (124/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.088025198 seconds)
    (125/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.180355706 seconds)
    (126/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.096698581 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090015753 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.156865508 seconds)
    (129/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072518105 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 0.158240733 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.097708429 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068609818 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.096237486 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.097046829 seconds)
    (135/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.168300389 seconds)
    (136/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137666369 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.095180421 seconds)
    (138/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.053717191 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074114708 seconds)
    (140/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.11355133 seconds)
    (141/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076393673 seconds)
    (142/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.122819601 seconds)
    (143/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.133911138 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.096897189 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.155811282 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.147839681 seconds)
    (147/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.159596456 seconds)
    (148/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068884844 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.090227278 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076022911 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.112844792 seconds)
    (152/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.075671065 seconds)
    (153/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071823824 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088710024 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.118503874 seconds)
    (156/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.142793455 seconds)
    (157/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.054824655 seconds)
    (158/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.097606881 seconds)
    (159/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.066202524 seconds)
    (160/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.052965853 seconds)
    (161/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.088154765 seconds)
    (162/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.077763933 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075762356 seconds)
    (164/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.074737311 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.142212652 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.088998634 seconds)
    (167/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.109121007 seconds)
    (168/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.07763837 seconds)
    (169/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.075230856 seconds)
    (170/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074823187 seconds)
    (171/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.089496089 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.099044397 seconds)
    (173/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075722096 seconds)
    (174/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.100210972 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067924988 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.089310159 seconds)
    (177/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073029587 seconds)
    (178/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070463729 seconds)
    (179/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.092405113 seconds)
    (180/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.078334717 seconds)
    (181/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.174770667 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074779783 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.088719579 seconds)
    (184/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.11103462 seconds)
    (185/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077143616 seconds)
    (186/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.096268403 seconds)
    (187/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.136042428 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.136893922 seconds)
    (189/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.052515937 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.113394876 seconds)
    (191/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.091632107 seconds)
    (192/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.088673303 seconds)
    (193/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.054675799 seconds)
    (194/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069435891 seconds)
    (195/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.097716488 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088444238 seconds)
    (197/309) benchmarking ("sort", Float32, false)...
    done (took 0.152108105 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.154528977 seconds)
    (199/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.078898266 seconds)
    (200/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.053706998 seconds)
    (201/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.081444154 seconds)
    (202/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.067724732 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.200513503 seconds)
    (204/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.335481201 seconds)
    (205/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076143137 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.08920717 seconds)
    (207/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.098677944 seconds)
    (208/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.053741503 seconds)
    (209/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052979111 seconds)
    (210/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.10550081 seconds)
    (211/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054222399 seconds)
    (212/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.092962113 seconds)
    (213/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.055120553 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.081086267 seconds)
    (215/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.096301748 seconds)
    (216/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.053970629 seconds)
    (217/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.054879114 seconds)
    (218/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.169455591 seconds)
    (219/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066636508 seconds)
    (220/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.089123469 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090143358 seconds)
    (222/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.111215616 seconds)
    (223/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064551969 seconds)
    (224/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.068230453 seconds)
    (225/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.092134703 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.139848561 seconds)
    (227/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.078482753 seconds)
    (228/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.171868174 seconds)
    (229/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.096149142 seconds)
    (230/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074399213 seconds)
    (231/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.090698748 seconds)
    (232/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075784808 seconds)
    (233/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.055060035 seconds)
    (234/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.091125605 seconds)
    (235/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067261013 seconds)
    (236/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.065122597 seconds)
    (237/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.054035601 seconds)
    (238/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.075073419 seconds)
    (239/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.053671058 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.16337347 seconds)
    (241/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068468662 seconds)
    (242/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.194376272 seconds)
    (243/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.053592893 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.089073498 seconds)
    (245/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055685248 seconds)
    (246/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.052937474 seconds)
    (247/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066420563 seconds)
    (248/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.075933878 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087367092 seconds)
    (250/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.190562425 seconds)
    (251/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.11511939 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068102256 seconds)
    (253/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.104202694 seconds)
    (254/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.09107052 seconds)
    (255/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074385384 seconds)
    (256/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.12218155 seconds)
    (257/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.105790372 seconds)
    (258/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.067824678 seconds)
    (259/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.098110094 seconds)
    (260/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.053189294 seconds)
    (261/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.088116461 seconds)
    (262/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053260897 seconds)
    (263/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.063256008 seconds)
    (264/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.053857884 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.089553524 seconds)
    (266/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.053916987 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067614345 seconds)
    (268/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.075961419 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.114030248 seconds)
    (270/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.168661618 seconds)
    (271/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053012803 seconds)
    (272/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.091140505 seconds)
    (273/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.148147945 seconds)
    (274/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.07799013 seconds)
    (275/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080195491 seconds)
    (276/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.053583529 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.097815876 seconds)
    (278/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069160467 seconds)
    (279/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.053661541 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.08789628 seconds)
    (281/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.071658583 seconds)
    (282/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.066842559 seconds)
    (283/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.077675519 seconds)
    (284/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.053759273 seconds)
    (285/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.05246722 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.087336185 seconds)
    (287/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.156086773 seconds)
    (288/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.089166398 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075483698 seconds)
    (290/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.063102251 seconds)
    (291/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.091338493 seconds)
    (292/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055912113 seconds)
    (293/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.102618947 seconds)
    (294/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.149162227 seconds)
    (295/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063614835 seconds)
    (296/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.199836782 seconds)
    (297/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.075414512 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073287617 seconds)
    (299/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068253427 seconds)
    (300/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.077046044 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092579505 seconds)
    (302/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074239246 seconds)
    (303/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.086476054 seconds)
    (304/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.062726654 seconds)
    (305/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.054189869 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.094220242 seconds)
    (307/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.053654491 seconds)
    (308/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071954128 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.088641618 seconds)
  done (took 33.399553629 seconds)
done (took 34.317500195 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083788518 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116225749 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077427442 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.117403467 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081666361 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102489441 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074225033 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.101477732 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082425933 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.105372863 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080157065 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056257638 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098801386 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07634612 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.099425742 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09304123 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103022449 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073912999 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.09669048 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066850864 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07552083 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089588475 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069620048 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057642851 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.102142942 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074274575 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.095798663 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076229991 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066981551 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.089807251 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070807842 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074119601 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.089804031 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080450202 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095864462 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.0759939 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.098973966 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079003496 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069634408 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089475922 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075950219 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066635015 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.095771501 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075580961 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.095273562 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.0729098 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074782679 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.102917623 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092442984 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091728973 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075658851 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.100575442 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077944943 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07300862 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093642455 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074951495 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.094564107 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093313559 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.098183025 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069866431 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075021809 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.09801048 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07303699 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.096946182 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.0753756 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076678694 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.100191555 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072967083 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098442157 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073244088 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066646043 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.098520381 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070929632 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.088867294 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077744562 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077881716 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.08875252 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07278396 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074385223 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.095805251 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067391811 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090435814 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069966633 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073617169 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091965125 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056540218 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071712684 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.09500818 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066943877 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075613528 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.096137772 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073656434 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.090733327 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079432684 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06690013 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.094856903 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067396834 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066931716 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.091297543 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071214913 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.088188194 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069385386 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076718366 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.090591222 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073937562 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081140838 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090519217 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073998805 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.088200734 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06696023 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.084015763 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100312187 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067194658 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090926388 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067026109 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075107652 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.090169415 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067167777 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067082106 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.090307445 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073863834 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067109094 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092496677 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.074507514 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.102494491 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067739557 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071272722 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091704459 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067394236 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072180444 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.090597736 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067521988 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.091813418 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065101548 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06944284 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089555287 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074601223 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069478494 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.098682705 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068999588 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097783489 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072295003 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073304853 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.095894176 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066552984 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060500555 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091604735 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069397463 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069370486 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089677947 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069431122 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066822695 seconds)
done (took 13.367531186 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069454756 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169942739 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.127331478 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097961741 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.111874999 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067755174 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.101726062 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.10500204 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092932357 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.12728538 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089889014 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109044784 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115500066 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.089890521 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067611487 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.072161564 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.092359213 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.090119364 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.126210891 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.109880185 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.118660956 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.089585222 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.121304459 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091856556 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113648794 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.094992835 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.090873666 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072314563 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070401783 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.126561012 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109355836 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071118673 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068258731 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124340734 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.118870899 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.0869104 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.09005441 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086612905 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.089440715 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06836277 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.116485683 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101385959 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106031678 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.083127069 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.096936526 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070713283 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.091017694 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087537186 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.114097822 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.081893742 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112319471 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.133765667 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071116283 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.106916521 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066743959 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.111869378 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.10509471 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070644592 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068260915 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.092807195 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067788183 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071044562 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112621244 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.117692421 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072209703 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106898398 seconds)
  done (took 7.334962104 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086957323 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.117661462 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085894862 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108746781 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067982343 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068316894 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091274812 seconds)
  done (took 1.597898096 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.07029218 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089871076 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113599057 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090747914 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110101335 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088703241 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101671428 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068983285 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.108651639 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069634522 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089624474 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129164241 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069782252 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.098864258 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091728664 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091591015 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091678433 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091813066 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07210001 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114575121 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072382692 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.08862782 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.093477808 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06906669 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.105829092 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068701336 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.139143943 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073473179 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092508267 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072592675 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066965578 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.140038177 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106019856 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078984512 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068805439 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.10594335 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083875625 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089649857 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084954566 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096819019 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083477365 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069353806 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.093459461 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06723513 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073637479 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.102294062 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070145819 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092639136 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071969633 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088427448 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092902713 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083689976 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.09219838 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073503444 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070308214 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097394142 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079101289 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.092192088 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089597309 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070054909 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.108442812 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084369407 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.106254741 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084561733 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.0945051 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082875001 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.106138824 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071955324 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07059565 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.095545089 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08534309 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.090000104 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.07045478 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079228181 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.093884898 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.09205049 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.115204464 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070597329 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.102299005 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069702116 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069966092 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092153511 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092062462 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096348106 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069748154 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07296245 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095498611 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067115859 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06762625 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.095906102 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067217542 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070510405 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.095245358 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069922713 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093817903 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085487443 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069369553 seconds)
  done (took 9.426292194 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071380839 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070056328 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093417136 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069602565 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069179007 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092481639 seconds)
  done (took 1.456629303 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.101692042 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.094395842 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084106954 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097404504 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108568117 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.10691124 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084556866 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10697347 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086564041 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.104468163 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083552836 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.107202555 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.08942687 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.099226347 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083444523 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.09764954 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085086824 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101116058 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080967486 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098864493 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090409431 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.098349088 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075986296 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.084311746 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.095600335 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074644014 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102089715 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081392947 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.104579115 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.084662262 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098804429 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.0729469 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096477879 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.084284776 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.10741882 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073942014 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097455573 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074450968 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10212258 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073021988 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.107780534 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076717214 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.080133442 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096997113 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.106723563 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073497407 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073367402 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101808326 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083942784 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.09711595 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074339718 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097513911 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073239112 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.097391602 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073852265 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.106867917 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074190372 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.106830254 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075114435 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07381139 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095595452 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072953463 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.106963852 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.072524937 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10564885 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07414923 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096548914 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075441802 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098449638 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075271502 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.0739054 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.095121149 seconds)
  done (took 7.454258619 seconds)
done (took 28.242305906 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.649360929 seconds)
  done (took 1.631410234 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.773306791 seconds)
  done (took 1.759736792 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.800672751 seconds)
  done (took 15.790826792 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.613854123 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.760215516 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.808335118 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134052978 seconds)
  done (took 3.300363085 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.89165356 seconds)
  done (took 1.903209524 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.236789076 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225064758 seconds)
  done (took 1.451090376 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.736272308 seconds)
  done (took 1.734792148 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.290932237 seconds)
  done (took 2.281712567 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.322516671 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181860071 seconds)
  done (took 1.503402508 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.525415696 seconds)
  done (took 1.523955353 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.538276129 seconds)
  done (took 7.541536608 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.230717844 seconds)
  done (took 1.24550297 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.270765371 seconds)
  done (took 1.2733085 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.135648607 seconds)
  done (took 4.137941677 seconds)
done (took 48.069425894 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080944718 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083228707 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105529855 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079798146 seconds)
  done (took 1.347783966 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080610068 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074727957 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101914113 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075047828 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102442695 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075218395 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100064564 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07928581 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07412214 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.099019001 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075176282 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.097651438 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077892385 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100233387 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072553902 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077722494 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100939216 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075843417 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.100963869 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075110059 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073195884 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099346662 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077792156 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.096919515 seconds)
  done (took 3.074113247 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080173196 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074968973 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098800631 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073866928 seconds)
  done (took 1.334423918 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080489652 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.116649503 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090850178 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078674357 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.116857017 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.111583702 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072845616 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072341912 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097445576 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078981981 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.092646085 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099323046 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.111847588 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078904429 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103822343 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068226293 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070364049 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.111989403 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079632592 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102620316 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073450253 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081438456 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.09398522 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092098449 seconds)
  done (took 3.190190802 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080275676 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105089293 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.103798987 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091157499 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.117169494 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06825433 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.101215237 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093040424 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.149994629 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066992059 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.095434431 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068051577 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.097688494 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066478705 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077991285 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.133540272 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113061957 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.093919883 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098122475 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.090704267 seconds)
  done (took 2.927709751 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077299726 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071182613 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090085375 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069861628 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077957887 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097348156 seconds)
  done (took 1.495924069 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070591646 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068853396 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092252854 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068246893 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07279681 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092352627 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067273132 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068649608 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09197099 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068403091 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067990359 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.090161281 seconds)
  done (took 1.932850836 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.384601057 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093602521 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070397597 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.08894573 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072620059 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091626957 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082025399 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069662719 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.115955243 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068657695 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092578123 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070475275 seconds)
  done (took 2.317493861 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263926536 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079658792 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.32340476 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168676331 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142191302 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156623488 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106632779 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141114025 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.199403355 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138935052 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20055327 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225034792 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134355742 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168850095 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117158854 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.108330749 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211095524 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222604657 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10673955 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225363581 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207203379 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157266274 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180791871 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130594337 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136021838 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151856286 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073713878 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107382325 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232908505 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161482496 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202118314 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138172568 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099807323 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23009642 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225190844 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195770898 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162916513 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086769028 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.158013681 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165800104 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255354594 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11521037 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193627484 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134066367 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106836887 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172857784 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146961086 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.146615761 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.136766322 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11618622 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173925212 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240692139 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.165378206 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113236303 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137784282 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142004647 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.144514413 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104256721 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241224255 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217722769 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158718276 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.098004806 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099111743 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211272254 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159471324 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142827457 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.153984075 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120455516 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168216508 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.210822598 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146216275 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1728017 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.181219697 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090115133 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146803823 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195092194 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156583622 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202716097 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178817844 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07525224 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153597536 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13086939 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083341114 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.170113014 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1012624 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208226354 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126776168 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.139735504 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139600026 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137444767 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112640557 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221187113 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202537473 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10567456 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.092535108 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130852882 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.151169832 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176883259 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115028531 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136298437 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148184808 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081621095 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190959964 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077689805 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153017433 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.10414126 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153208969 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164002709 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078494357 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15671264 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12935231 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.129467748 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163413759 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22057161 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092985304 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10995761 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200594092 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179601503 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.132903601 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176154417 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189346379 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.128405259 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130739279 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206273425 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243261847 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091583712 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222768421 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136032128 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086454054 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.114612845 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155256165 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14015505 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.149711853 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08507546 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.178485156 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200620496 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.101786685 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097667629 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190979086 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084818448 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109788565 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141198184 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128537197 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.098121962 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.127744673 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136083957 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171057379 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154334965 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134895405 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154276201 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12601543 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226586441 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115554453 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.131170375 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106305483 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097111622 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.166532281 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215737086 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082482745 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226001518 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.156725631 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131881832 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14966247 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085522363 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16914662 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105735242 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073132371 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199136844 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1386785 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112434274 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.208665908 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130742607 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.155096363 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.151954407 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163912165 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161118735 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.186631292 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107851369 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.114088938 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141020237 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154426903 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.100638856 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.096297329 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.11064187 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13161425 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123568143 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086215606 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172390605 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180433338 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101043596 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139812493 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124402882 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178954787 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.103685624 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159792706 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.14864496 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122468399 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.185609637 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213130278 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164428586 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127630111 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175981226 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.098034188 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076484498 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.117881791 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156913195 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110680223 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0856147 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145833548 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204550034 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159049411 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167666389 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139096948 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149733379 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187690314 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.09758501 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119227356 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204460471 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154067777 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.156538437 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092340792 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.126390329 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175467202 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135986818 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244985487 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142888485 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153180988 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207533735 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.131405581 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082896394 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133861931 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166998728 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133410147 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.207459049 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127247001 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091102209 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138258056 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.108928831 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132383779 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156733061 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150738193 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164399717 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.144038003 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186005462 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079835433 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145558805 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151487366 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151301005 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.091604359 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148845207 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221739051 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098044111 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146806483 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212017559 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082005069 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.152875825 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237286071 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201534404 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087636135 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13853905 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154619935 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158802406 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147062947 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194975764 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14006822 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165222454 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138217803 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.088002005 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114532013 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100513075 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133665877 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.12300874 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.140278203 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.144857769 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.121575344 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161029007 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140400294 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138718975 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147634593 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.100865772 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.118716075 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125474501 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209501491 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15045953 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231339976 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.12914947 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.207153404 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200234451 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103621063 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08203608 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.107782967 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170180358 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112949184 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164413927 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.124057751 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107999 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155820507 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200094303 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097660754 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.096303864 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138380066 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165547141 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140149496 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125615194 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107936815 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220582689 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.13149766 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081681318 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154653303 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132186761 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130866909 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235567602 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064243146 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125506438 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080122804 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108867772 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159358924 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215475791 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085263323 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.153922843 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14861137 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150263182 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158855846 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130495135 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124599645 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115989716 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207477097 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159689981 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.117935914 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142868055 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159796166 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189199707 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134104069 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.12293226 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232133569 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186394613 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.221418133 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.1171415 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144069329 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144660827 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138834214 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171724758 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111479363 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200916248 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111212197 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16781986 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132889395 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120380474 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158442993 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.124990954 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133962894 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18075714 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148237896 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110441783 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081603453 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146727658 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151387246 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134456066 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.103023794 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169153507 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.101000059 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167801006 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228797454 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084118798 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135402864 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124178941 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084439981 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136476453 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131731658 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11434526 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.120986366 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229744846 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.118991908 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183069503 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197999272 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143828894 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167942374 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128604789 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664082754 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.08045997 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213554439 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148826012 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237791939 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126280535 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150095398 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139455901 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153204376 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175617635 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132203924 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.205254286 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162497012 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.149545734 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107849503 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131682681 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140707061 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.093363772 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134650981 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145228788 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145842155 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.129253886 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.151154553 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156932559 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.110763636 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123436598 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190964395 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146332125 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200325213 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171318267 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086903439 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1487901 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196440163 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082505149 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.178013804 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187751586 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136836043 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128064456 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.10930449 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.109531741 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231551471 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.100637967 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194201343 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154422213 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138551681 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143395004 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.175350784 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164651517 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137455781 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155522936 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124722239 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.141603005 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145180394 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087270542 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.105807961 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135057768 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142489234 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.102060077 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131351392 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.145426839 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184251356 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.099776746 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098171917 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13124152 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201250052 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239823887 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.09150273 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111438122 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148511923 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142540168 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.146803901 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156049372 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083817464 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111526637 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.110428864 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.114520177 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138610901 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143542671 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132644058 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139328888 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201836487 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.113173623 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.252425245 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098993134 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135563587 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.07140103 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.107250794 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124392264 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099763661 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136501894 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126702671 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232414837 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099769655 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.118545077 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121865237 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075303916 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111340382 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159395311 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140044726 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152175026 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126754607 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064867794 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139199782 seconds)
  done (took 71.671804984 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.135443464 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.105239047 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.117931618 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.173844861 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.146289701 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237876998 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.180781894 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.22415663 seconds)
  done (took 2.414120947 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071471062 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.117042304 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103410641 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.116847415 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090723735 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069538492 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.294877137 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.110638463 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068063572 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.115331384 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.119556446 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092655742 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.468598952 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06633711 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.095470718 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.08509259 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068877982 seconds)
  done (took 3.23865881 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.427165741 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.631314698 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.450603407 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074774014 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.853899689 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.107277148 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.3201884 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.162428268 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.091414217 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.430037311 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.727251937 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.148636532 seconds)
  done (took 17.519251437 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077318067 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070727217 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.110299449 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085416216 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.099343688 seconds)
  done (took 1.539247515 seconds)
done (took 115.005691908 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083146346 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.341153344 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054468823 seconds)
  done (took 1.52745858 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085229904 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085106474 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110851662 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08413805 seconds)
  done (took 1.471082325 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.077335891 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077660306 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110945215 seconds)
  done (took 1.369296111 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.277836933 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166686695 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089285888 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085551461 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079245608 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104983729 seconds)
  done (took 1.373786442 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075750054 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076543752 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100131722 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077904114 seconds)
  done (took 1.425565146 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078538209 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053405472 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056206988 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.082643461 seconds)
  done (took 1.37349131 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091536996 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.106856424 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082174623 seconds)
  done (took 1.381453694 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109837865 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.113272858 seconds)
  done (took 1.327948555 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083824415 seconds)
  done (took 1.18167856 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094488098 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.14089731 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.156226206 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.137221294 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.165656066 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.1365334 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087413103 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115275231 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104006988 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08977706 seconds)
  done (took 2.332788912 seconds)
done (took 16.47347781 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08104354 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.488899686 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362272597 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117301268 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668776268 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357481991 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.021658423 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119725875 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120881067 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09549228 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084481983 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67622261 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.989423569 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.445336474 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.973076184 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.32405184 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677018407 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069862669 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068312154 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095096412 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.984580005 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094894665 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068912391 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069114996 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.676194925 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372011848 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095294014 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324516129 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068279632 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096707123 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355922898 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095431743 seconds)
  done (took 16.230957183 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073247249 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.144378887 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074805415 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084037072 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.097809677 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070460839 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098419174 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070120524 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153324718 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068341287 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11176292 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069004566 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098663919 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070337916 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087702347 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096043787 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069956259 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069769052 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095354881 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069397414 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113531348 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069111573 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069481443 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095487488 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069835028 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107079103 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069991766 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069343499 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094881835 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071698892 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098028933 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069863002 seconds)
  done (took 3.876204979 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118299461 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.153604114 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074861419 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129681432 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114072013 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097907221 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.170367308 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094175493 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155294338 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069634233 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112228586 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069934105 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127916592 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070212802 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114377376 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069805941 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070343367 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096144572 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069513404 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095592491 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088093318 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06895695 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095714552 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07007365 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095575626 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083009461 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095681851 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069448301 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069422496 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097626587 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073417699 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070320594 seconds)
  done (took 4.163228265 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076197025 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076585247 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110392108 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084723942 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097041121 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073726684 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073926428 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.096904834 seconds)
  done (took 1.80372973 seconds)
done (took 27.179312444 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081638938 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071617095 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.100999134 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082951171 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.100540549 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080997169 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069062883 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.102822795 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.079147282 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074997787 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.104013141 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068823592 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.099026938 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069255639 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076455981 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.095828398 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08119218 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.099603129 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081249177 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081095402 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.09812334 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078523572 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.101559081 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080819403 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.106681121 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080254324 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.083963593 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.10168887 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071309236 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098201574 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078477062 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085596278 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.096941677 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081258423 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.096716878 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070391185 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069597476 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.096214008 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080335451 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.102019037 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071975821 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.102814444 seconds)
  done (took 4.736839356 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090931205 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092927472 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.112830249 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067212976 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098788887 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067030276 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.116105507 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.065377078 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060977899 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.11616241 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057867013 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060619752 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.090832036 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05603096 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060295043 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058170715 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.089558199 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.057947321 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060286989 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.087809608 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.059766583 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056117312 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088575507 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064577034 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057736952 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063088902 seconds)
  done (took 3.069832868 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078781793 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084491786 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.116268215 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131003291 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.134196118 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079130054 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106405617 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088766551 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114717039 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069324577 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072661435 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.125290083 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089131852 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.102590963 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068954726 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.116071579 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084029214 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071249605 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102348801 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091956019 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.112622085 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.079662885 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120569017 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082789137 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06809177 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098255445 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073114357 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109233493 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074042818 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078183013 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.09986425 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072706271 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.097261356 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080537777 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073803053 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.097931265 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091602578 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105873842 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080122427 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069683229 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.099262377 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069639088 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.116392544 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.113775087 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.095481307 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076786547 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077756182 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.105053382 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069224874 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114270791 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078626417 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068712209 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.099038702 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069196479 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096044665 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082790208 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070814937 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.098550542 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078009339 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.098795502 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.082020888 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073255894 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111763425 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068784484 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103556867 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068226162 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069712923 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.094721572 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092875229 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069824812 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.136662513 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070021906 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.098123569 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077865281 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103456564 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074778726 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068747391 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110713297 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078873278 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.099421415 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078150787 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072604656 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.0991409 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.089139541 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.098114751 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070730452 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070170241 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102659134 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072243863 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.096476691 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082047334 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069155386 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.099714399 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086234537 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.0954502 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07087979 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076572966 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.101366838 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06867508 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107859779 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074912934 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070559718 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.114067762 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069353734 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.099997321 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078659109 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.099860681 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068532662 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074385971 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102320139 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069326446 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070216084 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.099075168 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070497039 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.105200605 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075434008 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073684298 seconds)
  done (took 11.473378698 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.195657884 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.186993647 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071526376 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.181919396 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077061592 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.109027606 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.180572914 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096836357 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.098135203 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070431039 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070098617 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.131712255 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.125213148 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.106989794 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.10723875 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068966588 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.115028384 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.104683348 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.183033452 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.176809415 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.116603841 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077620473 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071216693 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.098184163 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071574764 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078029403 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.113409586 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07751804 seconds)
  done (took 4.295652538 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084863892 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.130780347 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075846665 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089800693 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.120927834 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070255038 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.103318295 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071344929 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109492454 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081769419 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.097207654 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075383412 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075421698 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.107091013 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069891792 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107436866 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079564849 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070885006 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.100476841 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074995102 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.106078302 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.082066578 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.100359269 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069174726 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075478183 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.097198784 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066878679 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.114253755 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069368235 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.119029739 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068147044 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07489652 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.110736928 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070057125 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.096505119 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073044377 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.07258868 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.100312489 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071252156 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067927012 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.096217687 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058855492 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06843216 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.109823233 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076055731 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.089117786 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075152771 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074058334 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.101814641 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067220305 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099881003 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072406576 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071776839 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.105589072 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074315246 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074019259 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.10175996 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.067097536 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.104993117 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073064353 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065801547 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.095785647 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073907063 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067504994 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.105558329 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074020568 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.095346462 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072853046 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074752297 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.104063384 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072204317 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071445424 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.094877053 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071724444 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.102370996 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073515128 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072720028 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.096100755 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068464248 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069152879 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.084819727 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069420086 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055279023 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.100238493 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067729437 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067637635 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.100780234 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074256614 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.110583517 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070506941 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.103223442 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070140259 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068189554 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.100100001 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065537553 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.0718407 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.112734293 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.112382314 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069423843 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067265174 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.111736939 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07434835 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068863155 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.086577774 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076227665 seconds)
  done (took 9.986318866 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.097710437 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093950251 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.098957174 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084297506 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.124787985 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094340162 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10502226 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075609672 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070603787 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.113782143 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069575726 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.105202995 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070245543 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078480227 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.12606289 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077488293 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.100184203 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078366935 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073775347 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.137151736 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083810229 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.111601274 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.081855569 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.098175758 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074474463 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081802853 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.124992363 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081453544 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.107611048 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.086401842 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.081591027 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.125007084 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.087197718 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.101230301 seconds)
  done (took 4.347756715 seconds)
done (took 39.018192873 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.209812582 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.402500582 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.187111759 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.072743762 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.230986273 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.199286484 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.21824913 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.203759424 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.312432663 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.192604913 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.457772407 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.852448422 seconds)
done (took 58.673625413 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.216680837 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.331757943 seconds)
    (2/2) benchmarking "String"...
    done (took 1.459564565 seconds)
  done (took 3.923370194 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.553667725 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.194765115 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.472605876 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.188227258 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.188967818 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.634173705 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.768118273 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.011631684 seconds)
  done (took 27.588874562 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.19495364 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.540342234 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.45528639 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.448774898 seconds)
  done (took 17.771821747 seconds)
done (took 59.187891658 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.180164967 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.255101536 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.186185672 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.168961101 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.301865991 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.212072678 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.4915591 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.430322149 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.184360854 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.193486186 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.184867095 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.198573556 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.209066495 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.485641565 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.188386966 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.184758124 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.244005147 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.65891003 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.548885803 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.19596924 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.211340277 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.185343553 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.208681411 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.181795677 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.184377477 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.183815778 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.18492076 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.192227103 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.267023243 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.190804661 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.265535673 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.66013831 seconds)
  done (took 190.749308904 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.185750463 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.202233122 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.278185686 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.232869899 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.628236803 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.381834349 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.320652462 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.70766366 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.201541105 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.183302797 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.507609601 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.181861381 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.510202275 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.148013962 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.191933949 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.273983212 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.461376563 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.499571124 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.196363948 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.413694864 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.194647686 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.410172427 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.311818967 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.436992037 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.198682817 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.280857485 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.199050188 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.207839959 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.378748842 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.385141214 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.212049892 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.18496611 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.711572905 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.043032638 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.191614853 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.182948187 seconds)
  done (took 149.368854227 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.449410068 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.183708848 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.182402341 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.183241991 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.211249295 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.181834218 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.674640565 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.672885618 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.678461653 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.550324781 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.239805565 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.367334181 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.183889734 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.275099246 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.195573357 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.183932833 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.197762199 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.207358469 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.180969428 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.182236105 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.667329278 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.194983256 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.385036605 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.185219086 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.182057616 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.207470187 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.571573622 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.179033307 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.206889063 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.491302902 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.219905347 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.17886936 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.428382908 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.875326791 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.181532432 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286953905 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.182906902 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.208975706 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.180372327 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.446120641 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.181575395 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.182877136 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.184427419 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.708053705 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.182109963 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.656564588 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.18228626 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.026331646 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.179986508 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.18108597 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.440650296 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.183644671 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.539186356 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.182712134 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.18104507 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.184039374 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.18229021 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.180058814 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.208406964 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.378357593 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.274044442 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.181847813 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.183953288 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.207132447 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.183223519 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.348907925 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.179397548 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.638073186 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.236534361 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.29762463 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.643806731 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.181426766 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.270406965 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.296407038 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.17891868 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.180354554 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.18038737 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.180293865 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.285556796 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.180749451 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.527525916 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.184379172 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.182907641 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.238874323 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.272017469 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.180388038 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.401664974 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.180328843 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.180922686 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.812570055 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.178779011 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.268027146 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.179146483 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.180798603 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.184785536 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.526600809 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.633654559 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.273605913 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.178856026 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.348552461 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.178845024 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.536346039 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.620616339 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.687523364 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.179432425 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.179369177 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.281324668 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.183171898 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.181033294 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.17851115 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.208363681 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.17834729 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.238616055 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.178475657 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.570933503 seconds)
  done (took 340.657956453 seconds)
done (took 683.354770674 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.844103354 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.825740703 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.926858876 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.829822648 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.812926327 seconds)
  done (took 10.362246685 seconds)
done (took 11.486068666 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.344136568 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.341773467 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.228934822 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.3462421 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.204734549 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.361033693 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.320904695 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.199953097 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.272344305 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.244183934 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.269423362 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.221453395 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.201441705 seconds)
  done (took 17.678417544 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.463795476 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.454922761 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.243350669 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.459801914 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.220196183 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.464400386 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.361211948 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.367186532 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.36269229 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.195929926 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.198050659 seconds)
  done (took 15.915717786 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.46306875 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.458522763 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.251264228 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.468877969 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.223290301 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.464586805 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.361672195 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.372617076 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.361614163 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.197475404 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.197122815 seconds)
  done (took 15.943579921 seconds)
done (took 50.662137222 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.188790847 seconds)
  done (took 2.31340757 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.220311135 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.380912278 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.202011748 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.194743684 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.191536558 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.191555032 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.193443114 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.189952215 seconds)
  done (took 10.88989457 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.189833115 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.191417841 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.191830202 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.194483526 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.190549142 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.189090457 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.189713024 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.191721804 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.193569234 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.190557377 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.189598396 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.189458342 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.19174855 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.190192211 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.191065297 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.188941318 seconds)
  done (took 20.178451903 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.190508905 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.190403661 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.190020464 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.18995557 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.188861802 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.190408312 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.192065505 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.189812027 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.190098854 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.191820052 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.190747429 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.191418201 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.191705116 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.190806558 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.189753979 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.191196096 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.190801545 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.191243265 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.193900629 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.189490007 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.191203848 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.189205761 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.191639251 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.191152912 seconds)
  done (took 29.705998688 seconds)
done (took 64.211886674 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.942648148 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.597780798 seconds)
  done (took 8.665658075 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.192704944 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.193258144 seconds)
  done (took 3.514940787 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.193238721 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.193812143 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.193513715 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.194235348 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.194435765 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.192882091 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.193969457 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.19334738 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.194554127 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.193355833 seconds)
  done (took 13.064591848 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.193780375 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.195231788 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.191735888 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.194486678 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.193422648 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.193170796 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.194571108 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.194451273 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.195469054 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.192693895 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.195193651 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.191784123 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.194847217 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.192943345 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.195189898 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.193772509 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.192702729 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.193170471 seconds)
  done (took 22.615623286 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.196043181 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.195525293 seconds)
  done (took 3.520618742 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.193637495 seconds)
    (2/7) benchmarking "second"...
    done (took 1.192891368 seconds)
    (3/7) benchmarking "month"...
    done (took 1.19504799 seconds)
    (4/7) benchmarking "year"...
    done (took 1.193694493 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.193393223 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.191996398 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.191992948 seconds)
  done (took 9.480701637 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.19946514 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.36284267 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.441957171 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.77504708 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.197538597 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.198369259 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.007581516 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.19963587 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.202606456 seconds)
  done (took 13.714350902 seconds)
done (took 75.701523406 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.146278808 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.185088478 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.960308234 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.187371463 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.211710946 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.52956755 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.192974083 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.316986501 seconds)
done (took 36.859281809 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.199667665 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.860982223 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.894348465 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.192887227 seconds)
  done (took 11.077990858 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.177884771 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.996196023 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.176648621 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.128216836 seconds)
  done (took 17.610006065 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.728176837 seconds)
    (2/2) benchmarking "read"...
    done (took 1.516000117 seconds)
  done (took 4.372932539 seconds)
done (took 40.389771026 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.196345487 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.196481647 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.197746724 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.195570065 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.193725523 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.197694619 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.198125695 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.193856814 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.194309761 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.198053165 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.198424332 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.198486527 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.198692582 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.198065608 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.194867506 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.195254137 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.197022335 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.197905907 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.196365184 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.196479594 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.196718688 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.19845525 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.196249947 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.197094407 seconds)
  done (took 29.852360471 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.199086677 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.198876988 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.199183492 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.197426078 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.195876879 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.198295343 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.199989567 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.195014137 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.199724858 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.198592703 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.195405845 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.197830823 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.199068432 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.197479495 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.198395892 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.19686775 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.199759089 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.196487888 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199939252 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.196898783 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.198489537 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.197131568 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.196374466 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.197871956 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.197063399 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.197658206 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.200776934 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.198347549 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.198874227 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.197679329 seconds)
  done (took 37.072410185 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.204005385 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.206260548 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.201704587 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.200220972 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.201629931 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.199081427 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.20021543 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.200058827 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.199392176 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.201200546 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.200734634 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.200359987 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.201442804 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.201536076 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.201244406 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.199623243 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.201428624 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.201729061 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.202055834 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.200646621 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.200215377 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.199594593 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.199704271 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.200612115 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.200450051 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.20047679 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.201820922 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.200435592 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.202095266 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.202201191 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.202638331 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.19983924 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.201227675 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.200616006 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.201459916 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.200788861 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.206200611 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.207058415 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.201747214 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.202604274 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.201599927 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.201778485 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.203450688 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.203181826 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.202741091 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.201136257 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.200040872 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.201450854 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.201747667 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.202101717 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.202798557 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.203055603 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.203164353 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.202484917 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.201302375 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.202989638 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.203839201 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.202430703 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.202742013 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.202806149 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.202892989 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.202969645 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.203478284 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.202900353 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.204462734 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.203959655 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.202498728 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.203564567 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.204439048 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.203461176 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.202136226 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.202817561 seconds)
  done (took 87.678229679 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.202396769 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.201725325 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.200736182 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.200212281 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.200998404 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.204256175 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.200103748 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20410799 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200000258 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.205064747 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.203208782 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.202975978 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.201705885 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.205333418 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.205463514 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.202051992 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.20396638 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.201574865 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.205399756 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.204019714 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.205516779 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.203189231 seconds)
  done (took 27.600592808 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.204733717 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.205393168 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.202229677 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.204326454 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.203708053 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.204378014 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.205689267 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.206491391 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206329856 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.203900451 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.199982316 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.20579649 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.202918071 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.201988343 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.202312687 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.202812003 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.204986765 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.202888301 seconds)
  done (took 22.808117342 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.20195013 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.202491973 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.205842101 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.203607233 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.203370231 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.204621791 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.20329626 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.206059601 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.204245662 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.203161415 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.204123447 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206850719 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.206680811 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20236488 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.206384815 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.203092548 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.207273847 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.203789909 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.205998688 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.205069747 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.202849956 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.207685029 seconds)
  done (took 27.638052034 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.207200887 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.206875079 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.204157236 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.205332056 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.204611806 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.206545386 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.206897412 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.204288004 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.206883693 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.20706104 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.204978232 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.207358305 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.205652762 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.205456972 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.205391852 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.206076284 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.207078734 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.207192972 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.206428817 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.204449269 seconds)
  done (took 25.259389291 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.205081919 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.20655711 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.206601112 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.207578508 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.206544081 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.205974442 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.207702247 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.206451864 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.205498147 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.20686247 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.207093645 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.20553311 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.206645357 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.205602797 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.206683922 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.207379788 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.205063565 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.207534528 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.208918904 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.207966405 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.209345503 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.206886898 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.207100708 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.208299675 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.20710735 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.207919639 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.207227838 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.207554488 seconds)
  done (took 34.93495845 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.208472373 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.20910003 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.207537797 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.206901461 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.207945797 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.2058363 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.207226572 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.206072792 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.209467423 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.207314773 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.209129737 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.208538162 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.209074626 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.207654479 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.209324626 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.209423928 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208541091 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.206169555 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.205453834 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208300891 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.209903069 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210154426 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.21074682 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.207273578 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2087948 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.210761025 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.206793265 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.207093466 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.21035493 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.208412975 seconds)
  done (took 37.388903169 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.228392876 seconds)
    (2/2) benchmarking "in"...
    done (took 1.229533507 seconds)
  done (took 3.600904886 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.207975244 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.210980016 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.210987479 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.207767987 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.208347942 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.21129937 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.210586682 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.208765758 seconds)
  done (took 10.819721899 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.208236441 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.210657091 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.211364456 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.20896075 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.20981988 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.208638271 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.218225686 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.223680513 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.209899479 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.210298534 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.21397078 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.215035469 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.213597871 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.208278927 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.210458855 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.211192128 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.210935096 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.209905781 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.21104987 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.212114195 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.210248542 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.212484823 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.214153427 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.211006029 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.210997865 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.222373669 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.216239215 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.211576963 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.210914086 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.216048611 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.209353558 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.209948093 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.210760775 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.211187365 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.211797787 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.210303167 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.222828202 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.224311787 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.220076291 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.211462556 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.214358828 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.210853765 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.213507824 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.213957834 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.212162125 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.210438973 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.213454152 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.210269833 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.210829163 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.212385287 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.219311822 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.20972485 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.210169951 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.218198528 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.213500083 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.220448005 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.224250366 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.212929929 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.219565225 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.223843446 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.226234555 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.219088054 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.21429115 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.211961646 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.222081249 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.23364406 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.220852305 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.226251671 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.211234734 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.215896951 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.222547902 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.226691027 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.22471271 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.213078897 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.213499648 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.216005647 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.214477601 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.216620375 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.224219963 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.229467972 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.212858506 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.214037362 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.222046187 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.234079696 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.212108355 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.214550444 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.213857053 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.212992719 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.213754093 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.226863382 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.225798611 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.215587087 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.212357512 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.214026771 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.216397184 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.213477002 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.212216621 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.214235676 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.215248862 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.21685404 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.213454937 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.216548418 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.223467128 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.214818748 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.215033142 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.223549792 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.216957909 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.213238028 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.225318955 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.217184135 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.21398334 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.214605384 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.221352372 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.2139612 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.216968605 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.222957267 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.216330971 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.216737571 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.215522368 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.216969959 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.221973898 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.241086301 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.217178287 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.218484875 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.218812699 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.225774732 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.21563234 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.219984736 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.218509362 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.215146513 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.21511069 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.218659778 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.21691195 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.217399702 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.216148922 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.218657883 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.21587637 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.217818523 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.216060029 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.22024202 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.217523206 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.21736204 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.219575931 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.220253448 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.218707462 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.218048398 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.22705091 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.217930209 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.220221712 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.219600229 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.218043359 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.220501769 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.218297822 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.218285798 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.218460492 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.217727343 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.216716289 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.2169379 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.218630254 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.220985867 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.220768151 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.217692739 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.221574068 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.218380371 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.223290413 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.21549554 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.217484426 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.220276567 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.218888595 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.218864949 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.221741827 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.217298485 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.22069022 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.225709987 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.218586156 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.217600832 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.221913973 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.218720144 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.217837544 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.219680129 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.221163859 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.226398328 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.217661651 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.227578188 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.218433506 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.217965435 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.220854465 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.219250549 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.21899649 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.219136204 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.222146981 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.227648659 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.233059552 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.228635858 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.219281558 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.225144835 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.218440818 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.223480432 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.224673689 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.218194187 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.222353325 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.220059668 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.21735907 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.219173635 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.223639269 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.220031618 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.218115095 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.220711232 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.221496063 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.219414789 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.223175308 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.221195773 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.221448276 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.221340094 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.222295037 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.220443153 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.219811523 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.219689374 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.220262471 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.22094961 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.222821174 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.221552422 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.230949066 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.22107787 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.221565027 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.223404941 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.221653866 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.219261943 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.222962944 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.224034052 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.223609711 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.230654562 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.236501306 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.223211854 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.2295351 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.234192291 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.220255556 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.224505964 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.224108651 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.221183683 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.224246305 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.231732657 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.222966909 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.221377715 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.220929277 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.22301349 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.225088182 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.231644155 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.221877494 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.221666593 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.225656003 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.225105131 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.223539722 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.223702618 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.22302036 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.223844139 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.2242158 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.224177757 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.223570949 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.2235755 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.221772174 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.221862303 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.222088767 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.226158947 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.230220788 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.229824075 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.224660039 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.225725601 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.224336941 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.22787588 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.225436954 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.222341607 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.222964381 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.236513974 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.230651601 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.231663373 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.224863592 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.226482335 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.23053273 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.223481263 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.227476831 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.224336235 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.224211745 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.223765642 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.222449927 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.224254994 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.224532836 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.226625767 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.224627555 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.224738254 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.228984822 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.226709781 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.223949461 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.223118407 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.223426074 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.225963601 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.223277898 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.226453369 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.228583023 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.226710135 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.223773611 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.225501295 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.233239655 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.237772486 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.225495041 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.224084915 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.22371972 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.222936613 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.227316315 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.226111076 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.227741431 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.231362669 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.227676563 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.236003283 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.225792344 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.235820282 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.225525683 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.227555353 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.234254827 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.226429845 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.225577117 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.228273593 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.225974193 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.235690191 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.239984491 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.226474611 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.229511144 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.227075843 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.227190482 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.227279751 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.226994993 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.228935382 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.226961718 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.238688072 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.238878416 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.228925767 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.228708887 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.226955306 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.225948944 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.228697414 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.226490273 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.233725338 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.227215143 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.22907184 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.227343373 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.228476472 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.2299782 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.227740475 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.230578861 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.227726046 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.22990302 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.23626896 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.239262636 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.230302966 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.231022367 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.239827034 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.226453998 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.236526056 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.240333481 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.228002526 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.225258764 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.230409724 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.229740831 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.226600852 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.229138891 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.226717647 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.228528011 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.232887826 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.227639668 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.230628052 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.22862772 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.228895739 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.228202155 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.239428842 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.24773578 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.22682472 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.233202581 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.228666662 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.2281413 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.232951447 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.227452918 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.228790288 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.230438642 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.235696282 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.240193394 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.228887442 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.228346199 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.229699935 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.228808258 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.232054865 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.230943958 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.228969938 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.231690342 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.229706407 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.229929235 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.235200445 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.23147788 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.231429433 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.231311831 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.228516514 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.242325417 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.229136879 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.230845665 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.230865836 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.233446575 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.230971476 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.230213433 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.229650081 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.231121218 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.233351846 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.23034215 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.23401667 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.234212023 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.233205564 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.228913328 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.231460217 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.231930827 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.230836885 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.230430583 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.229054638 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.231371947 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.231712211 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.23006544 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.232673121 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.229321277 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.232287188 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.23150715 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.231764869 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.230684686 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.239242828 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.230471069 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.230041073 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.233492659 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.232465672 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.231073488 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.231816117 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.24265734 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.233618445 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.240416781 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.239032225 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.235602505 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.230352804 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.232220124 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.239307856 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.229303183 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.233414823 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.227938166 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.230111852 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.226839788 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.22852064 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.22802343 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.234603467 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.224845678 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.227150584 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.228371035 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.23135499 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.217478651 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.218318295 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.221622703 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.217684555 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.218169179 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.223638126 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.210124017 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.220333078 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.227740166 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.211726431 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.212776442 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.208475806 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.212062165 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.218212753 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.211106986 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.210072536 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.207594705 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.207970665 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.208475528 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.212146196 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.209117968 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.20835187 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.207438593 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.207862802 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.212764395 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.205793621 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.207762582 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.206620329 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.2062762 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.206278152 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.210213305 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.204966094 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.203996054 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.204340372 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.203503088 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.204200356 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.20706751 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.203168512 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.205615195 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.205981843 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.202426271 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.203964733 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.210960603 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.214058201 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.204644393 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.201144322 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.201563235 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.206565935 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.201383378 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.200992154 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.201260977 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.202278748 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.204875616 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.201796422 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.204492366 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.204347287 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.217661801 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.220900236 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.204988105 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.20559195 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.211048549 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.206964825 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.206140538 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.209224558 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.207765555 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.206428691 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.211904657 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.204820622 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.212925347 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.219202991 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.206864068 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.213979793 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.205860781 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.211964053 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.2075934 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.203788998 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.204030679 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.206918489 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.220689211 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.207963297 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.212309016 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.232268972 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.216166236 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.202729637 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.203219511 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.201876394 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.201530508 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.205826302 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.203142486 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.20422667 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.20339355 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.200073997 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.200894765 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.205670959 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.203544935 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.204197916 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.204316411 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.200387269 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.199952385 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.199759955 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.199836541 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.203407499 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.199352636 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.19940355 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.199856197 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.201073282 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.212860475 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.210438999 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.203483819 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.201077644 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.199102038 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.202894065 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.20189978 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.208573734 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.208331884 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.200387395 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.19745616 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.200852583 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.199059349 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.199554826 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.199308178 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.199594956 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.195652855 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.199600513 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.211950969 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.20593319 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.203846292 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.198762148 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.197697629 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.200416588 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.19940136 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.195158158 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.194535658 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.197542964 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.195825403 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.198374512 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.198787011 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.198184623 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.198039507 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.203246845 seconds)
  done (took 727.979131224 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.193434704 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.194794983 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.194294442 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.195220097 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.194756395 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.194490443 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.194427661 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.193155092 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.194132629 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.19381333 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.193900135 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.193028099 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.192055164 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.19471897 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.196031997 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.195104645 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.193202714 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.193458037 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.194902455 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.194128832 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.194544333 seconds)
  done (took 26.20728717 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.195584792 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.196218789 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.194847582 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.196927773 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.195709564 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.197252382 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.194757332 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.198107581 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.196929654 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.194878824 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.197409771 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.196653648 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.195992611 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.195030699 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.195531222 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.198081967 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.197858494 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.195688947 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.19780565 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.196517061 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.200559014 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.194760447 seconds)
  done (took 27.45230485 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.197033323 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.195140308 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.194911375 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.196975496 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.199335914 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.19583391 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.195476785 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.197002934 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.196778098 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.195699643 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.192694128 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.195648071 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.198575573 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.202428093 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.197059095 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.199159314 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.344041723 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.196055627 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.193870961 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.194919046 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.194188691 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.203424893 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.19477544 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.197149395 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.193309312 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.193561821 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.197570125 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.198935079 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.195177701 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.196953553 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.199799736 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.200110677 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.196135229 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.197569021 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.194653263 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.198333615 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.204733098 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.197383467 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.197531883 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.201580403 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.20549063 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.217011496 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.195651083 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.205267331 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.200352617 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.200268976 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.19658242 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.202751289 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.197119954 seconds)
  done (took 59.983238625 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.201232095 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.200680925 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.197000703 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.199933756 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.200508555 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.199986149 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.200556983 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.198817464 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.199230055 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.197974338 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.201031702 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.198622435 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.197447922 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.200934581 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.199615727 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.198596079 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.199686577 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.198207682 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.199672772 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.197868323 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.197450743 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.200830747 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.200318263 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.199965264 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.20189725 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.198399206 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.198171304 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.202151074 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.19940444 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.199712536 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.202777043 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.20253051 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.201207885 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.198653706 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.199335976 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.200814223 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.201989745 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.200075257 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.201686669 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.199573395 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.202119629 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.203256191 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.202579289 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.203271019 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.198957247 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.198744997 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.199573131 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.200522667 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.20094954 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.200492212 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.201493435 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.199771638 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.203214133 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.200671042 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.203284039 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.202558056 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.201132916 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.200066179 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.203698197 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.201731535 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.199054291 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.201664461 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.200344558 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.202940448 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.204138928 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.200694906 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.199529631 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.200354778 seconds)
  done (took 82.765264957 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.199028008 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.198955745 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.19764001 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.197280982 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.198943899 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.199011978 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.199304279 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.198514219 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.19832131 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.198688829 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.199333584 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.201615804 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.199157507 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.202271971 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.199525138 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.19923791 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.197069236 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.198903529 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.197306955 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.197636509 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.197272128 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.19754778 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.196776955 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.198406718 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.197169384 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.196657114 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.191840779 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.192729805 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.192778437 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.19378499 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.193749379 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.193405854 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.192659737 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.196090372 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.190191944 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.18912642 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.189878314 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.189545348 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.187001061 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.1898737 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.187796502 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.189261541 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.185235897 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.186910275 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.183393963 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.183045967 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.183733838 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.18587491 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.189443795 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.18520408 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.186273477 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.181600734 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.180151047 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.17895039 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.18064352 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.187350508 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.182364165 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.184123713 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.181937906 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.18190262 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.183134337 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.185782366 seconds)
  done (took 75.036481761 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.189329773 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.189764882 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.180329186 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.184560797 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.189085364 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.18219466 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.18491026 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.189037035 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.187058118 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.18500194 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.190515713 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.184458324 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.183953716 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.188179813 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.182584824 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.182854374 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.186777628 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.184666387 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.186088826 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.183829791 seconds)
  done (took 24.839953838 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.185312734 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.187311055 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.187678777 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.185983741 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.190770133 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.187586887 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.187145089 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.190856669 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.184768869 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.187208232 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.186241152 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.188001566 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.184197325 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.186698565 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.188909543 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.184650657 seconds)
  done (took 20.118924853 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.18318286 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.186630193 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.183169363 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.185937375 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.188854375 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.184386491 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.186935492 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.181017445 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.184679999 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.192037646 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.188675257 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.188942736 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.187879975 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.184076916 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.186555416 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.188382177 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.186560642 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.18650362 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.187737178 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.187918477 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.186140902 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.188380738 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.191962661 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.188836462 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.189610281 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.187637974 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.187165217 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.189118037 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.187852523 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.189236316 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.187927343 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.190441339 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.188368605 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.18540231 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.186854014 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.187892571 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.189844159 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.190316642 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.189675983 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.192047171 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.193005479 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.18852619 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.191114917 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.194202716 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.188155771 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.193651929 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.191095958 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.189872688 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.187587623 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.187478325 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.192089716 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.188963505 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.191513302 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.194944119 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.193955596 seconds)
  done (took 66.499718862 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.190877094 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.193923205 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.187486789 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.190418351 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.193264324 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.18956208 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.191765004 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.187520733 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.188474898 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.192872381 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.187922643 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.193146722 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.187999409 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.192182991 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.188347071 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.193633516 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.18713424 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.192935139 seconds)
  done (took 22.559494056 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.189637918 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.190011437 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.192813903 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.189873292 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.188845886 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.198570364 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.189514055 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.194175278 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.194436092 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.191882701 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.192042731 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.196497611 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.193091777 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.193270774 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.189621995 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.189332244 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.19232386 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.191981866 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.191193944 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.18883584 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.192164059 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.192861706 seconds)
  done (took 27.351749708 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.188279433 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.186709534 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.203794181 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.227141609 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.213571931 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.188126471 seconds)
  done (took 8.33860638 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.189682406 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.196506609 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.193752859 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.193637328 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.193170778 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.193049393 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.190446304 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.189579271 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.193366935 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.193807089 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.192904591 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.192606396 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.195828746 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.19449696 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.195168115 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.194665187 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.190641456 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.192891842 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.195328302 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.19406087 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.191206214 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.193049897 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.192852902 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.191672197 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.191528601 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.191907132 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.19481545 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.193533948 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.194878837 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.195304948 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.195978081 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.193793412 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.195234889 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.193121885 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.195431941 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.193893 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.192899028 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.196059635 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.197319372 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.193547935 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.19643399 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.195005986 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.19558269 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.196827403 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.197717313 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.194061196 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.19367895 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.197062119 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.194017077 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.197820752 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.197256023 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.193846493 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.196262746 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.19698313 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.197281048 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.197010996 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.195082733 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.19057584 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.19632611 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.193780375 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.197648325 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.19660401 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.192893468 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.196045317 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.196769459 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.195160002 seconds)
  done (took 79.963224894 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.193684228 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.193644681 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.196121777 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.196118002 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.19461922 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.197600124 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.193029733 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.194241988 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.192911029 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.194585146 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.196351549 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.195469283 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.195137395 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.197456854 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.195043144 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.193677468 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.196705011 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.195167201 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.195139791 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.196475072 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.193871627 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.195966516 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.194961632 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.194930942 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.193551326 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.196881523 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.195447806 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.19512819 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.194676595 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.194184704 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.194528004 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.197688609 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.194294417 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.19604397 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.195406007 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.194765726 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.197343194 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.196976953 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.192122135 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.198245417 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.196819465 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.200572866 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.198330231 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.192987833 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.194814412 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.197080899 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.197602631 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.195102011 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.192771529 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.196844574 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.195917656 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.193697065 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.19620166 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.196965412 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.196728488 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.197615746 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.194831345 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.196248063 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.195427951 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.199995674 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.19647182 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.198116448 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.19850404 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.196075273 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.198813228 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.196423693 seconds)
  done (took 80.056665853 seconds)
done (took 1674.934861273 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.279264229 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.200947764 seconds)
  done (took 13.615287385 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.351705578 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.306088969 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.191400185 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.198427057 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.189950292 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.184438735 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.209141493 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.192622796 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.191088415 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.196207465 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.195561396 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.378427877 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.247962666 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.191936781 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.192277811 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.285198605 seconds)
  done (took 40.836585278 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.217553049 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.202515751 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.292343259 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.217164123 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.219139771 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.354898218 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.249237421 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.200243288 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.344166987 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.237165908 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.559229702 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.224760878 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.200276978 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.165898112 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.215917555 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.358983312 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.410695768 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.56018647 seconds)
  done (took 27.367973172 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.573618173 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.213533889 seconds)
  done (took 8.928190705 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.236210024 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.248858979 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.200190404 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.191146731 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.219990118 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.23744056 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.235197076 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.250205862 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.226541017 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.215702726 seconds)
  done (took 63.396636698 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.214197309 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.203662709 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.20358541 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.196347335 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.188150645 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.191722967 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.196787676 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.194181201 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.254965972 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.304878467 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.212388168 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.206596935 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.200854848 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.202157905 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.199054936 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.229795962 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.324438438 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.200607519 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.197798192 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.204813502 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.198574808 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.319318131 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.234140339 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.203198069 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.307355517 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.268400303 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.206124514 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.204007021 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.31644741 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.203957688 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.201149167 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.198698361 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.202542494 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.744986738 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.672140383 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.20311967 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.236420169 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.208860315 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.202162264 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.374929281 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.201133908 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.209575751 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.196434809 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.630713476 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.348522989 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.299010194 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.302689737 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.20386931 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.199790627 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.261649221 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.203913159 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.204093309 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.226669902 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.91251332 seconds)
  done (took 102.56929198 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.252966652 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.681136979 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.361962355 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.206654064 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.938487537 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.842599673 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.196400224 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.434085678 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.20344025 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.191856696 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.504811449 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.652141772 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.19906472 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.201113098 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.275068005 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.255955128 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.193716275 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.89946814 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.195590404 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.195900234 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.594336898 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.209183562 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.1958984 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.219990251 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.229321304 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.618317128 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.468935285 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.602541374 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.199435975 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.195009654 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.613642175 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.204853883 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.27601119 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.193838872 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.451140386 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.50701092 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.49294567 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.196275863 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.203959672 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.19800804 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.225698896 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.619436702 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.500374551 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.193096316 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.194641711 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.622134093 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.199101313 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.199926958 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.197783065 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.389348892 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.182403964 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.197159112 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.484525621 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.198852513 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.541461377 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.245575085 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.238585565 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.64883912 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.197644601 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.232310333 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.252851953 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.19576826 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.200693103 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.197155824 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.20182066 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.498483875 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.588859927 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.198733586 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.500580979 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.6075942 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.198414172 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.668766624 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.997310852 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.217849003 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.243343196 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.196086035 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.721827895 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.650150358 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.244606318 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.197143392 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.487814765 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.199011378 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.498365582 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.208960266 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.195205964 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.604807226 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.214495216 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.222842844 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.198721372 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.196098395 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.824801085 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.216126575 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.445881942 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.214821017 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.199761429 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.19394328 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.241942611 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.200097143 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.199057452 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.205503229 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.671671091 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.202382996 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.474126288 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.215206303 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.198478789 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.217452079 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.198929279 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.196880154 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.411759073 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.63544486 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.205537283 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.199397149 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.207250617 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.198026153 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.505210512 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.197608388 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.467766168 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.202652883 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.196504305 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.202424992 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.890859883 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.206998612 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.199513123 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.201322112 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.035174218 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.405178066 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.217212379 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.207297632 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.197841896 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.208901791 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.430786162 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.200586971 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.228471199 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.199640507 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.85950474 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.213534042 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.217154895 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.844938612 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.201645839 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.064076925 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.222838202 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.202762984 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.49391505 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.45948066 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.502047401 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.199305501 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.19907413 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.834460916 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.221793696 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.328345529 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.21963433 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.217453563 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.396871149 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.387429311 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.200095491 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.769196892 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.199813996 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.405509673 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.203067127 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.516071171 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.643694906 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.205089279 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.20439362 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.856431766 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.861617383 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.824093817 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.203039791 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.515502329 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.192762444 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.653823465 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.203382213 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.202645983 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.623284665 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.205708358 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.206805332 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.201781413 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.201358573 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.267563021 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.372881159 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.664892716 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.198889094 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.618999444 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.203978115 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.199609799 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.206968175 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.202575373 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.554750101 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.253036225 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.204163412 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.2017045 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.201351625 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.209411842 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.635078364 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.040902902 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.202751037 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.3544573 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.782611937 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.203439815 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.201000289 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.832352035 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.48425422 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.667490113 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.22757974 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.466844461 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.212655925 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.240759954 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.88577145 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.217618642 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.628632101 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.206968085 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.202691956 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.749167916 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.20319945 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.270309914 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.200221167 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.203450894 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.685309606 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.20110952 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.204982474 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.437263945 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.20430524 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.452790389 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.201783889 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.249216691 seconds)
  done (took 1078.093961922 seconds)
done (took 1335.944066935 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.203876134 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.2030452 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.192369537 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.208377406 seconds)
  done (took 25.952223784 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.213615959 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.208436134 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.21334776 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.211556503 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.213533823 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.213115614 seconds)
  done (took 8.421550376 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.255352019 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.206957858 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.204133406 seconds)
  done (took 18.815676069 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.398307914 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.357663446 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.52935218 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.117379448 seconds)
  done (took 9.548883862 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.212394889 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.215286391 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.21147473 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.215282015 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.214505267 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.218227479 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.21440042 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.21561477 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.217941031 seconds)
  done (took 12.079095211 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.713247626 seconds)
done (took 80.678170296 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.230356584 seconds)
    (2/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.239713517 seconds)
    (3/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.704354492 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.422527338 seconds)
    (5/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.540101177 seconds)
    (6/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.234311842 seconds)
    (7/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.339319366 seconds)
    (8/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.325391211 seconds)
    (9/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.627309809 seconds)
    (10/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.629961552 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.442492922 seconds)
    (12/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.221214505 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.246342802 seconds)
    (14/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.210640301 seconds)
    (15/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.204310949 seconds)
    (16/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.796981753 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.249264735 seconds)
    (18/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.219854853 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.237767714 seconds)
    (20/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.345220386 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.203426868 seconds)
    (22/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.223712087 seconds)
    (23/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.609161299 seconds)
    (24/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.97755187 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.023347091 seconds)
    (26/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.80638641 seconds)
    (27/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.32901222 seconds)
    (28/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.290222931 seconds)
    (29/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.19157812 seconds)
    (30/309) benchmarking ("sort", Float64, false)...
    done (took 5.441618778 seconds)
    (31/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.660705683 seconds)
    (32/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.316804296 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.740911843 seconds)
    (34/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.787126653 seconds)
    (35/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.886805886 seconds)
    (36/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.23628943 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.59293319 seconds)
    (38/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.216249244 seconds)
    (39/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.410655154 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.032238411 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.303188948 seconds)
    (42/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.314882047 seconds)
    (43/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.218275078 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.346283772 seconds)
    (45/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.208310948 seconds)
    (46/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.512537201 seconds)
    (47/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.91114736 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.024211837 seconds)
    (49/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.238921595 seconds)
    (50/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.985394566 seconds)
    (51/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.995406776 seconds)
    (52/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.789502195 seconds)
    (53/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.276172048 seconds)
    (54/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.193592581 seconds)
    (55/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.753231324 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.700697789 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.325010711 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.284082171 seconds)
    (59/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.965774878 seconds)
    (60/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.94790645 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.467732656 seconds)
    (62/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.580311344 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.898234679 seconds)
    (64/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.96921801 seconds)
    (65/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.255057035 seconds)
    (66/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.300963631 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.268856551 seconds)
    (68/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.446163991 seconds)
    (69/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.211438766 seconds)
    (70/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.632249795 seconds)
    (71/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.473068673 seconds)
    (72/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.420810111 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.256054703 seconds)
    (74/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.22257549 seconds)
    (75/309) benchmarking ("sort", Int8, false)...
    done (took 4.255752563 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.576333681 seconds)
    (77/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.226595908 seconds)
    (78/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.495741359 seconds)
    (79/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.209503792 seconds)
    (80/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.210462901 seconds)
    (81/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.226691934 seconds)
    (82/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.885996159 seconds)
    (83/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.347297819 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.812420713 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.314399869 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 5.313588895 seconds)
    (87/309) benchmarking ("sort", BigInt, false)...
    done (took 6.208299709 seconds)
    (88/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.699494045 seconds)
    (89/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.207328339 seconds)
    (90/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.297442505 seconds)
    (91/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.228958974 seconds)
    (92/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.20500779 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.044236416 seconds)
    (94/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.355634705 seconds)
    (95/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.506441448 seconds)
    (96/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.763974791 seconds)
    (97/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.608693169 seconds)
    (98/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.469278148 seconds)
    (99/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.447776245 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.987867635 seconds)
    (101/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.210149251 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.203879342 seconds)
    (103/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.722175547 seconds)
    (104/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.198961566 seconds)
    (105/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.673150898 seconds)
    (106/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.20043484 seconds)
    (107/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.229670262 seconds)
    (108/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.344365434 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.548754951 seconds)
    (110/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.332557419 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.607970061 seconds)
    (112/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.323209407 seconds)
    (113/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.702309137 seconds)
    (114/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.368590679 seconds)
    (115/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.353684148 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.282480965 seconds)
    (117/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.379737316 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.431504767 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.808323302 seconds)
    (120/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.88416943 seconds)
    (121/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.362609257 seconds)
    (122/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.431273809 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.212626942 seconds)
    (124/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.341007134 seconds)
    (125/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.196766962 seconds)
    (126/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.24428805 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.528607896 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.335263243 seconds)
    (129/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.297664745 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 1.705860521 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.244557238 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.212927479 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.473194756 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.261981033 seconds)
    (135/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.19415873 seconds)
    (136/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.223279443 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.890907839 seconds)
    (138/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.715966524 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.478837559 seconds)
    (140/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.235985052 seconds)
    (141/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.245399738 seconds)
    (142/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.749304379 seconds)
    (143/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.361665535 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.348647431 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.234870326 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.312834648 seconds)
    (147/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.325115945 seconds)
    (148/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.213120246 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.886030814 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.243110614 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.16594069 seconds)
    (152/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.497415011 seconds)
    (153/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.295200053 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.554968004 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.320347606 seconds)
    (156/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.215386204 seconds)
    (157/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.197392669 seconds)
    (158/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.315554932 seconds)
    (159/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.845040715 seconds)
    (160/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.545431546 seconds)
    (161/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.883216286 seconds)
    (162/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.264700871 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.238632217 seconds)
    (164/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.35269594 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.235492972 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.604581872 seconds)
    (167/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.551554067 seconds)
    (168/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.320538814 seconds)
    (169/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.608623718 seconds)
    (170/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.245989225 seconds)
    (171/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.224604059 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.265178531 seconds)
    (173/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.244702801 seconds)
    (174/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.225320909 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.61632004 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.726896936 seconds)
    (177/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.300400195 seconds)
    (178/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.280490755 seconds)
    (179/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.282295106 seconds)
    (180/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.31849782 seconds)
    (181/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.714268297 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.252887687 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.815240518 seconds)
    (184/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.543784884 seconds)
    (185/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.260305093 seconds)
    (186/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.246575104 seconds)
    (187/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.342124763 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.201355957 seconds)
    (189/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.955395129 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.90223864 seconds)
    (191/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.297217654 seconds)
    (192/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.276229142 seconds)
    (193/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.393602603 seconds)
    (194/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.322393095 seconds)
    (195/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.249781895 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.442143644 seconds)
    (197/309) benchmarking ("sort", Float32, false)...
    done (took 5.188900651 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.32038347 seconds)
    (199/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.26213124 seconds)
    (200/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.221359048 seconds)
    (201/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.652199763 seconds)
    (202/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.458050628 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.21444122 seconds)
    (204/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.750380241 seconds)
    (205/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.437576529 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.538903507 seconds)
    (207/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.246611529 seconds)
    (208/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.413694566 seconds)
    (209/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.71845043 seconds)
    (210/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.459792232 seconds)
    (211/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.215710874 seconds)
    (212/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.239462934 seconds)
    (213/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.203029044 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.237484422 seconds)
    (215/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.243901236 seconds)
    (216/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.582085581 seconds)
    (217/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.200130426 seconds)
    (218/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.514484329 seconds)
    (219/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.26084118 seconds)
    (220/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.301650212 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.445074461 seconds)
    (222/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.233721257 seconds)
    (223/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.203830674 seconds)
    (224/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.245176654 seconds)
    (225/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.223717406 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.217670066 seconds)
    (227/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.204860715 seconds)
    (228/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.25573827 seconds)
    (229/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.263169273 seconds)
    (230/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.247472506 seconds)
    (231/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.304367359 seconds)
    (232/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.243714497 seconds)
    (233/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.025112674 seconds)
    (234/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.303386107 seconds)
    (235/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.882769524 seconds)
    (236/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.501088867 seconds)
    (237/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.783190737 seconds)
    (238/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.607382348 seconds)
    (239/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.455157693 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.219810381 seconds)
    (241/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.229496099 seconds)
    (242/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.223690551 seconds)
    (243/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.723921914 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.249593203 seconds)
    (245/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.037975299 seconds)
    (246/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.462843767 seconds)
    (247/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.418541709 seconds)
    (248/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.569641193 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.461705699 seconds)
    (250/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.265206536 seconds)
    (251/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.262758405 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.006780285 seconds)
    (253/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.23486271 seconds)
    (254/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.264785117 seconds)
    (255/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.249873837 seconds)
    (256/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.424975415 seconds)
    (257/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.550799019 seconds)
    (258/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.216996649 seconds)
    (259/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.608869556 seconds)
    (260/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.974749661 seconds)
    (261/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.934991158 seconds)
    (262/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.736313887 seconds)
    (263/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.515396309 seconds)
    (264/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.224588864 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.689149424 seconds)
    (266/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.397815959 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.056127837 seconds)
    (268/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.72400032 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.308958946 seconds)
    (270/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.418327572 seconds)
    (271/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.975774886 seconds)
    (272/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.284163337 seconds)
    (273/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.219098064 seconds)
    (274/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.205990433 seconds)
    (275/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.226816961 seconds)
    (276/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.401625516 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.308176464 seconds)
    (278/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.311522857 seconds)
    (279/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.558158858 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.306941455 seconds)
    (281/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.219434238 seconds)
    (282/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.462672127 seconds)
    (283/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.89869102 seconds)
    (284/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.453268589 seconds)
    (285/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.424941223 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.353986913 seconds)
    (287/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.19830479 seconds)
    (288/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.621132137 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.368634276 seconds)
    (290/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.895194055 seconds)
    (291/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.333486354 seconds)
    (292/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.211379346 seconds)
    (293/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.913919838 seconds)
    (294/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.233969338 seconds)
    (295/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.356638613 seconds)
    (296/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.220443208 seconds)
    (297/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.520815503 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.265466851 seconds)
    (299/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.227365918 seconds)
    (300/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.794220022 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.341285407 seconds)
    (302/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.254236889 seconds)
    (303/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.398127373 seconds)
    (304/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.584331834 seconds)
    (305/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.207676702 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.248778542 seconds)
    (307/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.759032358 seconds)
    (308/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.333490819 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.069604231 seconds)
  done (took 871.651864271 seconds)
done (took 872.801959694 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.2577642 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.249657338 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.232456908 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.25718321 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.343197543 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.267083344 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.241339939 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.233146272 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.278446302 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.283761253 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.235146417 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.265686031 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.233456444 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.232472339 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.230650884 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.249904569 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.131323445 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.233305955 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.249781761 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.241053863 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.253982491 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.230958264 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.283688197 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.266337323 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.236882283 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.23512464 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.237018167 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.252482706 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.345354304 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.241485893 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.236802103 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.243820096 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.138693683 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.232892612 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.226029068 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.250749821 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.248685638 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.242269975 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.238040905 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.263761296 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.48742054 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.231913634 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.232740316 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.234668359 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.234595893 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.238760999 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.235279696 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.239996459 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.247485909 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.247668848 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.47627427 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.250298872 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.236743979 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.232683694 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.243332293 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.236067956 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.237320779 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.252407563 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.253883525 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.251217937 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.136035228 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.239589553 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.23473547 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.249631645 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.241157857 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.516569315 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.228153052 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.237978505 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.490998425 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.239309615 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.517607815 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.24530113 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.23471699 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.250351263 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.26710168 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.145022713 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.229921192 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.237432664 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.244846068 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.233614122 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.244675882 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.250846456 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.239251789 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.23768514 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.247998322 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.269450299 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.245290228 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.23528644 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.244936857 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.255859602 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.243910683 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.244420755 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.23659202 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.231757671 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.245169224 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.239389225 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.239239272 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.238885253 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.241911153 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.246424441 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.489688561 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.255649167 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.233606144 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.231439314 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.236929805 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.252209371 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.490940179 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.236935729 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.255854737 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.287636725 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.23973509 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.13641425 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.23943976 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.249842913 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.247181899 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.243794251 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.233950783 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.131535108 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.487787166 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.249864857 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.242625532 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.237502013 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.255659571 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.240044386 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.232777807 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.13785705 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.23785611 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.251410303 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.361098073 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.250771526 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.272742697 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.236064355 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.242375051 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.271817429 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.26011267 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.274975975 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.243677072 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.256864135 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.258561802 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.23642642 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.250930072 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.250474418 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.242672191 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.244082306 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.233668313 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.265971425 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.253720178 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.252638192 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.26361734 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.364488391 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.236910134 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.133240049 seconds)
done (took 208.052353947 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.301334651 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.239641848 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.346060814 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.239268248 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.335132656 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.337374747 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.238934163 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.241922499 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.242220527 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.618382779 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.242339059 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.240124691 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.240252363 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.240405384 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.321899857 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.243347734 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.240429912 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.579717736 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.235899197 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.30902828 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.238601192 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.242101049 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.241772138 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.628545459 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.231358718 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.242740327 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.310405295 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.241427768 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.609639232 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.241696687 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.240405963 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.584170203 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.3300204 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.26238324 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.25553562 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.250138472 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.340232929 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.258625983 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.32471082 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.322944877 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.349286288 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.27785516 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.237787608 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.2429003 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.244787998 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.242004768 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.240841549 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.274418568 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.23697737 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.242287302 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.582247925 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.254337604 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.242745851 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.245395369 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.247140876 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.269089069 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.240232217 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.238123838 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.329609206 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.241145645 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.304327069 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.622433501 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.619191844 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.242108518 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.234203301 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.240505746 seconds)
  done (took 142.352113552 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.305211081 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.312808639 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.345537854 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.242914598 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.293743471 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.352176042 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.245111664 seconds)
  done (took 10.276262402 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.244617665 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.244631302 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.290940114 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.29158598 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.239490547 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.386837165 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.245784099 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.249240698 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.240788077 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.292109989 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.24035318 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.242852099 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.251777016 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.23424155 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.291427217 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.252317746 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.357336036 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.246423741 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.242952759 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.392793121 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.239850962 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.25609368 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.297927592 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.252970344 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.243910574 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.25161553 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.812550801 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.24144635 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.24665595 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.244886614 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.23999159 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.277807195 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.246803883 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.240929808 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.243191506 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.360086876 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.241103463 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.244250883 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.246561511 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.235734328 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.245927573 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.249859335 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.246268526 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.244126806 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.245060905 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.264130829 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.247482131 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.249094164 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.244871348 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.247500923 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.293676799 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.243434461 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.247486652 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.248894197 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.29948463 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.254235979 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.243401602 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.244911347 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.25072518 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.244755041 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.394349454 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.294047119 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.244417705 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.291152661 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.247396988 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.245001782 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.247284179 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.247759691 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.295795691 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.244743973 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.291252327 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.243807834 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.399863052 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.266634972 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.250398722 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.246133881 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.245812226 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.24352274 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.238721148 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.250276303 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.246576106 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.245929598 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.250833947 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.248056119 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.246481193 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.343384851 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.35388329 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.245803123 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.25949129 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.252459461 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.246077688 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.298106617 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.244671829 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.244832613 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.295601818 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.358129152 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.296854782 seconds)
  done (took 144.487676709 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.251402618 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.251123121 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.248216975 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.261063862 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.24749855 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.246580395 seconds)
  done (took 8.685677012 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.250801779 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.251387389 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.251048354 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.24970756 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.244640939 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.245020666 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.245118756 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.243420795 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.247451654 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.252052092 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.249061687 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.249374655 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.251140612 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.245963412 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.248592902 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.253043573 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.247331781 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.248145101 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.250266453 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.248528392 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.345351938 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.249490635 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.249053406 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.250426131 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.249570883 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.253704624 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.257805727 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.252039673 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.251493322 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.257754657 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.254730226 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.249876858 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.253183178 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.256250766 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.253418386 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.25251988 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.258587001 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.24822704 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.248562211 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.252974515 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.252857007 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.251982811 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.25467692 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.256413022 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.254474602 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.255561255 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.257866961 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.257660357 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.252689861 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.255002813 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.248784006 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.254132818 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.248950167 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.253297638 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.253771579 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.256759422 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.256326344 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.247254879 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.25349637 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.249974734 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.253612035 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.254117849 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.250876982 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.251449206 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.260818139 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.252174614 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.247439486 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.25278445 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.252767342 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.252534995 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.249175555 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.250659178 seconds)
  done (took 92.405447439 seconds)
done (took 399.380881544 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.416079592 seconds)
  done (took 7.605100556 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.425499485 seconds)
  done (took 7.618729114 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.12410458 seconds)
  done (took 19.310729979 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.266128523 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.275775815 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.255123924 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.250133699 seconds)
  done (took 26.233798308 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.403846549 seconds)
  done (took 7.587768834 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.251282952 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.250195772 seconds)
  done (took 13.685593994 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.460035959 seconds)
  done (took 7.641752357 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.110683306 seconds)
  done (took 8.299106668 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.274496481 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.264685062 seconds)
  done (took 13.741548874 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.23166711 seconds)
  done (took 7.420652767 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.866838148 seconds)
  done (took 8.052984858 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.255899919 seconds)
  done (took 7.445843634 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.282747557 seconds)
  done (took 7.469308321 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.390894534 seconds)
  done (took 8.578274944 seconds)
done (took 151.883589102 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.243430473 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.24661628 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.249636819 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.245764877 seconds)
  done (took 26.177089031 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.291147231 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.293780232 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.291407382 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.301676516 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.292973402 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.293194205 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.286951823 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.285945182 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.29998629 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.295284767 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.294296298 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.29687081 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.292084014 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.285500314 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.295351959 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.296180251 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.30514611 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.295819025 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.28341314 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.295976249 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.256188646 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.304254204 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.29695513 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.258659532 seconds)
  done (took 32.183493217 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.447693259 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.325376501 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.409085881 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.304734115 seconds)
  done (took 6.674333027 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.308177472 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.314473153 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.324261232 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.364487268 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.393802944 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.32089815 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.28575278 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.276812916 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.267966921 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.314590921 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.389544026 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.329349048 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.417488437 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.262178533 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.446754163 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.26090989 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.260600675 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.313443299 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.366163542 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.378751865 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.259975545 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.311768084 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.316203283 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.329498527 seconds)
  done (took 33.004916186 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.258250538 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.264380638 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.266824481 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.257452171 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.257510445 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.262116774 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.265459816 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.260225828 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.2813697 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.261245716 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.257799653 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.258298222 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.260931987 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.259359047 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.258268043 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.272902911 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.273170648 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.259728555 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.26476068 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.266921677 seconds)
  done (took 26.458421078 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.249598671 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.182113928 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.600574615 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.507166146 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.252029183 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.247614595 seconds)
  done (took 28.232602007 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.317003485 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.436886312 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.260891309 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.573397258 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.651586071 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.259650224 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.257664964 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.470349715 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.738532804 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.73695038 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.308023301 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.315839078 seconds)
  done (took 18.524795924 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.260532966 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.253846527 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.25451178 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.268220896 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.306570212 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.262652916 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.26564477 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.252049995 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.307891437 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.3130863 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.263053743 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.308925862 seconds)
  done (took 36.5154818 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.342828968 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.301074489 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.14032924 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.995167529 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.633406833 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.467915353 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.991418988 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.673650499 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.263653915 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.528928713 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.907218006 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.360289643 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.509272597 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271920647 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.260171258 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.192793146 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.48276139 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.714717985 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.263616433 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.908859753 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282010162 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.260523482 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.077409274 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.284750377 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.471383966 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.395202189 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.522001878 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.261061269 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517265813 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.273063442 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.271749069 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.261159546 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.534469942 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888882268 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.35603701 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.272337126 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.924175238 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.978485592 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.256857197 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.997614581 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.680288427 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.265295115 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.272532215 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.262011872 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.195239122 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.271160632 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679680283 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.270691101 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.974384977 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.26219523 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.273007668 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356431817 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.267417038 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.080480597 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.252686621 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.263330484 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.260587622 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.265362056 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835388568 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.376248759 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.27144175 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.198402797 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.60663712 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.007736032 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.837996924 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.363769823 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.266313666 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.266478917 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.197458317 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.980558895 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.281652401 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409913618 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.283947164 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.915266377 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904961903 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.931280704 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.208118707 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.779095291 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.266197792 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.213212505 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.492522779 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26432955 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.198671556 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.210460103 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.200784447 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920089144 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.272033425 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.606842998 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.266422219 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.677329949 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.277615889 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282371902 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289737156 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.489199146 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.143459577 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265047725 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.70946014 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420585021 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285092754 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.676647617 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.201262686 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.265846401 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.52134633 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.476778346 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.266453477 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.198036692 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.448534844 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.268460363 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.29600856 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.266625888 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.275951201 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.791304874 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.277916638 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.391090124 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.284038148 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.265767251 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960008968 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265581107 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.365735489 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.945062724 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.507786863 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.982458951 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.266357328 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.347216028 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.26692147 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.264862943 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.024878952 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.782435564 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.267174368 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.265105994 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.27968356 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.277661173 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.262664059 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211327737 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.262231252 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.957145097 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.268066288 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.489342463 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.266315067 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.541284636 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.200217445 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412409108 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.35478243 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.488073367 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.367841381 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.265168074 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.522866603 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270524701 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.273550524 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.280623715 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285716132 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.364462183 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289420476 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.278754969 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.524057174 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.271046315 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.271259716 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.443757018 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.27172537 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.272125496 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.273309364 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.082638878 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.792931707 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244981801 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.273516434 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.158176041 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.282424042 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.33291299 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.27451301 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.278319187 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.911705736 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.056971641 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.274892192 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.267041384 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.48975691 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.277644827 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.018278796 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.347318805 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.446648954 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.798386113 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.2821138 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.204556404 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.981416593 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.961434319 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.269746248 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.204359893 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.267228336 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.278315041 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.279065909 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.760183073 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.796538857 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.272395291 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.942290921 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.277102694 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.280346267 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.275771501 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270118773 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.909655114 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.400857362 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.284686439 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.282909705 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412878336 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.285516281 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.204295124 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.276276112 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.275443471 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.269849828 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.269964542 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304178141 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.951443691 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.734637928 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.526874475 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.968480295 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.285469477 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.115032487 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.301831597 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.271709559 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.755338608 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295112624 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.281124281 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277961726 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.282574694 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.009518331 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.944088093 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841103073 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941579868 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.761854384 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.150876524 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.272569441 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.273708279 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.690594955 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208555708 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.839196197 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.444832056 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.690497149 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.220645828 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.454110689 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.37299707 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.965200799 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.284016906 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.500436368 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.146482213 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.759434341 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.296744504 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.485952019 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307272163 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.279349755 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.20149702 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.790680345 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.489522514 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.781952972 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.349373414 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.690643516 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.763511837 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.2848284 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.268756999 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.555908548 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427673031 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.98631769 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.444170131 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.2734694 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.996605027 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.745923718 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.278038934 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.498714655 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.850294291 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.282447144 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.456686052 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211306978 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.285170415 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.285673807 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.273105477 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.405556977 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.273342691 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.52527489 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.283089784 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208474462 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.27897314 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.760309823 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.13160246 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.281021288 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276173804 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965591928 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.275449786 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532647152 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.282309709 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.876008135 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282914194 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.207981791 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.209854189 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.969003276 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.280465397 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252110939 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.72475472 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.605913319 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.285521622 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.303968184 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124060508 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.531199341 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.292254733 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.80450909 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.502739197 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.031700251 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298549107 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.3781704 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.805094938 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.272084242 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.276646074 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.511951864 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.089775139 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.499093797 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.174966994 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.179311745 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.272059771 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.489542002 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.277097322 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.011431915 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512342812 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.990888846 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.28031732 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948688961 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303459394 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.010482447 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.203528493 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.621725914 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.281815451 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356275985 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.287710216 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.285802868 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.286431019 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433010146 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.015587402 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.292204007 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.290986321 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.371223036 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.43936407 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.906293894 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.280135311 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.813600205 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950404113 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.814501153 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.290265031 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.276179632 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279194011 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.213298891 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424560301 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.503643082 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.551665107 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406589268 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.683610263 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299974916 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.814050112 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.294343246 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.491613192 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.553693341 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.174508097 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.283296157 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.290631709 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.280112643 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.289213116 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.490652748 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.741488291 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.805115077 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397307002 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.279384259 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.706382152 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.555021509 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.28040104 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.280097845 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.873563534 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.28177262 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.568706986 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.284773294 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.046889773 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426068535 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.290892345 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913993036 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.290732732 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.435685534 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.053688375 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.064308502 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.536111986 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.687883182 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.290539435 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.814199621 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.92000263 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.544810561 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.348369201 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.291387814 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.383964983 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428884183 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.287058169 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.281402507 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.280413547 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.126806336 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.991474184 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.290815222 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.816538478 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.547449649 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.278909908 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.278597958 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.302955461 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.291507073 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.504746218 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951578654 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.504301949 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.29228347 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.286896847 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.098050314 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.819005214 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.295009143 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.217142045 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.286325507 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504235848 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.522348555 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.302787641 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.734481241 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.993778491 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.809077273 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.257547004 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305591585 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.285786989 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.924725949 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.819314363 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.916719327 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.743453495 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.852013645 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.286763118 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.558030228 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.288834941 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.283579074 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.560161106 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.287161456 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.296173185 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.295207616 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.817858333 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.994495459 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.283898914 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.005820511 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.219488409 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.626135961 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.887229217 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.220609275 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.284882722 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.449953805 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.284924684 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414043506 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.293621304 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.285571428 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282101568 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.05717519 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.55848498 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.288096758 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.282119006 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.852798512 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.285121457 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287019241 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.503773464 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290482362 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.949230139 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.643762597 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.541239837 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.288455731 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.267262846 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.288202873 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.28503764 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.272054142 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.480618494 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.765369834 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.809049627 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.286933113 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.294474888 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.288217021 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.50173934 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.495774318 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.038565464 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.308899467 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296471349 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.300387519 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.186299343 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.788785376 seconds)
  done (took 1547.854229466 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.287866121 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.293943054 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.307527701 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.344288375 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.29034122 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.374844848 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.298626404 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.353854642 seconds)
  done (took 51.773243685 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.287059983 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.500174727 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.31822619 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.287569736 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.290841359 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.285227311 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.690336478 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.297720282 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.292193579 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.297290087 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.295178603 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.293994905 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.85317581 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.293882768 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.298582864 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.276133142 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.291406885 seconds)
  done (took 64.373498255 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.291531618 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.481725454 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.35791454 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.302018723 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.930010435 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.302408334 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.427303451 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.325421363 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.284445986 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.314435637 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.941283984 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.30205713 seconds)
  done (took 82.488469457 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.294000807 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.296668756 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.295536792 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.295431533 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.294348842 seconds)
  done (took 7.702179005 seconds)
done (took 1963.157924919 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.540130471 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.906528323 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.883775915 seconds)
  done (took 5.020118007 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.435860324 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.482571646 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.601580075 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.624850996 seconds)
  done (took 7.373651989 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.561099377 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.661102916 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.474930217 seconds)
  done (took 5.92611346 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.537769357 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.295971388 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.404626536 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.289743994 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.293380648 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.294086737 seconds)
  done (took 20.106297172 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.296768534 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.300042057 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.299175783 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.301543544 seconds)
  done (took 6.423968836 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.274202578 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.018896655 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.278210092 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.290226227 seconds)
  done (took 18.088542178 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.039880799 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.055835438 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.041245919 seconds)
  done (took 7.365518015 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.288422 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.131436176 seconds)
  done (took 9.648673265 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.58546096 seconds)
  done (took 2.81493468 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.427353971 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.563790783 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.227571432 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.168956584 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.255214921 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.663923892 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.7256156 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.358444278 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.162528848 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.195292427 seconds)
  done (took 25.977575419 seconds)
done (took 121.750400212 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.779878717 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.650998795 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.489861018 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.7563132 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.504970687 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.487908702 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.506195437 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.721326527 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.293902969 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.251917453 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.795660662 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.507356018 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.461545071 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.653334899 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.458059937 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.527361278 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.509161638 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.802860708 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.436149261 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.634140615 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.507332816 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.393405835 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.630049496 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.446044853 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.513790481 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.441382153 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.968030749 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.522795173 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.613580655 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 4.985011253 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.441036216 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.816106974 seconds)
  done (took 185.73824273 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.290278078 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.300629854 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.289305916 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.287901362 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.300802273 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.286683855 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.290416989 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.288639828 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.304935296 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.299081615 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.289271001 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.293069439 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.289192526 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.289484817 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.304827953 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.297549315 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.290063825 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.291480426 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.289949407 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.289746288 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.291617 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.308277054 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.294379167 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.289008575 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.302561878 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.289427412 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.30006549 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.289104579 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.290599776 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.302412956 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.289691754 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.305681653 seconds)
  done (took 202.646593415 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.29111827 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.28960963 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.290759928 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.304466437 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.291372135 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.293159817 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.308355625 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.290050599 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.288936343 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.289717535 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.315261639 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.289617704 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.292947153 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.292651296 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.29219016 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.289533071 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.290749949 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.290202133 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.291662405 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.290407836 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.302864067 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.296034945 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.296462762 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.291353127 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.291681404 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.291368285 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.30279746 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.291101126 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.293288734 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.291369376 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.293215366 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.303002628 seconds)
  done (took 202.650312049 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.494070694 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.306429736 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.306781386 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.24031338 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.305377449 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.304501636 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.30351029 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.494529166 seconds)
  done (took 13.988502919 seconds)
done (took 606.25188509 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.522653238 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.238356054 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.492978949 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.325830008 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.060095656 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.321959945 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.32616465 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.479841018 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.201587049 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.480629663 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.479975112 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.318011584 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.611730764 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.319985025 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.556240701 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.409559304 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.118676101 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.224795521 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.612937958 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.795067125 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.563026259 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.691514464 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.480196913 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.180392441 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.598857569 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.684176769 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.908917263 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.123328182 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.32348934 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.619608183 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.851164567 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.219148498 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.369511218 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.355339794 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.414272772 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.394520279 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.131212836 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.34950261 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.499308187 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.453116571 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.814312417 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.015178452 seconds)
  done (took 88.171162059 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.290845095 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.29082422 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.290569982 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.292829738 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.291122988 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.290608428 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.290036241 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.289717151 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.29026041 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.288945282 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.290170866 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.290364229 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.289551102 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.291515606 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.290666901 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.290349192 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.290576746 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.293266493 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.289969207 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.29085064 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.292022341 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.293029305 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.292845704 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.292051511 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.292704802 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.292908411 seconds)
  done (took 34.804774658 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.310918156 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.522742968 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.691463066 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.309720427 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.303640701 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.307940973 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.372324224 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.309180142 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.307404273 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.307503649 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.448638437 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.310599778 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.339587804 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.696222446 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.308290357 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.30943193 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.310386138 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.306369398 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.531794585 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.316041295 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.374939453 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.309769752 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.375507475 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.316977571 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.3092609 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.307210724 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.309750916 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.819906847 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.308804365 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.447226296 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.98955155 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.372520022 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.789785054 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.698222607 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.990493083 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.312864271 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.311714406 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.451436901 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.309484716 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.306912973 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.375733133 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.307724777 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.698302518 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.914201114 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.322266874 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.311642432 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.842625612 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.451295781 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.520381407 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.319234551 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.716857461 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.309733926 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.313190913 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.309303629 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.52101506 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.313944661 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.306735967 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.859458556 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.312363183 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.375842251 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.315239448 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.309989165 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.546894848 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.310772426 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.526699012 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.307245209 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.313376876 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.307090399 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.69856214 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.304884064 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.928536749 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.316613096 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.312221807 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.449274231 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.527704338 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.867153843 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.308596838 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.547179635 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.800245431 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.37090226 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.309162842 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.807821851 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.377503192 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.310018023 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.312841124 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.313164889 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.311527382 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.354509777 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.372159326 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.85524825 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.91865994 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.870753026 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.374016282 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.318594533 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.306141394 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.860575398 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.309667396 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.312365039 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.692232272 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.926630752 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.31861434 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.315916984 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.937574657 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.320301403 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.376517247 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.31354846 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.702901114 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.306926748 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.355123735 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.311030104 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.314665956 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.313395508 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.376242147 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.311189386 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.31233189 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.905422597 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.466222577 seconds)
  done (took 171.516800782 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.30074107 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.29810851 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.29643367 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.294320134 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.295826454 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.302974205 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.297751135 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.298787076 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.305129379 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.299021167 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.298275552 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.29762295 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.301197141 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.30051377 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.30945344 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.306417076 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.95592524 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.301181413 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.300569193 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.301123833 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.075286515 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.302185918 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.300274589 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.299027931 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.300643966 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.300772793 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.307083871 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.320234939 seconds)
  done (took 151.109734065 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.312731664 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.812906863 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.307803811 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.421199719 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.326786062 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.310152832 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.424784781 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.359176998 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.309597575 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.30996978 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.309858786 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.577073953 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.313470679 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.770698515 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.470706922 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.431839392 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.768681264 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.312414843 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.310663927 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.311180766 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.426393052 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.313243651 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.57998323 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.811279415 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.312411481 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.814744844 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.296542987 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.316257549 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.310787435 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.815205676 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.309541629 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.58392249 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.375257218 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.363097972 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.817718631 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.767662219 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.772938024 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.439045013 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.306471675 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.312767059 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.314056708 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.300113151 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.81592284 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.314402778 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.310931554 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.811541995 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.325599722 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.317174868 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.322758472 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.313944158 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.363571977 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.363318427 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.583254606 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.819656314 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.379812616 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.334454671 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.426576779 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.6514096 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.31176805 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.769912268 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.296256559 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.828302943 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.318923233 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.299689733 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.315707218 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.322546506 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.449548696 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.433186878 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.77295829 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.310261821 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.778858689 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.447302772 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.317753389 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.316037908 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.319523163 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.822145538 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.776499673 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.446784737 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.43015055 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.479401456 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.303760452 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.311694309 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.302833073 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.380401661 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.316541727 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.831963866 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.776541471 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.317735682 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.318530663 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.318613498 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.3190167 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.467470574 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.823782081 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.377340883 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.775393556 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.599972502 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.585735153 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.318683481 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.370515315 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.315482108 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.588004383 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.317534862 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.367907911 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.713349952 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.587309558 seconds)
  done (took 155.101273434 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.529518647 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.419754943 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.399346015 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.414922049 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.806047348 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.856635731 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.421538819 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.422549373 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.412241369 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.54232163 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.379567413 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.406235461 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.485466344 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.376433543 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.97931498 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.370134111 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.405138019 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.433099622 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.416639455 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.269015115 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.900865976 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.583718998 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.467016495 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.30548956 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.396243608 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.015382894 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.823602519 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.79793426 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.466923728 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.473164853 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.808177833 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.357257409 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.191056906 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.93070392 seconds)
  done (took 62.512032253 seconds)
done (took 664.449223184 seconds)
SAVING RESULT...
DONE!
