cset: moving following pidspec: 21092
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.318718084 seconds)
loading group "string"... done (took 0.595264821 seconds)
loading group "linalg"... done (took 7.228456836 seconds)
loading group "parallel"... done (took 0.169998237 seconds)
loading group "find"... done (took 1.150164092 seconds)
loading group "tuple"... done (took 2.026154546 seconds)
loading group "dates"... done (took 1.295546463 seconds)
loading group "micro"... done (took 0.240751784 seconds)
loading group "io"... done (took 0.983301219 seconds)
loading group "scalar"... done (took 39.79208854 seconds)
loading group "sparse"... done (took 12.862201953 seconds)
loading group "broadcast"... done (took 1.018314464 seconds)
loading group "union"... done (took 13.754356277 seconds)
loading group "simd"... done (took 4.443318998 seconds)
loading group "random"... done (took 8.979860218 seconds)
loading group "problem"... done (took 1.947740317 seconds)
loading group "array"... done (took 21.28189634 seconds)
loading group "misc"... done (took 1.9546122 seconds)
loading group "sort"... done (took 3.26865574 seconds)
loading group "collection"... done (took 18.319070969 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.546226447 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145906639 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.12112857 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.144123262 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.190194862 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.136407642 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.150013833 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087686009 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.046948005 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.173089327 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.144460926 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.488682001 seconds)
done (took 5.131475003 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.201764697 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088454342 seconds)
    (2/2) benchmarking "String"...
    done (took 0.097787031 seconds)
  done (took 0.885990154 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.068292263 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128118342 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082368409 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070985145 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068834588 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.084267558 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.070351294 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068678565 seconds)
  done (took 1.282634119 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074814295 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069260685 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.086498587 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070003774 seconds)
  done (took 1.007408772 seconds)
done (took 4.166622246 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.911424364 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.242312019 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.191497945 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.461331205 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.153423499 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.19354824 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.668551503 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317948442 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.211920652 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103070294 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10925519 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.390015908 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111051664 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.665768808 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076747458 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.107425732 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.160916518 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.418289658 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082036348 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083897924 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105343391 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142624695 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.102157799 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077884705 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.170286823 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070929272 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.150240158 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.097281101 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069819015 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.248328802 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.193206929 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.690392911 seconds)
  done (took 10.522105715 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101841687 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.12025384 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071701113 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.144106421 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.104682233 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.090725191 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074360557 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.086323711 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.096056476 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.163462882 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.117425017 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.109890342 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.08544438 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07321099 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.104270014 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.216678259 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.111469578 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.088083139 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090078011 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078843699 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.127240057 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.088056196 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.098448083 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.08101609 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.156721285 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.198968193 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.115850151 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.11467336 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072714994 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084934455 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.135309029 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146773607 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.070152631 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085136099 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.144594777 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.114567632 seconds)
  done (took 4.681848803 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.055017691 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.16401378 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.095595682 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.15859654 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.089225201 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.133146209 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.114361859 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.086311345 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105203841 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255870104 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.104347819 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.470875656 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132391165 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10525709 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072340773 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08760266 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.069148631 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070307392 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.549798973 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.15044066 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105385332 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.108416022 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.092975009 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.075392429 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.366212224 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069244408 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067985139 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086289733 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.062630905 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149890641 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071019831 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.235808757 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.093201519 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.091702217 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105565558 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.196917048 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096554557 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124584314 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067233374 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083721548 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.170027081 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075841546 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068438063 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.108359612 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120798317 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.107172215 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.085047879 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.0708313 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.183074024 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066899041 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.083386955 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084067268 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.88014298 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167686591 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.098111466 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.069793199 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.291362672 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084956065 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084745668 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065585722 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.252912753 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.155190457 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068242193 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.084493398 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068245675 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068669638 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.384190793 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069368143 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.920878495 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072633885 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080229953 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087622369 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068775284 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090143546 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073190621 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102039315 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068322334 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068441018 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084333678 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067273901 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.085044683 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087293611 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.08226183 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.205772021 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068598207 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068168662 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.083382461 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08689038 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11460036 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070648167 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.083815117 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100837842 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08539229 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.069482564 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.120632905 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068209704 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.103089837 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084876658 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115207924 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.084237169 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.131879649 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.070457822 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.115604491 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073835008 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116465565 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.094650485 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069168122 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.154663349 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065770354 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083098964 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068334462 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065705913 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.086232962 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069331489 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.099163222 seconds)
  done (took 21.371819559 seconds)
done (took 38.338901138 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.298038257 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.096053257 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.093690825 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076048635 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.093292445 seconds)
  done (took 1.443067522 seconds)
done (took 2.20075315 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121649094 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117445108 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064979584 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113695419 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064826709 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.117747522 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115215987 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081563763 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116302417 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.068040716 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113013862 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066406728 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06625859 seconds)
  done (took 2.010180913 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084355863 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088137461 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088673742 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085524211 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081550063 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086064621 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083596047 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108341725 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083815555 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090809506 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067384723 seconds)
  done (took 1.702708823 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085399214 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087115293 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088950223 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084467788 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082063953 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08498432 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083578975 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106281432 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084243277 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092789407 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066701597 seconds)
  done (took 1.702309536 seconds)
done (took 6.161916799 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080526186 seconds)
  done (took 0.822983838 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.700684132 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.521793997 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085169085 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.136976578 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.224494112 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.159564485 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.447452676 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.114432296 seconds)
  done (took 10.312645893 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.105700083 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.089573893 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.075452735 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.089994856 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072645837 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.088924448 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071293933 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.07271651 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.087435885 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.075645712 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.08993792 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.074308977 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.091661067 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.075519717 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072871179 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.090070647 seconds)
  done (took 2.145066097 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094962846 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094266748 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.09530368 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079116783 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.094114099 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.076866327 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.09654163 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077470661 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.090778845 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075896617 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.095619426 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.078358105 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.091792587 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.069837003 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.094545445 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.081278378 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.091651864 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.079268523 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.094628387 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079420457 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09487032 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068988786 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.091697648 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.079591059 seconds)
  done (took 2.930726308 seconds)
done (took 16.965657954 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.135883538 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079785806 seconds)
  done (took 0.97545979 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085103526 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102066136 seconds)
  done (took 0.952156729 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085524932 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.083277996 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093402635 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.098617501 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.085643247 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069216028 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.10657956 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070814842 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.085733967 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069856477 seconds)
  done (took 1.613542985 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072138368 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096581207 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074739024 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.101007957 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.078074148 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.08441672 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.077391433 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087787857 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083604111 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082294196 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075463463 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.103172579 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.075811944 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.104464078 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.077596585 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.088270802 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.090167819 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071505785 seconds)
  done (took 2.293517801 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068776747 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068997222 seconds)
  done (took 0.898892993 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069772031 seconds)
    (2/7) benchmarking "second"...
    done (took 0.066815552 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086045149 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069967092 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.083051537 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066002743 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.082465901 seconds)
  done (took 1.289192859 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.412347779 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112983805 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.251170212 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.092396252 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.107552394 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.270526999 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.08732326 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074152036 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092688831 seconds)
  done (took 2.302621205 seconds)
done (took 11.090866748 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081457202 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088499355 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115188738 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.429519487 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107408703 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067629883 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.143709491 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.211749298 seconds)
done (took 2.008143215 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.128117134 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.618608916 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.413955959 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.218756768 seconds)
  done (took 2.024927162 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.376832654 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.094160958 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07675107 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070626997 seconds)
  done (took 1.393186952 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069514829 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072400055 seconds)
  done (took 0.913597986 seconds)
done (took 5.238124469 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06993546 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.107615721 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.070058677 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.067639433 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.087300026 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.067315533 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.067521627 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.085090622 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069613999 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069403845 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.084592609 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.070998959 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.085061181 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069719011 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067890792 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083485243 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069482914 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067791524 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082537965 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.069591843 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067580967 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086082509 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067748028 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06719992 seconds)
  done (took 2.605252765 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088224841 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084055033 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074483719 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089862587 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072334337 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.090576903 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073823261 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069277809 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.090678815 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.073068894 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089935086 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.074004659 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.088381285 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.075454851 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089048049 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.075690419 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.091807832 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074184524 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072016132 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.090669704 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.075481739 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086759567 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.074996031 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091471774 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073945378 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089846018 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.072930231 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.086677607 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075257317 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.089648275 seconds)
  done (took 3.218656517 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074555575 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066164809 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08373795 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074771349 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.067228597 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.085930597 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067853918 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.084332952 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068165475 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.067928969 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.085464923 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.067398099 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067539407 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.084686117 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068368542 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.086577903 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.084299899 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067794712 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.08322129 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068610282 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.07019172 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.084022115 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.067805235 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.083483328 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.067429508 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.067689292 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.084131017 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.067050138 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.068871369 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.083935318 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070312393 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070607796 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.084013087 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07506661 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.087695968 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.067452136 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.071213093 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.082639554 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06734367 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.066935677 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.083447562 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.067454307 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066937231 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.090255903 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.067450545 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.085616263 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06754189 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.068973619 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.084646506 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070628909 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.083493699 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067863274 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069666299 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.084575926 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071699099 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.067738539 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.084317509 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066849111 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.085149447 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066900639 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.067938363 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.083086432 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069544611 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067927717 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.099736614 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.075101212 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.083209829 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069735696 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068748756 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08626442 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068997497 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.080349806 seconds)
  done (took 6.186076975 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.120930275 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095586223 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.086452334 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.07051925 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0832904 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067510531 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072753972 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083914005 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069861622 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090204066 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068499643 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069345618 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086191966 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.08066382 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084581036 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069958105 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089746071 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066360818 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.068725781 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08794258 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068777447 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.087544557 seconds)
  done (took 2.559682551 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.192407243 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091360121 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.112384045 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092419416 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086650302 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075099118 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.088584937 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074273193 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074234 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089966259 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073247017 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089890236 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072525475 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088425094 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072975974 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088927537 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073610036 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088291949 seconds)
  done (took 2.414892305 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081867714 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069372033 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.110374935 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069611452 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.087051086 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07201517 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09249103 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.079351065 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.088276801 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.070430259 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.094999022 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072883529 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.088318703 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070149877 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073234804 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085916551 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.073447208 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086347206 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07908284 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091697573 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.075880893 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095672779 seconds)
  done (took 2.599439397 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08451189 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070813013 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.105646534 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089088136 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065850323 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067911016 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.092975946 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.070695091 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.092322568 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071294521 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069967254 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085200554 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.074739252 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086334677 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.074951644 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08623681 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071917305 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070088091 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088725653 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066268068 seconds)
  done (took 2.378779561 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09154971 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087656267 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071684358 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096478785 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072139524 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.088390556 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080888392 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087404842 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071708689 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.112653958 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072388258 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087806764 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080422469 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093144014 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072108803 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096158358 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079566851 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09590603 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07192038 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088325829 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.223434261 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071767584 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09606579 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071945539 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086883652 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071333548 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072122353 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093266172 seconds)
  done (took 3.282142908 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070011768 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069965749 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.084468748 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067638438 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.068042573 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.084127278 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067763931 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06743606 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087272881 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068127008 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.069089402 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.085924463 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071096465 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.08665166 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069513379 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069833186 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086480662 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067962295 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06815073 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084345405 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.070778119 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070243004 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.087047809 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067552999 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083585269 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069983666 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068241077 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083992539 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069889145 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067988034 seconds)
  done (took 3.030072265 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.080306177 seconds)
    (2/2) benchmarking "in"...
    done (took 0.0941684 seconds)
  done (took 0.974797003 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067815925 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083482845 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.084419723 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074007637 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09084274 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070938562 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.094937242 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074471437 seconds)
  done (took 1.437745609 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085690275 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081594705 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08828884 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.08212432 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.097917206 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086793773 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159190074 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088676228 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.077428339 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085186689 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084653098 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069638962 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.093873116 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070023217 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092445585 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076823013 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.068472681 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.092181129 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.073827066 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.08622297 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072751032 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095293296 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07264532 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.066305517 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.089076087 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.080166311 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.098701849 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.071468506 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090378416 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078015073 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075081323 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.081580257 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070707122 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.087729268 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068665425 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.097057129 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08611885 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089736152 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079217778 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071257109 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098028406 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.065988424 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091883898 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07754521 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096548078 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.071714142 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.071519297 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.082836436 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.068729928 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088712309 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066062423 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069784531 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.082621687 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077172517 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.089278902 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079667211 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.071044989 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088126313 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072817035 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.090301881 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076743989 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088630024 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072104458 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070214906 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096258354 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074463963 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096639674 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065718177 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064011334 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.084721112 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080541781 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109750443 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076909769 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.088299456 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072111298 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.085452052 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073898674 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071893938 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09306542 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076556482 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.087772455 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.076228065 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094457496 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070720609 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072901327 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.095875493 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068871423 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.089067679 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.068198725 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103029172 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069900861 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.084926503 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067917527 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.08058369 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.090842319 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.070222507 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083993857 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077327553 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.065335729 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.08829065 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072314924 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087423124 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.080471265 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092367307 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.076027756 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.096052367 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.078724283 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070315342 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.090996436 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.068091946 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088631367 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.069477087 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077509954 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.081843173 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072165528 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08773103 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.070680173 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.078820929 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.08638059 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.071108098 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095075241 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076169812 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.08603148 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.067217038 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073371327 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.087019984 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072818474 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09435748 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06796492 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063584551 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082303742 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073892416 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.086967631 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07458279 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.093147084 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073669434 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.065847035 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.085579627 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.076137402 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.096293849 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070669868 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069561578 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094357695 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070822074 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.087386145 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076420408 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088835532 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.069147236 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075913449 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.0880817 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065670193 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090596281 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073154855 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069403111 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090429997 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074551079 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089359142 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071262016 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085846344 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076162148 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070776126 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086333233 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069862059 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.085986722 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080466535 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072082401 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.083189165 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.067218471 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.094592147 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068291012 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069920088 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085911934 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072793561 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.08882439 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068216616 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.069737783 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.089365721 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081302693 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091485994 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072855693 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092537736 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081213441 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.087296861 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072379996 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070661702 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089323048 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.072085513 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.096474561 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075449679 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093383994 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072527091 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066707601 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092288036 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077364051 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086689613 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.069249374 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068506071 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.092084445 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075408159 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.092121314 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.071134741 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086153223 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070838253 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074209768 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089535245 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.071007753 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086763796 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075918133 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.085882906 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.077730569 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071539564 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.097328449 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073583618 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.083252413 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074467096 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085784668 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075987484 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.066350267 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.084949262 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.069911338 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.088840973 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.069300374 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.073503478 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.082256452 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077957618 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09498898 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070624679 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.07026229 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.087911775 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07737612 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088839232 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073840333 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072987178 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.094679736 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080696748 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086517741 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.073842871 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.098591201 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070818374 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.064781821 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093274663 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069147432 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.087363316 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.069548047 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068726308 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090718045 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07852528 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.094674595 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064546994 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.089408956 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069390679 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.069375229 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.082929082 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.075359441 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090692512 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.071147936 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076748964 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089096927 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.071897193 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091218265 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070868178 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070919994 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088934306 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073900769 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.088593079 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072549575 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.069221118 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.091664281 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069365258 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.086175583 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.073032036 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.071058392 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.0886558 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075206592 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08505921 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069106292 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071243498 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086754771 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068903171 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086251684 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068701007 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087895543 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069895895 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069501798 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087322502 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065427961 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092457413 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.069389791 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076315328 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085739428 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066073786 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.090236909 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070264405 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073818538 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086768978 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070111987 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086313276 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069500918 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087539754 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074358307 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066393726 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096440128 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076263362 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086023506 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070835415 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067873459 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08675965 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067977367 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086292516 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070403447 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068069345 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085018853 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073362171 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.08744509 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068861943 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069320184 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.08753279 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068888993 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.087351191 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063957484 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067360586 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085440042 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069206605 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094511486 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069667754 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084549421 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067500553 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070157593 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084454916 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066252644 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093383231 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078631741 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085796733 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076199833 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067143363 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087275563 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07881609 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.079514489 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068105297 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066467498 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083896978 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075512396 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086087781 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077378782 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085598898 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06761883 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066341337 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086092204 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068099802 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063290439 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.084397043 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071879435 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084695969 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068855596 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068107033 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089220853 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070349882 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094677645 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068406634 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086244452 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069335165 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065592713 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084317911 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067926992 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088399106 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070277601 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066991816 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082779459 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.069355529 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068731796 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086457505 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069537907 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087036263 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075665544 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068830721 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088514852 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071905387 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.083868405 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071980923 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086179754 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.069369265 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067574437 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088222525 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072675317 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087508639 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077310615 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068362736 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08647767 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069414588 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.084008454 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069142074 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067360209 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.087865652 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068860354 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.089715601 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078769818 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.085583536 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.073671917 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07013042 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.088298047 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077814555 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.089478378 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.073563839 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095564989 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070834211 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.07304207 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.096108995 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074791951 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091061816 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071438293 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.071285464 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09448844 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.070251609 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.094216995 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.071044862 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.089499575 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.072623085 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.069244546 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088886305 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.071046858 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069298643 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.094488647 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.072272539 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087469983 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.0698926 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06834939 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.089905321 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074907472 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095833256 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.07301386 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091830703 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.066015073 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.068156811 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089614467 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068622958 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089276956 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.074009347 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075781338 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090088815 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070311972 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.087614251 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079851593 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075444549 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092321774 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068151974 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091940872 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.072453322 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.090715457 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071719363 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.07102024 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089792691 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.075024459 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.089780793 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069696699 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077840005 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.091736177 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072053285 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.089292927 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.07067769 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070762997 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.083420564 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.071945519 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.090454432 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076094169 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071712168 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088498836 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080522014 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08536612 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070951279 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091315334 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070600786 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074977415 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.084135977 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071893701 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089267918 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071778316 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.066510611 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087381893 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067787322 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.090102009 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06933903 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.066207073 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098761454 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080140984 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091307928 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070689869 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069916964 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.083605625 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.066046692 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.087643466 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072833149 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072350645 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099171338 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069313653 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087511543 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.067281595 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07048498 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09139761 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073491283 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.086514496 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066780147 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068218755 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092030463 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076324698 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087313679 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070961893 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072901595 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.090770148 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068969564 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092044414 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067848363 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073599684 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101918057 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.071006124 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088639371 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07654718 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0956466 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071913324 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.083876702 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.07162999 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072905406 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.088702533 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071637076 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.090121196 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085844739 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091525719 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069422179 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069451735 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.090950187 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.070324535 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.096850796 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07174304 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070950078 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092249333 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071931008 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098609047 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0729478 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096177697 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.074489283 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091859164 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069253121 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071586502 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.086748038 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069365184 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071684271 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.090244181 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075093578 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.09705481 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.070298197 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099103366 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079516098 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.090906732 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06791299 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069871725 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.08815299 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.066954407 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.089920247 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.069785887 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068522934 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.087203226 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.070221359 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.07093937 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095625668 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071952836 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.089407747 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.071193491 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064346221 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.091605194 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.073072076 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089827882 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.068116252 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.070070657 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.090230559 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.075132984 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091896954 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.069672642 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071500939 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.09178217 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071164642 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.083981953 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076998267 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069277562 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091102817 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.07034728 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088649946 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.072465633 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072918493 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094838571 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071533781 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.091489234 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078501368 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091301287 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.068464221 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.067647417 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.094687534 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.068820971 seconds)
  done (took 48.128153255 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110805364 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084744346 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064441526 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08228672 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076926361 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084069955 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064200467 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064764615 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083819172 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067850187 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082101574 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065792161 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.09286118 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088661266 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097026412 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070536917 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084860971 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067956981 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083989795 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067674941 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.094196392 seconds)
  done (took 2.52592347 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.079654622 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.093543035 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076968484 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097736214 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069960109 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093033531 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075031562 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091175269 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096032485 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070397028 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.096637591 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072651683 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.086634039 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070321864 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086736403 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073798224 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.096521154 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070724588 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.091508748 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07670034 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091303721 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075458695 seconds)
  done (took 2.673039742 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070557127 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070100923 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088908668 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.066083166 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.070194751 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.084273105 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.074307709 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.086151469 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.074016526 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.077141989 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.086800956 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.069065568 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.089276307 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.066231477 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069771931 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.085894007 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.137055566 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.07345369 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.068660136 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.091267089 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06542733 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.090378521 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.066669777 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065767164 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.08725166 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073737545 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.089487029 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068792941 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069145287 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.086914244 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070384953 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.086646905 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071621965 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070456075 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.087434293 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068485508 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.069616589 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.089182056 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.066342506 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.086853956 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070516692 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065731947 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.089835837 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071836073 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.067705839 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.087302028 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071757168 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.088731771 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06575373 seconds)
  done (took 4.655211586 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.089303274 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.13214365 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088175956 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09148029 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.104058885 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.093745569 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.07278648 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111795641 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065672753 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085845687 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085143979 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.106521588 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087503524 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074076182 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.093969661 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069801196 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.07005324 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086113412 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072700651 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086626818 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073551739 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.095838577 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.103455705 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.083766534 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089924101 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068138032 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08595573 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072993349 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099847542 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073407398 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.09188486 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074858911 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.102131936 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.073112352 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08664941 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069999081 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.10360321 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.08690872 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071517499 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066152026 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088859764 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072765117 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.092960404 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084984092 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087232295 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073401353 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086712235 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065180459 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.100823671 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.070425616 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.09536399 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101897663 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072932116 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086052591 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073522426 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101938652 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069502354 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084973126 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070799303 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098471291 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066202468 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.09058618 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.083137253 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.08854294 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075615239 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.10156444 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074265952 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.09064562 seconds)
  done (took 6.761923165 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080281602 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095005344 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085340541 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103052478 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093479942 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076267965 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092415757 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075775738 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092518267 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080495609 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093447732 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115201771 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071531935 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097705813 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076323403 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096569977 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076721748 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096413179 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075927096 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095859769 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.093721214 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083092914 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093142746 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.102168858 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104935193 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.089216144 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076373897 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.095621742 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085132879 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.096516525 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107207056 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076743893 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.094954335 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104544037 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.089806757 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095811585 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069124962 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095552986 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.077829198 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.095322241 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.072423932 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104666135 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076307521 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.091367462 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076066909 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.096428461 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103270936 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.089016073 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.099290385 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100441256 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076502469 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101530843 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075378529 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09364074 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102236578 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.108271862 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101572349 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101040899 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076008024 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10099463 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101449801 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.109569105 seconds)
  done (took 6.508242831 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091246845 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095789741 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098889897 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063919747 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066561255 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092054655 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066931515 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084839611 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078464968 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096146092 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080602169 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091308333 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076347812 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099037038 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091906791 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076705632 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09276218 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074908948 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096064878 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074052845 seconds)
  done (took 2.541468741 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.079840122 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106832941 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071752995 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075923032 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.094108445 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075810409 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.093013867 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073311195 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090990908 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07362457 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099628799 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.081530254 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091122223 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.077487066 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.100121602 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.077004448 seconds)
  done (took 2.220259568 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083232939 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.100237838 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.085488484 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.090874583 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.069285541 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.087109016 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.070696569 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065941854 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.087151963 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.085117783 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.090892205 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.073935986 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.089984121 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068928478 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.067563443 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.093420698 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066593933 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.088268525 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.070861831 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.104876831 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.082539456 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.088324755 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.071737543 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.072215762 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.090817019 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.075997508 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.090540584 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067015562 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.088271925 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.071115471 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089836254 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.079389525 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.086702954 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.070297159 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.069295891 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.087194435 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.071080684 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.090324991 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.074814967 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.070570615 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.089145155 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070762658 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089322286 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071603728 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.0863683 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.072145786 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06781072 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.096687001 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068385158 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087491035 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068971221 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089454712 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070704992 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.079833503 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.091908202 seconds)
  done (took 5.291117793 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085643694 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07217793 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085954034 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068812438 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.093516727 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.072560551 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07353847 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091611261 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072092031 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087228134 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073009225 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091853991 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072550684 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07367005 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091505042 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07512143 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085483457 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072999567 seconds)
  done (took 2.302049628 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07694975 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070127221 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096791622 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.072057531 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089542785 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073554872 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066140236 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.088617545 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069560377 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089979981 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071017109 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.073258255 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088609025 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.07392494 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089914541 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072102461 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.072912616 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088595758 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071547466 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085798753 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072917018 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068615188 seconds)
  done (took 2.58815411 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.076339629 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.098348555 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.169077065 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.112377826 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.087751332 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.103990449 seconds)
  done (took 1.514966032 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095793201 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10430777 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071917139 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11172861 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078883303 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092528466 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073464845 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091970455 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081508851 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106130748 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073104181 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101318852 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09998055 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080786002 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096461677 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077001342 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089278818 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071148499 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087685043 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108724372 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070990629 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098131853 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071581496 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089665623 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071321484 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098143019 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079793189 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103680697 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089641638 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080064329 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094853417 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071964317 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098577384 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103587219 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072649363 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098895996 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072113485 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109701831 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077166359 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101345698 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073291806 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099190848 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101125673 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078632886 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101210278 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074263487 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096986725 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072791845 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09268187 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117800036 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078676512 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101323362 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098258556 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083679607 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100652679 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116241149 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084571727 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09893125 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096317362 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085327061 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098538935 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076835891 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09818373 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103721785 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0770061 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098289084 seconds)
  done (took 6.816425322 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089820067 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110506582 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072395227 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106294286 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100347731 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073381607 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091081731 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073030457 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091713885 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073473316 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134196966 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073703404 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101459136 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101354074 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07386763 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092290717 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073207953 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100190507 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072675894 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116626353 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09233504 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081225991 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101204068 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100935875 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086923086 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097881727 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072975077 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092395136 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07333194 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093100258 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077478722 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092381699 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099707723 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072245387 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098009597 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071501497 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089888318 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076664546 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089123228 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076988804 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099150864 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108501851 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071336165 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089088812 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08580855 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090074795 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071489905 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08943772 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071228524 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090129912 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084005477 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104467856 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104135015 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098532405 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073133277 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091201043 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072739561 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091520941 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073672226 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098272695 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081822273 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092414516 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117219911 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072226109 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090151227 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079207242 seconds)
  done (took 6.716242721 seconds)
done (took 132.697824171 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.229321275 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.209788231 seconds)
  done (took 1.303303806 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072607131 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099729604 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.103277033 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132570665 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088655077 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102839784 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120257384 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081532099 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068727461 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088372531 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069265761 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.089436711 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133927968 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069889641 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087661138 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070938035 seconds)
  done (took 2.348395757 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.107094003 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.202850265 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112678143 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068529495 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102890993 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080640889 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088178621 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.07980932 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095479974 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067871011 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080018707 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097064244 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06705836 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096431792 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076082994 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.098842989 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068190513 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099978269 seconds)
  done (took 2.562319755 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.107939506 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.1436062 seconds)
  done (took 1.118062841 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.205638048 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.124572864 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.203423816 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.417881551 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.209537279 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.277974718 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.173411508 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.17514377 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.156002515 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.16977105 seconds)
  done (took 2.982164778 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102947556 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.173247414 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.31322941 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138432075 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.088262622 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.117533876 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.139289876 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.091136898 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.102777835 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101961127 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083314965 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.09932775 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099877264 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.097313814 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.077075543 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099085454 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.122671468 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076840349 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078491508 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.097563181 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.119294698 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069199524 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07639304 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.096071024 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079925197 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.099879289 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068014313 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087498862 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077932953 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096358141 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080593182 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.11500399 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098588777 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.133150786 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.08337467 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.131544814 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099776282 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074638631 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096352925 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074432487 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.098930557 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079796236 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105806826 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078933247 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087464541 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07935453 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.086614381 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069134214 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.100918791 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.079561572 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.100178404 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080118061 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.132747508 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.099223907 seconds)
  done (took 6.305273599 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.75723219 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.11382401 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097167684 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.820025014 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090949921 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106762216 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.723551245 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119013872 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.211255624 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.77613794 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.091463429 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099974921 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.183662436 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.220230991 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.907498623 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.288249158 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.65245096 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.107129898 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109882914 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.134779489 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142513156 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.181740965 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.156907965 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.44206773 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.077459854 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093340942 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.140652759 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076379819 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165608642 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.088650149 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09547282 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.157770019 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.229535332 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.158424469 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098262582 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071818334 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092758189 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.150928648 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.224429838 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.196381968 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.162065263 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071374357 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092275466 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.143502583 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134231002 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070422906 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.141637389 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.15628571 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.175655903 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.077831489 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.098823222 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.147081946 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.144508146 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.14984414 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.105397109 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.278498848 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.288841562 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074162525 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124806311 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.107122593 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.223294849 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107878877 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.204549097 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146347213 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.174813447 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093468548 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.73852755 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.153493639 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.094780582 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.078803047 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123031819 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097259732 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.142351908 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.146572951 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.352342154 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.168193442 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.077459978 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072332466 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.235758942 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.087521492 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093880056 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.146698392 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.078141068 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12806923 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.148481982 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.168708518 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.151980459 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.212246428 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.14881401 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.145017192 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.099224185 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128677292 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.078937452 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.195388763 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.200922281 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.146376148 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.192272249 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.162509007 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.146707439 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.154200333 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07938875 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.154990079 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124281757 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105515397 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143722968 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.199183682 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.127401162 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087693573 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098234382 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.145416851 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.130157812 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089715371 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.142851136 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.175520431 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.462934887 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.153686579 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071282223 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.113394903 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145138305 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.146209015 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100179914 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.220500404 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126038586 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.151826816 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125795032 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.092343769 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122995783 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.147455737 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.082470069 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128891509 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.143436168 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102152847 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.22148435 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.17606081 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102925094 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.199850098 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.167586119 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.099836132 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.155814313 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124298956 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.151460964 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.081379508 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141716843 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102704134 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.782313988 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.148672153 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125878745 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.078535032 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183414388 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071631595 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106272277 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.08353603 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091015519 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.736149013 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.110688421 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.103684588 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.087056512 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096394942 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124086065 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141559219 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.077616107 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.145075306 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.209759753 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077839371 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124189338 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.110130183 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.145956305 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.100761048 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.087914474 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.108576763 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.087092477 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128722901 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.098190792 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087829332 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.151654393 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.167049089 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.17997892 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.567819206 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.075071458 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.107752104 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.187570436 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096284515 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.249487203 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.16300918 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.184713569 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.14643209 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.105913805 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.292208814 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.14825435 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.160886677 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.111569163 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152371237 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090997108 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.143060306 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.149591551 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07304884 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100620228 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.146838065 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.150220232 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.146455301 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.948711462 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071630354 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.228264685 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.073231498 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.155330519 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100329399 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.080824581 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.268890478 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073784128 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.149434422 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.169168285 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.077500678 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.107696187 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.689916429 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.105823407 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.141452044 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076698563 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.201682836 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.148040395 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.14344784 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.14230316 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100443261 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.146736345 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.190715678 seconds)
  done (took 41.395465172 seconds)
done (took 58.887029359 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.272024317 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.179662777 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.242056774 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144055781 seconds)
  done (took 1.807789932 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.150374525 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10924828 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.123099751 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.08970441 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.108238298 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.091014594 seconds)
  done (took 1.56736966 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.414115798 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.274883536 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239502872 seconds)
  done (took 1.826038398 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.265036622 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.215003862 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.450490954 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.298253284 seconds)
  done (took 2.264275587 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.177229872 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115408275 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069122681 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.107516106 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.16122793 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.257141578 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.133715152 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.196044959 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083736827 seconds)
  done (took 2.250151582 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.205587822 seconds)
done (took 10.822508962 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.268894303 seconds)
    (2/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.13322454 seconds)
    (3/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.208158313 seconds)
    (4/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.136951593 seconds)
    (5/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.251798886 seconds)
    (6/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.097798019 seconds)
    (7/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.07524928 seconds)
    (8/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.238783925 seconds)
    (9/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.213740444 seconds)
    (10/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.114832612 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.190766758 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.074019665 seconds)
    (13/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.196676496 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.135663429 seconds)
    (15/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.08155754 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.102333099 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07557326 seconds)
    (18/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.084588978 seconds)
    (19/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.131107513 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.134851905 seconds)
    (21/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.148154193 seconds)
    (22/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.177424671 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.17157652 seconds)
    (24/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.093753261 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.096548153 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.155109447 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.166413612 seconds)
    (28/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.245851187 seconds)
    (29/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.070949464 seconds)
    (30/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.206388269 seconds)
    (31/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.095748644 seconds)
    (32/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.121419651 seconds)
    (33/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.221032398 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.19225126 seconds)
    (35/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.053418646 seconds)
    (36/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.236517969 seconds)
    (37/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.07833745 seconds)
    (38/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.082584678 seconds)
    (39/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.096786428 seconds)
    (40/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05488909 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.119512426 seconds)
    (42/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.166659236 seconds)
    (43/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.167096608 seconds)
    (44/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.193038762 seconds)
    (45/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.182667303 seconds)
    (46/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.102090903 seconds)
    (47/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.074755465 seconds)
    (48/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.150880532 seconds)
    (49/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.103637811 seconds)
    (50/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.162560368 seconds)
    (51/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.089409566 seconds)
    (52/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.163259921 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.093717791 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.070042705 seconds)
    (55/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076296858 seconds)
    (56/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.078540471 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.07057039 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.153354614 seconds)
    (59/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.076511544 seconds)
    (60/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.167557533 seconds)
    (61/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.079452167 seconds)
    (62/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.161382062 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093330694 seconds)
    (64/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.096622183 seconds)
    (65/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.054684977 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.094926553 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.076000191 seconds)
    (68/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076021202 seconds)
    (69/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.104314104 seconds)
    (70/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.114629093 seconds)
    (71/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.116168155 seconds)
    (72/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.170020803 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.0998749 seconds)
    (74/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.171759769 seconds)
    (75/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.158498655 seconds)
    (76/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.078206046 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.116878664 seconds)
    (78/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.084756314 seconds)
    (79/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069581104 seconds)
    (80/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.096643039 seconds)
    (81/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054715514 seconds)
    (82/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.117092831 seconds)
    (83/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.079214593 seconds)
    (84/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.052733377 seconds)
    (85/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.100555726 seconds)
    (86/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.193840185 seconds)
    (87/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.078475045 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.118182871 seconds)
    (89/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.078162392 seconds)
    (90/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075351661 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.118925232 seconds)
    (92/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.112418048 seconds)
    (93/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.099257181 seconds)
    (94/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.195467364 seconds)
    (95/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.054663206 seconds)
    (96/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.053145042 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.115146924 seconds)
    (98/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067484298 seconds)
    (99/309) benchmarking ("sort", Int64, false)...
    done (took 0.08888846 seconds)
    (100/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.1378748 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.122985857 seconds)
    (102/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082995353 seconds)
    (103/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.121113499 seconds)
    (104/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.097769491 seconds)
    (105/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.097528865 seconds)
    (106/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.053825014 seconds)
    (107/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.218717376 seconds)
    (108/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.079237723 seconds)
    (109/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.076065414 seconds)
    (110/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.053446292 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.173106743 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067985067 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.147169256 seconds)
    (114/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054256112 seconds)
    (115/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.15892613 seconds)
    (116/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.077938239 seconds)
    (117/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.078088828 seconds)
    (118/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.103412918 seconds)
    (119/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075558487 seconds)
    (120/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.160435587 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.17254962 seconds)
    (122/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.143371566 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.191239427 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.138676539 seconds)
    (125/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.075279303 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.115029299 seconds)
    (127/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076530433 seconds)
    (128/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.094413488 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.092725721 seconds)
    (130/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072717308 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.171140811 seconds)
    (132/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.1935367 seconds)
    (133/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055246254 seconds)
    (134/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075781434 seconds)
    (135/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.097853176 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.104361755 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.119246751 seconds)
    (138/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.063227806 seconds)
    (139/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.159840385 seconds)
    (140/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.122885837 seconds)
    (141/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.195337773 seconds)
    (142/309) benchmarking ("sort", Bool, false)...
    done (took 0.159671395 seconds)
    (143/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077877816 seconds)
    (144/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.114109135 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076540169 seconds)
    (146/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.173219842 seconds)
    (147/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.17716913 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.074139827 seconds)
    (149/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073170184 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.097102072 seconds)
    (151/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.06901531 seconds)
    (152/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.103363198 seconds)
    (153/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.074992559 seconds)
    (154/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.160265178 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.117298269 seconds)
    (156/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.05341779 seconds)
    (157/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.097469747 seconds)
    (158/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076550691 seconds)
    (159/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.074548894 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093120039 seconds)
    (161/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.181220617 seconds)
    (162/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.053330115 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066676096 seconds)
    (164/309) benchmarking ("sort", Float64, false)...
    done (took 0.149633099 seconds)
    (165/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074987617 seconds)
    (166/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.095526229 seconds)
    (167/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.174163452 seconds)
    (168/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.065092171 seconds)
    (169/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.165426978 seconds)
    (170/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.072392538 seconds)
    (171/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.064896305 seconds)
    (172/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.101105826 seconds)
    (173/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091969079 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.119503213 seconds)
    (175/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.17204725 seconds)
    (176/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.095475244 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.11789792 seconds)
    (178/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.09188623 seconds)
    (179/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.077358832 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.161778912 seconds)
    (181/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.073006934 seconds)
    (182/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.102718382 seconds)
    (183/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.053074518 seconds)
    (184/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071091387 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.115645977 seconds)
    (186/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.053711954 seconds)
    (187/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.143122416 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.134833783 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.089673277 seconds)
    (190/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.069239011 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067533983 seconds)
    (192/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.078791488 seconds)
    (193/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.053617404 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06760883 seconds)
    (195/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.07549321 seconds)
    (196/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075870612 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.068511853 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.08936551 seconds)
    (199/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.0797348 seconds)
    (200/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.055047619 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.102472079 seconds)
    (202/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.111837144 seconds)
    (203/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.075127683 seconds)
    (204/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.271633767 seconds)
    (205/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.055335014 seconds)
    (206/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.157200922 seconds)
    (207/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.053353123 seconds)
    (208/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.055901296 seconds)
    (209/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.091000498 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067235276 seconds)
    (211/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073451309 seconds)
    (212/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.07671318 seconds)
    (213/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.078430628 seconds)
    (214/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.053965156 seconds)
    (215/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.113787503 seconds)
    (216/309) benchmarking ("sort", Float32, false)...
    done (took 0.150959832 seconds)
    (217/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.06712963 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076460227 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.097850992 seconds)
    (220/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093461379 seconds)
    (221/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.098547718 seconds)
    (222/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055129151 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067161701 seconds)
    (224/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.089848919 seconds)
    (225/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054014832 seconds)
    (226/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07425058 seconds)
    (227/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.102780647 seconds)
    (228/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.055124034 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.090233956 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073813355 seconds)
    (231/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.070876881 seconds)
    (232/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.09078734 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097023141 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.088174443 seconds)
    (235/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.064024756 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069233756 seconds)
    (237/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.100951463 seconds)
    (238/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.062764228 seconds)
    (239/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056397585 seconds)
    (240/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.089652994 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092562269 seconds)
    (242/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.055333717 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.164768742 seconds)
    (244/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.056183822 seconds)
    (245/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.089830434 seconds)
    (246/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.053503928 seconds)
    (247/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.05571968 seconds)
    (248/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098134259 seconds)
    (249/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.053658708 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.06871206 seconds)
    (251/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.075475386 seconds)
    (252/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055260387 seconds)
    (253/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.123979634 seconds)
    (254/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07400516 seconds)
    (255/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.101751382 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.111199517 seconds)
    (257/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.069584795 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.089679902 seconds)
    (259/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.16417324 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.172215136 seconds)
    (261/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054766866 seconds)
    (262/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.076746374 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074750304 seconds)
    (264/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.127277357 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.101170408 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.099677905 seconds)
    (267/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071197793 seconds)
    (268/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079287376 seconds)
    (269/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.08681011 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.09015113 seconds)
    (271/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053336047 seconds)
    (272/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.092927511 seconds)
    (273/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068884085 seconds)
    (274/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.198484697 seconds)
    (275/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.086130353 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.090012028 seconds)
    (277/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.068509404 seconds)
    (278/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.089581861 seconds)
    (279/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.066529276 seconds)
    (280/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.07029046 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.090452124 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.076430026 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06672506 seconds)
    (284/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.084669998 seconds)
    (285/309) benchmarking ("sort", BigInt, false)...
    done (took 0.210453046 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067018808 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.117368081 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068117245 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075407419 seconds)
    (290/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.090761621 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090970473 seconds)
    (292/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.075940486 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087731587 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072451412 seconds)
    (295/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.075603498 seconds)
    (296/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.200605599 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089174725 seconds)
    (298/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.091385307 seconds)
    (299/309) benchmarking ("sort", Int8, false)...
    done (took 0.143358085 seconds)
    (300/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.077219602 seconds)
    (301/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083352594 seconds)
    (302/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.086283026 seconds)
    (303/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.053857256 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073516878 seconds)
    (305/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.077331038 seconds)
    (306/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.062420135 seconds)
    (307/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.06667613 seconds)
    (308/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.052595728 seconds)
    (309/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.092749142 seconds)
  done (took 33.687980554 seconds)
done (took 34.601672413 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085971359 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117759897 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077398882 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.116897673 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082699956 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.101675721 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075495089 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080031853 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.105203775 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08431803 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.104566332 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057580389 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098718741 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077843629 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.09908553 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095650141 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102855728 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075586811 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.097904387 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068397752 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076130856 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089329209 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071437999 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057379533 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.102886836 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075237696 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.097495922 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078397958 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067795496 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.089831777 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071300724 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.097465185 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067591168 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081248934 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095876441 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075688852 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.10030227 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078481123 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069758774 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089924403 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07593195 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067396638 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096836615 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075106821 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.09507944 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073944656 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075986609 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.103985855 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093870309 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09181468 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075888453 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.100644063 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079086554 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.096075947 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070846569 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076223721 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.094904185 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094613633 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.098382746 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070073167 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07546978 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.099413603 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072952844 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.096952369 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075637231 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078379246 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.101238976 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073699203 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098856527 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073724341 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066746386 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.099109425 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07134122 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.08912651 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078213983 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078438566 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.08942809 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073144351 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07408599 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.096583556 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068239575 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092103141 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070097137 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074918792 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091593885 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05754649 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071484868 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095649922 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067664388 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.097960241 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073877646 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074282255 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.092146553 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.080049129 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067599943 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.096034327 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06827898 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067148349 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.091903294 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071974496 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.08989468 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070038251 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077473275 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.092002485 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074598499 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.104193449 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068120938 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074563472 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.089051176 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06812172 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.106558171 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077724064 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067630539 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092308471 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067704494 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074408027 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.089336964 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068440308 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067276777 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.090643216 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07447488 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.089473814 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070630283 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075577069 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.103115261 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067462739 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070859502 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092431094 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068233575 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.095923717 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067938315 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068031347 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.091850431 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065410495 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070180742 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.09032287 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075211466 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07012564 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.098908733 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.07064542 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.098372516 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073401311 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073838069 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.095404218 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067257247 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060600433 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092699579 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070406019 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06939237 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089773533 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070423131 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.089843644 seconds)
done (took 13.487225949 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.07045283 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.172907212 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.127307056 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097705517 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.112064345 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069039379 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.102298964 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.105994861 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.093238755 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.128808313 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089473986 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109580516 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.117023411 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.089963708 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068381156 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.072641244 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.092621318 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.091124654 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.126857099 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.110411046 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.119835384 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.089988805 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.12330482 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092347274 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113453566 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105659025 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.092162705 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073631522 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.094050887 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.094945716 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110233852 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071982818 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06836 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125864724 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.11980526 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.088513328 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.091038616 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086686101 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.090057901 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068383672 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.116765569 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101100228 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106413317 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084024555 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.097215623 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071125878 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.092083615 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.088190788 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.114909673 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.083478004 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112872458 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.136645511 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071725989 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.107791937 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067619214 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.11274197 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106808978 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.071174138 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068556467 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.092767898 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068109721 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071204237 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.113089687 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.117790942 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072585848 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.107200326 seconds)
  done (took 7.385263265 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088987189 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.120040297 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086756065 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109300599 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06842943 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068377775 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091456504 seconds)
  done (took 1.602143176 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.07082492 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092737581 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114604248 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09092568 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.111682759 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089675056 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102228517 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069587479 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109691504 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069858946 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089509579 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129848636 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070626796 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.098991641 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.093022256 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091477862 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092971668 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.090818574 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072951699 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.115770449 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072660885 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.089797991 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.094007623 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06896062 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106946833 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06930431 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.140741959 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074762101 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069765949 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.095150377 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067599678 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.14254494 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.10653909 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080273353 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069275455 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106875517 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084815766 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090462573 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08582278 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097008664 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08480351 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069816165 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.093719162 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068392569 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073941821 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.103094192 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070406672 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092674323 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072758869 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089294958 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092622016 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083641523 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.09245853 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073467865 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070763277 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098358286 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079322133 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.092634112 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090117275 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070512777 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.108491659 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08528662 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.107381518 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085689213 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095297147 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083588702 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.106836857 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072370588 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070798222 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.095892803 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086264761 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.090664824 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071319226 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079969014 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.094616649 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093040182 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.115733388 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071506709 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101791105 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069422119 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070430789 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092502798 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092788935 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096205525 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070322325 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073060589 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095264869 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068042894 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068615522 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.095683476 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067578689 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070358993 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.095133255 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070581886 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094231258 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086837303 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.07006461 seconds)
  done (took 9.479471339 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072272615 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.072296411 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.097688058 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.07237163 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.072911035 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.09648048 seconds)
  done (took 1.469259863 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.104443403 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.095806465 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084259086 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.098474235 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108230876 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.108451898 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085373456 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10858672 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087989291 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.105436504 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085551395 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.107549773 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090820373 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.097928434 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084265653 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.097875273 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084632132 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102083421 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08139083 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099798498 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090631665 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.098572394 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075855008 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085050487 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.096653388 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075758295 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102328285 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081758622 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.103704087 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.085160703 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.099055495 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074050079 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096867404 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.084540649 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.108357475 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074904636 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098119993 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074130096 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10340469 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074221883 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.108182995 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075732035 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.080980363 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.097372478 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.108583177 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074460864 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074443055 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103158666 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08489687 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096578046 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074668915 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097647255 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074198859 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.09702971 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074321965 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107726733 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074672244 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.107887147 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075499003 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073859495 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095420996 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.073286238 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.108187612 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.072760253 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106564266 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074674847 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.09720647 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076373524 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099087908 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.076066671 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073380568 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.095784377 seconds)
  done (took 7.497626222 seconds)
done (took 28.398584774 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.65838746 seconds)
  done (took 1.636384555 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.774394764 seconds)
  done (took 1.755177907 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.850657207 seconds)
  done (took 15.836518355 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.635441221 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.784181097 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.816296091 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.136137701 seconds)
  done (took 3.356320311 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.887617386 seconds)
  done (took 1.896423943 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.241724964 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.227029496 seconds)
  done (took 1.455089456 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.735867903 seconds)
  done (took 1.728982851 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.308177361 seconds)
  done (took 2.295883981 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.334471451 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185702704 seconds)
  done (took 1.518535736 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.532132593 seconds)
  done (took 1.52958822 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.944687828 seconds)
  done (took 7.94835218 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.23641423 seconds)
  done (took 1.249275099 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.274137815 seconds)
  done (took 1.274599337 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.141605789 seconds)
  done (took 4.13981153 seconds)
done (took 48.608520615 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082064975 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085354546 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105627544 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080575282 seconds)
  done (took 1.348770243 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.083111756 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.076737644 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102324021 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075537868 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102860336 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076731458 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.101022419 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079466996 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.075002412 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.09971366 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075535185 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.098359433 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078465972 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.10147494 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072837932 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07784996 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.101963254 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.077063841 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.101829635 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075641972 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073492717 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.100583752 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078466996 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.097942584 seconds)
  done (took 3.090072061 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081372399 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075910318 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099497791 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074734049 seconds)
  done (took 1.335637783 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081555348 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.118724681 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.091761856 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079451988 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.119152737 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.111989729 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072870014 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072791146 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.098234593 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080502644 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.0939706 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.101105001 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113039133 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080515466 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.104711381 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069233152 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071538748 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.112572729 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080202182 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103067586 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073030487 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081345006 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.093957847 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092941036 seconds)
  done (took 3.208225672 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081837807 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.107035799 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.104459766 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.09152899 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.118414541 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068168471 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.10297398 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093398568 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.150244272 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067781493 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.096892036 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067789917 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.098140334 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067565329 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079345937 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.134727981 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.114071731 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.093973764 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098805818 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.092144993 seconds)
  done (took 2.942319434 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07885497 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073521308 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091145099 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070878418 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078891348 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.098514918 seconds)
  done (took 1.500653338 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072304561 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.071239358 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092927332 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068621603 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073499641 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092786207 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06845363 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069500182 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.093358435 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068970951 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068964913 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.091279156 seconds)
  done (took 1.93878372 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.391125034 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093860262 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070628157 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089433771 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073009696 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092042471 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082717287 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069711697 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.116980876 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068160591 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092391378 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070316614 seconds)
  done (took 2.322467487 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266476814 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079747133 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.328169961 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16916701 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141719436 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157529162 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106328981 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142043443 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.199538357 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141469792 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203720665 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227444787 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135810396 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169905788 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116895649 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.133926405 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189226595 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223313319 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107770915 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225616877 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208475005 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158708938 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181967874 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129781649 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136647309 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15214501 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074290306 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107961056 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234017426 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164086969 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203054717 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140634199 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099334089 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23165618 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226454689 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196792816 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164073315 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087102506 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.15869903 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.168151783 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259948217 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116629362 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196884977 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135267436 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108017325 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173577328 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147495671 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.149012134 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.139213243 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117055692 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176857292 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243724541 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.167487858 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114948512 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139372959 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143766311 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.146790149 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105876909 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27194871 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19788867 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161312069 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.098216966 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099349849 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213466397 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160815718 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.144126475 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.154990931 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121029178 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171153246 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.213183915 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147672722 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176359827 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.181769385 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091544953 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148167809 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196822867 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158527751 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205450901 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181411986 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.075541039 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156229306 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132397658 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084925166 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.170587853 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102567437 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211660851 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127727911 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.141668892 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141693987 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137726103 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11310064 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224056005 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205088557 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107119808 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.093797702 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132823947 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15238959 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180842518 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116517402 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136580392 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150016408 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081878918 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193711475 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.0773879 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154685101 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.10602516 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153550347 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165533574 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078484043 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156910603 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130540043 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.129112349 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167908575 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220941554 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092528313 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110724332 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226584297 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157395941 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.134409306 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176704031 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19071829 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.128307578 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131753996 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206578043 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243906679 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092405666 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224528455 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136618217 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087282493 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.116044438 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157419362 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141517637 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.15115848 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086477292 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.180967472 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204789929 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.102239058 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09944968 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193726712 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08455803 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110210438 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14280385 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129733492 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.099235432 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.129595526 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.137026213 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172953417 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156602504 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136139677 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155192375 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126441157 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227577048 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117734267 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.133407394 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107511224 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097930775 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.168547911 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220128304 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083372577 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227909978 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.158356823 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133050698 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150238845 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086218867 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171320071 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106155079 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07313048 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202885694 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14101085 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139154468 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.187456193 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13219694 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.158493025 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.155683261 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165645974 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188670338 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164708112 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13522787 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.090753633 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142213192 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156808436 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.101937251 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.097798427 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.110370784 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132732622 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125002389 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08773576 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200451614 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158971167 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100784532 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142793184 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126405059 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181567337 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105254804 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162297163 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.149891345 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124148345 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.186189268 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21428862 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167527458 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128943476 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177359343 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.098687455 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076512029 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.119518458 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158461892 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111630517 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086669876 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147960908 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20720714 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161056685 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168925736 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140498543 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152352372 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215498876 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074666195 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.144984488 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183256608 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155750274 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.157520634 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093158998 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.125693359 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177188385 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136671183 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275760459 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119437541 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183719015 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184250539 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.133500419 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083007191 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135378297 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169200212 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135506304 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.209722386 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129016249 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091653128 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14004238 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.109756762 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134498403 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158083706 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150253729 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165438043 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.146239467 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188930297 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080771256 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147011406 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153549755 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153454522 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.092069477 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149943699 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223514109 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098741483 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147308881 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212969045 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082353499 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.153222207 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23785274 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202751514 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087600507 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139731586 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157452295 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160170752 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172185263 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172942752 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141469729 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167644948 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140719018 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.088707316 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115923208 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125812095 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10998013 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.124308411 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.140390348 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.147427689 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.122713133 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163547544 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140688003 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140879018 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148874049 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.126387063 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.093557638 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126611378 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210842213 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177913515 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237576551 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.105037883 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.20936708 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228671072 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078869292 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107431842 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.083792458 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172008853 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113335338 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164514945 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.124215047 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108180437 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184120677 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175661029 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123934036 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072074557 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140633931 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166795657 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142198771 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126269403 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.135547165 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196310885 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.133337474 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081507991 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180360696 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1084829 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132574671 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236926725 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063120942 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126278105 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078562232 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110010272 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159903699 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215534166 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085273059 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.156692608 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149944142 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151282131 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160776943 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131213292 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125797984 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116501338 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2087565 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159220423 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.119464701 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142480321 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160115712 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216387504 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109666864 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.124356693 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234228452 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188620026 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.223413133 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.118506427 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146873481 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145438758 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138248126 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173085065 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112352596 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231306101 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08673398 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195093014 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109176719 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122074451 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159674031 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.14130316 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117877451 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180755303 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150050704 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111134859 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082668023 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147847236 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176196583 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111169348 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.102738192 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169796898 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.100863828 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170819126 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231346557 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085611198 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136776071 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124218881 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08483436 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137383416 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133294896 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114725016 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.123868703 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231109588 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.119773783 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208420605 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175513712 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145434199 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169050206 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129401328 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.665789279 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.107062756 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189772942 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150712579 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23904557 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127722649 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150225488 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139894164 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155394555 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175661807 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133887679 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.20658661 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163609143 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.152427393 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107901016 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13245905 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140914915 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.120137587 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110222054 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14496408 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147205369 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.129871226 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.151815365 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1849947 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086006084 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124527938 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193405004 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148183731 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202741803 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175013479 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087257651 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148991128 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198771947 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108821218 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.153863559 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191335806 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137682248 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128008082 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.108960639 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.136977099 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208839136 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.102009509 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197993663 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181842644 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113500404 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145541131 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.175261658 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166425755 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138868697 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157615357 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125568846 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.143385934 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147854816 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113028254 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.080822509 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13553947 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142790017 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.128385576 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106253692 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.146624355 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184887481 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.100023935 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126608299 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105549652 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204248216 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241333573 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.092650641 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111833074 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150117483 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1443204 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.147966451 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157469031 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.110058669 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086052881 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.110769028 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.116152402 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137851109 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144411169 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132551364 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141040864 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203471962 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.114254328 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.252975755 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098504765 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136227686 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.096699347 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.083119425 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125993356 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127102581 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139534932 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101773012 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235133726 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.124792432 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.094583043 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123461915 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075789585 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112936382 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161156048 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141145479 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153265922 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127219668 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065791926 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140331988 seconds)
  done (took 72.335662022 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.13780028 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.104227301 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.118610852 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.174179543 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.1477657 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238912336 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.182395367 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.22319473 seconds)
  done (took 2.422138943 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073301742 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.119102717 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104020454 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.117027312 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09108331 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.07053608 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.295493794 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.114202106 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068415064 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.116476751 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.11937197 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09247699 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.478086909 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06961634 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.099095152 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.087864695 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06931273 seconds)
  done (took 3.267704177 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.439104818 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.633722483 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.452670115 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07524858 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.945180563 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.108500469 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.406868282 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.164008638 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.091907483 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.433179966 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.724964909 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.149477884 seconds)
  done (took 17.716795891 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.080237993 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072663595 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.113289742 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087221772 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.103431334 seconds)
  done (took 1.550251842 seconds)
done (took 115.977018285 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084187133 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.351576301 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055052437 seconds)
  done (took 1.535911794 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088820135 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089616675 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.115184438 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087634453 seconds)
  done (took 1.484639781 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078846358 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080393864 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.112820957 seconds)
  done (took 1.37264489 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.28047896 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166782612 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090787174 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.088040177 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08283327 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.108511326 seconds)
  done (took 1.381871018 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07751905 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.080131607 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102801208 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079319604 seconds)
  done (took 1.434775605 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080292994 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.056470387 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05874388 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085724831 seconds)
  done (took 1.382064138 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.094687094 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.110313736 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082333669 seconds)
  done (took 1.385647883 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.112854984 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.11491387 seconds)
  done (took 1.330387172 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086255905 seconds)
  done (took 1.183301629 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097075265 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.145166717 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.158924936 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.139185799 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.167161238 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.138468108 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088521516 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.116068327 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.105884489 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090936859 seconds)
  done (took 2.352887171 seconds)
done (took 16.55860818 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081722869 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.490311485 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362957596 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118665588 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670562297 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358809818 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.006157561 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12018736 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121728753 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096070427 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084698891 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677108591 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.005391867 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.445461828 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.993707315 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.317875147 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678300269 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070045595 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094412234 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069602931 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.96444544 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095223726 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069383011 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070201874 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.677725194 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373150682 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095722606 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.322023219 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07007365 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097652426 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356938239 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.0959238 seconds)
  done (took 16.245045559 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074457523 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.147473969 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075405422 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084819692 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098093896 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071306731 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099533968 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071459291 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153576698 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069746002 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112578938 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069994394 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.0996996 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070915021 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088524335 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096632537 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070137382 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070643367 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096053799 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070078097 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113552784 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069069311 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069718318 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096150333 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069886735 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108377632 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070950183 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070118282 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096028582 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07217876 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099370588 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070313719 seconds)
  done (took 3.900393684 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120067267 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.155879062 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075985204 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130414174 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114588543 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098142656 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.172029014 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094276684 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.158154664 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069300602 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112760415 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069797999 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128309518 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070623045 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115727691 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070146815 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070938585 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096568841 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069839343 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096316754 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088867552 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095509119 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070688299 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070558589 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096824013 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082620722 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096160053 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071343594 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070295759 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098486907 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073329205 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096326376 seconds)
  done (took 4.212773021 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077099354 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.079300645 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111855423 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085828258 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.09771526 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074974347 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074804204 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.098175893 seconds)
  done (took 1.804001781 seconds)
done (took 27.265489991 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083446064 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.074026842 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.104053908 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083344584 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101272528 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.08090013 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069207313 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.103046826 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.079064175 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074315122 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.104446263 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069314798 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.099314101 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069814958 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076395853 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.095979399 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081286912 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.100170133 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081069366 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081104932 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.098917246 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.080369973 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102294856 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08099004 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.107114689 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081438889 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.085330189 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.103009499 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071938083 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098243506 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078359339 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.112200774 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070878963 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080934975 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.097565196 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070569903 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07074304 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.096317626 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082142953 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.101725978 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072438058 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.102628535 seconds)
  done (took 4.759881791 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093710651 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095884827 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.116317704 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06873538 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.09995394 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067616042 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.116539764 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.066127412 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062089775 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.117318076 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058024618 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061268048 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.091688838 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055935631 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.061438219 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058220003 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.090298667 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058330371 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061331018 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.088256159 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.060232823 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056376063 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088786042 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064742173 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058823472 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063906592 seconds)
  done (took 3.095900467 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079683748 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08776386 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.116248682 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130426216 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.135648084 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079183535 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106388548 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.08951312 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114863278 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069015774 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072787157 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.125441428 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089493429 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.102462702 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.07010787 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.116497173 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084065963 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071174257 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102387908 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092202199 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.112572246 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.079690281 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.121040632 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082381975 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068806269 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09892316 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073599426 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.110275717 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074109189 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078302932 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.101522519 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073354453 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.098311568 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081920553 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073971625 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.098484819 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092887175 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.106682126 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080131945 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069682572 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.099679633 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071093713 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.116851294 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.114270931 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.095902434 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077006931 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077559012 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.106364045 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070971378 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115615841 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078934176 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069115141 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.099560343 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069089079 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096803657 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083063575 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072285225 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.098952048 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079188012 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.098939072 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08204303 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074275324 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.113094356 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069900285 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.104118297 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070092766 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070955972 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095335294 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093427875 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07054089 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.139345184 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070811204 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.098266886 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078823662 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.104862439 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074970937 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069682461 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.112453172 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080276167 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.100935224 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078861396 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072697441 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.099417448 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.090014821 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.100296301 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072049035 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070809189 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.10310737 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072070544 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.098130188 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082592434 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069378913 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.099547389 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086657744 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.095808809 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071368428 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076789321 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.102547383 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069162776 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108255125 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075357191 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.07041895 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.104455779 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069930498 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.099580042 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.07910496 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073791076 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.094997584 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.075368402 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102339045 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070501836 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070870191 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.098757085 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071602433 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.105405784 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075916926 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074780983 seconds)
  done (took 11.536127392 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.198243138 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.197046629 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072547568 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.181565541 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078302463 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.109032066 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.18254107 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097548524 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.098391043 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.07112321 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071126523 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.13090089 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.126109446 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.106930438 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.108355712 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070159422 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.115709377 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.10645371 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.18466775 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.178685303 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.118211889 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078602082 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07134568 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.098970331 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071693371 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.10613303 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087347335 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.104283854 seconds)
  done (took 4.352822745 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.086107747 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.131457623 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076201931 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090945152 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.121531398 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070772749 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102416543 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07165072 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109156037 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082811386 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.096377434 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075498247 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076528884 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.106957387 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070754729 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.106641228 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07900365 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071187978 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.100667524 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074661612 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.106219373 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.0822567 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.101238853 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069336841 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076453704 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.096619388 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066449421 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.114590975 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070003036 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.119242355 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067653423 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076283696 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.110786068 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070516056 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.097354563 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073000763 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.07323918 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.100352814 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07081102 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068380214 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.09594499 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059271715 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069026094 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.108840027 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075895607 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.089338941 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076085997 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074192403 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.101565362 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067081924 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099214342 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072350372 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073533726 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.106319002 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074699819 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074819901 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.101329407 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.068387445 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.104567563 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073377648 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06589563 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094982733 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074535357 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.069010723 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.104504555 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074465115 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.095730626 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073001494 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.075183733 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.103562762 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073320832 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072404693 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.095072842 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071815201 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.102306752 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075474218 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.075125267 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.096456192 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070182042 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071027986 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.084686887 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070606148 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056261504 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.100568656 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069126245 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069326825 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.100736451 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.076598802 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.110943437 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.07185897 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.103931014 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070810444 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069472018 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.100689826 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.066452863 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072926325 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.11356318 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.11291491 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069790952 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067716479 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.112365174 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075376642 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068927646 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.086527108 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076989525 seconds)
  done (took 10.020459609 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.100454908 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.096035826 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.099235053 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084787959 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.126105017 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094756767 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10526687 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076552833 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070957963 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.113606968 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07028123 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.105078766 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069818841 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07849597 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.12611209 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077592621 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099452434 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079906029 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074321083 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.137024315 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084721464 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.111611558 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.082674088 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.097993419 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074468803 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083024313 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.125737183 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081798041 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.107193555 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.087044491 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.081341996 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.125595654 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.087798652 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100525782 seconds)
  done (took 4.358807677 seconds)
done (took 39.228519101 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.189209529 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.401131748 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.183728334 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.04719701 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.21501303 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.211557274 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.199002679 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.199522995 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.346614406 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.191026963 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.424513033 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.87018857 seconds)
done (took 58.611580066 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.19309452 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.328698747 seconds)
    (2/2) benchmarking "String"...
    done (took 1.459046811 seconds)
  done (took 3.918705493 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.612499186 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.076281543 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.445244285 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.18887469 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.196873901 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.508066132 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.787598597 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.005875524 seconds)
  done (took 27.340058844 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.190560677 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.54639563 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.515488137 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.520813208 seconds)
  done (took 17.902173962 seconds)
done (took 59.098912433 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.174777495 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.220277988 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.235541904 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.17045111 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.293434872 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.216736346 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.518228798 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.435771748 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.184474443 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.175090988 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.208483877 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.204697035 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.191624063 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.483395992 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.196347699 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.189737874 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.238229951 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.720887905 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.575788262 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.216218184 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.186348699 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.240688988 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.199666568 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.193176382 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.244430543 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.195209681 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.18595867 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.195941154 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.462566796 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.190814338 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.2761626 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.717240579 seconds)
  done (took 191.268914001 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.190419768 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.202961622 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.302490239 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.229200497 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.803837325 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.385327816 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.323087079 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.846505 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.199840996 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.199558185 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.446161625 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.190955171 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.516672213 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.243905589 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.199848918 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.297407889 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.401429322 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.514391447 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.207574752 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.440101947 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.198473969 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.484479915 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.424103032 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.440689091 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.236635137 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.217040146 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.220195043 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.223325906 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.382089605 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.35671704 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.205353932 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.193889465 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.764205362 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.04932722 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.219171126 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.209079203 seconds)
  done (took 150.100314422 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.453723702 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.191417624 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.191952614 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.193048063 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.22292281 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.191961977 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.191785976 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.721847855 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.722380996 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.698340114 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.440187389 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.25221192 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.394490496 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.189006512 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.284594559 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.200641303 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.193585604 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.193853904 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.207816795 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.216849269 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.190079433 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.192987532 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.722990268 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.204695795 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.23444361 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.199425 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.193046159 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.223354261 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.587781896 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.190298296 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.22169352 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.509767849 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.230298327 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.191058423 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.49694512 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.08760666 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.301001604 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.190176552 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.224821656 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.195073254 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.463279411 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.190977928 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.194836876 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.196857037 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.77461102 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.194182684 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.726978369 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.195141248 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.112091345 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.193922757 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.195257674 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.195683519 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.468775399 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.6724628 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.193633166 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.194855625 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.196245463 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.195002489 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.194454503 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.224603015 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.463405451 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.292120622 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.196592531 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.198389624 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.225872697 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.195912556 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.238720302 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.195622668 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.825818868 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.252165423 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.304537054 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.726074642 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.196361504 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286181378 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310564664 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.192199344 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.196931397 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.196347625 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.196269777 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.300980558 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.191454745 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.589058447 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.19158561 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.201211303 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.197823497 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.255337101 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.290142741 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.192069486 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.499781268 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.197646191 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.196032448 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.940802922 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.289071102 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.191580008 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.195264359 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196713783 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.594287396 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.725376056 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.360350574 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.19836105 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.465471484 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.196762013 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.599787849 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.700114736 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.783320111 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.199383538 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.303967045 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.19693994 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.199133709 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.197212834 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.226254268 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.197297098 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.256151591 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.197963045 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.594022531 seconds)
  done (took 343.601070087 seconds)
done (took 687.556820649 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.868367922 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.850862384 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.962209866 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.851181445 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.833502698 seconds)
  done (took 10.503991984 seconds)
done (took 11.639942723 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.377077392 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.372240401 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.25052407 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.379134866 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.226400197 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.395058648 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.357610348 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.217296179 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.298084888 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.273499037 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.299173474 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.244660159 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.22382808 seconds)
  done (took 18.05405633 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.50271437 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.499792081 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.257526443 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.506040076 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.236540334 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.506337358 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.394767931 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.396808151 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.383417978 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.210543248 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.21374314 seconds)
  done (took 16.248868226 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.511782798 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.497840704 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.263491851 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.505745323 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.236680131 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.531634353 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.39031439 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.395791423 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.388237379 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.211117793 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.213188562 seconds)
  done (took 16.286784207 seconds)
done (took 51.729306883 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.208365341 seconds)
  done (took 2.348168599 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.242686326 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.406074234 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.222660842 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.213183395 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.208666978 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.210486391 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.211873479 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.209351187 seconds)
  done (took 11.068756581 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.209398868 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.207280821 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.208123871 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.206737399 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.206648663 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.206863972 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.206036989 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.206767033 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.206794006 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.208989525 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.208665626 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.210087955 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.209682532 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.210283866 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.206712162 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.20948332 seconds)
  done (took 20.470623708 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.208683749 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.206791813 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.208344972 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.208225403 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.20777896 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.207994166 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.207842288 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.208449652 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.208297755 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.207524591 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.20829995 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.207436843 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.209030584 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.208039425 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.209041458 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.209338015 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.207939379 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.209032269 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.211599696 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.20795863 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.208958843 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.207685005 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.208906423 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.209336156 seconds)
  done (took 30.147748133 seconds)
done (took 65.177325245 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.273414228 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.832665949 seconds)
  done (took 9.248525249 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.212028941 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.21137526 seconds)
  done (took 3.570138056 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.211165914 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.212016527 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.212167767 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.211103804 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.211179463 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.212263145 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.211210815 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.211282892 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.210759178 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.211621859 seconds)
  done (took 13.260472776 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.211954955 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.211971509 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.208321786 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.211696267 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.211841196 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.209370431 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.211766537 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.212246425 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.211403192 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.209897597 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.212444955 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.208725698 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.21263224 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.211731932 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.212939901 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.209531214 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.209213695 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.209100946 seconds)
  done (took 22.941820265 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.211617344 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.212768736 seconds)
  done (took 3.569538308 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.210106504 seconds)
    (2/7) benchmarking "second"...
    done (took 1.209830127 seconds)
    (3/7) benchmarking "month"...
    done (took 1.209944686 seconds)
    (4/7) benchmarking "year"...
    done (took 1.210052373 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.21021055 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.211204199 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.210700336 seconds)
  done (took 9.617846961 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.213347405 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.389660451 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.470741707 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.785059639 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.213704329 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.217245813 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.022296241 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.216598984 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.219383756 seconds)
  done (took 13.894019055 seconds)
done (took 77.246152328 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.199887805 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.201511185 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.102359358 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.212915234 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.21542494 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.547162974 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.22066789 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.323264751 seconds)
done (took 37.169611182 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.213289085 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.913558296 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.963581362 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.211321287 seconds)
  done (took 11.235963288 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.202319021 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.092622562 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.202033513 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.21997427 seconds)
  done (took 17.86531543 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.814776144 seconds)
    (2/2) benchmarking "read"...
    done (took 1.537939287 seconds)
  done (took 4.499317352 seconds)
done (took 40.961514801 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.214747486 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.215335142 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.214771378 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.212210646 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.214570884 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.21226834 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.213072902 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.212707871 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.215204633 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.213642729 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.213433091 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.213245388 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.214966256 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215278442 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.214038919 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212470774 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215468742 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.213777718 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21319527 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.214433315 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.213442828 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214988763 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.213868694 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.212799166 seconds)
  done (took 30.280508673 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.214958971 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.213534831 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.214517295 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.21576509 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.213076379 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.217015991 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.215193324 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.213105838 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.217473106 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.216187358 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214673742 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.214024953 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.216241853 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.214653604 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216862408 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.212500573 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.217117619 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214417075 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217305787 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.215649557 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.218976927 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216029313 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.214935754 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.217401991 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.21545831 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.215180486 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.217835229 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.215549844 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218656495 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.214922837 seconds)
  done (took 37.617892984 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.22154665 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.225195235 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.218050318 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.217368088 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.21740072 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.217233318 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.217408545 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.217410485 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.216295125 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.216500282 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.217768375 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.217454869 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.217443272 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.217247998 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.218339259 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.217972763 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.217920985 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.218699436 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.218174664 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.217332179 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.218860148 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.217660983 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.218127909 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.219160569 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.219289595 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.21803681 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.219315745 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.218623566 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.218871476 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.218967051 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.218179082 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.21936575 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.219442247 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.21827077 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.218303147 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.219702896 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.224534029 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.227556057 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.219569013 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.21907503 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.218987501 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.219732868 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.219840076 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.219386011 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.219615181 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.219235997 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.219443623 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.219742236 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.219984118 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.218991654 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.218649518 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.21964134 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.220002563 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.219529283 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.219656761 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.21869497 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.220935093 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.220574637 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.219883895 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.22018533 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.2192767 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.221533396 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.220628166 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.219380701 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.220465179 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.219252593 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.220859278 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.22107485 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.220668442 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.220817947 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.220230508 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.220820308 seconds)
  done (took 88.944272132 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.220269978 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.218371719 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.218254992 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.217603663 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.218942282 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.221043183 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.218955139 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22142022 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219298123 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.222021126 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221965803 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.220286708 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219163369 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.222664814 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222696188 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.2195868 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.221819612 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.2193811 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.221500295 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.221904687 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.223801121 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.219506344 seconds)
  done (took 28.003369069 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221250097 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.222092162 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.219189403 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.222186371 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.219599848 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.222888521 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.222227478 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.223135482 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222033814 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223607666 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21973189 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222800937 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.220392327 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221164488 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219993166 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.220372547 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224163531 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.220461623 seconds)
  done (took 23.142188224 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.220156793 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.220673555 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.22335531 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.220018419 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.220657234 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.223711327 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220081497 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.222949191 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.224607838 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.220223643 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.222697987 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223812376 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.223615789 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221698408 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224292911 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.221610698 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.222498352 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221738407 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223887337 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221352891 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.221313361 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224721761 seconds)
  done (took 28.045728644 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222465404 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.224404553 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.222253476 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.222290215 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.222587782 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.224510727 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.224612488 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.220824961 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.225744252 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.225149015 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222306513 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.224065855 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.22184108 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.223296273 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.223444288 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222846907 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.224222151 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.224047798 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225549764 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.222640565 seconds)
  done (took 25.626034605 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.225836504 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.225405363 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.224849467 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.225100566 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.226528761 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.226657824 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.225425705 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.226466307 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.225305507 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.225326282 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.225099456 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.227144476 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.227376416 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.227340905 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.227235495 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.228293436 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.226113482 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.225201277 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.224720884 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.225208896 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.224520613 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.224425973 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.224285704 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.226372151 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.217739579 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.222580233 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.221480846 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.222609293 seconds)
  done (took 35.463948883 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221899946 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.222574222 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.219643087 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.221157771 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.219925712 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.220072565 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.221261954 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.220604769 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.223391527 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.220445843 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.222314428 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.221715326 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.223484135 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.222804863 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.2237942 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.222705149 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222887045 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.220363721 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221436091 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221870436 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.22293799 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222836006 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.222047027 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.220114909 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221335614 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.223977945 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219902015 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.221976196 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223695399 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.220214707 seconds)
  done (took 37.810708292 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.241147458 seconds)
    (2/2) benchmarking "in"...
    done (took 1.24139575 seconds)
  done (took 3.638161561 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.21872344 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222787306 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.222232749 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.220028306 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.219466989 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.223266709 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.22318621 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.219776742 seconds)
  done (took 10.924200931 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.222563176 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.222990412 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.222563113 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.221579595 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.22132453 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.224668833 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234031973 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.240160875 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.225278859 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.224046556 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.229636709 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.231078201 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.227962283 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.222520831 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.222960549 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.225326671 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.224135498 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.224168173 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.222884873 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.222550469 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.224404345 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.225965011 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.225184473 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.221914673 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.225212508 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.238008038 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.230693978 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.224178242 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.223912986 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.230968747 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.222991276 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.221250596 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.22425542 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.224727987 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.22273317 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.223866636 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.236414569 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.239976049 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.232940248 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.225920013 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.224247588 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.222097037 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.226584322 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.226672909 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.225667203 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.225286101 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.22492716 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.222675771 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.223773866 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.226658529 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.2311904 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.224204428 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.222905209 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.231699967 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.227248635 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.234516939 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.240596817 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.22875959 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.234914757 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.238919586 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.240598763 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.235178143 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.229052872 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.224671163 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.235155354 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.252091388 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.235206503 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.239979281 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.223510841 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.226900975 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.235447311 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.240931465 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.236717779 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.225839133 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.226938385 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.225710226 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.227411136 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.226115232 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.237371444 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.247648327 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.227911923 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.227036785 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.236260651 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.249503858 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.224900253 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.228064358 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.226726211 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.226648734 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.227324649 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.240907452 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.245062617 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.227625428 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.226937894 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.226803847 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.230950574 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.226108855 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.225686805 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.229091723 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.226664339 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.22779711 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.226627402 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.230404415 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.237669419 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.227694314 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.228232307 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.237115859 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.229749478 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.226751606 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.239196496 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.228427225 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.229142728 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.228352875 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.23601352 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.225886218 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.230640255 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.237432634 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.228344525 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.230440382 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.227760744 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.228787761 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.238843213 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.257161979 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.228509009 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.229032996 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.233824918 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.24031348 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.228144103 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.234000398 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.228722878 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.2261347 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.226952583 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.231395817 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.229405336 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.229682769 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.228157866 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.230933301 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.228064802 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.229096164 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.229532992 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.231183368 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.231954445 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.228383957 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.231143971 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.232941961 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.228145653 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.230707665 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.239711889 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.229249765 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.23013805 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.231271741 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.227630676 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.229823847 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.231647446 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.228175584 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.229381511 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.228633987 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.227378028 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.228560354 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.228040006 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.22939882 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.228655114 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.22821939 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.231240798 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.231545322 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.231619517 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.228144228 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.22440191 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.228808983 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.229135011 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.229114644 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.227239118 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.22902852 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.230916338 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.236202283 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.229474368 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.229414727 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.232891269 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.229492543 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.22876658 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.227956819 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.231819204 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.238014267 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.22757481 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.236345295 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.230753336 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.228646202 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.230220465 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.229825698 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.230157799 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.22971422 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.231693057 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.238310384 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.243462894 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.240060401 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.230736645 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.23390202 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.230734478 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.233502717 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.236770829 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.230482507 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.231013198 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.229340002 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.230936907 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.229181486 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.233922051 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.230156656 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.228741413 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.229689788 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.232994045 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.229870965 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.231806655 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.231712696 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.233046352 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.22834598 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.230483978 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.228973298 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.228842716 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.228316357 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.229862736 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.229433044 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.230669126 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.231815828 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.242147252 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.228368032 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.232115599 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.232037228 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.231928083 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.228537271 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.229477039 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.232800616 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.230258726 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.239138801 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.248986316 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.230812482 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.241369628 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.246895799 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.229928042 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.235116733 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.231359738 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.229796966 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.232969897 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.239587665 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.23276276 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.230735774 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.230816612 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.23121245 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.231786923 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.240531418 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.230331738 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.231821668 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.232560412 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.236514259 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.230456426 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.233704732 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.233162032 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.232239397 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.23482207 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.231804665 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.232739153 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.233928822 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.23293233 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.233333723 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.232731451 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.23506697 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.239472511 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.239619093 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.234214881 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.235200114 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.234407413 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.237185313 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.232523788 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.232216579 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.232618703 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246820518 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.241752076 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.241563423 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.236651215 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.23339746 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.239870297 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.232956807 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.237354026 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.232324906 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.23273143 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.232811682 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.23147455 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.230088124 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.233295896 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.232860331 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.234085583 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.231939452 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.236456829 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.232681664 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.232368567 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.234546641 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.231332593 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.231711594 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.232780697 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.233857946 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.236283042 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.235736541 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.231193479 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.23307334 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.240741073 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.247718046 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.233256607 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.230750213 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.231972478 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.231102407 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.234037714 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.231577873 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.232691552 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.239570173 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.234143546 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.241891665 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.232440561 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.244697684 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.230442468 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.23549399 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.238881075 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.229699923 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.232287841 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.231677055 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.229344721 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.240506443 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.246671761 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.232667953 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.23560318 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.232140502 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.232173699 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.231713837 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.231726101 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.232256861 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.2312891 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.244616796 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.249815868 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.237301428 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.2346822 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.230735598 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.231434174 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.233526495 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.232838898 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.238548351 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.233721728 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.23471478 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.232854147 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.233009496 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.233813293 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.234518484 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.233261939 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.231798153 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.234754653 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.24301356 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.24997672 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.238380233 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.234222816 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.246225013 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.235021029 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.242470718 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.24994504 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.235404959 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.235225531 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.235677291 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.238023645 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.234143125 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.235395674 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.23528423 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.235276295 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.238871344 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.233799652 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.238055018 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.235053319 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.233989415 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.234072658 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.241962178 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.258679111 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.234954822 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.238382763 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.232365716 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.236944664 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.23940028 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.236410985 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.232381256 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.236619596 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245378372 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.242374753 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.235907508 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.233839204 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.235771407 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.235325097 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.236043199 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.235645817 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.23471575 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.237206356 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.237086332 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.235082435 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.240708758 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.235730878 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.23782478 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.237465809 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.234801309 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.248228975 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.238238679 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.237070305 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.235846899 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.237539085 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.235301416 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.236107679 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.235875698 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.237702676 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.236863134 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.238084891 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.243040922 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.243438044 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.239498641 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.236619837 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.236911617 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.23721962 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.237690833 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.235980402 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.237703836 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.238022126 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.238988524 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.236934899 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.23865819 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.236619215 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.236298729 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.2387875 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.238031923 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.239869634 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.242790896 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.236501749 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.234598821 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.237682648 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.237676755 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.237189066 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.236714046 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.248124325 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.24133713 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.248695494 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.245553586 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.240958037 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.239284303 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.240154254 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.247064127 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.23658458 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.239563201 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.237833348 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.241114435 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.239689406 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.242848576 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.238933972 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.247358836 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.240367713 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.238634607 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.250391841 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.256461132 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.238900534 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.240586508 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.245658529 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.23959405 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.236322145 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.240803272 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.23815373 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.249370756 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.256891378 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.240164685 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.240826235 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.237532238 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.241750188 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.24324795 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.241286248 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.241954326 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.236900166 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.239658802 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.240590032 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.241316016 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.238169498 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.240456058 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.239178059 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.24226912 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.246937585 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.236925426 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.244106593 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.240490034 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.241088705 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.240448477 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.240453422 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.238365149 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.237825805 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.241008417 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.239760087 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.242601472 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.243420536 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.239673424 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.242234974 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.242644963 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.242255642 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.243392254 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.250938546 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.249866789 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.238857457 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.241045939 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.24144601 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.244720588 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.240969339 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.240664056 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.243808138 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.244385602 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.241467429 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240743521 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.241827426 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.243564924 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.261591861 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.259237928 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.242607253 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.242523772 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.248486442 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.242676498 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.240901058 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.243943432 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.246602018 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.246889048 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.250782806 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.242643623 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.251282517 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.259090435 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.243262792 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.246896393 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.245184599 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.251562022 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.247184753 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.245015816 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.243767786 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.248439773 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.26264026 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.244447086 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.254075365 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.278593297 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.260520589 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.245704595 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.243561048 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.24237555 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.24443896 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.246706715 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.244211179 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.244421004 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.244983279 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.244710699 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.244521317 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.25001443 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.245302199 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.244465319 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.245756393 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.244937831 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.246074292 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.242388485 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.243750982 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.244685871 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.244817719 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.242880089 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.244213542 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.244309903 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259023542 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.258085216 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.244427733 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.245399437 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.240622618 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.249325532 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.248643104 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.255576253 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.25294498 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.244267001 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.245518662 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.247426163 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.246786897 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.241137988 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.246285886 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.245135481 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24474003 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.242638851 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.260944278 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.255866127 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.252417509 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.246798728 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244480385 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.244728117 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.24804822 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.244045233 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.245441038 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.249629363 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.246093869 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.250600145 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.246122136 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.246352791 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.249997998 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.255722504 seconds)
  done (took 737.971955671 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.243601059 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2433608 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.24474239 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.244657902 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.243956357 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.244595454 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.2440195 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.243787864 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.244490161 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.245692389 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.245166388 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.245262162 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.245563837 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.244734544 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.245130269 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.245250501 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.245441062 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.246532851 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.243516994 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.246125716 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.246010345 seconds)
  done (took 27.32179762 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.24721747 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.244446368 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.247141961 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.247130279 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.244879602 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.247840985 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.245110618 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248261143 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.248893282 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245576212 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.247604219 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249499369 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.245718858 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.244058301 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245506477 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.248713024 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.248102518 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.24692131 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.248683269 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.245851541 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.248196877 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.245551678 seconds)
  done (took 28.61113985 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.247179956 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.248573232 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.247661084 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.246030912 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.24943324 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.246196268 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.249613571 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.249769021 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.250351594 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.25072465 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.249003776 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.248731067 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.25538999 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.25567828 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.252917727 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.249193641 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.394347983 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.249001707 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.251758913 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.24883626 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.247304704 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.258589446 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.248703728 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.247875983 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.24810255 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.249849265 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.248175661 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.249352034 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.250526974 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.251636405 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.254524428 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.250035198 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.250389569 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.252045537 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.249602045 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.252044926 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.255607228 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.25241284 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.249134565 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.251907613 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.261046551 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.273195761 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.250778879 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.259001641 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.252263085 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.251682551 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.254440639 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.258838786 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.249117993 seconds)
  done (took 62.652587952 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.25103146 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.251842535 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.249955444 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.252099935 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.251346613 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.251490152 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.25192475 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.250913415 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.250042887 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.249561118 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.252453935 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.249494291 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.249058976 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.251641201 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.252168969 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.248650481 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.251748495 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.250386313 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.249216083 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.250450401 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.2495258 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.25312035 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.253779827 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.251542336 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.25285381 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.24918662 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.248745124 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.253446059 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.250635322 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.250210173 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.253652615 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.252956535 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.254340202 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.250377907 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.251199495 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.254364313 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.253684229 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.251905979 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.251973182 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.251824151 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.254387609 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.253494844 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.252458633 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.25512091 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.251650586 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.251344105 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.25211918 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.251103283 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.253654127 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.256662099 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.254325901 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.251833706 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.253819789 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.25066654 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.254725002 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.254189463 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.250684992 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.25225637 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.25532091 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.252655861 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.253003921 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.256134126 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.25310551 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.254581623 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.255622939 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.252828595 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.253199413 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.251628859 seconds)
  done (took 86.333961108 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.253220584 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.253650475 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.25295208 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.25171844 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.254241889 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.25453497 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.254565602 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.254331628 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.253084353 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.255335981 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.254171163 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.255777548 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.25624102 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.252553666 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.255007663 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.252156716 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.252374212 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.255729124 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.253892557 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.25435134 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.254463343 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.254840621 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.254736001 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.255675414 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.256176389 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.253112505 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.254797431 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.25654748 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256899614 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.256061183 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.256205342 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.255450272 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.255378247 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.256639407 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.255011565 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.25496809 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.257989141 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.256296797 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.256711049 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.256719649 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.256395651 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.256580069 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.256261265 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.255575551 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.257413943 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.256988384 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.25716173 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.256567359 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.258230918 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.25786404 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.256246969 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.256262999 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.256469106 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.256552305 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.256787614 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.257550518 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.259103448 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.259335443 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.257557122 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.258299316 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.257824424 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.258106476 seconds)
  done (took 79.043342117 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.256710536 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.258243168 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.256817658 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.255566629 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.259394655 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.255448156 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.25830758 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.258970487 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.259763261 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.25938351 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257973877 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.256979964 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.257613878 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25801459 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.255690373 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256490389 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.255740887 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.256390237 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.260441609 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.25697628 seconds)
  done (took 26.341649939 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.254164216 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.258603901 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.257452089 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.258318312 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.260036855 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.256588631 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.26000305 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259664224 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256860338 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260372515 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.260313977 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.26213787 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.257589106 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.256677259 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.260576812 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.259244016 seconds)
  done (took 21.329235475 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.257635107 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.261556897 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.261121124 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.258692861 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.256646704 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.25782129 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.261872757 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.258651154 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.257768526 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.261218896 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.262033563 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.260642935 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.262712055 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.260876963 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.258472052 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.259952238 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.260264693 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.26003257 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.262139929 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.262043532 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.259703704 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.259743147 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.262319553 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.262000675 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.260800537 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.259993376 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.258966244 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.259866386 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.258311928 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.261404553 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.260115443 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.260417251 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.259914236 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.258750672 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.261889996 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.257854046 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.262856217 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.261020874 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.262889404 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.262806969 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.261029898 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.258876469 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.26271662 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.262452744 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.259667133 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.264308994 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.260137859 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.259912749 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.260234928 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.261416582 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.264357034 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.264898149 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.262705642 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.263854075 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.263592539 seconds)
  done (took 70.5371043 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.262145719 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.26430518 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.261010534 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.264805933 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.263835966 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.260845077 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.264219466 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.260511143 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.261584218 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.264259209 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.261959883 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.263031089 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.261379237 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.26230172 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.262597061 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.264468359 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.26243175 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.262864288 seconds)
  done (took 23.924213874 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.262576997 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.263397948 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.266060065 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.262087078 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.261802721 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.264334992 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.262924661 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.265229643 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265117798 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.262727809 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263111188 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.266008912 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264815446 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.265378688 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.262459916 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.263564674 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.26697419 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266232698 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.262981727 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.262753376 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.265486212 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.265648063 seconds)
  done (took 29.007372022 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.262840093 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.264183546 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.281695927 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.310563174 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.297376569 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.264045042 seconds)
  done (took 8.877574992 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264546372 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266133842 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.264312586 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267079842 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266516763 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264419978 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263427078 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264063105 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266121487 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263877177 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264615075 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266063426 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267018058 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265098528 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267283734 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266416873 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263965398 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263945437 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264301628 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267291016 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264145835 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267967816 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264186955 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265290073 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265169382 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263802693 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267130959 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267078014 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265376529 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268533012 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268213289 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26488031 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268123655 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266450768 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267853305 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26920446 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265005432 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268215835 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267876364 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266296281 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.267672318 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267605912 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268253184 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267161076 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268230609 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265576561 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266630933 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265874014 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265726026 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26787054 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268820483 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267121818 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268226292 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268549069 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267774855 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268726687 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266143188 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26656313 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268673419 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265519817 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26635408 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267404877 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266118323 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267852178 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26974729 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267457256 seconds)
  done (took 84.787322173 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265048281 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.267015646 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266425845 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267875882 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267621749 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267074747 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267291334 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266882792 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266597518 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267342956 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269861277 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266868859 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266529634 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267070036 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267051706 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266169308 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263121857 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266790577 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267824675 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269989793 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267462481 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266656992 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265773026 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265540303 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266707319 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269499851 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264893336 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266932153 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262264914 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268556944 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268437209 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266673949 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26743751 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.268517517 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268523028 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267026098 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268680504 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26588624 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267966783 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269264517 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268200935 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27102259 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267986362 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26852737 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269024169 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268124564 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268591628 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266244505 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26910175 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267815934 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268672442 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262468118 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264582144 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265652428 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26713057 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268950877 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268179199 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267728929 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26238113 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268168803 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265473086 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265590949 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26557345 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263060226 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263019986 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268224049 seconds)
  done (took 84.825116305 seconds)
done (took 1722.208449329 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.268478377 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.306247412 seconds)
  done (took 13.773142473 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.430576357 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.379812396 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.26291068 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.293384304 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.264270357 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.28522008 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.281045278 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.264849248 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.261895366 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.264694683 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.265961718 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.451547516 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.261362577 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.262844154 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.264483585 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.358965698 seconds)
  done (took 42.063318615 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.289816135 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.272807941 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.373723961 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.287858485 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.291629149 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.434457602 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.322686276 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.268571234 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.422795282 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.309183675 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.673604628 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.292635316 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.271451639 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.264406534 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.283441638 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.437867074 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.493642434 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.677087794 seconds)
  done (took 28.87016738 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.666784699 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.294528733 seconds)
  done (took 9.163632892 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.285723166 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.268508423 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.283735867 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.283332481 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.263364917 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.324575684 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.285959735 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.31740076 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.281169405 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.312418486 seconds)
  done (took 64.119432468 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.287807472 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.271211575 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.2711667 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.269095157 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.26327391 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.261649398 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.267982051 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.265569195 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.516702663 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.385647666 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.284230059 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.276124424 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.268804714 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.270844785 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.268414545 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.304505518 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.396769817 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.268180631 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.26771807 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.275215245 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.270616473 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.392925511 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.307857625 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.270690882 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.384321309 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.53591396 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.275827727 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.277200911 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.388032577 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.269090839 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.269574295 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.270519233 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.272161493 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.822094639 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.745585054 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.280030756 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.292945554 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.27997818 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.269394898 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.445814938 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.272290801 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.278094354 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.266321007 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.714670269 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.428430878 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.376550294 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.450413419 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.275606598 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.271501908 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.333810981 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.272046771 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.274615715 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.299706845 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.007564387 seconds)
  done (took 106.990103124 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.311178056 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.756121511 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.432477442 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.282601411 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.03653574 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.925924909 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.264923448 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.526030745 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.328527558 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.262779859 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.588536762 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.741866327 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.268618261 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.269028971 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.363005611 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.355482157 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.263042899 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.031432795 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.265508727 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.271585671 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.671108713 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.280844369 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.267861271 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.306151123 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.301542434 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.704116074 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.626461625 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.705408162 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.266236092 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.265392789 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.699511061 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.273105954 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.269029193 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.265692087 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.531017636 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.594402873 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.568764367 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.271142745 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.315741752 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.266951522 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.296590154 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.694484111 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.577760365 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.265863875 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.273851984 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.700495688 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.265887153 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.265257259 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.268080273 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.464560903 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.254153019 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.266145713 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.623980087 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.268369423 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.614279138 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.348142097 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.301964832 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.727700643 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.263675803 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.323447372 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.306961564 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.266709367 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.266684419 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.265954934 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.267198811 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.582937174 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.673239458 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.266981622 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.581261322 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.693112585 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.26659651 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.77015942 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.130033447 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.291084855 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.330206819 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.266160727 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.83930364 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.72920565 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.310643196 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.268553017 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.573508246 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.266305776 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.577024443 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.277397507 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.269241879 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.683704086 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.28522879 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.30593582 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.271200834 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.271453438 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.891201319 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.278680886 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.525422672 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.33189274 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.268274069 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.269371745 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.29056707 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.265138187 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.266218692 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.271921919 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.775056001 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.276142553 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.554498449 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.284669013 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.273482481 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.272592323 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.270056781 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.268821715 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.480027595 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.691241886 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.275998888 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.265166924 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.270292676 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.278745484 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.572960939 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.274972964 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.554925442 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.275208773 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.270232996 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.273553509 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.962986004 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.281712774 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.269882219 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.290328571 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.116374608 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.48295053 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.285677363 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.28491544 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.265996051 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.283739478 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.518890845 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.267720548 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.30829865 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.270893008 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.956370456 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.281245851 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.303939799 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.931011891 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.2745366 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.145154445 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.287503547 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.266440064 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.570486011 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.53054795 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.586067228 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.273935731 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.270696782 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.940341332 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.303298197 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.402423764 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.284739071 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.273426645 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.469177702 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.504921033 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.272112141 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.833519349 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.269488312 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.480642499 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.271771156 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.584587444 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.741167488 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.273899666 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.279338799 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.949329369 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.938709975 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.887510809 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.27205769 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.589650085 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.262096023 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.721899448 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.269098724 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.277361649 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.693853374 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.26986091 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.274469068 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.269024306 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.268939024 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.331868813 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.445709697 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.683662093 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.275656779 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.715184227 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.283197243 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.270202893 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.273227834 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.273255814 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.624050721 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.318647706 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.27379745 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.272223886 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.273322746 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.277899335 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.738423181 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.151018188 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.276121159 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.423929299 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.881377213 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.272526865 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.272830418 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.841432039 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.561191068 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.765355181 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.280414598 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.562908332 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.277611961 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.310905809 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.980498933 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.293273028 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.727718974 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.275339078 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.271500833 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.854835805 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.275095323 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.320165402 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.272967617 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.271406552 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.781454394 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.275339242 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.275762317 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.52838586 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.274313094 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.525641067 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.277113679 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.282167732 seconds)
  done (took 1095.215465872 seconds)
done (took 1361.392308147 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.279358334 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.275059479 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.266854427 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.277176788 seconds)
  done (took 26.312109808 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.282681529 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.280997587 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.281788796 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.27958999 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.284512084 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.278696934 seconds)
  done (took 8.902689898 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.311918903 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.280421524 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.279529886 seconds)
  done (took 19.089150766 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.484061213 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.479628508 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.621739256 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.297775038 seconds)
  done (took 10.100569871 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.280884073 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.280062387 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.281514551 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.283540299 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.2852908 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.285192079 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.284460182 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.284332102 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.286252062 seconds)
  done (took 12.769235486 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.946134688 seconds)
done (took 83.33421983 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.258445406 seconds)
    (2/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.506228383 seconds)
    (3/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.494786004 seconds)
    (4/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.969506758 seconds)
    (5/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.581465199 seconds)
    (6/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.300483082 seconds)
    (7/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.338614676 seconds)
    (8/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.058122705 seconds)
    (9/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.282656084 seconds)
    (10/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.291014789 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.382488114 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.511996466 seconds)
    (13/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.69423448 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.261908045 seconds)
    (15/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.30533073 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.319410503 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.304480002 seconds)
    (18/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.473783566 seconds)
    (19/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.856272328 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.128622124 seconds)
    (21/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.267500544 seconds)
    (22/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.527725672 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.082126554 seconds)
    (24/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.343218164 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.141174363 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.37994555 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.300681315 seconds)
    (28/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.865181811 seconds)
    (29/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.41208741 seconds)
    (30/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.83357224 seconds)
    (31/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.563940681 seconds)
    (32/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.462603327 seconds)
    (33/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.283379505 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.276939178 seconds)
    (35/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.886010307 seconds)
    (36/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.275689654 seconds)
    (37/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.971072013 seconds)
    (38/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.299764735 seconds)
    (39/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.970252544 seconds)
    (40/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.270583116 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.681433916 seconds)
    (42/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.579181 seconds)
    (43/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.478849639 seconds)
    (44/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.266602073 seconds)
    (45/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.80043052 seconds)
    (46/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.047150266 seconds)
    (47/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.384212879 seconds)
    (48/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.340738036 seconds)
    (49/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.398031441 seconds)
    (50/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.655083574 seconds)
    (51/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.298331041 seconds)
    (52/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.839523964 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.146638444 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.132679023 seconds)
    (55/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.304636757 seconds)
    (56/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.580517761 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.091505219 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.26476763 seconds)
    (59/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.442580826 seconds)
    (60/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.281867899 seconds)
    (61/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.305584778 seconds)
    (62/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.274911152 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.515015184 seconds)
    (64/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.392915251 seconds)
    (65/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.288618129 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.008692573 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.54229881 seconds)
    (68/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.304173438 seconds)
    (69/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.535403444 seconds)
    (70/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.300869321 seconds)
    (71/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.280154996 seconds)
    (72/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.329838663 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.85144998 seconds)
    (74/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.552579734 seconds)
    (75/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.815152158 seconds)
    (76/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.403957826 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.320150289 seconds)
    (78/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.026769499 seconds)
    (79/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.338780362 seconds)
    (80/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.265592871 seconds)
    (81/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.699319509 seconds)
    (82/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.36524466 seconds)
    (83/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.307779053 seconds)
    (84/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.998561953 seconds)
    (85/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.280437592 seconds)
    (86/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.760875771 seconds)
    (87/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.375513858 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.896649065 seconds)
    (89/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.396278255 seconds)
    (90/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.291439439 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.706447772 seconds)
    (92/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.321701945 seconds)
    (93/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.475679344 seconds)
    (94/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.294613371 seconds)
    (95/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.588329569 seconds)
    (96/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.075636751 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.136234814 seconds)
    (98/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.995289728 seconds)
    (99/309) benchmarking ("sort", Int64, false)...
    done (took 5.454580451 seconds)
    (100/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.468754928 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.342328149 seconds)
    (102/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.995794044 seconds)
    (103/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.326752939 seconds)
    (104/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.48110847 seconds)
    (105/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.320641004 seconds)
    (106/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.833918614 seconds)
    (107/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.296333186 seconds)
    (108/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.299547731 seconds)
    (109/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.27721964 seconds)
    (110/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.667802097 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.404338748 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.780972757 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.314832003 seconds)
    (114/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.280803167 seconds)
    (115/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.661325915 seconds)
    (116/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.380913405 seconds)
    (117/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.351732569 seconds)
    (118/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.405857668 seconds)
    (119/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.319869481 seconds)
    (120/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.575878412 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.295421197 seconds)
    (122/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.856637853 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.351272341 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.291226017 seconds)
    (125/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.09224414 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.131028453 seconds)
    (127/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.512401924 seconds)
    (128/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.318239531 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.647026388 seconds)
    (130/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.39672521 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.293802316 seconds)
    (132/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.73947754 seconds)
    (133/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.838349948 seconds)
    (134/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.399484789 seconds)
    (135/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.303369142 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.366589863 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.341666774 seconds)
    (138/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.636415274 seconds)
    (139/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.826971726 seconds)
    (140/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.516450518 seconds)
    (141/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.291790171 seconds)
    (142/309) benchmarking ("sort", Bool, false)...
    done (took 1.795302855 seconds)
    (143/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.315581384 seconds)
    (144/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.321371567 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.549438777 seconds)
    (146/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.278320748 seconds)
    (147/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.942183631 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.007636788 seconds)
    (149/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.711980773 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.551893976 seconds)
    (151/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.294581026 seconds)
    (152/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.407706529 seconds)
    (153/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.595167053 seconds)
    (154/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.613110878 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.369518074 seconds)
    (156/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.532124306 seconds)
    (157/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.321836788 seconds)
    (158/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.39762525 seconds)
    (159/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.774233267 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.131066177 seconds)
    (161/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.795874316 seconds)
    (162/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.491285037 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.034850664 seconds)
    (164/309) benchmarking ("sort", Float64, false)...
    done (took 5.556365825 seconds)
    (165/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.320612673 seconds)
    (166/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.310996568 seconds)
    (167/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.280253539 seconds)
    (168/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.572153238 seconds)
    (169/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.167554587 seconds)
    (170/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.810078923 seconds)
    (171/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.647640038 seconds)
    (172/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.321504895 seconds)
    (173/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.312795422 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.532817961 seconds)
    (175/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.765327103 seconds)
    (176/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.433145822 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.368588254 seconds)
    (178/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.393174127 seconds)
    (179/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.34995934 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.297535981 seconds)
    (181/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.360523516 seconds)
    (182/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.401556109 seconds)
    (183/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.50645165 seconds)
    (184/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.083385711 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.720710843 seconds)
    (186/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.459829321 seconds)
    (187/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.297254684 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.400841357 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.004487744 seconds)
    (190/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.299728822 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.862433977 seconds)
    (192/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.28028695 seconds)
    (193/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.437711771 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.691158093 seconds)
    (195/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.009747301 seconds)
    (196/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.320442123 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.171696751 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.637453556 seconds)
    (199/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.397220106 seconds)
    (200/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.286561282 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.341207645 seconds)
    (202/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.999258334 seconds)
    (203/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.520902376 seconds)
    (204/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.604090033 seconds)
    (205/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.867381286 seconds)
    (206/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.490515291 seconds)
    (207/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.084009613 seconds)
    (208/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.8156093 seconds)
    (209/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.34089284 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.357662559 seconds)
    (211/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.324090139 seconds)
    (212/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.812000427 seconds)
    (213/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.311716503 seconds)
    (214/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.922122509 seconds)
    (215/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.351172904 seconds)
    (216/309) benchmarking ("sort", Float32, false)...
    done (took 5.277345528 seconds)
    (217/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.742977561 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.828763501 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.505467409 seconds)
    (220/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.308137909 seconds)
    (221/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.325097889 seconds)
    (222/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.670544648 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.712811047 seconds)
    (224/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.323375617 seconds)
    (225/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.687167875 seconds)
    (226/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.384705936 seconds)
    (227/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.301838321 seconds)
    (228/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.656524386 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.704325171 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.333444422 seconds)
    (231/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.383047521 seconds)
    (232/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.378973828 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.191011727 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.34062448 seconds)
    (235/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.52134742 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.299154087 seconds)
    (237/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.462980485 seconds)
    (238/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.647600628 seconds)
    (239/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.286189742 seconds)
    (240/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.63129928 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.745155981 seconds)
    (242/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.886856599 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.302123342 seconds)
    (244/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.290547478 seconds)
    (245/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.54754453 seconds)
    (246/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.612679978 seconds)
    (247/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.31151855 seconds)
    (248/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.313511028 seconds)
    (249/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.540647455 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.320099027 seconds)
    (251/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.592158115 seconds)
    (252/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.322805064 seconds)
    (253/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.297043589 seconds)
    (254/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.38677987 seconds)
    (255/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.658828493 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.666761974 seconds)
    (257/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.324777896 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.508204868 seconds)
    (259/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.619210013 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.297727671 seconds)
    (261/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.887121296 seconds)
    (262/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.135323123 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.327764005 seconds)
    (264/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.491183268 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.286420996 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.711555786 seconds)
    (267/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.365076319 seconds)
    (268/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.304447174 seconds)
    (269/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.016484467 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.616697282 seconds)
    (271/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.08335692 seconds)
    (272/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.329608559 seconds)
    (273/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.432123599 seconds)
    (274/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.301902757 seconds)
    (275/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.596695296 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.920225121 seconds)
    (277/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.298330908 seconds)
    (278/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.38587796 seconds)
    (279/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.384106739 seconds)
    (280/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.362517025 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.302239188 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.387662748 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.385034168 seconds)
    (284/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.650111266 seconds)
    (285/309) benchmarking ("sort", BigInt, false)...
    done (took 6.311181985 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.406941869 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.338380847 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.865618753 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.447044027 seconds)
    (290/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.293163484 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.678858925 seconds)
    (292/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.066919114 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.676680422 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.356578212 seconds)
    (295/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.910843794 seconds)
    (296/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.296060137 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.651896979 seconds)
    (298/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.314368375 seconds)
    (299/309) benchmarking ("sort", Int8, false)...
    done (took 4.314453514 seconds)
    (300/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.282138557 seconds)
    (301/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.613950203 seconds)
    (302/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.517239987 seconds)
    (303/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.618132759 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.32079496 seconds)
    (305/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.096001446 seconds)
    (306/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.663671383 seconds)
    (307/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.024065193 seconds)
    (308/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.915873617 seconds)
    (309/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.409149802 seconds)
  done (took 903.548489466 seconds)
done (took 904.768023473 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.325810049 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.32179505 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.301774362 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.326986508 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.415885088 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.33688429 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.312550398 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.309724779 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.355169424 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.35518817 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.306096128 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.335863266 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.309183461 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.302551451 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.303425296 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.320733516 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.244510222 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.306736958 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.322181213 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.311367669 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.32575458 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.301451643 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.356192581 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.336400033 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.311479365 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.310377604 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.309873667 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.323962128 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.417762879 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.307901771 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.307337689 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.318134424 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.247263743 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.30535265 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.301631403 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.32673886 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.317026568 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.314342007 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.310025689 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.338678535 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.623950088 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.302612989 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.3101946 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.306072463 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.307480052 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.311004226 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.311453609 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.314829633 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.319914082 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.320543936 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.61649186 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.321477481 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.310119226 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.306910524 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.318745799 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.308761604 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.310362621 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.325566181 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.326695463 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.322078355 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.24035416 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.311217221 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.312632321 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.322269509 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.313591181 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.656787133 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.303243898 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.311064305 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.631349954 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.312180186 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.658290908 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.314982814 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.308176247 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.324536525 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.339117911 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.280204112 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.304984776 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.310870228 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.317269849 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.30554106 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.319799231 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.322815615 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.312047513 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.313037852 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.325607206 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.335404101 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.318603284 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.308505581 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.316013044 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.327563936 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.316470249 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.316853964 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.311005179 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.304107546 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.318197757 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.309721523 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.311015337 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.313789119 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.31487982 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.318627341 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.632133086 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.326640392 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.3045336 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.306148538 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.30970238 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.326723306 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.633052045 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.310186321 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.329476814 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.360353598 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.309924512 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.280333942 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.316550136 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.321577087 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.316205909 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.310705947 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.305288998 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.252223766 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.631615085 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.321518669 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.309822225 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.310260779 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.323123339 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.311263497 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.310800734 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.289879734 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.313586554 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.32694187 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.432018498 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.319781908 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.343033694 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.305794993 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.315228268 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.341124274 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.329580797 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.342476654 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.311561255 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.328287066 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.324797885 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.304899212 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.324191792 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.320330677 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.31417765 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.318148174 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.307864814 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.3421724 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.322494942 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.323470589 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.330779504 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.429685275 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.307810243 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.28292656 seconds)
done (took 220.085685467 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.373098176 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.306449455 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.417114791 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.310463497 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.405448735 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.40727165 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.308387822 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.309436628 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.309301126 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.686519824 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.3068878 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.30570075 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.305721289 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.307030513 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.39232988 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.310276584 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.30714702 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.645850638 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.306470828 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.379987936 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.300664348 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.305324756 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.311370287 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.691287533 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.301338882 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.307291439 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.379034898 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.310761062 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.653509901 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.304423971 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.306765108 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.655053004 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.399057142 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.328185497 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.320487573 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.318234442 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.410331453 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.326873628 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.392286066 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.392766617 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.418799999 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.348272883 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.314568785 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.309745113 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.314119095 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.314140664 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.310017939 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.338334734 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.313818686 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.310846173 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.650243638 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.319266098 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.3196226 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.311908424 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.311658715 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.333098313 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.306325668 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.312096572 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.398001173 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.314445878 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.371955197 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.689586957 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.68306148 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.310992179 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.312461666 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.307521207 seconds)
  done (took 146.903356329 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.375068059 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.384695137 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.418966369 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.317954545 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.361623332 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.427511576 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.313893016 seconds)
  done (took 10.84492189 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.319824871 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.311943636 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.363654735 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.358362234 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.310047376 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.459109898 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.316210995 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.327748876 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.312354503 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.366972271 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.314991145 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.314604118 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.321734607 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.306554426 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.359238783 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.324762101 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.426815198 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.315172855 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.312388528 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.468536462 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.313715605 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.325606014 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.369797765 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.327967808 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.319937112 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.319617468 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.883417942 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.318751228 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.316153142 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.316550939 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.314917055 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.353855205 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.319318809 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.319635606 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.315955959 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.433259021 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.31547 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.317287419 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.317012243 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.31751629 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.318206949 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.319037084 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.319846165 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.315830221 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.318155644 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.340363055 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.317730912 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.318285788 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.320853726 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.321070739 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.373185219 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.318185794 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.318284925 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.317573884 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.3760777 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.325207856 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.319642918 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.316301533 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.32127418 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.317695409 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.474219643 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.365276786 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.319780316 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.367798294 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.319818134 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.322305797 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.322336515 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.323927033 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.375739549 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.319818292 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.368388899 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.316686208 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.476778628 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.343751811 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.323376716 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.323471842 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.324215737 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.319255765 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.317717088 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.327540935 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.316727238 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.320564165 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.327364333 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.318230038 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.319118237 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.421015715 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.427428584 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.318029933 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.331830645 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.328371226 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.318572313 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.37721232 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.320473472 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.319353283 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.374205571 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.43490132 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.374625243 seconds)
  done (took 151.705507065 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.324883476 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.325849924 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.320673459 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.335149858 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.318257643 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.319757026 seconds)
  done (took 9.1963595 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.324477942 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.323241194 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.321967081 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.321118907 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.320762782 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.323523015 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.320147309 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.324868934 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.326214656 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.321375846 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.324458229 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.325432821 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.323234766 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.321462208 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.322826159 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.322766214 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.32155304 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.319586797 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.321882712 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.32396379 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.426124556 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.323166477 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.324546484 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.324839356 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.32904424 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.321919664 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.329315745 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.323624122 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.323021229 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.333391918 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.324534689 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.323744812 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.322517 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.330232272 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.328584949 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.324421021 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.32904196 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.326786163 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.320345806 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.325440787 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.32508681 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.324829137 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.324225043 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.328358639 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.323141617 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.328560506 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.330220496 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.331878925 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.323574553 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.324449666 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.325325639 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.324943448 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.327233103 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.325082186 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.330571654 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.327394089 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.331041095 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.327252559 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.326147064 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.326443141 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.325692357 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.326686055 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.325573948 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.330492387 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.324651284 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.328398756 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.328958844 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.331300553 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.327567179 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.328158761 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.3290167 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.32034916 seconds)
  done (took 97.78567311 seconds)
done (took 417.678269824 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.673554051 seconds)
  done (took 7.930492167 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.351563454 seconds)
  done (took 7.611135364 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.955671649 seconds)
  done (took 20.219778849 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.343803059 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.388647945 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.339196669 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.317016251 seconds)
  done (took 26.644235811 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.543684489 seconds)
  done (took 7.802323757 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.330423561 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.316942724 seconds)
  done (took 13.90364251 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.865924335 seconds)
  done (took 8.122192781 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.872265786 seconds)
  done (took 8.13659237 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.334964704 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.329383836 seconds)
  done (took 14.19008634 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.305100673 seconds)
  done (took 7.561718871 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.478343085 seconds)
  done (took 8.737913057 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.320429036 seconds)
  done (took 7.581278426 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.345525438 seconds)
  done (took 7.601165099 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.792542122 seconds)
  done (took 9.050987826 seconds)
done (took 156.350942913 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.320417399 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.321190419 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.318062058 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.321811995 seconds)
  done (took 26.539211836 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.361962707 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.360294929 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.363410198 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.371870992 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.363348366 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.361429423 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.355266847 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.370505546 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.374391578 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.366342272 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.365066281 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.364242066 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.363161971 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.356869222 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.364282517 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.365282476 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.373031371 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.362331372 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.356584643 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.367103375 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.331622631 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.374710867 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.366659547 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.3318129 seconds)
  done (took 33.952065456 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.525983638 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.401938773 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.482097556 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.381316125 seconds)
  done (took 7.053710537 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.382606947 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.38495926 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.39667323 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.434967928 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.467880232 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.39458081 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.357362862 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.353988031 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.339139197 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.385045788 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.459859491 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.401539128 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.469818152 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.329071954 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.51063599 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.332187608 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.331533558 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.383426749 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.434152981 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.459637612 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.332187554 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.3844831 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.384889286 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.400802306 seconds)
  done (took 34.772676329 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.331501033 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.340348249 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.336233004 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.330897473 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.331200297 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.330914171 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.338083252 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.333638714 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.354461688 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.332834694 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.33255601 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.331099057 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.331302211 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.332379438 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.332019696 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.343815606 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.344702384 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.333163622 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.334980182 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.33681549 seconds)
  done (took 27.976218451 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.322536429 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.277759115 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.676881797 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.581385972 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.325623941 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.321171952 seconds)
  done (took 28.768776418 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.394095188 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.524479343 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.332603055 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.673979887 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.755884304 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.334017231 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.330007006 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.554739538 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.84215646 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.846951333 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.383300903 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.394901299 seconds)
  done (took 19.632228967 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.326844294 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.326639694 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.326407506 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.343323291 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.382672814 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.33397215 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.337386623 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.326267812 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.386694953 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.390055399 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.338225623 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.385855711 seconds)
  done (took 37.468741491 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417253534 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.369598869 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.324019928 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.082543877 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.706839438 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.538627362 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.075218901 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.757065657 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.337223732 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.605656712 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330233104 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420642566 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.584003342 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335578466 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.331187126 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.316856591 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.557504472 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797573846 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330342908 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.153363545 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356405708 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.330831282 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.342546167 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.357769116 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.538903361 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.461820763 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.590449905 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.328193245 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.597617418 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.345260514 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340099626 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.326981092 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.600455497 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995973512 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427668427 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340962708 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.014398321 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.046599466 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.329855386 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.275800949 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.011129468 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.332312667 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341871617 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328653699 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.264091372 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.335277485 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.766965999 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.339555857 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.040119581 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.330767181 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.339397379 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423173009 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.335835515 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.150371956 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343827537 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.329058816 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.329335029 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335848542 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907039371 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.65591359 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.335063632 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.267411265 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.7019199 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.266803332 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930757429 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.431128824 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.336214701 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.33348482 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.266665889 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.2790356 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.351912797 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479633427 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.351249394 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.984089769 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003765577 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.338889102 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.26556418 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858165038 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.331333138 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.287167593 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.558597742 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335562513 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.269268541 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.290721148 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.265777093 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0272546 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342312161 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.734271039 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.341281424 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.762130561 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.348127808 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355758375 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355522542 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.558182092 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.214934455 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334182534 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.113896182 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491221009 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351535158 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.764267531 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.270856824 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.335398724 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.590532773 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.543146791 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.343719779 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.328435483 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.533540774 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338899261 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.351592145 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.341180745 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.346053293 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.884600105 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.344789452 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.672159297 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352983855 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.3352962 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079005418 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342395169 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.435903757 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.332765014 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.580106692 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.089643583 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335210902 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416954112 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.336798665 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.334757616 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.276080816 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.850859467 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.335369161 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.335293012 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.332805245 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.344114826 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.332266562 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.27903236 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.327967691 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34653299 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.339376513 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.559806194 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.336453795 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.610142521 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.271604645 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485429667 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.422083974 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.558049006 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.487652092 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.333429959 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.592725567 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338323853 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.34387873 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.349767823 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356105131 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433853914 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358656572 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.34763163 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.591003459 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.340645889 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.784896957 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.285489293 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.342486401 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339405732 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.341509843 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.166782261 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887230665 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314694966 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.340978942 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.228609039 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.351316767 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40161042 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.343872695 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.347311451 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.088085741 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.147996111 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.342415803 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.335006159 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.573738478 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.347593125 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.273758468 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416219163 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.527682277 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.895493307 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.346957141 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.270057077 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.047138604 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.029443687 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338857993 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.272336879 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.339800418 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345388249 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.350496347 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.85353071 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.899297013 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337517676 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.176753184 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.344673329 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.349831504 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.345556412 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338703866 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.068601732 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.683912934 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352304071 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.350270018 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482436515 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.353066345 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.274414992 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.342286857 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.342353853 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.336110792 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.34017982 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372466229 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.199470894 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.838165239 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.59671744 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.062082228 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.353304306 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.367456118 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.36917746 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.343389225 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.13072474 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358808551 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.340849232 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344608434 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.350978731 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.235686081 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.009700969 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909741546 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032627031 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844059726 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.28399565 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.342353794 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.342421142 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.775188097 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.277400107 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.906921362 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.520485008 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.776293578 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.288076651 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.533467884 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.494266789 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.086177081 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.351472295 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.567942716 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.283868852 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.130444388 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365765086 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.552570663 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374232263 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.341712721 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.271065727 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.86203701 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566394968 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.104567517 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418981493 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.774156993 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.134320331 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.356383676 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.340934273 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.689207085 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512100074 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.05435825 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.51208852 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.338145965 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.345487392 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.82151205 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.349380866 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.566592017 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938341708 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.343666534 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.535217239 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279827722 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.351001069 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.352783354 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.342122372 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.585661463 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.340957957 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.594846826 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.355106567 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.275448444 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.346631558 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850601875 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.194670945 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.347037213 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343617348 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076472403 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.343043945 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.61413555 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.357976324 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.063362948 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351893517 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.27537875 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278225364 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.035705378 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.347201427 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319907106 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814057375 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.689093474 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.376546033 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375681819 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187455741 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.599176695 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.356053708 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.901761089 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.568261592 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.130543378 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36729265 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.444014247 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.176348539 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.345694904 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.343039607 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.579556342 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.180193706 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.56831425 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.339775352 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.257970045 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.340556331 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.558242713 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.345890631 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.356284141 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585024555 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.056301789 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.357515809 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024172955 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367198437 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.342592969 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.276049073 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.711474415 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.352389446 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425783702 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.357133144 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.357957583 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.357558504 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512292549 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357837806 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.351095422 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.358189854 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440403728 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.719365111 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.071341327 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.352362011 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912324069 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048003099 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.907891746 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.357647858 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.346426933 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348008106 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.281584209 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494932771 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.573114567 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.621206042 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476636553 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.77763361 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371106242 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.211280307 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369418182 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.560748855 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622549924 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.243368974 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347589696 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.358989311 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.34846543 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.359692885 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.55867591 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825360237 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885062822 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466196641 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.354247952 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.781574749 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626040083 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.348895726 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.346303601 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.939461207 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.356983324 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.706597854 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.357781979 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349154123 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512759979 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.360685973 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020528727 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.360197107 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.504803224 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.1231235 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.308938749 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.606045713 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.796656095 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.357985045 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.912852486 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.021684717 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611998399 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417548579 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.36103887 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.463631638 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496780821 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.347741149 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.359691578 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352558684 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.195825506 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.059510526 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.363434948 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916679098 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.612223186 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.349786503 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.354111547 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370386182 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.360301886 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.574375648 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072516174 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.575819273 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.360184853 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.356117449 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.166559698 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.917148505 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36247732 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.285423416 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.351547097 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58867419 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.587836417 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.371681936 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.805102072 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.06365866 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89524637 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.322967189 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374407694 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361968793 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.030390281 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915408752 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.086130233 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831135686 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.916041504 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366125211 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.628014182 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.356632681 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.356796405 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629881878 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.35680165 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.359275918 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.366797156 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.916385254 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.103041678 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.35688206 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.227891905 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.289602223 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.694848626 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.976345856 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.291790671 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354497477 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.531348953 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.358239406 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482970787 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.362397653 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.364623017 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353086866 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.10908049 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.637991292 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.357818731 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.349605677 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.276928063 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.360344099 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359850081 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585662637 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359896077 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.018698277 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.711897726 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.608967871 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.358021845 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.339248518 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.359573094 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356452496 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.343140152 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.549022283 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.853464129 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895548705 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.364188536 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.364308571 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.359278292 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.571565846 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566960537 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.366918328 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.368035193 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366086876 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.369789477 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.265468168 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.859501637 seconds)
  done (took 1593.452660404 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.356965025 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.363587507 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.381852385 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.396937577 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.38411152 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.451855994 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.365177674 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.473869813 seconds)
  done (took 52.462613467 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.354562924 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.575516522 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.386130774 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.360281239 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.364704672 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.35656742 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.787385224 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.355490303 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.36102226 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.363233477 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.355488233 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.354172321 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.968580535 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.364432438 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.354655991 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.343302211 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.359434276 seconds)
  done (took 65.661775668 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.365990253 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.799324931 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.444141321 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.355868727 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.339324546 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.372032079 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.076143331 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.406639928 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.352239286 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.571929989 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.007990613 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.389050256 seconds)
  done (took 84.774139366 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.363026926 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.363813803 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.365118472 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.363039823 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.364147681 seconds)
  done (took 8.111042184 seconds)
done (took 2021.887546631 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.60875232 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.035942875 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.996771155 seconds)
  done (took 5.326034839 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.499030679 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.545406966 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.666299946 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.689916639 seconds)
  done (took 7.691379203 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.627003649 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.720483649 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.537032169 seconds)
  done (took 6.174588824 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.70833126 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.354026368 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.488690009 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.354460371 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.353350824 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.35676993 seconds)
  done (took 20.356973892 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.358237224 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.361424564 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.356872671 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.361617992 seconds)
  done (took 6.729752845 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.338474709 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.084628505 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.338886794 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.359002985 seconds)
  done (took 18.412963701 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.104659429 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.117590655 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.100482855 seconds)
  done (took 7.614575528 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.357638579 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.199036473 seconds)
  done (took 9.847727028 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.652853122 seconds)
  done (took 2.943752522 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.490670342 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.626834848 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.34245707 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.280109266 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.361302934 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.045966873 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.938036133 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.527093546 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.283184926 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.484801285 seconds)
  done (took 27.673654418 seconds)
done (took 126.223708626 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.037099179 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.725573797 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.549890266 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.011916738 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.584790737 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.550404227 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.565294863 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.971072061 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.512947168 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.508448397 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.055397854 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.58672505 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.719650094 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.724093181 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.727481755 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.601664267 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.588469508 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.074981344 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.694359067 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.966975001 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.570361879 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.64522393 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.916999303 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.662492423 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.586041087 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.507694863 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.226418792 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.602045243 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.874488425 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.241996809 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.507593406 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.109136026 seconds)
  done (took 191.501708646 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.367835283 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.368563976 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.354358784 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.355394813 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.354367292 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.370662436 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.357114737 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.359465528 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.354048215 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.361543884 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.355408612 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.366500395 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.35582755 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.363655017 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.355011577 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.356772077 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.353901354 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.373287894 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.354447508 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.356976683 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.3575505 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.367344716 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.355222224 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.354171285 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.375440498 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.355617905 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.357221367 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.35664006 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.372270297 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.35427731 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.367005009 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.354559294 seconds)
  done (took 204.815636866 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.361250379 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.356533061 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.35946368 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.356505194 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.357942012 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.356636482 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.359782411 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.35693264 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.371417728 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.358029557 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.355974319 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.371431267 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.357588886 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.369991635 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.370463463 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.362740816 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.367807965 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.359604039 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.360488895 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.356380964 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.359622022 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.358539594 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.358204762 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.357667558 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.370200886 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.359053237 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.358481044 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.3711661 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.359355839 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.360035846 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.360470645 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.366611655 seconds)
  done (took 204.861999448 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.555181238 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.367963684 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.36947103 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.306284056 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.369347288 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.369279166 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.367823457 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.558158917 seconds)
  done (took 14.561335794 seconds)
done (took 617.034828511 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.654027464 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.370452396 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.562840472 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.386094265 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.127189954 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.386499951 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.390932169 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.551726863 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.277766275 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.552593446 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.586704414 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.383761097 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.727216774 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.384156462 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.63102282 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.4795087 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.262987162 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.379894547 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.692749784 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.890758065 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.634739123 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.808119438 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.548775872 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.284381262 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.731770884 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.807506922 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.030485716 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.262247401 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.387190868 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.697967002 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.010401844 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.385369701 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.443992211 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.425201344 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.479214974 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.460510336 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.262751044 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.423577636 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.565357439 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.56615031 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.914554505 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.096978984 seconds)
  done (took 92.206725801 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.358058609 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.357354888 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.358305068 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.358318131 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.358551332 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.357384373 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.359918373 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.360437129 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.360435003 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.35681788 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.35658062 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.360359594 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.358051416 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.360311327 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.358030902 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.357133307 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.358253177 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.360513305 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.35790207 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.357875823 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.360480519 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.359658509 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.359036369 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.356934708 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.359032118 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.358869402 seconds)
  done (took 36.627022458 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.370086509 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.599353354 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.772731641 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.375833137 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.370929011 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.373707309 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.444531832 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.37222818 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.372734941 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.372095225 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.520587817 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.373777859 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.406194166 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.780362269 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.373228169 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.371267485 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.374303228 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.370823251 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.605921409 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.378701473 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.44662585 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.370215815 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.447218242 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.380783721 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.373674368 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.372063842 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.37557472 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.859729661 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.37369092 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.520823552 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.112200262 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.44472663 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.82238212 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.789432205 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.113880942 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.377136662 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.374241127 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.529589832 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.374614505 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.371166733 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.444753781 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.371270377 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.793096284 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.990008818 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.387896641 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.372434103 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.886084148 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.528748379 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.611852544 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.380571196 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.814702151 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.375457646 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.372920701 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.374019476 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.610827781 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.382448706 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.372176237 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.892935983 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.379156212 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.44671574 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.375075215 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.374563015 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.619830224 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.375716111 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.60448828 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.375779011 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.382189434 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.374182978 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.787222469 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.376111124 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.008664185 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.387308837 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.373264295 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.528699813 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.603840711 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.913712076 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.374899494 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.619047496 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.83753843 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.449690009 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.379228416 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.851301357 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.450398993 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.374456698 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.379032368 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.378680975 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.377974397 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.420939789 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.447054129 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.938849793 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.999421579 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.906762358 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.450974829 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.387138638 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.375149089 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.894313147 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.390581177 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.377706434 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.782261654 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.011329943 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.390106408 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.384517962 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.994236314 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.392335755 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.452838252 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.380983111 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.792343551 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.3767323 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.42215054 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.378746701 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.386158101 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.377215553 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.452144003 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.378869285 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.377176224 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.985795199 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.547094728 seconds)
  done (took 179.689980629 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.371970599 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.377267538 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.369632291 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.369098308 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.375095735 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.377475434 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.370801799 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.36949066 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.376462738 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.37031788 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.369848853 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.36980084 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.371182811 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.370337775 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.378842849 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.38040596 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.026043968 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.376373476 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.36953046 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.368651986 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.180338506 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.376734723 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.367613288 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.370847994 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.374396558 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.373716851 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.376375568 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.391851786 seconds)
  done (took 153.228921139 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.378122791 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.91853079 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.378224747 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.506530002 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.399389105 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.380869286 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.504259959 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.433446694 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.378557848 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.380353629 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.382602809 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.669065767 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.379359978 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.87209781 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.559410498 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.505084628 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.866225805 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.381430233 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.379531018 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.380918054 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.508583212 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.386756929 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.676492506 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.916968302 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.381324421 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.925559516 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.368495865 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.38342558 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.381915699 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.927298352 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.375583824 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.676573965 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.452668721 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.436136988 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.943746312 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.876504487 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.872484598 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.520828106 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.379869716 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.381154353 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.38248315 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.370764389 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.942815389 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.384049289 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.381921845 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.935692957 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.395966179 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.383831006 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.391595337 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.381722461 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.438055756 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.438567529 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.685259077 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.949153228 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.455786603 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.401116013 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.509594451 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.758995428 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.382617972 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.872694637 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.365187669 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.944648356 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.384929216 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.370016255 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.383399027 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.389019172 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.52772374 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.506792862 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.877564872 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.382243434 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.872322677 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.520631394 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.37924136 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.383457045 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.385926059 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.944441046 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.878852864 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.5251815 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.50769478 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.565703354 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.3741574 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.379149555 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.37429325 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.458739956 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.379779324 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.95071099 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.879123045 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.383888978 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.385953457 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.384047128 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.386950964 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.551307241 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.949389565 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.456713436 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.868330652 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.698235428 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.689560709 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.385259786 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.441128018 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.385100809 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.688427474 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.387269545 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.441063896 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.82731767 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.687029023 seconds)
  done (took 163.851067425 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.619408924 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.583391512 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.477274505 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.492019291 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.912363016 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.948244208 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.605793667 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.499909947 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.486141203 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.62293844 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.538932322 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.477454382 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.562426787 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.453244162 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.070816013 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.444940368 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.474019096 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.504918639 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.487841446 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.402528734 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.014508347 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.663969847 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.546566982 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.520207045 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.476839433 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.119854163 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.918229168 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.892235499 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.545485882 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.641279494 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.89243436 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.501689507 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.3412235 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.028164552 seconds)
  done (took 66.083397657 seconds)
done (took 692.985165157 seconds)
SAVING RESULT...
DONE!
