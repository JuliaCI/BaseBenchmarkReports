cset: moving following pidspec: 10163
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.272932397 seconds)
loading group "string"... done (took 0.540611266 seconds)
loading group "linalg"... done (took 6.868577599 seconds)
loading group "parallel"... done (took 0.155318565 seconds)
loading group "find"... done (took 1.186608888 seconds)
loading group "tuple"... done (took 1.689961865 seconds)
loading group "dates"... done (took 1.18173506 seconds)
loading group "micro"... done (took 0.220396221 seconds)
loading group "io"... done (took 0.986277453 seconds)
loading group "scalar"... done (took 38.837791362 seconds)
loading group "sparse"... done (took 13.297972632 seconds)
loading group "broadcast"... done (took 0.97674933 seconds)
loading group "union"... done (took 13.284041537 seconds)
loading group "simd"... done (took 4.434107991 seconds)
loading group "random"... done (took 9.123175812 seconds)
loading group "problem"... done (took 2.067727915 seconds)
loading group "array"... done (took 21.960665313 seconds)
loading group "misc"... done (took 1.71626913 seconds)
loading group "sort"... done (took 3.324452948 seconds)
loading group "collection"... done (took 17.596309634 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.511646277 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141881241 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.133055054 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.13552527 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.17390252 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.133557882 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.140677176 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.100665896 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.078875136 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.157633805 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115907993 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.470089501 seconds)
done (took 5.187927014 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.20625281 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084313374 seconds)
    (2/2) benchmarking "String"...
    done (took 0.097076258 seconds)
  done (took 1.02439372 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066147103 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121715584 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06580606 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065950844 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065495361 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064762605 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.084981298 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066593734 seconds)
  done (took 1.383891489 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073649442 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067883508 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085260767 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068564292 seconds)
  done (took 1.143685618 seconds)
done (took 4.680810729 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.841224908 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.242591972 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183731104 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.45051674 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.150714629 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.182315772 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.660171658 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.312536153 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.201756521 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081608864 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.120671813 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.358188065 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124774348 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.663309117 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075526893 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.107041544 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.16021283 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.427461014 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082679928 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082852398 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103955699 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128462531 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.102347309 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091774821 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.157235128 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082656928 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.14760748 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081071526 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.083669193 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.226520819 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.18827405 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.673091741 seconds)
  done (took 10.462700141 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09687716 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.115101539 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068601093 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140694205 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096832282 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069098005 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070127795 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066649925 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.107309297 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.146362196 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089410387 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.118484035 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065949432 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.086546636 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084591507 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.222527504 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079564715 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.098820145 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070692465 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.092762557 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106924018 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094789212 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079394136 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094792533 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128892871 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.208336932 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.0974198 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112609122 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068260375 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098600502 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130619193 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128340221 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06537807 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08389915 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12434551 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.112048721 seconds)
  done (took 4.582382326 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.058776081 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.155489048 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091876487 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.179595307 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066809219 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.126026076 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.08324218 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099987874 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.218176462 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.141463251 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.467360824 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.110134803 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128910539 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102771831 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069085712 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068210839 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.084851057 seconds)
    (17/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065866341 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.554471457 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.147700397 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107129097 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082486388 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093061323 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070088704 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067413089 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.084292642 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069490307 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.11883615 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.298375874 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130194488 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067991391 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.144629037 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.109304413 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067475522 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120679925 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.183082837 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104460022 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.15294101 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065965795 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064597707 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.166171753 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09149286 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.0656463 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.100833633 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1057866 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121053606 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.08415362 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068083549 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.176647127 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067144294 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.10034321 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.83666419 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167178441 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076767345 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065500893 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.282410884 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084251542 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085111651 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064615432 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.243050503 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.148726868 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068139989 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.083682461 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066157921 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.066982238 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.367451542 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084405841 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.966644078 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072058047 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077139736 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.067423092 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.064976155 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092748755 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072282405 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102158162 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066933743 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068355094 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083965632 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066337983 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067687457 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.102966991 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.20551563 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065960671 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.085161314 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064089119 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102763581 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096768507 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.087083176 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065788543 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115180788 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06958972 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067098953 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.119765578 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066822656 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081552241 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.085387919 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086722414 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129177615 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066971232 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.126511845 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.070507502 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066059796 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.113859919 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.086941888 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100504665 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.095399037 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068081656 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.238772065 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.083613828 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064762355 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066465556 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083902284 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066902155 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.085723474 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080915602 seconds)
  done (took 21.263947747 seconds)
done (took 38.216770799 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.289941958 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.094492007 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076341747 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.095063647 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.093771624 seconds)
  done (took 1.576436756 seconds)
done (took 2.476323309 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.1190898 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11812338 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063766231 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114222684 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064184773 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.118319374 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09909918 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.099083558 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115794016 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064948272 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095475087 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082455289 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064300906 seconds)
  done (took 2.144665414 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083041399 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082380011 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086772645 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082286462 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063457108 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099167775 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08069589 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10583308 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081003018 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071818254 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082627026 seconds)
  done (took 1.814484425 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082401209 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08273376 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087008741 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081287569 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06348234 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099401997 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080502925 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103026751 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081468788 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090136377 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064992766 seconds)
  done (took 1.810674094 seconds)
done (took 6.657027097 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07830468 seconds)
  done (took 0.966489429 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.691261936 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.028499261 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.07996713 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.134372559 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.200772274 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.140660834 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.323349543 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087218984 seconds)
  done (took 9.774821922 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.087726268 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.086337128 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069445052 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068636295 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.102019395 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071538586 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.088417753 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07220086 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.086632667 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071819766 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068361243 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.089671013 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071132928 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.088795088 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069757876 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.087851672 seconds)
  done (took 2.233973206 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091876666 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.109624949 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072350969 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.09447162 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071506513 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.091823076 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074854405 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.092866102 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070997003 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.089794631 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.0747773 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.091222578 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07214712 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082764398 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074756089 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.093420656 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072251105 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.091500241 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076114089 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091816414 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076177596 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064581003 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.090070334 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07440676 seconds)
  done (took 2.96975096 seconds)
done (took 16.839486921 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113568926 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09023294 seconds)
  done (took 1.097934075 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082546229 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.10007193 seconds)
  done (took 1.082371364 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08384331 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082094849 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090818565 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.096575774 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065943121 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.08423059 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.106499024 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067643047 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064811054 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.084787193 seconds)
  done (took 1.729698065 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070263571 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094678467 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071076945 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098093237 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074893981 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081999349 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074204492 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084814758 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080474882 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062870873 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070199559 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.101101512 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071745104 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.102166529 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073666542 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.086326395 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072050669 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067006802 seconds)
  done (took 2.337834801 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067231285 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066477864 seconds)
  done (took 1.039118086 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068582859 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063338083 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085072324 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066540677 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081151216 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063471366 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079880222 seconds)
  done (took 1.413251667 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.413717726 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11178428 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.331922565 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071050271 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102382061 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.28874013 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066950485 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070807086 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.09106355 seconds)
  done (took 2.490490214 seconds)
done (took 12.091117479 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081162292 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084821968 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112123219 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.378404948 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093133772 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.084518439 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.133264041 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.229592539 seconds)
done (took 2.104821912 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.125696798 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.620037898 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.386876469 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.214995893 seconds)
  done (took 2.131650365 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.335427695 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.110321518 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.06019018 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.085251674 seconds)
  done (took 1.50650059 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067579599 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069632311 seconds)
  done (took 1.047658449 seconds)
done (took 5.720764317 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067853441 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066683745 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063886405 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065739527 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.062668586 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.084380075 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082694229 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.085408343 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06712323 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063621956 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.065576913 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.067606682 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065024778 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085723206 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064805748 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065484054 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086521836 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06651418 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063413389 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081983898 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064542153 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066324091 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.081823905 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064771496 seconds)
  done (took 2.650205867 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084482981 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.08397558 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073751495 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070699987 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.09273102 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07161556 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.090723196 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066667552 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089337624 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068963449 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08793591 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071687266 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067927515 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.089334726 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068224559 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.08945389 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071709306 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084624961 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069639955 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.088054709 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072764116 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066783954 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.089102656 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071854554 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.08811403 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070151748 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.086238378 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066935729 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088707946 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.07081353 seconds)
  done (took 3.270117586 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070904127 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063372741 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081896739 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071670711 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06336942 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083078276 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064283379 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063571073 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.083392306 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063869241 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064507738 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.082733357 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064823171 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082536254 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065805111 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067149553 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.097831484 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064718765 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063645442 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.083116123 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067541821 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063351238 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.082979881 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063913138 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.081443925 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064434295 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063757304 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.08083258 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066700065 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063448309 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.085761061 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068226577 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063462282 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.089259934 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067720109 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063546864 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.08630322 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06362847 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063659971 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.08176916 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063425598 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06309456 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062866009 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069530681 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.084165232 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066794221 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064061464 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.084300705 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064504729 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065646977 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.082166501 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065532529 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.083620338 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066599015 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067844097 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081590159 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065589404 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063856949 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063851858 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06301719 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062207193 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08439615 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066973882 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063840017 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.09688611 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070057577 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.081710122 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066417075 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065324398 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084422788 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066248429 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076263932 seconds)
  done (took 6.074141888 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092143514 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106657653 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065035503 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.08503923 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062438462 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.082458806 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068910011 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064205209 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084294913 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071005356 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08240583 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066528509 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065646772 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095452157 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064665987 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.083307548 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071513186 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062955998 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.083053037 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.176839921 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082598602 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068871018 seconds)
  done (took 2.705570624 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.175342325 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070217992 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.125685421 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092047386 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069201138 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091935579 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071063935 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069496144 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090057284 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068691765 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087745931 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070427091 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086543625 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068645497 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087305209 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069414068 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087643973 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069711127 seconds)
  done (took 2.472738795 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078501623 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065764485 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105069499 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065663526 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085133463 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068623999 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090270167 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075945756 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086089816 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067979438 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074354693 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087424649 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068810363 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084516134 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069056937 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066024018 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.088297556 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065932932 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093186081 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071606347 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090309126 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074540856 seconds)
  done (took 2.645335519 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080621748 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067762227 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101744061 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06887417 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081182831 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065597399 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.08869335 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067508188 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070231501 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.088308443 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066220609 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063631763 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068339279 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065089731 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.090776897 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066361205 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086271518 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067349547 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067582733 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081213031 seconds)
  done (took 2.427712478 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087884791 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085701138 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069295301 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095032113 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068279613 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085130735 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078478722 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085372166 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069302777 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105600625 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068657627 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067565164 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073987999 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092334424 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068923601 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095096118 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077009831 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094687711 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067591089 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086361315 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088391172 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066458232 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074253543 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.088787376 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067981152 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086615502 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068404281 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090999302 seconds)
  done (took 3.18012769 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067706861 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066260721 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081880897 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064734766 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064295854 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082563632 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065215561 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064071914 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084717126 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065166247 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065646375 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084861745 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067228193 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066282427 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085094878 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067251066 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06651953 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.08320076 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06442896 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063638999 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.085156136 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066398 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066192493 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083352824 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064498052 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.08379383 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064991002 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063980004 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083764599 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065338446 seconds)
  done (took 3.07370046 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077126722 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072707718 seconds)
  done (took 1.079109014 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064837401 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080368632 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082633115 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070281024 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088625174 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067810882 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074550545 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069335502 seconds)
  done (took 1.530281387 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082442339 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077224821 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086592892 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080510671 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.096474126 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08235344 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.155266289 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086479441 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073738568 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06405568 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.100154195 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065717983 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071467478 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065923419 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071026014 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095203254 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064943608 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.093008636 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069876712 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06513802 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087700974 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075541999 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088217159 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063186724 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068011676 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.108968919 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096697595 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068350774 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069668554 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093451553 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072807184 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.078471076 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067802912 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.06705052 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063820319 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075021663 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102927332 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070276584 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.094216883 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069530479 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095990973 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063272787 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071989315 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092643244 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078189944 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.085469426 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069167039 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062425546 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064123363 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068387819 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061168784 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08839435 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061879292 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092165927 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071482723 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079582338 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08504409 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067812092 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088086064 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071120529 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073075121 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087664405 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069570138 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084840779 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077053161 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070724744 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094666112 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061358023 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.080035648 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065159687 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075754539 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109548262 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072713336 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.087087198 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06749993 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083603071 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070473401 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067370154 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09219888 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07303174 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085962821 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073052265 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092358354 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067705893 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068656042 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.094533897 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06439674 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.089329511 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065477079 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101436753 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066159267 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064859035 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084264115 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077200793 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089139394 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06700764 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064727625 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092852422 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060998579 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.086051826 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068748004 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067152164 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096506938 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071239811 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091588603 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074507463 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.09285545 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067601565 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087837226 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064837301 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067989668 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084935972 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074601657 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061088379 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0895926 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068027157 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085917261 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076066977 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064611684 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.086494209 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074298526 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.091885321 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066414754 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063611109 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088354095 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067223691 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089265584 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075214071 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065096758 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060944494 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061188395 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069034546 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065309841 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.06848829 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095881441 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069442853 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.080534399 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065277672 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.091371746 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07641706 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067387706 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.087232295 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073326665 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.087213651 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066529577 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072550599 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088326696 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066360571 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09170603 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068474926 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061490159 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089973414 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069730985 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083786829 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071188061 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070041476 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088266927 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067506434 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083998772 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075945166 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085941752 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066961953 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066938425 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08487985 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078279878 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086803278 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063722586 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064178882 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.095625154 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064799036 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.084648272 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066726601 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069297703 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086691532 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065924108 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066230279 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068650767 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075838476 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.093300283 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068739961 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091703952 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078731802 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085026585 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070636842 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066105931 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08747925 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068316038 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094294214 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.0736294 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071355945 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089485191 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064366038 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092224814 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075514788 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066222074 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.0846062 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065844361 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.090700761 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072843314 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089704228 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068815366 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064524082 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066784129 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068547808 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08922458 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067722603 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066425393 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.09431496 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065126604 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.094098425 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068339902 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095621491 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071337834 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06198815 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089627666 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065712961 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091378867 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.0627566 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064906369 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.085465679 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06871368 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065668451 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089049328 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061008899 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092586694 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075578214 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06695812 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086246657 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067007097 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092905928 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069062712 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070825907 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089740545 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073144322 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096089737 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066643528 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069377731 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.097010449 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066195442 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060445268 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071316369 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064665037 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064429505 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064440831 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.08759996 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070976717 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094946624 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074700329 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060772143 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088820271 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065766553 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065511637 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.082916799 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07155969 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088294305 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068524114 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073218478 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087847722 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066945865 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089874903 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067355032 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066712049 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08815901 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069302761 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086918346 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069869688 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065757436 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089135011 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066363571 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.084221838 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069538708 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066701912 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086792606 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072531604 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065715578 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065578366 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068001326 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.088660811 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067999162 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086644056 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067881319 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07007766 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086505454 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067553086 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.06821422 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.08144228 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074236201 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085250898 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075326327 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066838869 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.083515269 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075103899 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088222175 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074196918 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086950889 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068887414 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068391479 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066480494 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068834753 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093848143 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065328489 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076877535 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095226422 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067228954 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.0887331 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067862343 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067795425 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085646592 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068273716 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.086902819 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068372497 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066996255 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.091535531 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070362904 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.086067725 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069671224 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067631781 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.086771324 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069292346 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061046249 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065537771 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065708965 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.087640567 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077824922 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067476623 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087487678 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065938487 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087776253 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066645788 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063392525 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.095871444 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07610937 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088256249 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073527347 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085677581 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068846609 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096075053 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062096986 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064334999 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.084118388 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065084233 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072844549 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087423094 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07605524 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08677971 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066889606 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063728271 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087309131 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066482178 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079483416 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06556546 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070841756 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086054898 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067134348 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066519646 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089492713 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068114953 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096495661 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06651917 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066728099 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.087274648 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063549556 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085073511 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067260409 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068880876 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.087729897 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065408908 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06350257 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.086881275 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06752956 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.087499997 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067666949 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067920253 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093465844 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067677289 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088613475 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071382692 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064130589 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089898432 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066883808 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085899687 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066850828 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070361212 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068786884 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066966531 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09707085 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067444564 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067792734 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087388577 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064731796 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.085366705 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067893109 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066077086 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086835235 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.0681305 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093947407 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066111124 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069790271 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087106209 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067202314 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.092261621 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068933025 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069390629 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093924454 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066866917 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087292363 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075415435 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.090107967 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071893118 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068141574 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.088016096 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073178768 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084961409 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074653336 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066773635 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066768957 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.066735454 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063699499 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088875464 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066117847 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065347742 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071308458 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066640493 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088768763 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.0659619 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.084328608 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068574857 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070084741 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072781567 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068544686 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091871252 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063257675 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063983275 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087709155 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064802339 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067918235 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.09004036 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072474983 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068563127 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066747204 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064674508 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.09856184 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07203207 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090577151 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064987276 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089662207 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069369884 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068592452 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.08833299 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068295448 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068368618 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070183734 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067809137 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088140337 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074615858 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070735739 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089532238 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068793575 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.088318639 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068023255 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061935481 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.087839651 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069841807 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092043222 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070408824 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066733843 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097190599 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065299094 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086880512 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070828352 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066205423 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.091815101 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062428775 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.088061493 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068669671 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067554457 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.082042967 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066541955 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064832152 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.089549696 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065979638 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.081309177 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078474252 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095062309 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070598874 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066629703 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085530155 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063144928 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061373814 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.086424565 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067847809 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088115864 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078074111 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06571392 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06492384 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061161923 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088014377 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070762221 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069214358 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084641714 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063082129 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065585989 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.09083146 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072289938 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084990452 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067796402 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068866464 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.08973529 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064980603 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06887732 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062776186 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069003503 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102119139 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067201272 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088214859 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073622196 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094178092 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068611872 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062534063 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.088210941 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069829386 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086489623 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06855898 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067394391 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102241774 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069761298 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.086453901 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066079475 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088317554 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067064534 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075131438 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088388272 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068008679 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090729648 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069390589 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074831074 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068424826 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072899987 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.092528922 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069894932 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085770668 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068057652 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064577009 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085853674 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068843159 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067152605 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093301939 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075100458 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087228588 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077374448 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097032035 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069247634 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.082742603 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067365297 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066591328 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081935062 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068823785 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064362116 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.085164937 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065264439 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065999435 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.088706893 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071533762 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088418126 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068430942 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066524214 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.082168985 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.06949153 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088694371 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069000388 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063200628 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086813671 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06845602 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070690494 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069207755 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063424651 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.090893772 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069034712 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067279561 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.082769508 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07343228 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085840675 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069578356 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066048163 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087065168 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068023257 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089715049 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074128713 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068164834 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089582626 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070621694 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089606969 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064997469 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064005781 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093002187 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065698283 seconds)
  done (took 46.358635488 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100624266 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083906996 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063718499 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062537913 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09577063 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063756484 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083420375 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064078323 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063023436 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064280522 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061352684 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084983619 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072373955 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.100092138 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07496227 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087630794 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062031111 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083180749 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062899515 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063159422 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070897555 seconds)
  done (took 2.548019238 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075727896 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069841865 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071429898 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09845151 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068626915 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092011418 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073866247 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091794291 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076487171 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088014822 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076362242 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092074001 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067487676 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.087698523 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067141869 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09170283 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07622498 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088629777 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071176884 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094330107 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071130621 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094133988 seconds)
  done (took 2.761861606 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068558173 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06630579 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08767481 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062782964 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065495474 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.08961395 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070871892 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063387158 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068067854 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064197749 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.087146646 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065444528 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068183773 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.082395875 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066715713 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063136699 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.130650627 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.090620378 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066483725 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.086888407 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062997209 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068146655 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.082886991 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062773935 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064393399 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.090913367 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067426946 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.084993271 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067011428 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065061037 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.086874824 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065056604 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067821758 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.0876259 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06515782 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064056731 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087252157 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066113669 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.081590142 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065681035 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066966202 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.083266976 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067408643 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067505194 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.085336118 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06456415 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.087334505 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066716957 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061281169 seconds)
  done (took 4.597286946 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081136566 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.130266621 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067343735 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086593214 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.105011385 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.073199727 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068468136 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111840501 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065138221 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064821266 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.105110499 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.105288881 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067069334 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.092446516 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073507987 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085837887 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068881686 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064599694 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.092529479 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065219149 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.091229866 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072619872 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.102686257 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.100088428 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071216133 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085504868 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066664058 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070151236 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077270972 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.09340904 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.072134324 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092487898 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082126062 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.092445279 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066317739 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.089048055 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083437361 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.087977781 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068280935 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.083960008 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069703063 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089516484 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07415447 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102822384 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067661799 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.091943404 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06789175 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063133836 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.101155926 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068577476 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.096477068 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.100905966 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071060028 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.087448574 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072078279 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101636214 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067087033 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084973636 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070490071 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099697484 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065876001 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090288756 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082025228 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.088303905 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074250317 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.102449966 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071767699 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090173121 seconds)
  done (took 6.744681622 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076191593 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093487332 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082893929 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102996899 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072014362 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.096037802 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092789237 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07449506 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092917282 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07882797 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093754523 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115317207 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069304201 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096468775 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074727022 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093311874 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074526157 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093667043 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07331173 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094499807 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073621078 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078640454 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071222398 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078669079 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123266645 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067991196 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09382931 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.0729741 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102952096 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.093074834 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081753415 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.093575105 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07340658 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102219902 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079308344 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072248864 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064493862 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096187376 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072725699 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.09492262 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067798187 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103286285 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093322767 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068947286 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093533748 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073518509 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080050335 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078545792 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.099346561 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098594363 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073387917 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102529173 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073489935 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094883645 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10178639 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106642054 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102857926 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101883284 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074534313 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102823763 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102305458 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087771711 seconds)
  done (took 6.396811679 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085198764 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096818904 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077782717 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.083055328 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06491429 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.0914035 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064848078 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063815621 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09721483 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074447405 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098831175 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089810751 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075387893 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097160823 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070740454 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094820784 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069978068 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092256222 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075529373 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092707632 seconds)
  done (took 2.649395331 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076274014 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08328009 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089410127 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072698598 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090531481 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073091765 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090228206 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070742749 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087321122 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070245964 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076501726 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098967748 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066869557 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093829926 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096583418 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073617568 seconds)
  done (took 2.303294537 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.076840452 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.093988034 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080989808 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087446456 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066226557 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062924779 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.088061175 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062587102 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061874895 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.100159397 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066153842 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.09144385 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066741644 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085646549 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064731716 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068909116 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.084327578 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064089823 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.085986762 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079606712 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.097456029 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066715358 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066916321 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.088029611 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067238665 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.093785436 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066779072 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.084599516 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065527569 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066668972 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088270563 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070835328 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084996985 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06584796 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064873511 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062981644 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064962618 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.089491764 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070072954 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066136039 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08650249 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066304991 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087500216 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068353198 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061994518 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066401929 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061545086 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091465473 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065653936 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086972391 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067797021 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069011747 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.088825723 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07307378 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090502102 seconds)
  done (took 5.1592807 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080544258 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069311779 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084013575 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065219706 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.06862665 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067129118 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068370388 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091672936 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068120388 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084966464 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069574025 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068505712 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088987042 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07017087 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088448796 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070926188 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062315206 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.089446244 seconds)
  done (took 2.35157769 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072034452 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065988084 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094606614 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067161079 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065834343 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091767893 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062549309 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086041942 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065868021 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065729962 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087656284 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068683168 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085185627 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069701122 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066544915 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08692532 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069168442 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064398451 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.088194802 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063040739 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089223478 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065774071 seconds)
  done (took 2.637948947 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073610134 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091872741 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.159728411 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.105705505 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082332438 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.078132958 seconds)
  done (took 1.591907381 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091010418 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101768105 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067269381 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087196579 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097391207 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066991564 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090137185 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067641158 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099178475 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09831461 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069187613 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097658905 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07703126 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099123279 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094402416 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075994294 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088550751 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069590123 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066149504 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107401183 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089604699 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077708003 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089857159 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06914075 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089172882 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077532529 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099120678 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077726061 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066592297 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098874453 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074958839 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090037615 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07841192 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099352098 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070272932 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09886485 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068367587 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108198737 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094224372 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077290913 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089754404 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075931686 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098319848 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073403605 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099302495 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067786719 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094953305 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067317872 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09022768 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108849684 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075183748 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098699993 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073703392 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099633271 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097613135 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087496026 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098510857 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098301919 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075872789 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098381691 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077443931 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095451268 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097643343 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078704858 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095902606 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079747155 seconds)
  done (took 6.705938369 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083580817 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107581274 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068923532 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0757506 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074599658 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092664891 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068239879 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091755715 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068279624 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088980701 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130892942 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069830939 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098197185 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077264052 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090802718 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068771901 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090053422 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075925228 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090545293 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109024158 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069672825 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097599068 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077637683 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098661842 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098533042 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075237531 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090369743 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069465299 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090491774 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069877278 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095008056 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068798592 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098964617 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067884541 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076121199 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067062054 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092432552 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073873396 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091387092 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07405567 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099469408 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107247944 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06868326 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09064547 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077752718 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068228186 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067004402 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092732524 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068590463 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089708594 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078318867 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099732831 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098098622 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078647483 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090263395 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06997891 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089738786 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069737918 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089597357 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075493873 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099096993 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068688964 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110209794 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068175043 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067442076 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075440691 seconds)
  done (took 6.530237288 seconds)
done (took 131.35952851 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.204855662 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.190704032 seconds)
  done (took 1.394823161 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069887436 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096560373 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100234626 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129067391 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08900081 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101624823 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099005768 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.101084734 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067239145 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087664829 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06909665 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068321053 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.154128298 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067517182 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066618613 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.09103332 seconds)
  done (took 2.464698945 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098961376 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.196217495 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099230309 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.08839486 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097995664 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.096439352 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065096011 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.097199623 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072499254 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065718541 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.096035185 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071537806 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.087216119 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072292196 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.09320509 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07431996 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065602566 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.095399039 seconds)
  done (took 2.642748932 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102418011 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144878106 seconds)
  done (took 1.256362064 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.183989564 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.139854977 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.208387286 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.385856482 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.208174245 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.283450397 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.179043045 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.177920719 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.159911413 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.175837061 seconds)
  done (took 3.107886579 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100545821 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171771261 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.306889064 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.11658714 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.095876182 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.115710311 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118042992 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.101072367 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080223721 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101167258 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.100110726 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078528722 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.119464201 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075376118 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.095484497 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077795124 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.122108943 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073774113 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097660923 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076980603 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.11959727 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067181767 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074184003 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.096713333 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075977792 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098772408 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066473442 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087734881 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076041768 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.09581607 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079362269 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114157127 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075786711 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.12908478 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.093255166 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.130675927 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076700743 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.093925969 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074867103 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.093567565 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077364318 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.097770891 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073423039 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076102059 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065023321 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075316065 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.090250749 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06677541 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.102156079 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.06810926 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.100768241 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078875761 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.130969519 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.089056997 seconds)
  done (took 6.245270255 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.707945744 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.127632718 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07040527 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.131181521 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117832348 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074177842 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.763905609 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114599517 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.202061672 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093782813 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.109627993 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071331415 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101985786 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085630451 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.131991584 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103168885 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116616284 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071604862 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.1238571 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.121812586 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069454728 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115453829 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091265956 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.400988561 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067610722 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092128091 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069382695 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069766066 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.135884231 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07774765 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069463877 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.167398745 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.086153608 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.14602982 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.089483136 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069440407 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067990151 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.10381898 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.204634104 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.183504137 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.152766682 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069210877 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068345902 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.091397831 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090005311 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089242548 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.134965498 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080995816 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.142992286 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092237628 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070743792 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089493007 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070615132 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079974035 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077004252 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103792333 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.253095084 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089543678 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070296424 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071948102 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.224105944 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080556721 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103046339 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.0936293 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.177932927 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068984622 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.72064099 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08720718 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068482333 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.094088421 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068998949 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092128065 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070597513 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.141517296 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.379330186 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071956582 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069985726 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090549617 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.175502645 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078546088 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091214047 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.136807745 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067949225 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090716798 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071195895 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069387157 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.162084303 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082105273 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069931104 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.091066138 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070363865 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.090060686 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068527316 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.185447397 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.1024486 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081756669 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.184418229 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090988719 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.135761419 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080811085 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091950918 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.081205024 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.090046963 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072169766 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070409655 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.10196627 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.118047233 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080444991 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092269802 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06970303 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.12075946 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081195316 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.090745581 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079032131 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.421513478 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.103357337 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067201711 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10347522 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069178653 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.134757389 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092470186 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.206314471 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068846875 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102392848 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06953517 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089698798 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068981786 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.135888289 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.092375238 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.0698555 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069574234 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.092854493 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079921604 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.181072316 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071631864 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.184427853 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.157341034 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.092812989 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.14262084 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069952588 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.116442133 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.092508951 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071826368 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070012848 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.73529313 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069352467 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069001406 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093142691 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161704251 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069459489 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.100950693 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.08008126 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067246477 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.765038354 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080107031 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100868511 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080696928 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092833035 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068938001 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068195294 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068643942 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.135714725 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.193767862 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071954054 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068244698 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.10005775 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.135085153 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067848471 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100806237 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078430952 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102040989 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069169004 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092252763 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081655486 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.14174523 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.10155938 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.160307843 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.553481931 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069871967 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.099594654 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.143821051 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06786624 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109728394 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068080562 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.105530952 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.137024768 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098975764 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.255897139 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.138616331 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.161577855 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079300518 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105751131 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067809681 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.090906297 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080244674 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090007606 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070857341 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.100563378 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070353037 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06974201 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.107036872 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068398307 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.199779951 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090689827 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079383664 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.089835682 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071462413 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105183916 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069640714 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069757442 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102738495 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06966727 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101072311 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.818161848 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.100894489 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069334976 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070181521 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.133253497 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.141074576 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068111627 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.091809519 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070488649 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.134181067 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.181174166 seconds)
  done (took 30.849330324 seconds)
done (took 48.970309631 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.259482432 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.174872451 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.252025964 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118609927 seconds)
  done (took 1.911828458 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.14665417 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103312541 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119512375 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06502268 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.12704503 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087617571 seconds)
  done (took 1.685483794 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.412845257 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.238590548 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.232146156 seconds)
  done (took 1.913774424 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.221554939 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.237024128 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.413087326 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.302345396 seconds)
  done (took 2.311773922 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.168168637 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115151035 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067719513 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.106963889 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.161910058 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.211615991 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126437433 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.174379258 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078933657 seconds)
  done (took 2.289901731 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.193111735 seconds)
done (took 11.337328213 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.189230664 seconds)
    (2/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.226290366 seconds)
    (3/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.214596245 seconds)
    (4/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.239298634 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.200179846 seconds)
    (6/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.170836991 seconds)
    (7/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092864495 seconds)
    (8/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.104957343 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.083308316 seconds)
    (10/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.217956805 seconds)
    (11/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.215505765 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077218034 seconds)
    (13/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.176007906 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073714733 seconds)
    (15/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.102275817 seconds)
    (16/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.156749879 seconds)
    (17/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.107507132 seconds)
    (18/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073300583 seconds)
    (19/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.10313743 seconds)
    (20/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.1941337 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.150772324 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.095841975 seconds)
    (23/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.134374854 seconds)
    (24/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07361218 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.136788551 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.119285068 seconds)
    (27/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.105139796 seconds)
    (28/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077910562 seconds)
    (29/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.100461569 seconds)
    (30/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073864458 seconds)
    (31/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.102132291 seconds)
    (32/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072422582 seconds)
    (33/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074702922 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.100066861 seconds)
    (35/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.1187096 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.119065036 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.208939442 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.121564618 seconds)
    (39/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.159922726 seconds)
    (40/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.181662315 seconds)
    (41/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.205669858 seconds)
    (42/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.114278057 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073698907 seconds)
    (44/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.096773965 seconds)
    (45/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.093675722 seconds)
    (46/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.159655734 seconds)
    (47/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.081364412 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065079712 seconds)
    (49/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.198581328 seconds)
    (50/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.06898107 seconds)
    (51/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.112648166 seconds)
    (52/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.195214532 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.14112144 seconds)
    (54/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070183454 seconds)
    (55/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.136185896 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.094279475 seconds)
    (57/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.073894943 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.165035803 seconds)
    (59/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073143959 seconds)
    (60/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.125536622 seconds)
    (61/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.162947438 seconds)
    (62/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.17762438 seconds)
    (63/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.223609215 seconds)
    (64/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.170651906 seconds)
    (65/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.080375173 seconds)
    (66/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.158574163 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.101125091 seconds)
    (68/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.193789363 seconds)
    (69/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053562553 seconds)
    (70/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.162420868 seconds)
    (71/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.137333685 seconds)
    (72/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.100230646 seconds)
    (73/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073552866 seconds)
    (74/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.091458708 seconds)
    (75/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.137600874 seconds)
    (76/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.100962845 seconds)
    (77/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.0826204 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.191000046 seconds)
    (79/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061210919 seconds)
    (80/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.061933329 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.090992957 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066940272 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.12689567 seconds)
    (84/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.151805318 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.113968037 seconds)
    (86/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068986701 seconds)
    (87/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.220001497 seconds)
    (88/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112115778 seconds)
    (89/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.053139978 seconds)
    (90/309) benchmarking ("sort", Float32, false)...
    done (took 0.127722999 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.101923445 seconds)
    (92/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051914335 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.113045842 seconds)
    (94/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.092542713 seconds)
    (95/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.111918388 seconds)
    (96/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074892155 seconds)
    (97/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.216231514 seconds)
    (98/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088581976 seconds)
    (99/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.098558203 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066572611 seconds)
    (101/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.13148126 seconds)
    (102/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.05245483 seconds)
    (103/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052184218 seconds)
    (104/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.168265511 seconds)
    (105/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07405012 seconds)
    (106/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.133371137 seconds)
    (107/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.162692443 seconds)
    (108/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.198476141 seconds)
    (109/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.111635347 seconds)
    (110/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070518818 seconds)
    (111/309) benchmarking ("sort", Bool, false)...
    done (took 0.159445872 seconds)
    (112/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074269763 seconds)
    (113/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.116370345 seconds)
    (114/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.05251588 seconds)
    (115/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071140508 seconds)
    (116/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.097112415 seconds)
    (117/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053857304 seconds)
    (118/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051194067 seconds)
    (119/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.097743205 seconds)
    (120/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072890135 seconds)
    (121/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066044324 seconds)
    (122/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.099615287 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.077068711 seconds)
    (124/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.173380981 seconds)
    (125/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072579412 seconds)
    (126/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.076235985 seconds)
    (127/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.077109464 seconds)
    (128/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070807641 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.090274247 seconds)
    (130/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.053031994 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.348423505 seconds)
    (132/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.10924514 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06622455 seconds)
    (134/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.098162564 seconds)
    (135/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.05400986 seconds)
    (136/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.173824716 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06675442 seconds)
    (138/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.128902677 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067287936 seconds)
    (140/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064670493 seconds)
    (141/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.075279638 seconds)
    (142/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.16441506 seconds)
    (143/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.192987036 seconds)
    (144/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072583717 seconds)
    (145/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.076551286 seconds)
    (146/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075148611 seconds)
    (147/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.053195876 seconds)
    (148/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.097698332 seconds)
    (149/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073449945 seconds)
    (150/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066154034 seconds)
    (151/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.123059374 seconds)
    (152/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.10682916 seconds)
    (153/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.172763872 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.125112318 seconds)
    (155/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.052336199 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.136586092 seconds)
    (157/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.138014555 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.09234629 seconds)
    (159/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.149847087 seconds)
    (160/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.096064676 seconds)
    (161/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.0674034 seconds)
    (162/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051086864 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.201655403 seconds)
    (164/309) benchmarking ("sort", Float64, false)...
    done (took 0.150024123 seconds)
    (165/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.06798241 seconds)
    (166/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051537689 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.118603918 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065686391 seconds)
    (169/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.074770902 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068464981 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.148998247 seconds)
    (172/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.066642777 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111386848 seconds)
    (174/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.075746802 seconds)
    (175/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073275473 seconds)
    (176/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.0719932 seconds)
    (177/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.112719269 seconds)
    (178/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.109712581 seconds)
    (179/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.197371466 seconds)
    (180/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.091457406 seconds)
    (181/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.054585123 seconds)
    (182/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.053168822 seconds)
    (183/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.100656734 seconds)
    (184/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.074897555 seconds)
    (185/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054650961 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.089529458 seconds)
    (187/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075462619 seconds)
    (188/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.053389646 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.088859405 seconds)
    (190/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.053719893 seconds)
    (191/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066045825 seconds)
    (192/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.107686072 seconds)
    (193/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064992679 seconds)
    (194/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.19504192 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.08721113 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.088898806 seconds)
    (197/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134788206 seconds)
    (198/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050925293 seconds)
    (199/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.090465701 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090169131 seconds)
    (201/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.091540357 seconds)
    (202/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091355866 seconds)
    (203/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.103516452 seconds)
    (204/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076722615 seconds)
    (205/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073129541 seconds)
    (206/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.075265186 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091143243 seconds)
    (208/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075493634 seconds)
    (209/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.164607176 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065800144 seconds)
    (211/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.09574732 seconds)
    (212/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072326543 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.088615022 seconds)
    (214/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.101608089 seconds)
    (215/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063901689 seconds)
    (216/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.075884319 seconds)
    (217/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071449269 seconds)
    (218/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07082649 seconds)
    (219/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.098748157 seconds)
    (220/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066996906 seconds)
    (221/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068567294 seconds)
    (222/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.090558518 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09119177 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.163981226 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065755233 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.114471172 seconds)
    (227/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054921999 seconds)
    (228/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072733061 seconds)
    (229/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.076141875 seconds)
    (230/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067827441 seconds)
    (231/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051378029 seconds)
    (232/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.076103213 seconds)
    (233/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079873879 seconds)
    (234/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051205838 seconds)
    (235/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.105047142 seconds)
    (236/309) benchmarking ("sort", Int8, false)...
    done (took 0.163228912 seconds)
    (237/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.138853001 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.169535141 seconds)
    (239/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.170436517 seconds)
    (240/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.052116973 seconds)
    (241/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053386642 seconds)
    (242/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050914386 seconds)
    (243/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.091503043 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.0900846 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.17108398 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093315623 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.132897948 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065126015 seconds)
    (249/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.07693681 seconds)
    (250/309) benchmarking ("sort", BigInt, false)...
    done (took 0.183763585 seconds)
    (251/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07087776 seconds)
    (252/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.078190886 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.148534547 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071433626 seconds)
    (255/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.091559771 seconds)
    (256/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065685045 seconds)
    (257/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052662405 seconds)
    (258/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.077049534 seconds)
    (259/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074404843 seconds)
    (260/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062176103 seconds)
    (261/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.088522891 seconds)
    (262/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067931376 seconds)
    (263/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062036055 seconds)
    (264/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069383806 seconds)
    (265/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050428409 seconds)
    (266/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051138468 seconds)
    (267/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.086862265 seconds)
    (268/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.10611636 seconds)
    (269/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067462181 seconds)
    (270/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051746219 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.112676196 seconds)
    (272/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063314546 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.117484565 seconds)
    (274/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068167348 seconds)
    (275/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052637897 seconds)
    (276/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.07886718 seconds)
    (277/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.115092047 seconds)
    (278/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.053439917 seconds)
    (279/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.100540543 seconds)
    (280/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053653796 seconds)
    (281/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.193447839 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073941295 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.088893828 seconds)
    (284/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069955249 seconds)
    (285/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.053468402 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.088594524 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075574381 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087377084 seconds)
    (289/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.133260226 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.131895566 seconds)
    (291/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.063246199 seconds)
    (292/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.052137485 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070933293 seconds)
    (294/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.091484244 seconds)
    (295/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.053014699 seconds)
    (296/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051132731 seconds)
    (297/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.077402779 seconds)
    (298/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.066810673 seconds)
    (299/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051372742 seconds)
    (300/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.075428998 seconds)
    (301/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.054516224 seconds)
    (302/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068848381 seconds)
    (303/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073833634 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.115348723 seconds)
    (305/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.052180031 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.094980067 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090556557 seconds)
    (308/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072179272 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.113903997 seconds)
  done (took 33.094985728 seconds)
done (took 34.131925057 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.081738225 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114388053 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075727047 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091590708 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.104849938 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076039062 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.097284653 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079236772 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.104243597 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081205776 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.102583271 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055843345 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073949808 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.099130561 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074876547 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116094858 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079041162 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.096064116 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074780818 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065474649 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.097822128 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066346707 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066856078 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054444734 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076155124 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070179621 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.099077228 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07444994 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.089781679 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067086482 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069068052 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.097618436 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066663262 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078329804 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096872787 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073409625 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097977524 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076892643 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067705878 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.090500288 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075142765 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065868043 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.097243309 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074176011 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071265814 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.096584647 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073723279 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.102265309 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09281115 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091768419 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075611994 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076422594 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.101752328 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072966384 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.092894107 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074541512 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07127642 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116342284 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.0741181 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091858581 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07547301 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073576737 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.095616659 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073841975 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.095632694 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076531409 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075656329 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.09560425 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076417941 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071154519 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.090469228 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074161645 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.092386927 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068447893 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076109466 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.101561008 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066416732 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.0712507 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072185986 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070620935 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064407537 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094945524 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068376651 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071648433 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092808501 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055162921 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069476249 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.09626145 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06535589 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096859347 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073390402 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072899571 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.091735542 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077045813 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065357568 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.096268516 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06699791 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065140985 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.092496201 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070332718 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065631669 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092835221 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075590376 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067022503 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.096435762 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079647915 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090731163 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073194714 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065026818 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.08948862 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080625176 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099313786 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067541875 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068214712 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.090021453 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074026391 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06509839 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.090923899 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066546292 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065685102 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.095657511 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06674861 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068144853 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.097360462 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078607097 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.089748216 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07067489 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068590986 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.089846912 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072514171 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066405616 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.090267615 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069070213 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062628131 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09295782 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066797929 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072628624 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092815648 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073893338 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067051443 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.098463485 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070268093 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.095268933 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07257709 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065392912 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.082426701 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06971462 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068700981 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.091853396 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066921062 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067602129 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.089670973 seconds)
done (took 13.300488299 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06838818 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169583528 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.123583968 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096479659 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.110967791 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06776682 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076387546 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.127882516 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.091190054 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.104062755 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111273111 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085427696 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.138532288 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064899126 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.090756417 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070452566 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06729135 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.113389316 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100581223 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085432635 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.137184388 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066169146 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.120861774 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.09015417 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113579054 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.126359869 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068900819 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070471705 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.093900075 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.09332037 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110762502 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070522034 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066538037 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124829084 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.118193397 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085262543 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.090242239 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085335699 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065585731 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.09109374 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.088703423 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.123848947 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080409624 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.08024422 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.097822864 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070423503 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068134961 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.110549012 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090408181 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078177641 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.08550759 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.10147037 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.098148814 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.081987395 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.089493539 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.087311994 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106210099 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069773327 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06650639 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.093658858 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066314916 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069347798 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112491953 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.114058383 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071117006 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106653163 seconds)
  done (took 7.25434174 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085318235 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090480134 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.108354092 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082751066 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.091113458 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067919957 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066816402 seconds)
  done (took 1.693073985 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068666226 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.0889469 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113772384 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090091536 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.109612075 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087627809 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.10142999 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068308859 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.082755046 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.094412603 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087222859 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.128219073 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068646687 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072523616 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089637687 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066165955 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118696758 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067077829 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095657965 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091532784 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09358769 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.08790968 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.06890479 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.092285012 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081549428 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067036395 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11215726 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071007289 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067240016 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069245264 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.094204062 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.109167756 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107109757 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075716179 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066075159 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.107779776 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081018193 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090567249 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084012391 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096225772 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082546257 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.0679374 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.093725731 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066716953 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071299716 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.102911639 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068807237 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067495676 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.096100617 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08704173 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092696476 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081438295 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.066639633 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.096881885 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069205109 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09680492 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079429271 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06846443 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.112654444 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069620298 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.108029925 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085861845 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081012029 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.109551742 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069655381 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.105868274 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081522682 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069800201 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068573491 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069884105 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.110597792 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066266117 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068880202 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.104668346 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070244228 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.115448212 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091057989 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068667494 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.103686776 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067320927 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.092078557 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068427216 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089892606 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09661553 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067073741 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.096495835 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071979346 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065502803 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.091662892 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072450306 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065451685 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.093947103 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071250239 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067812688 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095196833 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084847447 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.092214318 seconds)
  done (took 9.361309383 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070734165 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068393917 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094319823 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069873624 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068925758 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093647511 seconds)
  done (took 1.577817486 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096640846 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.093534773 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082597041 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072001459 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.130127689 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.081560355 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.108339816 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.103915601 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085955141 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079228395 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.107440889 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.082817964 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.113128123 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073509392 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.106746339 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073156661 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.107285473 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077814485 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.103576162 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075077971 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.111850168 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074732617 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07398831 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.108784766 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.070677891 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.098081672 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.078140585 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104345345 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080332811 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.104535547 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.075049284 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070715447 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09601962 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079297092 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.107733828 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07072911 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098435319 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072662524 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101541272 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072227461 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105603705 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075267237 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075320103 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.098365779 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079921158 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.09651999 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072383063 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102209538 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082344146 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096163416 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074009987 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072350638 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.096434116 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.072142394 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.095601976 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080529814 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095708793 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083354183 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07278599 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069679911 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068827876 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.098293877 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079928296 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.096974176 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.081711474 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071066588 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069601097 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072441042 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.10192877 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073074693 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.09734291 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071150375 seconds)
  done (took 7.396725489 seconds)
done (took 28.379083687 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.674857822 seconds)
  done (took 1.785420541 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.768221157 seconds)
  done (took 1.879631228 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.21717108 seconds)
  done (took 17.336084183 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.6034171 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.774222447 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.84742405 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.157219888 seconds)
  done (took 3.495236832 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.911380046 seconds)
  done (took 2.044148453 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.238992707 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.226159604 seconds)
  done (took 1.58399217 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.777035901 seconds)
  done (took 1.903503429 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.281358358 seconds)
  done (took 2.399213469 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.293353607 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180038545 seconds)
  done (took 1.600316917 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.489290275 seconds)
  done (took 1.614731886 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.278881732 seconds)
  done (took 8.411630523 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.205870291 seconds)
  done (took 1.346345568 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.266139755 seconds)
  done (took 1.400084976 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.357843535 seconds)
  done (took 4.486437599 seconds)
done (took 52.408647268 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078981218 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081767296 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106752146 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079535394 seconds)
  done (took 1.470690647 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078254889 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07227275 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10272327 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073104668 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102487571 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073732918 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074535295 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076034512 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071889545 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.10106872 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073653668 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072264789 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.102088188 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074684375 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.096021336 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075926241 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100318728 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074361276 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075851002 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.098690907 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071757331 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074709835 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.101752876 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072467686 seconds)
  done (took 3.126863292 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078951881 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07264643 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099486594 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072921934 seconds)
  done (took 1.461836747 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078527151 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090820372 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.115762506 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076310206 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.118362021 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.112239968 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070432395 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068582375 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.096466073 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077752382 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067825145 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.123166524 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113053233 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078026753 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078869005 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.092535441 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068935408 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.112813125 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078053458 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077239745 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071458966 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.075956753 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.094948457 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089952672 seconds)
  done (took 3.265474327 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079199346 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10249978 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.104038144 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087075559 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.116937537 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065555862 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.101119893 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089966004 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.150111941 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065717871 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.096017973 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067793768 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073114099 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.091148886 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.07770189 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.130367208 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110572803 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06779289 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.122298511 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065968615 seconds)
  done (took 3.006139913 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074289338 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070030131 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090124903 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069942977 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077880962 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.098765654 seconds)
  done (took 1.626258064 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070287856 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067412792 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092229355 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068250811 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071873401 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092766751 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067418705 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067170885 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.093306514 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069066839 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067015261 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.092113276 seconds)
  done (took 2.059019578 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.399051587 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.096565657 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069319808 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091780045 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070992749 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091778804 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081599535 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068216535 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.117310471 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066957559 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066920888 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.095931345 seconds)
  done (took 2.457247824 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262817587 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078370064 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.294312648 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163978699 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140661617 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143473941 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132127336 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141308544 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.172846022 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130162203 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223886913 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195930628 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135157269 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165450138 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115353405 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099358525 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213031323 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191273825 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131456039 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221671427 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173048431 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152818508 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175667822 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128944874 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134702302 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151035587 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072192531 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106770998 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227843068 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161103493 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175053097 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139482484 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121556418 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232419645 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226278032 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171396974 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161662372 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084077955 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.155660651 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.16239244 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25815683 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11614414 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195977984 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135253854 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106869424 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169950373 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14858644 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.146699152 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.134201034 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090504093 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201086947 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211452804 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193905455 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086940173 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138613491 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142484358 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142976961 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130018305 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239256412 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189541435 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153584428 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.096387212 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100157549 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207411072 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158753753 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.136651117 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126418207 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119662269 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162820892 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182880683 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147281409 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198060541 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.159834503 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1143045 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121159631 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194039274 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158145954 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168304607 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120910614 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.103939816 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153170996 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103312575 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079877691 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.169624744 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074861392 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231573927 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124301725 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106352167 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141136682 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135140813 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137002918 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191500759 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173427786 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131312586 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066730827 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130288181 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.147227563 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178483202 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114972886 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134973678 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145244055 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079159219 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16578403 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074241117 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149530537 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076121064 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152779754 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15784405 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.103243221 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150913535 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10105611 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.127936009 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160985759 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18834419 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088938933 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111656808 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195266742 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149907539 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.132279067 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198136625 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185641884 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.125801327 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129837595 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180385997 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239305476 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088887666 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220403536 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135407553 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083959879 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.114795056 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152499811 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140483469 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.149039127 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081831261 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.147053829 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224316181 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074065145 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123035101 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161392178 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105970579 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081350811 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132512204 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128069848 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.121212187 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.102284322 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.132979259 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137297052 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178489174 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108053106 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154087369 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126290865 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229090003 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116260148 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102037504 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131079557 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.06908122 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193569126 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187889183 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106780279 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194913166 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.151031465 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13335749 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147008153 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082422394 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167456317 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079763362 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069590516 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203942341 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137965623 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137470178 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150560693 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133028095 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.157773552 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.147778782 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164188625 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160885368 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.156884304 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133671584 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.113834708 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11272023 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18230428 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074059904 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.119549584 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.08089393 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132326111 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123611955 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084242425 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170131353 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153653271 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128401413 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112783977 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125729178 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175391902 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.104368255 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157901347 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.147026637 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121389009 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.182500093 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181851843 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18805716 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101218206 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174300495 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071543768 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101784413 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.092210472 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15185806 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111239719 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083923102 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146094297 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202702939 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157923666 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167856607 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139454427 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15010774 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182531654 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.096579784 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115747782 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203299293 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149650675 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.129892625 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118462276 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099678092 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169371074 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110827754 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212263893 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144541558 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151891436 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212665942 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099659847 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07898021 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136797594 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166965623 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134444691 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174525251 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127781894 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1162449 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138939141 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075744145 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129287304 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15636663 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148834667 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192342402 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115712391 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190151544 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077735904 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150931284 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148635277 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151691902 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.091202097 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149327139 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1934381 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123021448 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146516979 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210598485 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080870114 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.153120592 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206635649 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177701294 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112766561 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138869283 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145258468 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157379971 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14882076 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170364421 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139300518 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16405979 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136312449 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086843423 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115681469 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097422817 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133492605 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.122633758 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.137659396 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.143669286 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.0946541 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18855605 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131406358 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111263622 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146484385 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.12465561 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09009096 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125433964 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232040934 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121500517 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201768845 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.128183057 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.175205092 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222860655 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101441514 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081081471 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.1047097 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170526675 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085090226 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160509252 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.126483551 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133775894 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153240612 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173755555 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123296391 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069115231 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137161117 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163789494 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140023287 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127193801 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.106153311 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193544075 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.130255262 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08067569 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143116445 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133539082 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103668681 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232744488 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.089786763 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099717564 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103432826 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082294408 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156617417 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212050816 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08074516 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.152883028 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120890276 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13929947 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127811497 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130540717 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100764554 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144936008 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208243538 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159661453 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091040525 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141470276 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186197858 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189865599 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134703003 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.122703079 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203575651 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209085912 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.192258586 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.117591113 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143024533 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142159349 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10921255 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199136305 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110113298 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199974582 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109496471 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167664483 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13336166 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135667128 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161007484 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.124628904 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091343723 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205238861 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147054115 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084552502 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1046935 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147850272 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14985793 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136214703 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.077259895 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169673506 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.100701017 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163479359 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226323524 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083592134 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133428214 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096353878 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109503309 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137162009 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131922931 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087279227 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.148469187 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233248308 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08946349 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209145259 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17111008 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142605983 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19550042 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100831632 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.66460493 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.106822077 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185510625 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145179043 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232379763 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126157077 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146472081 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137782046 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154147423 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146147833 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136181022 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.203098135 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163889337 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.145846224 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079926141 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131589767 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102528646 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.118174995 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106474325 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112165079 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148319431 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.122988731 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.146043092 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153708625 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.110071021 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096587501 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213641782 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146378971 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175249121 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16998474 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113821752 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146921522 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169333376 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108711997 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.153550722 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183243843 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136544196 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127652178 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.108220447 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.104813266 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229663453 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073259368 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22250575 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14927172 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13928133 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141930571 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145056173 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160364021 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137866127 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150725936 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122296404 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.139875352 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141218476 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083168253 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.105283213 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106104864 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141584161 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.127386006 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127366133 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.123930128 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208378631 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072151094 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125360732 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130852675 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178895213 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235988679 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088862006 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110955208 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149537886 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143389245 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113556809 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15046584 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080865636 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11122949 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082912728 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.131394814 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110116603 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141942078 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134192044 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140549856 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223713162 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083983137 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.251806321 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095010992 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133289468 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.096329254 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.080472832 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124590932 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125642377 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110435062 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129460122 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228079909 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095440482 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.119313355 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121127542 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074672509 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110594283 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157811014 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139585582 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149439271 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099543162 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.091328687 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138421719 seconds)
  done (took 69.756693544 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.135171941 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.108746804 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.123710302 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.176705706 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150286941 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.240819165 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.183949981 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.226944584 seconds)
  done (took 2.564009786 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070632659 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.121747946 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100424293 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.10963664 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068710971 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.09608294 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.252103913 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079141238 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.096850742 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089972063 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.108365502 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095559781 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.490621182 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06658496 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.094319678 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.064049672 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.094717247 seconds)
  done (took 3.313564471 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.433238196 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.661677394 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.4225888 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074049075 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.029889332 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113848891 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.536854024 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.169667085 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095894961 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.44839625 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.723542594 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.160369829 seconds)
  done (took 18.088487951 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075503159 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070216215 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.111084137 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083961228 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071682004 seconds)
  done (took 1.631751703 seconds)
done (took 114.958435729 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081555668 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.356605758 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053953573 seconds)
  done (took 1.665896734 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.0838067 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083833106 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.112840861 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082091697 seconds)
  done (took 1.597380433 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075736538 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076340331 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.11194525 seconds)
  done (took 1.494414321 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.284953312 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.139815487 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.116950632 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083480904 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077421247 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104453876 seconds)
  done (took 1.494139595 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073656322 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07412256 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100147992 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076456893 seconds)
  done (took 1.55002635 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077252857 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052739121 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054831957 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083754013 seconds)
  done (took 1.500965314 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087746351 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077911616 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105997214 seconds)
  done (took 1.500387009 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107408452 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.112540155 seconds)
  done (took 1.451353422 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082544933 seconds)
  done (took 1.310278737 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.10018294 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.141290016 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.158417686 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.138621998 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.165876004 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.137284473 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.113846201 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089767886 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.105757914 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088068603 seconds)
  done (took 2.473734657 seconds)
done (took 17.888084708 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079231446 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.392621786 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362065277 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090323051 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.696358709 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355804767 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.011642388 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091610597 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.149847609 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095149669 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084920289 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648410585 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.970539049 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.321681031 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.990528982 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324181609 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648836812 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067291732 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06678436 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097268728 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.964265889 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067263241 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095854392 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068001144 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.675337971 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372509611 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067928041 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.350842983 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06785751 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095043599 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356351599 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067856973 seconds)
  done (took 16.019344857 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071321364 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.144163547 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074670792 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083271084 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.099025966 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069525526 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098712417 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070264117 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153430137 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068161616 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11087045 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069428453 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071124006 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096769596 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087626168 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067136584 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067109923 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066728163 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.097121152 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069563859 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085433329 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096247377 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067989567 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095257451 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069373291 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.07919379 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096047249 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06908611 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067986535 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098230393 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071205108 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096338803 seconds)
  done (took 3.966897445 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115192585 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.151753443 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074553473 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129594841 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112267042 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098640936 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142481932 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121438984 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156395329 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06796965 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111941647 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068894804 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126991308 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070174645 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088021708 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096886983 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069531438 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095178342 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069821403 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06869013 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.115835903 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068599023 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094441234 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069855137 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068425698 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109090271 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069363949 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067637699 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097100789 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070504655 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.09873575 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069689895 seconds)
  done (took 4.270011377 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073590277 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075086902 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110279349 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083555928 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068275306 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.100315495 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072536003 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.095968749 seconds)
  done (took 1.922455235 seconds)
done (took 27.414170727 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079770175 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069099251 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.099189287 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081755975 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072337829 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.106723909 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06736398 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.101963921 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074021331 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072441706 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103371186 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068350377 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070666041 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.095638163 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074247913 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067392438 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.108552437 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071316699 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.108160248 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080118927 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096653146 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075139248 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073622074 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.107267185 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079184717 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.106449327 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078517712 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072111174 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.097689109 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070407559 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.103194055 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084713608 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068048315 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.107596945 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068026756 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066993192 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.100091909 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068514776 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.107219199 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077229607 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069177883 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.105644742 seconds)
  done (took 4.787811952 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089311855 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090641838 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.113306474 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062086282 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066040087 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.063587823 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087052074 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.089631099 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060951485 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088040076 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.084203067 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060383652 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062496357 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053708263 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.087969196 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057646691 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061086856 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.084305205 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060315899 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059315612 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057314391 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.082286791 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.061057076 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062107236 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.084613765 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062767006 seconds)
  done (took 3.136731239 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.085835007 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08358466 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.116376647 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125566633 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.133074236 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.075743805 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106802703 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.086964274 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113508535 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067346767 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070164521 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.122128331 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087805853 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.101712933 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071241477 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08233289 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.110864574 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068460397 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.101378673 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091478672 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.082619975 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.106022138 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091849254 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.108790972 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067418497 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069216455 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.099648298 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080612514 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.099617804 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077200304 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070729775 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.099892506 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068993837 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.106056527 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072198033 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068278396 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.117710128 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076689269 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.105319882 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068528384 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071086262 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.097062868 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089811315 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.151489036 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067413876 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.101684074 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076649127 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076566735 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.096049769 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086925581 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077839825 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.095810127 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071274035 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.093438213 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068886588 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080024646 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.096998101 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070566408 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076053566 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099206819 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080261721 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.098291218 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084732281 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067082901 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.104256567 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066952138 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.0678201 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095506778 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092431729 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097791446 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108683366 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.095676954 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069619795 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075880206 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.104040166 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073814878 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066936938 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111286158 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077300088 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.099008982 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076229333 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070494786 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.099692003 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087065672 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.096309184 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.07019763 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068775283 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.101237174 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070854435 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06847285 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109219945 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067775902 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069525819 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083041821 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.065536337 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.099306582 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074176178 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071257317 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.09708345 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078708085 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.101042061 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069357171 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075681482 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.0969401 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070966164 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.105354464 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074863543 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066442642 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.100867134 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074025679 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067896025 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068041962 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069249171 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.099209481 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078134367 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074079167 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.101428757 seconds)
  done (took 11.394002014 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.187058703 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153143598 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.099994389 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.173620454 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07713755 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.077890917 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.176951543 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.124440143 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068358532 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067961171 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.099412607 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.116638118 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.136295152 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.150911168 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079225804 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.097782901 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083247238 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.146564845 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.178160655 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141524833 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.113999237 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076278251 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.099335987 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069266299 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073907323 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.112261814 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.09038528 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105248639 seconds)
  done (took 4.426242958 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082156954 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.12790479 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074841271 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.08892249 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.121019157 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067452301 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.099467409 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069945553 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079244699 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.108655353 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066719239 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.102071572 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074882295 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.101582703 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069482573 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074057557 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.103597239 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070509742 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.06990203 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.102033693 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07764258 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.108748693 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072067586 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066880473 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103945799 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066681431 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.094720011 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085125246 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.097482419 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090724508 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065238026 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.105419335 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081617715 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.098405575 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069765036 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06754815 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.096937591 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068545493 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069618719 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.096074061 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067114767 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057227487 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.095642501 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080506263 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.102058288 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056992712 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072965439 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.10193714 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07340813 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065023999 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100015288 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071406575 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070900938 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.10387547 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072602863 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.101204577 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070535011 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065952264 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074549696 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066231588 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06370707 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.096233178 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073579031 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065593608 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.106439767 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072303527 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.094713919 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069111185 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069346602 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.102138231 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06865722 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07024875 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.09444067 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069924204 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071642351 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.098713725 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069411964 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065959258 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.096660572 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068250483 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055107228 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.097226253 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053945513 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069980724 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.095157802 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066414935 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094398225 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074539778 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079483016 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067572805 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.071826933 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.098309967 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067696544 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070677428 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.089021169 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071741428 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08238835 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.113193598 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067226322 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.095455225 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082780354 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.100275057 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069085413 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057030828 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.103088425 seconds)
  done (took 9.851734332 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095927347 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087435466 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.099109227 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083941601 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.120006011 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088710361 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074732837 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.106128729 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070177608 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.110247311 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075108451 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075992491 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097612681 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077764887 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093069523 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.106721806 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069829332 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.104708475 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073350543 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100441348 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112021027 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08099772 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.103505566 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068895877 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075155484 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.078379636 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.087893146 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.110027744 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.079245196 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.074649692 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109895322 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090488134 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.103129408 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.073035494 seconds)
  done (took 4.321606285 seconds)
done (took 39.1550047 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.342451612 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.555698987 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.31751965 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.317249583 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.347261335 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.341519789 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.330023952 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.315507129 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.723425553 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.315810783 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.561798172 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.069797101 seconds)
done (took 60.804877307 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.409201852 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.467430215 seconds)
    (2/2) benchmarking "String"...
    done (took 1.588483048 seconds)
  done (took 4.313426538 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.675612378 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.206035901 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.571141218 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.314056389 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.313432087 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.631238217 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.007589613 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.184438824 seconds)
  done (took 28.48248899 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.318459207 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.695406964 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.767022438 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.777146553 seconds)
  done (took 18.814594615 seconds)
done (took 61.953042874 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.342199499 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.37864998 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.347371799 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.298287858 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.442384983 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.342795298 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.65019605 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.547122642 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.319468212 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.305709803 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.312102455 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.314449058 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.324277579 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.632795605 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.322570874 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.318675412 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.379202 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.842392261 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.702776367 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.330155117 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.336660356 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.316368626 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.342066667 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.315717167 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.347156372 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.313023182 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.327789555 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.329504297 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.54491856 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.31320063 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.402087284 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.325948673 seconds)
  done (took 194.923648362 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.3117312 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.160682934 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.321261725 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.335421626 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.749948368 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.511500706 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.449775039 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.794255487 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.330880811 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.319127527 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.469018352 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.31423438 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.55135891 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.28160185 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.321132277 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.41773394 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.542626636 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.58538104 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.331307089 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.58635735 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.336087572 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.364163561 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.291129764 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.449490821 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.336668688 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.342147061 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.349315932 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.328671256 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.503152478 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.46899165 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.353544556 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.330678873 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.87170602 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.166712264 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.310088565 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.352617202 seconds)
  done (took 153.094691162 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.8558368 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.307998934 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.309187915 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.309812285 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.337954686 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.309601443 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.817289574 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.821156028 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.821417314 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.678989169 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.371059419 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.309610048 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.482426537 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.308761791 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.398886701 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.321844323 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.312014782 seconds)
    (17/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.309157969 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.324066581 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.310604049 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.333300437 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.310377379 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.815566641 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.323398953 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.316474831 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.309881005 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.337431332 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.700740036 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.491485301 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.310947341 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.338982431 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.622133086 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.353923849 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.309452972 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.577357685 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.476072017 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.415535751 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.311343184 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.33886408 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.310652232 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.574688239 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.309958395 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.310364253 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.312675412 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.847392778 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.311339039 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.811042387 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.312703599 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.171779418 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.309578189 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.309676317 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.609715455 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.724024665 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.310958395 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.308352534 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.311017101 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.307937074 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.308617514 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.336690357 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.564909583 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.402049412 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.309222744 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.31077593 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.335980583 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.309028466 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.527145526 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.309497385 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.576180344 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.363099171 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.521624252 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.789146641 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.308014307 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.396948106 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.422490793 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.306953184 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.306431994 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.306890845 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.306876813 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.409972085 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.306812821 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.671923974 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.313532295 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.308054902 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.366140322 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.396999233 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.307127241 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.566669595 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.309393642 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.305717574 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.954608847 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.395313827 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.308037926 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.307080961 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.30781009 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.306480149 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.673400473 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.786684524 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.413422571 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.310679093 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.758094051 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.308907445 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.306806184 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.68533748 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.778540032 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.836531246 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.308408755 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.410264202 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.312111304 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.310643992 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.307279928 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.338080266 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.307480848 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.365252205 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.309025713 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.699703609 seconds)
  done (took 356.563115911 seconds)
done (took 707.692985401 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.001047372 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.994646492 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.100237121 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.98516831 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.969655878 seconds)
  done (took 11.300337366 seconds)
done (took 12.549993619 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.485550196 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.487170484 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.364717404 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.488586869 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.337406122 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.503285434 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.467273418 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.330467863 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.408617711 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.383783841 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.407013812 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.359839971 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.334957482 seconds)
  done (took 19.609406456 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.622217548 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.624140118 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.371857693 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.624957923 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.347522835 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.618431512 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.503943392 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.513849084 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.498433958 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.322984059 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.323061812 seconds)
  done (took 17.62314456 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.631091897 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.61618226 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.375652598 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.626884275 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.349856788 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.628363413 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.507231593 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.511967571 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.498311048 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.32382092 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.321395842 seconds)
  done (took 17.642663809 seconds)
done (took 56.124968164 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.319498091 seconds)
  done (took 2.571355224 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.350069577 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.513181896 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.33383355 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.322062532 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.319782773 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.319019236 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.322907244 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.319976428 seconds)
  done (took 12.054139571 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.315074713 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.31427671 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.315371636 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.316016267 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.317777208 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.3183735 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.31555251 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.318187675 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.31556307 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.317795508 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.315387368 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.31801486 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.317735303 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.317638177 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.315992996 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.31864395 seconds)
  done (took 22.320947105 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.317853704 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.316642897 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.315804907 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.317271121 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.315693184 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.315446839 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.316980221 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.315976463 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.315801612 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.316575541 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.316830346 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.316490447 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.316201037 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.317088749 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.316278793 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.31684749 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.316361197 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.316534011 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.320994817 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.317131407 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.317580094 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.317712564 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.317265122 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.31794861 seconds)
  done (took 32.860758607 seconds)
done (took 71.059068579 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.169778249 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.801074842 seconds)
  done (took 9.225179789 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.319410967 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.319559742 seconds)
  done (took 3.894967595 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.320657249 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.320009428 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.320292853 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.319565111 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.319909568 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.320715934 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.319604714 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.320114196 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.32061267 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.320579206 seconds)
  done (took 14.456928807 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.31987186 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.320694718 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.318128265 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.320004052 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.320414011 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.317356801 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.320857549 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.320735765 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.320668826 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.317644591 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.319918186 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.318297366 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.320463492 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.318606997 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.320332816 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.318031405 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.318567573 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.318077133 seconds)
  done (took 25.004936345 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.321004817 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.320736556 seconds)
  done (took 3.897168281 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.319602974 seconds)
    (2/7) benchmarking "second"...
    done (took 1.318745382 seconds)
    (3/7) benchmarking "month"...
    done (took 1.318508231 seconds)
    (4/7) benchmarking "year"...
    done (took 1.318917262 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.318311007 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.318583778 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.318602522 seconds)
  done (took 10.487754656 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.322113598 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.50359274 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.58783727 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.983395808 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.322398338 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.325046185 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.235191746 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.325127838 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.327107317 seconds)
  done (took 15.187937267 seconds)
done (took 83.408345763 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.30124182 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.314081929 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.116144397 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.319705698 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.331309719 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.61406765 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.339935723 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.560256466 seconds)
done (took 39.153306517 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.330852691 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.0352168 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.03462067 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.32035838 seconds)
  done (took 11.646979783 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.310948372 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.175969127 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.309000678 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.291249306 seconds)
  done (took 18.344389586 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.899307351 seconds)
    (2/2) benchmarking "read"...
    done (took 1.64997331 seconds)
  done (took 4.80729243 seconds)
done (took 42.386074706 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.323813829 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.323370425 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.320792092 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.323084914 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.320819732 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.320692521 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.321478495 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.32344643 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.323591867 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.321285587 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.324159689 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.323516211 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.32298899 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.320989155 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.31989554 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.322777222 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.322808694 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.323214404 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.321034402 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.321100797 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.321073498 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.32374481 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.322114582 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.321749118 seconds)
  done (took 32.992189291 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.325284546 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.322634725 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.324232708 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.324310355 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.322381399 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.324331846 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.325060083 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.322197039 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.324762764 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.324858597 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.321735127 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.322105532 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.324563014 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.322324512 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.324780757 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.322467198 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.324428419 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.322485975 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.32441623 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.323331888 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.324354487 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.321978905 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.3228642 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.324875375 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.323309195 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.322498827 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.324696893 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.323032757 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.325421621 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.323213078 seconds)
  done (took 40.968955059 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.330029442 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.331056905 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.325210664 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.326028678 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.325779692 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.325621729 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.326209031 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.325750056 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.326418365 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.326659301 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.326169834 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.325472134 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.325732978 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.325996734 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.326194615 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.326475169 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.327062478 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.32538419 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.325892998 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.326396346 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.326438288 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.326704624 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.326728742 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.325760943 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.325694027 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.326681372 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.326747627 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.326067906 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.327003043 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.326630075 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.326499093 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.327265478 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.327812876 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.327338646 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.32804997 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.32664645 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.331299014 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.332379636 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.327655903 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.328313062 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.32746137 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.327789364 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.327325971 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.327734357 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.328636707 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.327444188 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.328668299 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.327681856 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.328433649 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.328544136 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.328273943 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.329052711 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.328781272 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.328059395 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.328551466 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.328905547 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.328376007 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.329337781 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.328390284 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.328183972 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.328315928 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.328637614 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.328397964 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.328625806 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.330067585 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.329114595 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.329182383 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.328987958 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.328754534 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.329450225 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.329110968 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.329368582 seconds)
  done (took 96.853679355 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.32921093 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.327032935 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.326512109 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.326398884 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.326787255 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.329103887 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.326493534 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.328732923 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.326793003 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.330214927 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.330531167 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.327583156 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.326102145 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.329815831 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.329503866 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.327258178 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.329343642 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.327378235 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.330176367 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.330037424 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.330656339 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.326978867 seconds)
  done (took 30.486830159 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.330673203 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.330333399 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.327522587 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.330905594 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.32773495 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.329840895 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.330525821 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.331346105 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.329773456 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.328297405 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.328496339 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.330275195 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.328820676 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.32701272 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.328284894 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.328500832 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.33099715 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.327490944 seconds)
  done (took 25.192106306 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.328709382 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.328500364 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.330884569 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.327744311 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.328042977 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.331421963 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.325188046 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.327719617 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.328333255 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.32565279 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.327791727 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.327956063 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.332069065 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.317830953 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.320568249 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.318345341 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.320439175 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.318356927 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.321428848 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.318325391 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.318441873 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.317524123 seconds)
  done (took 30.407666076 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.318282994 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.317206022 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.314139181 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.315858667 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.315102091 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.317866605 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.316868057 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.314356553 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.316528838 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.318181111 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.314319604 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.316768535 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.314979119 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.312522047 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.312793271 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.312533897 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.314426028 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.312653948 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.314626409 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.311832512 seconds)
  done (took 27.555464157 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.313900999 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.316744352 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.316781085 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.317182856 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.316715142 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.316483127 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.31873945 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.31367839 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.313136372 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.312942382 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.313705066 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.313084322 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.312561394 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.312386084 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.31274952 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.310427573 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.311404145 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.311090461 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.311760742 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.312029182 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.311868372 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.311407772 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.310480016 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.306687627 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.30702445 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.307504987 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.306594985 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.308058407 seconds)
  done (took 37.997729354 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.307518772 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.301613752 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.299984071 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.300259688 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.300200628 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.300387046 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.299981716 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.299387501 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.301775972 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.297734841 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.299889344 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.300023871 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.301131546 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.300052488 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.30070741 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.300683255 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299621237 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.295043672 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.295051437 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294138126 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.296933248 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297211047 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.297774722 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.295880659 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.291839558 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.294961719 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.291931837 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.291946368 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.294026763 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.29170217 seconds)
  done (took 40.183052784 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.314773361 seconds)
    (2/2) benchmarking "in"...
    done (took 1.30965886 seconds)
  done (took 3.856251584 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.288160728 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.291528916 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.290919169 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.288733653 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.288340443 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.292205422 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.288511419 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.286141278 seconds)
  done (took 11.543293649 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.288286124 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.287814222 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.287933211 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.288482984 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.287586076 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.288257204 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.293159685 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.301952808 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.289622123 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.287999322 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.29248022 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.294733465 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.291874316 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.286450536 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.286844988 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.287539895 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.285809685 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.287118945 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.287176517 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.286435992 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.286938743 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.290455932 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.289586017 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.284298165 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.287953079 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.299344095 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.293459917 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.287302163 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.287929411 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.292411652 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.287649418 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.284747008 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.287193263 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.288281503 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.28739799 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.287916143 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.298304454 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.307293973 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.296099667 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.288806676 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.287967772 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.284611538 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.289910344 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.291541465 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.290159219 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.289151649 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.287969896 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.285257576 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.288401929 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.290981814 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.291708359 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.287211002 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.285834807 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.295728177 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.290394078 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.297024745 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.305127326 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.291179018 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.296025823 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.300658834 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.303310447 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.295897559 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.291588188 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.289692781 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.297207278 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.309747498 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.298966066 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.302148429 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.286731731 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.289026059 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.299614506 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.303180318 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.29847 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.289714908 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.290053142 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.289429242 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.290537163 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.289555146 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.299508413 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.308908777 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.290549757 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.290833612 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.298945911 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.308227715 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.289508488 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.290144345 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.290767595 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.290663568 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.29129867 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.301834658 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.306882777 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.290664416 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.290534691 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.290646384 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.293463901 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.291838896 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.290364198 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.292825826 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.288338879 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.290976998 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.290804163 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.293551424 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.297977922 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.292276573 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.291845105 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.300394512 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.291140256 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.290401463 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.301971192 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.29202444 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.291561425 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.292148051 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.299524709 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.288505035 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.294152839 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.29882566 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.291705808 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.293933364 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.291908686 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.291424371 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.30108492 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.315601708 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.292527643 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.292124893 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.29637353 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.301608009 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.293213559 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.29732673 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.292770097 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.28953115 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.290407236 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.294498138 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.292481239 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.294940971 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.293350442 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.295543081 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.290568849 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.292843734 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.293245525 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.294202964 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.29559733 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.294506829 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.295138278 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.297244191 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.294366504 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.29596659 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.302265469 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.294224264 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.295165803 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.29545307 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.290411651 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.293316098 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.2967673 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.29395557 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.294258452 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.293832226 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.293848824 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.294476524 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.294149712 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.294050106 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.294447386 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.294717972 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.297759088 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.29437695 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.300037223 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.29330273 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.291323772 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.294114366 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.294465872 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.294782709 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.294605522 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.293584637 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.29673157 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.301349802 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.295445298 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.294745319 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.298983328 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.294922512 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.294966269 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.295146122 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.298422645 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.301421927 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.29483297 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.304237095 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.296002523 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.296511447 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.295179818 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.296101407 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.29609417 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.294966977 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.298885319 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.301006963 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.309325106 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.304916257 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.296479326 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.299186723 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.296756827 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.300195772 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.302544163 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.297646971 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.297534978 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.296636797 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.295482885 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.296804845 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.299408588 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.297856471 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.297115275 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.297305075 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.297389846 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.296683229 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.296585353 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.298264208 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.298865698 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.293759692 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.29672221 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.296802779 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.296326668 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.294525844 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.295847658 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.296262187 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.296083465 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.297073683 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.308365995 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.29482325 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.298133761 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.298359258 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.298265579 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.296608104 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.29704513 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.300140633 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.298456878 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.306974016 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.314572996 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.29999638 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.306117716 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.314224491 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.298278372 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.302222357 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.29849774 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.294804387 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.300972325 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.304444408 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.2977897 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.299092892 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.298271506 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.299086521 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.29891791 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.306938316 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.296294031 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.297196996 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.298355883 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.301427569 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.296390671 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.300211442 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.300286185 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.300363458 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.30135682 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.298509338 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.299113192 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.301745383 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.299352309 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.299137527 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.298969408 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.302095812 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.305163022 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.305839706 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.300796476 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.304039811 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.299462442 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.301971127 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.300056045 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.299555143 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.299398509 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.313628913 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.307176756 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.30873065 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.304039797 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.299658012 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.307537534 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.300761823 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.304527917 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.300432636 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.30164343 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.301545178 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.299950904 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.297305123 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.302687783 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.300432551 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.301874284 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.302085976 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.303355664 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.301239758 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.300559892 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.300211765 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.301343285 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.300672355 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.30151322 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.30065901 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.305712006 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.303090249 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.301139523 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.301444674 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.310557811 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.31849541 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.304379921 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.300743512 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.30166829 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.300601152 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.303656304 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.301460361 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.303805342 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.307762611 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.304345679 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.311229712 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.302822022 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.312277601 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.302092398 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.304452536 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.307813369 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.299491041 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.301556503 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.303030817 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.302247844 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.311721648 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.318260258 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.30285078 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.304740736 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.302492085 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.302862257 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.301715272 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.302361725 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.302021232 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.302240121 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.314246797 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.322835026 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.306002638 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.304790228 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.300189257 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.30337895 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.302276676 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.301614236 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.310093383 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.303259262 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.304728629 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.302426872 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.304778218 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.302309822 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.302498237 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.303283084 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.300668024 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.303211279 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.312583368 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.320513979 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.306843966 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.303518017 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.315389896 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.304897043 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.31335761 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.320241093 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.30553543 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.303753392 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.303801999 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.307076401 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.304390018 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.307696619 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.303687237 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.306017977 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.30672793 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.30486543 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.308725027 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.304137425 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.305420918 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.305279113 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.313564811 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.323654127 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.305934538 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.308049314 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.301665191 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.306501765 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.307668583 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.305574416 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.30555364 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.305373598 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.31064125 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.308513607 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.30375018 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.303871538 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.304334111 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.303279883 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.30289751 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.301588782 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.300701982 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.30057548 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.303450097 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.300964812 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.308078025 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.30081306 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.3014233 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.302212584 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.30070793 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.311800734 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.30029956 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.301696559 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.299625768 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.299754401 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.300202864 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.299078102 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.299118151 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.300912449 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.298346178 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.300386811 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.304518087 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.304231034 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.301209014 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.297219585 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.297291714 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.297879519 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.299176827 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.298448201 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.29743511 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.298340895 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.298260726 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.296832875 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.29826793 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.295778052 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.296728196 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.297058771 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.296749751 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.298022291 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.300253512 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.296594086 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.292825255 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.294833668 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.295549954 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.295161658 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.297766959 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.306532706 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.297646563 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.303117891 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.301843863 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.297418555 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.296809279 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.296985696 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.302046173 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.293067112 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.295266002 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.293205084 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.297339493 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.294939043 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.297114579 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.295140612 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.303235755 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.294431626 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.294719728 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.304557096 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.314546913 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.292915355 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.294188078 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.297063904 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.293223934 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.289695981 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.291904033 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.291291725 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.302202919 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.311274477 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.292744601 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.295409826 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.290102503 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.293206275 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.294955375 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.291982999 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.293242623 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.289306105 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.291751609 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.293764636 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.292340057 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.288795944 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.291500643 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.292668015 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.294029923 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.297021864 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.289276573 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.294510143 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.29263817 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.291917054 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.29101885 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.291560829 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.288569193 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.288639836 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.29269286 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.290172023 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.292360667 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.294571077 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.290368431 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.293094973 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.291313019 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.291111984 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.294302475 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.298768277 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.295859558 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.28744546 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.29036419 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.29085824 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.295777707 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.290572195 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.291852783 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.291786316 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.293706439 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.289805289 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.290270185 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.290186514 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.293545131 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.308546666 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.30875831 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.290360305 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.290427137 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.296157579 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.290247216 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.287461455 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.290539249 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.293716759 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.292236082 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.296044753 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.290263254 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.298616495 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.305510891 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.290490248 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.292925007 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.29292147 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.296317465 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.293458134 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.289696749 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.289724464 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.29414653 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.305862174 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.289306232 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.297544707 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.31783432 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.305353664 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.290440912 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.28963299 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.288839227 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.289217137 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.29317438 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.289537839 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.289094533 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.289723853 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.289628197 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.29099513 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.295696839 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.29149531 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.289686327 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.28869697 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.290234815 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.292924437 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.287475857 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.290365846 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.290311576 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.289791702 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.290514361 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.290455042 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.290776087 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.30381478 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.300317158 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.289619698 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.290208469 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.289020035 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.295171771 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.291902306 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.298644494 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.295206464 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.289724551 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.290192057 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.291793002 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.291121039 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.286386585 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.290898643 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.290037778 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.289247831 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.287003577 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.303249999 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.296564019 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.29813431 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.2901652 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.289085164 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.289149547 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.291357075 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.290110176 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.289918653 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.292385627 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.290551768 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.291258912 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.28875446 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.288705374 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.291021367 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.295132352 seconds)
  done (took 774.386426574 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.286398526 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.285770937 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.285617299 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.285806529 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.285896355 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286229478 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.28590355 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.285960145 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.286396571 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.286158245 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.286459975 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.286385854 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.286543726 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.286928008 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.286315029 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.286629632 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.286858177 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.285660617 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.286119343 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28652569 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.286255581 seconds)
  done (took 28.237114788 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.289182807 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.286747768 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.287070477 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.288982733 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.286192036 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.288630741 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.286641 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289390851 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.28893417 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28675677 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.289665485 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289285269 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.286393581 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.28717712 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28745715 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.289724711 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.289873507 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.287269799 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.289689675 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.287667134 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.289655855 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.286592391 seconds)
  done (took 29.565599904 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.28988141 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.291386161 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.290260499 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.287575166 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.290496392 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.287197634 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.290783845 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.290517325 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.290499601 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.292902425 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.290704859 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.292136952 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.295771486 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.294753586 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.294791848 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.290650825 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.435105736 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.29177078 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.291623889 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.291135085 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.288822151 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.29864927 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.289167334 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.289065503 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.290055825 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.292301105 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.291984083 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.291713486 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.291916876 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.293181771 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.295646206 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.292690723 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.291765631 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.295191487 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.292552507 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.293161826 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.295288374 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.292667241 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.289337635 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.292626687 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.302088485 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.309732982 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.293720894 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.301340585 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.292923231 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.292653961 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.29526834 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.300056163 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.290360177 seconds)
  done (took 64.725008634 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.293401069 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.292837662 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.290131241 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.292040816 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.292650509 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.292500665 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.292849747 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.292788478 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.290495734 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.289650368 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.293436407 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.29071149 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.290915685 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.293643805 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.293447915 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.291496624 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.290751745 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.29134361 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.292043687 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.2905212 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.291254575 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.294214594 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.293836792 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.290860334 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.293592357 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.291182103 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.291232448 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.293620493 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.29179861 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.29165787 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.293766674 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.294387754 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.294849188 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.291608275 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.291890294 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.294469362 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.294572306 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.292782397 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.294375646 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.291689084 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.294494486 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.294444817 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.293986647 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.294313356 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.291538911 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.292007154 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.290283789 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.290600047 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.290892839 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.294059674 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.292991898 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.291509912 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.29359998 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.291421559 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.291153656 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.291615859 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.288503902 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.288744637 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.291283907 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.289269559 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.291139259 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.289456155 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.287158366 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.28962228 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.28932775 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.287290238 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.287802806 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.289404074 seconds)
  done (took 89.074847527 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.288429311 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.289090576 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2891229 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.289227598 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.289481091 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.289753722 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.289972259 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.290006022 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.288932395 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.288496619 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.289638212 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.287900514 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.288195465 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.288733105 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.288974309 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.290517757 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.289171954 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.289119228 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.289090049 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28874388 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.28895914 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.289259077 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.288854874 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.289395769 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.289884258 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.289291754 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.289022695 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.289605484 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28974712 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.289747977 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.290185672 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.290613561 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.290078939 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.290175836 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.29139589 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.290193974 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.289742927 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289766252 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.29078213 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.289730249 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.290690513 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.290505789 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.289603498 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.29069982 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.290219497 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.289886744 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.290677347 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.291128622 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.290756068 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.291022998 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.290989509 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.290562439 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290626692 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.291542964 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.291653082 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.291828975 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.29175193 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.29083461 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291723038 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.293250201 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.292425495 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.291787617 seconds)
  done (took 81.21401186 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.291273943 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.291385974 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.287655514 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.288545304 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.291106452 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.288157559 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.290633234 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.290822973 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.290487997 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.291068667 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29079102 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.288568337 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288444823 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290399707 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.288658563 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288412784 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.28831724 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.290001825 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.291865619 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.289288337 seconds)
  done (took 27.024504358 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.289525432 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.29184276 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.289304715 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.289017457 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.292071512 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.289372604 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.29216189 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29202657 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288797609 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292353737 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.292350831 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.292265212 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289588132 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.289683187 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.292541646 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.289962217 seconds)
  done (took 21.882147855 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.2907666 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.292972672 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.292603635 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.292794578 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.290044956 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.29036386 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.293189865 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.290092336 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.290235076 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.292708377 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.293222093 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.292845334 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.292770671 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.293840892 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.290320532 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.293388063 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.291042122 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.290616194 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.293099131 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.293876992 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.291644845 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.290370206 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.29379939 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.293050239 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.290468 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.291369173 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.291404981 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.290682946 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.290915327 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.293437086 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.291069477 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.291287955 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.291715241 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.291552025 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.294619665 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.291474809 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.294118289 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.294501307 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.294049356 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.294423437 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.294184661 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.292446379 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.294365771 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.294123352 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.292094941 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.293859441 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.292076994 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.29229256 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.292695352 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.29267409 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.294825383 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.295733974 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.295392146 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.295532575 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.29590398 seconds)
  done (took 72.326184904 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.29566331 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.295413814 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.292648024 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.295354127 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.29544704 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.293142459 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.295087607 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.292676857 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.292931881 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.295387341 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.293770853 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.295767191 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.292999571 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.29652523 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.294734879 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.295992213 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.293115962 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.293831011 seconds)
  done (took 24.532657128 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.294662294 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.293977478 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.29611446 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.293540567 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.293202288 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.297129001 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.293861178 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.29630917 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296620619 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.294696381 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293801074 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.296529895 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295609599 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.296459914 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.294452074 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293699772 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.297073139 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.296652302 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.294464254 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294222195 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.297219359 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.296915099 seconds)
  done (took 29.729936405 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.297471053 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.296343037 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.3135361 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.337469149 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.323008568 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.295749741 seconds)
  done (took 9.096903459 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296031443 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297346982 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.29437797 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297728551 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297318712 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294923217 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294432854 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295225969 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297442485 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295654382 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29506911 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297294045 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29836017 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295473625 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29784683 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297743368 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296265411 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295079001 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297241308 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298404908 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296285699 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298127855 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296293362 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295860905 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295350406 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296364237 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297748602 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295698398 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296302545 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29799015 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29835536 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295263333 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297868934 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29670546 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299052721 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299047164 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29619501 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29913016 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299212105 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296404167 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.299030036 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299220928 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298488491 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296323804 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299480519 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296102086 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296438529 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296440676 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296619343 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299441177 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300178885 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296683717 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299389983 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29914293 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299846539 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300519379 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297411704 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296795743 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300309905 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297959745 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297083221 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300025725 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29770142 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297977505 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300464376 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297542203 seconds)
  done (took 86.8649732 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298619274 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.297979904 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297858674 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299320861 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298364296 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297855718 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297562178 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297626861 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298207747 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298021007 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300262518 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298370525 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298227517 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298102054 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297471693 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299073695 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298107364 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298557571 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298881615 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301047456 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299373338 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298644258 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298695837 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299264799 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299439678 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301508663 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298955093 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299075794 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300431424 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299003051 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299010862 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299397151 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299012309 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.299997901 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299798374 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299147857 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299909628 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29981405 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299839577 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302816229 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299638464 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302278801 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299459346 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300302913 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300226241 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29964403 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30018249 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299651389 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300117391 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299549927 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300618219 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300070922 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300483456 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299416416 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299982336 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299972687 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300155068 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299951843 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300229503 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303237941 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300653212 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300476598 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303460468 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300186537 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300327993 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300610821 seconds)
  done (took 87.01266415 seconds)
done (took 1804.967427894 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.331124247 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.350899993 seconds)
  done (took 13.921577619 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.46484132 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.418182973 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.30158533 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.333675587 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.303072428 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.300660353 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.306549435 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.302509678 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.303116469 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.302880774 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.302821791 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.490169476 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.357555318 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.303717368 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.303256435 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.396462767 seconds)
  done (took 42.733885253 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.30659269 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.308386749 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.337867615 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.307598653 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.308079487 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.347368336 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.373058819 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.309290273 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.468091005 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.353382233 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.673462682 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.310206377 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.308088876 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.567541175 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.33929181 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.347263254 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.56277362 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.672289634 seconds)
  done (took 26.44156073 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.716428673 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.319986591 seconds)
  done (took 9.278916532 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.320404718 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.307113828 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.331857494 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.329236312 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.310515629 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.318051739 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.315148226 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.316755429 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.337543691 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.32175431 seconds)
  done (took 64.452578963 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.327757661 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.308599892 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.309039666 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.307018944 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.299620384 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.299905648 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.306692313 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.299813578 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.555586491 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.426708037 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.327336052 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.314833612 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.307585125 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.310803317 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.305688943 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.343908584 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.435360198 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.305523825 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.305226297 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.313271745 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.30811888 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.390523837 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.347239666 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.306019179 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.424868335 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.568018988 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.312563529 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.31448064 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.445035286 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.305932317 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.307715892 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.308855389 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.310959109 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.881893428 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.742121489 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.318256876 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.332227722 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.317320832 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.305300017 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.44351053 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.310401592 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.314738057 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.302011147 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.713816963 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.45564832 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.414854577 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.455643885 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.31140335 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.310733357 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.368947714 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.31043717 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.311869703 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.338770177 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.045898742 seconds)
  done (took 108.911377001 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.338076655 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.79249087 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.471319068 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.320722411 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.804948684 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.74696366 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.302715612 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.562736727 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.328124371 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.764740727 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.578633464 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.643511803 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.30239916 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.303638926 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.304380722 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.302908317 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.557649964 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.595874881 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.304469505 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.309699268 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.354347397 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.803910905 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.534138169 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.478880426 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.343040656 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.740265184 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.530400717 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.643201935 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.308958718 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.303823219 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.583385313 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.308025969 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.305975027 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.305532316 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.574798646 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.633013035 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.609721676 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.304429929 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.322332071 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.303803973 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.3304214 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.737469713 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.62151139 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.544241073 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.672759953 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.755443196 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.304089564 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.304645672 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.308933789 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.512125995 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.550460006 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.788193796 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.534922687 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.318827176 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.651528214 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.304610534 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.352757354 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.768208627 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.63859235 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.639405353 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.314319541 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.306721582 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.305930574 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.834814222 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.309775853 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.624912446 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.424681533 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.305067299 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.62618734 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.628114768 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.638559688 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.768262843 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.347657191 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.317930631 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.381042891 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.802055765 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.586527294 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.76860028 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.315604443 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.3065471 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.612990999 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.308670679 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.58042987 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.847415649 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.782421974 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.358679589 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.327886166 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.306752363 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.767983165 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.766455704 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.553932584 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.67291875 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.585380844 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.379940547 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.306987794 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.306119648 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.350615491 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.543007829 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.320082226 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.670952624 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.767600492 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.077745037 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.353540406 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.836759589 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.545055942 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.319481931 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.309941612 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.30685074 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.527211659 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.379820061 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.328388111 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.306361159 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.769630494 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.176936754 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.439293156 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.019657832 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.587071183 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.309066915 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.788078584 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.308859526 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.77053383 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.361057987 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.833158866 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.676812173 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.365740993 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.532490151 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.673849021 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.321830985 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.786330639 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.83338204 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.532861543 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.779443784 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.046166059 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.308905715 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.816161384 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.323960104 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.349436966 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.491340026 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.330099339 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.585202696 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.330286695 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.79445499 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.346283542 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.58179611 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.344102695 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.801086114 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.36526633 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.590295222 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.324328097 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.441673487 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.326148135 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.309065875 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.507219789 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.659631242 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.310965872 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.88725509 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.311684168 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.47232119 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.837781965 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.347679692 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.593615722 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.309241826 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.315921397 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.618135911 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.349563217 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.065669634 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.309459685 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.584689637 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.310020048 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.759455502 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.310215441 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.837976358 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.532757716 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.327444351 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.312573357 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.11263483 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.310890384 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.369399479 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.484195935 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.507917154 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.316357477 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.742925329 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.310632279 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.548341734 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.32425689 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.314854735 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.664472223 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.393707708 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.311524968 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.341356434 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.312166549 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.311435386 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.756491892 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.35156865 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.032507629 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.462537312 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.791443272 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.622104455 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.790060398 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.371759897 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.328309205 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.832574663 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.355092846 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.593671436 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.312966947 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.350873925 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.769940303 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.31168905 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.756369456 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.819637668 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.358194734 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.577519584 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.312481544 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.657160207 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.313557679 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.557961925 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.637205726 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.312717152 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.313594816 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.535202048 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.554626595 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.529504268 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.329003388 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.313848246 seconds)
  done (took 844.276073698 seconds)
done (took 1111.255853497 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.313315304 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.312960657 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.303196214 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.313660617 seconds)
  done (took 26.49941033 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.32221422 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.319502848 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.32017435 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.319445215 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.321434381 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.320566619 seconds)
  done (took 9.179470942 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.352605184 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.314903774 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.314357827 seconds)
  done (took 19.239081955 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.531901325 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.508881579 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.671291508 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.339644857 seconds)
  done (took 10.308260229 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.321657376 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.321562206 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.321333174 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.322510268 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.322718988 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.324352791 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.321398924 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.323438858 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.324599883 seconds)
  done (took 13.158967374 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.956218491 seconds)
done (took 84.597667658 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.426805951 seconds)
    (2/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.512198376 seconds)
    (3/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.340867964 seconds)
    (4/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.123958168 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.856692511 seconds)
    (6/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.490059521 seconds)
    (7/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.010255727 seconds)
    (8/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.314647571 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.558890448 seconds)
    (10/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.107122579 seconds)
    (11/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.648624323 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.372759386 seconds)
    (13/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.492805521 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.343402139 seconds)
    (15/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.339793897 seconds)
    (16/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.792176329 seconds)
    (17/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.088175309 seconds)
    (18/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.400670377 seconds)
    (19/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.537859026 seconds)
    (20/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.107735907 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.412715921 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.181316186 seconds)
    (23/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.883337143 seconds)
    (24/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.415126706 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.390206553 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.642827384 seconds)
    (27/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.36979787 seconds)
    (28/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.32326375 seconds)
    (29/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.318776236 seconds)
    (30/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.343627237 seconds)
    (31/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.394143732 seconds)
    (32/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.602188843 seconds)
    (33/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.340434676 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.42054913 seconds)
    (35/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.319367145 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.663452749 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.397948009 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.9417378 seconds)
    (39/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.311409257 seconds)
    (40/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.340711911 seconds)
    (41/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.932066645 seconds)
    (42/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.333961225 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.426136601 seconds)
    (44/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.326618174 seconds)
    (45/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.577658399 seconds)
    (46/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.269682645 seconds)
    (47/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.913467358 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.811988317 seconds)
    (49/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.603405661 seconds)
    (50/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.39653416 seconds)
    (51/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.117287919 seconds)
    (52/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.660409435 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.338838165 seconds)
    (54/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.579986469 seconds)
    (55/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.857865951 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.376516448 seconds)
    (57/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.499468898 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.41497978 seconds)
    (59/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.343251466 seconds)
    (60/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.317259233 seconds)
    (61/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.354514165 seconds)
    (62/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.960029346 seconds)
    (63/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.317180388 seconds)
    (64/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.451135026 seconds)
    (65/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.405581805 seconds)
    (66/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.333452974 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.107187317 seconds)
    (68/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.750877699 seconds)
    (69/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.355522207 seconds)
    (70/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.051980153 seconds)
    (71/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.852850972 seconds)
    (72/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.405479195 seconds)
    (73/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.344679978 seconds)
    (74/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.388209188 seconds)
    (75/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.639694083 seconds)
    (76/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.404975649 seconds)
    (77/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.430445391 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.318792897 seconds)
    (79/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.66154847 seconds)
    (80/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.591023801 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.464307901 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.869502241 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.392428452 seconds)
    (84/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.65872925 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.353796969 seconds)
    (86/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.441751574 seconds)
    (87/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.806573739 seconds)
    (88/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.403771287 seconds)
    (89/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.585476494 seconds)
    (90/309) benchmarking ("sort", Float32, false)...
    done (took 5.325814701 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.717198574 seconds)
    (92/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.145313612 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.664243021 seconds)
    (94/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.036790419 seconds)
    (95/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.345436446 seconds)
    (96/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.318817657 seconds)
    (97/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.948729419 seconds)
    (98/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.320108712 seconds)
    (99/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.545780511 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.718496367 seconds)
    (101/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.516577757 seconds)
    (102/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.844282185 seconds)
    (103/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.962879965 seconds)
    (104/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.334737597 seconds)
    (105/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.346642298 seconds)
    (106/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.523716016 seconds)
    (107/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.791133776 seconds)
    (108/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.322103857 seconds)
    (109/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.336238766 seconds)
    (110/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.383731352 seconds)
    (111/309) benchmarking ("sort", Bool, false)...
    done (took 1.825857935 seconds)
    (112/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.344164825 seconds)
    (113/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.579167767 seconds)
    (114/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.502676859 seconds)
    (115/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.023260772 seconds)
    (116/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.600937488 seconds)
    (117/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.727928028 seconds)
    (118/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.546842951 seconds)
    (119/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.447033824 seconds)
    (120/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.784938219 seconds)
    (121/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.320679446 seconds)
    (122/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.429818053 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.132328371 seconds)
    (124/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.307274432 seconds)
    (125/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.42914877 seconds)
    (126/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.704505331 seconds)
    (127/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.38121706 seconds)
    (128/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.339223011 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.126925642 seconds)
    (130/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.33760068 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.348038978 seconds)
    (132/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.499474021 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.029353883 seconds)
    (134/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.348553425 seconds)
    (135/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.138588087 seconds)
    (136/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.909851473 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.731834293 seconds)
    (138/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.331161272 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.184335222 seconds)
    (140/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.403978202 seconds)
    (141/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.5996445 seconds)
    (142/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.9337627 seconds)
    (143/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.307932952 seconds)
    (144/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.178744363 seconds)
    (145/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.706017872 seconds)
    (146/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.348539499 seconds)
    (147/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.798446018 seconds)
    (148/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.344548619 seconds)
    (149/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.347509951 seconds)
    (150/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.366652727 seconds)
    (151/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.325002647 seconds)
    (152/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.71230234 seconds)
    (153/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.325155845 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.371375047 seconds)
    (155/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.47985214 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.309141567 seconds)
    (157/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.538329955 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.331880439 seconds)
    (159/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.843973312 seconds)
    (160/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.465314514 seconds)
    (161/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.323595261 seconds)
    (162/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.856360027 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.322137701 seconds)
    (164/309) benchmarking ("sort", Float64, false)...
    done (took 5.580946966 seconds)
    (165/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.358523798 seconds)
    (166/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.584355653 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.767472719 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.197701229 seconds)
    (169/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.799866034 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.325427705 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.444096685 seconds)
    (172/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.625597389 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.400454612 seconds)
    (174/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.592972326 seconds)
    (175/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.349139095 seconds)
    (176/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.349398032 seconds)
    (177/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.339898921 seconds)
    (178/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.022845049 seconds)
    (179/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.325121041 seconds)
    (180/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.325232207 seconds)
    (181/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.311444376 seconds)
    (182/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.345358886 seconds)
    (183/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.367824048 seconds)
    (184/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.439430678 seconds)
    (185/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.324909624 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.185964089 seconds)
    (187/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.351380961 seconds)
    (188/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.891555314 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.019092366 seconds)
    (190/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.676287699 seconds)
    (191/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.32413943 seconds)
    (192/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.584883641 seconds)
    (193/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.383006624 seconds)
    (194/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.321228411 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.631005825 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.875754343 seconds)
    (197/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.326692371 seconds)
    (198/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.501283838 seconds)
    (199/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.525408238 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.542034479 seconds)
    (201/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.311267942 seconds)
    (202/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.327912286 seconds)
    (203/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.612157113 seconds)
    (204/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.93827859 seconds)
    (205/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.532361424 seconds)
    (206/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.771948796 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.665408878 seconds)
    (208/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.334956071 seconds)
    (209/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.324559836 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.928251012 seconds)
    (211/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.348356797 seconds)
    (212/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.35196208 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.667942845 seconds)
    (214/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.693043663 seconds)
    (215/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.36660804 seconds)
    (216/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.919446642 seconds)
    (217/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.454037353 seconds)
    (218/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.351140249 seconds)
    (219/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.431914577 seconds)
    (220/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.745559923 seconds)
    (221/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.391384668 seconds)
    (222/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.450993729 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.637387035 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.326328529 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.73207628 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.172576955 seconds)
    (227/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.328357522 seconds)
    (228/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.338323424 seconds)
    (229/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.724445279 seconds)
    (230/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.422008205 seconds)
    (231/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.769552683 seconds)
    (232/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.341658394 seconds)
    (233/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.413476178 seconds)
    (234/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.625042552 seconds)
    (235/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.023716028 seconds)
    (236/309) benchmarking ("sort", Int8, false)...
    done (took 4.359490823 seconds)
    (237/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.618382949 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.326770375 seconds)
    (239/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.526572002 seconds)
    (240/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.635028902 seconds)
    (241/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.618033277 seconds)
    (242/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.612856814 seconds)
    (243/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.32935063 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.40617892 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.327023639 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.165687796 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.313425393 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.528014296 seconds)
    (249/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.345145781 seconds)
    (250/309) benchmarking ("sort", BigInt, false)...
    done (took 6.330148026 seconds)
    (251/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.367831146 seconds)
    (252/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.028488016 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.352865319 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.353357226 seconds)
    (255/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.412074659 seconds)
    (256/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.062794064 seconds)
    (257/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.897649659 seconds)
    (258/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.840356216 seconds)
    (259/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.720249311 seconds)
    (260/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.572905853 seconds)
    (261/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.41105925 seconds)
    (262/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.425505778 seconds)
    (263/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.079184753 seconds)
    (264/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.333710765 seconds)
    (265/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.684073649 seconds)
    (266/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.121460518 seconds)
    (267/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.358024917 seconds)
    (268/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.489183589 seconds)
    (269/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.386653779 seconds)
    (270/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.53723738 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.702033507 seconds)
    (272/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.341741907 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.38036081 seconds)
    (274/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.328843157 seconds)
    (275/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.392691867 seconds)
    (276/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.316046333 seconds)
    (277/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.634941246 seconds)
    (278/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.955792584 seconds)
    (279/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.345223837 seconds)
    (280/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.169088921 seconds)
    (281/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.331240313 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.413573974 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.409988695 seconds)
    (284/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.392245455 seconds)
    (285/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.648487706 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.441438887 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.47061837 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.68334052 seconds)
    (289/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.681968603 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.329093319 seconds)
    (291/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.674372755 seconds)
    (292/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.731663336 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.370477963 seconds)
    (294/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.325086183 seconds)
    (295/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.381812308 seconds)
    (296/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.504857069 seconds)
    (297/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.871555733 seconds)
    (298/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.062749283 seconds)
    (299/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.039255819 seconds)
    (300/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.913795321 seconds)
    (301/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.106344475 seconds)
    (302/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.452962825 seconds)
    (303/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.336056096 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.530041092 seconds)
    (305/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.313246313 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.36697331 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.15804654 seconds)
    (308/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.426677317 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.160351902 seconds)
  done (took 916.82696911 seconds)
done (took 918.086502371 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.358583971 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.353965327 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.336736275 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.358314869 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.449099357 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.365980732 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.347455557 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.338731411 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.385115462 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.38645475 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.335781313 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.364928085 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.338840695 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.337471768 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.33712342 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.351862269 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.281299046 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.339189316 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.354686614 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.346823856 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.354028918 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.337998786 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.38648864 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.365454633 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.341351042 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.340939014 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.341840774 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.357983178 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.450387565 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.341371119 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.340991248 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.350341936 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.294938012 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.33900099 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.33299484 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.358443481 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.350174874 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.349232915 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.342076525 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.370728398 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.654933813 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.339868691 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.339919966 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.339895493 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.339857122 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.342403917 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.340122869 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.345088213 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.353264793 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.353611838 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.668902365 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.35691511 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.343183361 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.340344004 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.349991686 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.339581974 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.342909959 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.356522616 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.359425503 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.355873171 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.290681663 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.347243521 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.341417017 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.357415889 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.348310233 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.704186696 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.33738955 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.346139155 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.671773378 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.346421646 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.686866812 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.350362136 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.341522398 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.355294494 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.372737922 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.301385707 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.337936272 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.339472747 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.349127809 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.340482169 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.349906529 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.354142204 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.345365684 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.341096187 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.355907995 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.370349759 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.351414945 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.342076107 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.351080825 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.361414615 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.349110516 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.352600818 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.344914829 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.337232173 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.351097212 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.345732755 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.345159244 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.345536927 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.347603815 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.352609885 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.660491044 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.358949989 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.339287228 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.339395808 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.341282897 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.35675064 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.662881905 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.344058594 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.364498189 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.390643125 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.343825663 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.294403934 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.348282655 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.358162905 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.351461594 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.345987283 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.33852356 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.293827228 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.678984538 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.359688572 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.34520993 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.34215689 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.359779709 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.344132262 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.339778445 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.292389137 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.345582792 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.356960882 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.464554196 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.354446038 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.375514515 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.342799448 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.346268977 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.372039669 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.359788325 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.375165479 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.347344636 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.359655271 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.360686228 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.340791824 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.355424161 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.354853834 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.344752863 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.348575204 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.338696873 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.376583564 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.357269896 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.356496935 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.365820072 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.466335277 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.342070257 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.283238992 seconds)
done (took 225.100839452 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.404946725 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.334565781 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.43925254 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.341311211 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.439436714 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.43816463 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.338831016 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.33944301 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.338107937 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.721988275 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.339507593 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.339574014 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.335572222 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.339284685 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.424868697 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.342074601 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.339423709 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.684040219 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.342837185 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.413778289 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.341504333 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.33958959 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.342306028 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.724402048 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.341053849 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.341123721 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.413856769 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.341425864 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.689203436 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.338604153 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.340158158 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.689199204 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.432875884 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.359677208 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.352252948 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.349610344 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.440371247 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.357885239 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.423942326 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.425536597 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.440659141 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.381842882 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.338347128 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.344159685 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.345465909 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.344693089 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.340827906 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.369959424 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.340220711 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.341538492 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.685694549 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.352793559 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.341310092 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.340766594 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.341399128 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.373752853 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.342248406 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.344732711 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.434344728 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.345053208 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.408078451 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.72696451 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.724783751 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.344579443 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.34033228 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.342732403 seconds)
  done (took 149.077381462 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.412370668 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.419233422 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.4536909 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.345759444 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.397043745 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.45701332 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.346320106 seconds)
  done (took 11.11034242 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.351241877 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.345351669 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.394412712 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.395255091 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.344820521 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.494895131 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.345158928 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.356493186 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.342376795 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.398009769 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.345404361 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.345518877 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.351461638 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.339507977 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.394144059 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.356918883 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.460807669 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.346690282 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.346005978 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.502885022 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.342863016 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.352519932 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.397689425 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.35772975 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.34640788 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.352808449 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.930622765 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.346328903 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.343178569 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.345869441 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.342934349 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.385719712 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.34622801 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.338888446 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.343597437 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.463026441 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.346595989 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.343575262 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.346723553 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.343904793 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.346641028 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.346215557 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.346826008 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.344532322 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.34722069 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.370935896 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.346678969 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.347264263 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.346294718 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.348102849 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.3979678 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.34810567 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.345109397 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.344473098 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.403366495 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.354059373 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.347893692 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.345633525 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.34826164 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.34505141 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.504798067 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.39627954 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.347961916 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.396255135 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.347917035 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.346927576 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.34783471 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.348162717 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.403252088 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.347439705 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.39628867 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.345498616 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.508127833 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.372146969 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.349461617 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.35137555 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.351575575 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.348764994 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.346780038 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.355106827 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.346249542 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.349566695 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.354860876 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.345332974 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.345990219 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.456093926 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.458560907 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.346890669 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.362000221 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.356287209 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.346360136 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.40242451 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.348864443 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.345949079 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.402018203 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.464615811 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.403032794 seconds)
  done (took 154.575228137 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.35462838 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.358290472 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.350693606 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.36564981 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.350088609 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.349550911 seconds)
  done (took 9.412993452 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.352143104 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.349853888 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.349653149 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.350403304 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.350458826 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.350827448 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.351259761 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.351436116 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.353256988 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.34917641 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.350253641 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.351111705 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.351183774 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.350954196 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.351096041 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.349867035 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.350653436 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.347372779 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.350689223 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.350840126 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.445879544 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.350622491 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.351223063 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.351749798 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.353951778 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.350722745 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.358555942 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.350839054 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.350486581 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.35852054 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.353998598 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.351697104 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.352660701 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.356865934 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.355105053 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.353372241 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.353958437 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.766187976 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.349103211 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.351659022 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.352473796 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.351686264 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.351992742 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.35332369 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.353340721 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.355912247 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.35653427 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.359770021 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.35327954 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.354094843 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.353485822 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.351714343 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.35260431 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.353461867 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.356568707 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.357867767 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.356130205 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.353309428 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.353222998 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.354106729 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.353093874 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.352731567 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.354790742 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.356413438 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.359154988 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.353610644 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.354361782 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.356749524 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.35344438 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.353182082 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.354733665 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.350113912 seconds)
  done (took 100.204162014 seconds)
done (took 425.656137139 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.818374145 seconds)
  done (took 8.105559673 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.401504528 seconds)
  done (took 7.690198486 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.147238134 seconds)
  done (took 20.43824439 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.382111667 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.406776519 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.350742422 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.351152824 seconds)
  done (took 26.779484346 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.51225702 seconds)
  done (took 7.80025947 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.345644689 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.345604086 seconds)
  done (took 13.980757891 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.848788525 seconds)
  done (took 8.136971888 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.365048213 seconds)
  done (took 7.6536181 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.361667983 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.364248157 seconds)
  done (took 14.267005548 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.347646356 seconds)
  done (took 7.637093104 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.201921504 seconds)
  done (took 8.490642996 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.356722518 seconds)
  done (took 7.646327429 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.389279739 seconds)
  done (took 7.677611327 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.80390852 seconds)
  done (took 9.092797904 seconds)
done (took 156.6851865 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.346638524 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.348091039 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.349015084 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.347953287 seconds)
  done (took 26.68021335 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.387751589 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.387699068 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.388877328 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.397997521 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.390232277 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.389032952 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.379633045 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.379778824 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.398423879 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.391029998 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.389267608 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.390434242 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.38762949 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.380482349 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.390868261 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.389570145 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.399111777 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.389538423 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.38050448 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.392008616 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.355733634 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.399059542 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.391446983 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.356117633 seconds)
  done (took 34.571886105 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.550491202 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.426466934 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.50954954 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.40769325 seconds)
  done (took 7.184397766 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.407688557 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.408467213 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.41966629 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.458713315 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.492624417 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.417872864 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.381832907 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.376672461 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.363205756 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.40846816 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.484631932 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.424713652 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.522380468 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.355205572 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.543299602 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.355593211 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.356182498 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.40788289 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.459627192 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.472292893 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.356371898 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.407859331 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.411443681 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.425063087 seconds)
  done (took 35.408051079 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.355564781 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.363828844 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.36149981 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.355523327 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.356105516 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.355791525 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.36293295 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.356931618 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.37728416 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.35698125 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.35448018 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.356158919 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.355184274 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.356362661 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.355267878 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.368370973 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.369859589 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.356776725 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.359430625 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.362411414 seconds)
  done (took 28.48880454 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.350878723 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.20600645 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.703590924 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.607305235 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.351451994 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.352580501 seconds)
  done (took 27.864231996 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.423596366 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.545460601 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.359642795 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.691441617 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.765979723 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.359352346 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.358404274 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.579753653 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.868831067 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.870959498 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.412496919 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.409583322 seconds)
  done (took 19.9387893 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.360255128 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.353560732 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.353366884 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.369488581 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.410530516 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.362514619 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.365653707 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.351627425 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.412072708 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.415668354 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.362125545 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.412304871 seconds)
  done (took 37.823430667 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440344664 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.397167933 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.204720139 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.161326578 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.729214897 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.564442418 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.130610421 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.808781219 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.357277199 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627855627 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36634126 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446491576 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.60967237 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353176244 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.356342252 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.349332525 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.583273989 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832370646 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35567991 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.204313065 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381432663 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.357147679 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.37191525 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.384025055 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.564568403 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.487379129 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.614826273 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.35442977 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.621984166 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.368543832 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365017686 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.355022609 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62874297 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004922009 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449102143 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365205557 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.125700033 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.065285884 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.354579269 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.278388091 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.150319401 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.357544501 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365759995 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354593755 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.289649891 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.356933759 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.819584799 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.359981646 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.066681128 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.35463828 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.366145038 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450079822 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.359566168 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.171100285 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.441867065 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.356060864 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.353071713 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363137599 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929907077 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.725100431 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371189218 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.291950894 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.461269173 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.232657366 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001353699 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.45707008 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.360237924 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.360894711 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.290296436 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.264187297 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.376062368 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.685705158 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.378517787 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.006330533 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06583573 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.357179863 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.303842044 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893275474 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36315466 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.292602437 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.584874771 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35619491 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.293260104 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.30126561 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.291848601 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.075773573 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365865991 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.698143219 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.36561284 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.812492426 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.367816844 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374577814 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380903244 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.581521834 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.241511654 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356976814 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.155427639 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509064019 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379848312 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.817395003 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292160382 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.361612811 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613944841 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.568727731 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36952452 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.368652548 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.57161893 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366256718 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.37630858 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.359409066 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.370976017 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.950926493 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.367999798 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.710065627 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377557302 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.358086366 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066894008 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374178534 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.462032525 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.359021031 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.600494566 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.095382255 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360360901 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44072929 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.368434984 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.358899089 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.307611975 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.876552551 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.360166539 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.360490659 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.367553575 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.370947106 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.360485869 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308889458 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.36562344 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361743935 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.364021733 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.582952828 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366691496 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637020632 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.293820868 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.689093408 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.452210628 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.583667775 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.534924265 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.360077389 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.620154846 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360445935 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.367567736 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.373707911 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379308455 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459122321 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381714545 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.359470923 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.619391839 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.364719617 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.365273147 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.347855686 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.365341621 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360356892 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.366897806 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.266435503 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953037574 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336106396 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.366002631 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.250853731 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.374518379 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42551633 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.366719595 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.371219713 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.069596939 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.244006897 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.365133464 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.358479354 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.586236748 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.371497947 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.235063144 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441802885 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.570664668 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.9562925 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.373622647 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.295806505 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.073380945 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.054457545 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361709852 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.297132164 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.362753169 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371465587 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.373566612 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.590315498 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.958103286 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363135913 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.246652946 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.371344384 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.373822654 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.367845665 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363194803 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.071408296 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.759934729 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380625435 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.376089204 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506552237 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.378086679 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.297100659 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.366930374 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.367725056 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.363216138 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.363476432 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395820529 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.239658633 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.851214261 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.624740427 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.131353732 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.373934575 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.375485361 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.395787365 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.360189255 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.198937849 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3909847 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.385956855 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373482815 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.374594361 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.32994743 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.038380173 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935457173 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092458179 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908083756 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353038764 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.37023105 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.366801937 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.82659391 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298729824 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.929591027 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.545529023 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.826906116 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309255753 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.576050633 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.539671183 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.095049458 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.375230805 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.592232935 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351624392 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.20689164 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395802319 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.576173739 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400057955 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.365177961 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.312478248 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.651257603 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632937944 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.208666544 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.44399532 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.825372041 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.209253748 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.386779397 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.364244966 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.653865432 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.537926855 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.082732368 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.538361025 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.366786086 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.377361789 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.851970118 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.371163766 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.592280129 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998269155 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.365377562 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.594540487 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.302308593 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.376329413 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.377077884 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.368130173 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.57035541 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.364175039 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.620361169 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.377111264 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300480113 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36630688 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914114889 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.222648766 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.373146955 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365943014 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082704038 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382531251 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.640834193 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.382258325 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.060905157 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372272954 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.301469032 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.302665548 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.060143785 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.371755339 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344706599 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852980276 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.458716412 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.440325195 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386915037 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419364024 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.623473062 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.381988053 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.963998084 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.595085805 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.238418401 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389420165 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.468838847 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.278587787 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.374551429 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.368142049 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.604401231 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.274652767 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.593017355 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.242455144 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.279902291 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.368064248 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.579995018 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.368193652 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.376508721 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.60755234 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.078361121 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.380470322 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.083152768 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392979143 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.381554255 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.286997932 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.475697239 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.376657521 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447722002 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.379013225 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.380177737 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.37951805 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.539114175 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377573006 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37097854 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.383042333 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462907963 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.749466476 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.069508287 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.37351545 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970413378 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102866263 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.97198963 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.38210363 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.369497131 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370389118 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30494146 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519392412 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.595762476 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64429401 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50135698 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.515631979 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392066257 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.25858721 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391864021 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585686444 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646339421 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.265334634 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371864454 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.385369102 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.370191129 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.381758289 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.586029357 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857289942 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931893661 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492398424 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.380320516 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.834142899 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645413901 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.370991893 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371625472 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.960834736 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.392802273 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.668201096 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.376745668 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380605928 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521547079 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.381439797 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019187544 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.382724069 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.530989061 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.145832849 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.350758979 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.630867631 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.801637078 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.384032953 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.976539793 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.104306202 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.635192284 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439613865 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.382069875 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.474071761 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518891302 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.369360696 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.372474245 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371862248 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.589569635 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.083582907 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.382039827 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.974286112 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.635241537 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.369207894 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.375496811 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395106066 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.383067639 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.59651993 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.05724102 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.596378611 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.38249636 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.378303012 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.19161828 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.973451054 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384598391 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307063099 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.377032942 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.607754159 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.608313234 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.393220116 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.825685273 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.084449225 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922721291 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.345711249 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394242577 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376165076 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.108478689 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.972271713 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.070261186 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855742439 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.939659598 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372396512 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663442952 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.378163943 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.384020737 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65061201 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.377135492 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.373553246 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386519006 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.968735307 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.10720824 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.388888204 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.279152419 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.312480826 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.716517899 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.087242698 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3096164 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383027385 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.558907338 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.37525031 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502547887 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.38560479 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.373870381 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381538118 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.108969287 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65061299 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.380330345 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.363523201 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.262019635 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.379119081 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383126871 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644182558 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374557404 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.049991698 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.726141441 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.631126562 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.374068704 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.361857153 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.378669776 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374357372 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.362824726 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.571372892 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.601106985 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924119565 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.382894027 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.386839715 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.379209494 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.59109895 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.587731015 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.383363122 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.389727008 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383119543 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392829148 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.283377384 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.876874947 seconds)
  done (took 1605.491770816 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.410665066 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.392108171 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.384968172 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.426747609 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.396988914 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.399923766 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.459516418 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.384104009 seconds)
  done (took 52.571467631 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.382244059 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.608554287 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.404856608 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.37588635 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.388217829 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.381218552 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.795809523 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.380675383 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.386724335 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.386812357 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.380805097 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.380863739 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.992081539 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.386874295 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.378612217 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.377248213 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.386849197 seconds)
  done (took 66.091463551 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.377640393 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.734293646 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.45945539 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.394481463 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.183896183 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.389867428 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.773556335 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.439338177 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.384021715 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.535335101 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.019005141 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.422136643 seconds)
  done (took 84.432554974 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.385601962 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.385499076 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.384435448 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.385206173 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.384460085 seconds)
  done (took 8.244147838 seconds)
done (took 2036.081683939 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.680852339 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.060592175 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.000128386 seconds)
  done (took 5.379237688 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.525469729 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.574715738 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.69760761 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.701735302 seconds)
  done (took 7.817250215 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.662232303 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.763905256 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.583830858 seconds)
  done (took 6.327783227 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.712461395 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.3897365 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.469524393 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.377525158 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.378369607 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.377882983 seconds)
  done (took 20.45333921 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.382240426 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.383797094 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.381834329 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.385059006 seconds)
  done (took 6.851056315 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.363742142 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.122545352 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.364449697 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.37773722 seconds)
  done (took 18.54730102 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.12900178 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.141463809 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.124772587 seconds)
  done (took 7.714560399 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.387989636 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.220946663 seconds)
  done (took 9.928201896 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.697589155 seconds)
  done (took 3.016623473 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.513760751 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.646459028 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.455202252 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.319961974 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.471628918 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.900591391 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.883865387 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.496988 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.305428015 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.37741341 seconds)
  done (took 27.690130712 seconds)
done (took 127.297641274 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.994399852 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.620445709 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.580295001 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.963257425 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.598062006 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.580178665 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.597015277 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.931463301 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.472778818 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.46780492 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.96935867 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.598436348 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.543999128 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.621780705 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.545452618 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.621171573 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.600316874 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.029033505 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.652272728 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.845567602 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.597204491 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.602455704 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.793749339 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.654117173 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.604775574 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.524479962 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.178354987 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.616613711 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.816797458 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.193326766 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.518990163 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.013203789 seconds)
  done (took 192.268216722 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.374297543 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.374680109 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.389013743 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.375660739 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.374837314 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.376338918 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.374512456 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.375528712 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.375249509 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.3798208 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.378148439 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.37419477 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.376686423 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.388371089 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.394231055 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.382781088 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.374850745 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.3887501 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.376528077 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.374789609 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.375390718 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.37573763 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.380766494 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.375379804 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.375954318 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.377690514 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.382590465 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.375426624 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.375646563 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.389292802 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.375894323 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.378907643 seconds)
  done (took 205.435493239 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.375847839 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.37675761 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.393450009 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.376356945 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.376334588 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.390198942 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.376992087 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.376052876 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.399675226 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.380409197 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.375403597 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.387720049 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.37914554 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.382716105 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.376393432 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.376931809 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.377206075 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.391448128 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.377073439 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.377268415 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.378223802 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.380254842 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.376613257 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.400227582 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.377203187 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.394012265 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.376554832 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.388056752 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.376139175 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.380337669 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.37934822 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.37928159 seconds)
  done (took 205.528179743 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.57189753 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.384859083 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.385891017 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.32216287 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.384754699 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.384229113 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.379827027 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.581440089 seconds)
  done (took 14.713451775 seconds)
done (took 619.264666319 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.591079579 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.323647678 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.575673961 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.406212307 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.101613695 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.407094142 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.406446779 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.567200991 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.879434473 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.550462937 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.607729314 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.404855122 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.752714419 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.404512146 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.642979125 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.501986048 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.212742343 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.322854847 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.705038925 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.887322489 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.651881274 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.897651617 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.567250286 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.91517711 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.754576971 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.918929101 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.087104171 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.218112264 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.404678967 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.707422372 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.929624861 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.30153979 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.459957904 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.442015768 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.499629365 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.479098394 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.309432335 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.44210083 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.581111901 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.662668746 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.896774485 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.689469317 seconds)
  done (took 94.388074918 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.376924928 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.376386097 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.375737158 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.376795771 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.377551512 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.375986217 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.376463884 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.375345197 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.376557661 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.3772899 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.375706568 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.377675075 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.375587225 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.377406861 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.376740375 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.376243202 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.377613535 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.378666313 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.375838018 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.375925191 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.377909928 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.376093964 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.376611222 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.37577655 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.377032334 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.377182502 seconds)
  done (took 37.116282473 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.39176679 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.614584872 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.781581933 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.395124778 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.389609891 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.393088864 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.462220833 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.390621377 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.393074706 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.392556328 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.533618541 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.39189377 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.419067712 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.790877802 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.392740656 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.390813225 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.390684694 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.391196597 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.622003863 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.400260343 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.481384678 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.391437167 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.463753113 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.402185813 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.410240046 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.392018542 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.394963648 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.935055296 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.393959132 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.535444086 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.12736489 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.463138433 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.89955763 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.795754196 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.129826975 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.394955915 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.391941036 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.540990452 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.394575681 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.393506778 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.464115812 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.39277862 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.793613065 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.994008741 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.408697893 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.392822575 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.957737288 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.539147935 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.621346099 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.401639065 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.812919184 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.395694246 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.393661658 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.39365189 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.621015938 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.399185898 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.39203589 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.806353971 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.397101806 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.46464096 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.39370308 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.393087658 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.630129433 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.39383391 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.619286278 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.39563793 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.401608978 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.394093993 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.793991804 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.396262312 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.010752832 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.409001939 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.394286398 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.537192759 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.619720151 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.987093123 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.396836149 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.635383658 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.900747634 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.465189595 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.398730927 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.9266601 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.468343948 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.398784253 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.396693304 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.396214969 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.393863129 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.438820274 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.464659409 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.951399851 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.005687438 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.830657363 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.468042116 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.408341888 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.395784879 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.808949655 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.395049402 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.396298439 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.789743034 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.020645552 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.411157306 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.403869741 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.999855333 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.412802637 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.468403749 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.402697465 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.800962632 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.399932832 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.44011893 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.396788005 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.403288176 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.400714148 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.46937834 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.400975695 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.396777814 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.988375441 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.561595731 seconds)
  done (took 181.70786002 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.394449441 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.390417478 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.394269296 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.390447789 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.389198116 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.396363813 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.389140217 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.389401557 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.396267486 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.389347587 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.38997782 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.392378825 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.391484011 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.401002941 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.399975275 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.397875792 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.004475729 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.3913517 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.389871873 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.390825964 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.171946661 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.394512798 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.390532442 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.390485858 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.393839885 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.39731993 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.396287307 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.392531061 seconds)
  done (took 153.72749309 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.397389979 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.91731817 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.39990095 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.520391923 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.41768859 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.395338495 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.519156666 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.4515972 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.400242044 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.395201196 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.395823048 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.677229671 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.400154677 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.874721943 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.5730514 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.523287174 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.879624129 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.401142386 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.396119612 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.39663306 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.521251677 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.405963917 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.678155694 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.920936767 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.399931145 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.921395651 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.387580603 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.399251857 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.398255054 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.923010992 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.397412423 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.678452065 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.470459175 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.453970099 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.922623817 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.879818493 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.879725621 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.535831078 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.399602397 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.397153238 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.397285761 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.386937624 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.923591483 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.40073046 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.399517175 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.918904951 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.414722856 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.400656787 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.410260738 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.397934085 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.454742138 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.455675143 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.683153037 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.932001679 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.471148167 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.428131501 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.52264176 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.763170145 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.401803795 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.88518939 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.388837495 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.929977147 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.402871382 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.387897225 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.400152709 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.404531175 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.538487177 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.523722821 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.886862043 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.40370863 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.88545391 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.541545232 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.398902262 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.399018356 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.401796031 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.931550602 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.883651685 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.539713583 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.525738996 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.581671903 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.391351478 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.400938098 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.389392572 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.473608352 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.400370282 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.935759005 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.887909148 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.404557705 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.403375488 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.402864343 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.40310208 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.563342117 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.938456323 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.475779634 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.877983414 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.699730105 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.686292503 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.403016178 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.456539322 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.401569437 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.687199286 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.404075503 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.455016259 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.824730794 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.686295089 seconds)
  done (took 165.09584208 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.625596863 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.514294422 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.485814981 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.507831998 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.916970577 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.972744077 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.452515607 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.471143989 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.489615824 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.514378385 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.026902853 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.489990167 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.57592195 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.472342328 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.066484445 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.46308953 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.488382687 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.509465843 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.505012382 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.416333769 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.981863007 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.676665734 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.544368937 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.277626225 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.457298396 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.113836628 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.136056402 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.899973449 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.558775961 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.483844983 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.900746651 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.519666755 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.085040928 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.00322164 seconds)
  done (took 64.941101969 seconds)
done (took 698.296075942 seconds)
SAVING RESULT...
DONE!
