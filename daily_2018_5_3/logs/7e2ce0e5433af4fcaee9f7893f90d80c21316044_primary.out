cset: moving following pidspec: 13398
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.396176321 seconds)
loading group "string"... done (took 0.500785979 seconds)
loading group "linalg"... done (took 8.717151583 seconds)
loading group "parallel"... done (took 0.172820269 seconds)
loading group "find"... done (took 1.25522623 seconds)
loading group "tuple"... done (took 1.843176033 seconds)
loading group "dates"... done (took 1.325167908 seconds)
loading group "micro"... done (took 0.191251472 seconds)
loading group "io"... done (took 0.496917536 seconds)
loading group "scalar"... done (took 50.128005462 seconds)
loading group "sparse"... done (took 13.73248754 seconds)
loading group "broadcast"... done (took 1.18913442 seconds)
loading group "union"... done (took 10.133818673 seconds)
loading group "simd"... done (took 3.026090975 seconds)
loading group "random"... done (took 11.487125509 seconds)
loading group "problem"... done (took 2.213741416 seconds)
loading group "array"... done (took 23.931189634 seconds)
loading group "misc"... done (took 1.103965783 seconds)
loading group "sort"... done (took 3.716234199 seconds)
loading group "collection"... done (took 19.192551358 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.608135819 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.188171421 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.202810279 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.277275555 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.2361322 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.165538288 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143156336 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.24065826 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.663333806 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.205477804 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137567445 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.503892215 seconds)
done (took 6.402001652 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.25469862 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.180158971 seconds)
    (2/2) benchmarking "String"...
    done (took 0.166457085 seconds)
  done (took 1.119907243 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.0760513 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.158925606 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107838237 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093664167 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.090799766 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108653558 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.091680576 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107861431 seconds)
  done (took 1.533688476 seconds)
done (took 3.759977562 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.505687185 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.8881124 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.515915893 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.144205672 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.310987559 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.313986897 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.313243517 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.202420876 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.107153791 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.088293597 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174905603 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.427439116 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.417276139 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.992890271 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.088144099 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093277441 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.134692331 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.797619694 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078524831 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.11212261 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.493048047 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.183101387 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.098460612 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.121705633 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185432503 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134045824 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.16144673 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103652703 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.675400598 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.13301505 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.18121973 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.09820548 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.158218769 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.184557565 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.191594644 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.110792097 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.686262543 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.199014784 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.087452229 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.099655215 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.670493623 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.116516506 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.185467268 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.102671961 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.086909665 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.184808908 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.091198492 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.076766429 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.109042924 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.08424426 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.161924659 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.441901816 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106995729 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.170801573 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.09296822 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.691162907 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096126154 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.276806181 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126245564 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.090509844 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.089802519 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.085535548 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.159980398 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.09287846 seconds)
  done (took 20.199306029 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.146588754 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.163776874 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076284876 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.155481164 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.12466512 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.078331839 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.100043652 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078347687 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.106505907 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.191948272 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.135870469 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.151678625 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.090352991 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.090246646 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.129450035 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247428041 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108841415 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120424716 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088673775 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.08893353 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138375892 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096199879 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.089555133 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.107199619 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170048691 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20728285 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111367711 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124787049 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091415447 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.094577571 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141194834 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14499651 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092343263 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088151248 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.168782327 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120887938 seconds)
  done (took 5.25492279 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.199973845 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120855341 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.207721642 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.156426546 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146060734 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.164763037 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127302484 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.270504743 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.189966838 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178409388 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114401293 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.121156946 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07875719 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080310561 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077938942 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.440895769 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.147848631 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.160480653 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.132231162 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100065419 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081511669 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.381347765 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084869573 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.077730649 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097059961 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065477084 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.193022401 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082952985 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.108967255 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.083309035 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081639464 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134414363 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.194774828 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.184949981 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082256696 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.141872161 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.11958395 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099698778 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078164524 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.224742384 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086940042 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076985246 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.132664821 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115414298 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.129487 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.093969193 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08510731 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.219821378 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.078474018 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114541271 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.068255741 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.193618762 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.122746988 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.075350513 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.289129091 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.118123139 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080085765 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078015624 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.819163126 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.113860891 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.079013492 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097673455 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082708694 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077984695 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.430316658 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099868308 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.500731106 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085312375 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.155154243 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.079812206 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097524302 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08666357 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085449504 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117846377 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080489387 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078037242 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077913754 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.09812711 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080460647 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.129284178 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085549569 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079535335 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159754075 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.087816409 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095506177 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.118254371 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112214513 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.100879051 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.081753855 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128080501 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082492918 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.078844682 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.165814409 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.082307323 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.078268442 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.131763936 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096638063 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129055358 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.08026708 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.264808451 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083890598 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122570597 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101241677 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126146477 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.099142696 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078735491 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100464257 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079195825 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078277449 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16185055 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082728274 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081658981 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080802594 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.114096103 seconds)
  done (took 28.095669001 seconds)
done (took 54.322178592 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.432357034 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.0838813 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079423471 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.099767927 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080403284 seconds)
  done (took 1.629306809 seconds)
done (took 2.456464759 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.319589635 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.188077179 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101467547 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.185586655 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084783265 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.193153765 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.177378852 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094255167 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.202323886 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.08285145 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.184479925 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083198527 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104624436 seconds)
  done (took 2.855820975 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105585507 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110521522 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101619144 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.119610367 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084855107 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10024592 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118779514 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110471154 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099061406 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112391658 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085185948 seconds)
  done (took 1.971290881 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101950283 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106088686 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098726882 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115898518 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083728477 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096169293 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115673485 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107695111 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097791736 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112169998 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084833043 seconds)
  done (took 1.947534961 seconds)
done (took 7.597485085 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.087859275 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.534178031 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.147104098 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.210716259 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.350075911 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.238401866 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.573994934 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.173435265 seconds)
  done (took 14.291923801 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.167217845 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.112573474 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.09481925 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.092443897 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.090136608 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.111328639 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.089885517 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.088773336 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.112367749 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.094950056 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.088447382 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.107039076 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095523732 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.093662794 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.093210965 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.110568485 seconds)
  done (took 2.528311419 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.143914046 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.141301755 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.097473422 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.097150561 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.11332613 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.098284916 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099757645 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.116829237 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.09460599 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.093916905 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.100659479 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.115197486 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097573336 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.090908843 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.115042826 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.116398552 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.092587608 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.116308287 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.115830279 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.117051261 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099572108 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095240811 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.113588226 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.097831239 seconds)
  done (took 3.495493394 seconds)
done (took 21.142840222 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.147455122 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100752179 seconds)
  done (took 1.080111057 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.14525606 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.15948914 seconds)
  done (took 1.138376203 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.113790805 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.089320179 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137180761 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.102109924 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.089868369 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.107488797 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.114964668 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.106513438 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.091150529 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091005735 seconds)
  done (took 1.881478617 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.096895713 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094279411 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.121581547 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.137258335 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.11535457 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.092809774 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.093567351 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.09162393 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.11302887 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.09000829 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.093506274 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.125554248 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.094389021 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.126407277 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095148317 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.095409748 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.117306982 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.093775944 seconds)
  done (took 2.727290306 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.092072888 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09173228 seconds)
  done (took 1.026089471 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.09770693 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090113616 seconds)
    (3/7) benchmarking "month"...
    done (took 0.091252604 seconds)
    (4/7) benchmarking "year"...
    done (took 0.109874044 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.090871334 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.08856255 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.107260103 seconds)
  done (took 1.517111995 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.489150567 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.261238956 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.35523115 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.10678524 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.145322531 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.468128248 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.14467852 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.103218211 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102070681 seconds)
  done (took 3.052799306 seconds)
done (took 13.25928489 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.094519316 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.222016831 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.629282632 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.113289621 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.08994074 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.161896903 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.285754434 seconds)
done (took 2.441714017 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.340438385 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.143277299 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.08220104 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.090141233 seconds)
  done (took 1.497483727 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.084067272 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100607398 seconds)
  done (took 1.032884256 seconds)
done (took 3.379144366 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.121985686 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086589992 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.106136864 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.088534621 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.089818394 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.086917692 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.108302207 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.089002568 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.086804502 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.086819977 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.108714891 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.088217189 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.087379535 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104688381 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088431108 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087888736 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085811631 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.105817543 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.088294238 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08639675 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104441092 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088693133 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.088452255 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.087168045 seconds)
  done (took 3.137380329 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.108828729 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091697693 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.110419366 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.093315545 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.091636803 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.110332441 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.092330943 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.089837607 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.10930005 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.090389997 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092800859 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.110368421 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.091971375 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.092223148 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088838347 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.110358552 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.094336365 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088861185 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108032114 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.092418816 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.090909645 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108152534 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.094428536 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092495366 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.112387153 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093232787 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.090511474 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.108679529 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093954169 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092954081 seconds)
  done (took 3.788597032 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.10076278 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.085000902 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088781064 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.115067754 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.085731932 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.088263747 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.103891984 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.086808649 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.089350402 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.087341291 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.109907313 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.088934103 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.084336168 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.107047847 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.090249995 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.091129536 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.095497006 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.106497428 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.085628017 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.088918622 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.109463055 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.087436542 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.088318163 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.087592698 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.106914308 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.085613491 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089102704 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.105653468 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090218344 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.087616358 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.090742907 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.110048463 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.08833553 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.097336335 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.110207619 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089334377 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.092599349 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.104828181 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.09114604 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086200913 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.085313561 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.106641558 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.086139626 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.093827293 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.10659162 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.089821352 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.085788166 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.090085781 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.107717173 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.091499058 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.087035257 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.103938236 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.092207682 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.088938061 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.091554661 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.104325852 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090034839 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.085366216 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.108462056 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089742973 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.086056126 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.085329209 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.112200009 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091231558 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.102346069 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.113522349 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.087818747 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.089459623 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.108020317 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095325171 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.090699241 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.116302247 seconds)
  done (took 7.69798402 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.105159291 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098132923 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.089202804 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.108622093 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089435398 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088512828 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111781988 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089781857 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089334035 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113698534 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09039402 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.089542783 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090704329 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109553669 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090041561 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089588759 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114130226 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090183699 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090031 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108200413 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090737858 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093017061 seconds)
  done (took 2.985575856 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.239680523 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097155144 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.134744379 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.121281669 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.106784938 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.119507566 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.09296706 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09397625 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111653729 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099836693 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097687986 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111840686 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107061573 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096066116 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11690145 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099295493 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114289447 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100543531 seconds)
  done (took 2.919727769 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.107302536 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.090867933 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.128552623 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092839013 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09059312 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.090156395 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.115519417 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110201194 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.110861647 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092562928 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.097278087 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093256075 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.110372208 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092058497 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09070237 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110079467 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092755027 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091032328 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116128236 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097491132 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095239397 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116658176 seconds)
  done (took 3.092075765 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.1087086 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09138677 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.126686499 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.094411703 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.089521039 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.089665999 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.115130968 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.091370656 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.096412504 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.110474779 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091739936 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.090012973 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.123701562 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093180087 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.09588668 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11063185 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092275212 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091234534 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109794929 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092594432 seconds)
  done (took 2.865442743 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.1757418 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124455737 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108117702 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113769453 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125855747 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108041548 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112682824 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.12566332 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107716655 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13727024 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108747831 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107258635 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133859532 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111487346 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107133172 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13352054 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113995104 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132760266 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107121308 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105576032 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.135399151 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106819957 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132376762 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108127267 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105885024 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126600168 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106765459 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111245745 seconds)
  done (took 4.198860572 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095412226 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09034528 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.088470406 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.108632053 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091213556 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.088151722 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.087837548 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.108486365 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090229754 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089157912 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.108328219 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.090213189 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091280305 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.089039503 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107992533 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.090635515 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089140718 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.107032878 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091437661 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09009341 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.089973296 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109212511 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092146955 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089522612 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088665241 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.109849406 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091031337 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088638882 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108676625 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090646157 seconds)
  done (took 3.721247309 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.105999545 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10028065 seconds)
  done (took 1.075723786 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.102746663 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103912861 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.088906579 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108837236 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097712874 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089737563 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117080797 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096809936 seconds)
  done (took 1.675568303 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.146990078 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.16561459 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.094991286 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.101920493 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.163674287 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.155732038 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132200518 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.09383793 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.109375407 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084009065 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.156433492 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083987805 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091499138 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107439555 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093162233 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097377251 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.109168833 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.099964267 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.097185149 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.091265413 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114990992 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09660593 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092529537 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.120486447 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085845304 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092756857 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114875723 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102336987 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087756817 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.113811907 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089665756 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.090568905 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.113745608 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.095214839 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.091310176 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.164040811 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097356574 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107941939 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092784364 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095754685 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.14293243 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.091658687 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092579949 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107764288 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096408513 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.095292162 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.113980852 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.09299035 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084956168 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085467245 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.112332285 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087553092 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.089424863 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111222274 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.093789449 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097830431 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.112128758 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089638079 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087033 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105716082 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091174888 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086981279 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112191861 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.095074832 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09245273 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.110500592 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092484532 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.091574751 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092938323 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.111389862 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.09305747 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105888648 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.112512081 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.094941065 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094675621 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.112237385 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089275778 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095580977 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109675032 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092255455 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.095165207 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.14048069 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093650738 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085933205 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.107493258 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.098674949 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.093207389 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.113873801 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.08622719 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098460169 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.112196704 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.093644718 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084863233 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.106843933 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089777268 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.094684985 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083490357 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111109208 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090852689 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.095440399 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115646918 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091223234 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092133726 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.115624423 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097788359 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090010684 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.159512096 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088435268 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086936015 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.113867085 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096636919 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085605728 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.111126274 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.091135139 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089085978 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.106511832 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.097283135 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092269195 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.110823853 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.097626245 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093488522 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.111594693 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.094359848 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.091282762 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087532318 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.115484966 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099490525 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09410915 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.11297663 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.093643998 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.092547768 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.110829601 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.095901423 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089097966 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.115949142 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090410777 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.090932408 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.093196486 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.115907585 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092454558 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.087374274 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.110742254 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094090138 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.090685569 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.114565275 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.092864397 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087486357 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.103508425 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.093007068 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087734228 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.1122855 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100926248 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.088025312 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.113243831 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089226388 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100281903 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.106664663 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099291886 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094271247 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.096738549 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116641785 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084679663 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089412654 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.114140297 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094931799 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089522632 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.112089484 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.093625201 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.09895775 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.103882336 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.097761463 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084739553 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.092943136 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.118650795 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.094539196 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.095091925 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.108465865 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.133892522 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10328349 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118437942 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093387119 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.091499058 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.115457841 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.09530861 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.095796271 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.116167854 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.097933089 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089643986 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.109439325 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099401751 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087373667 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.094239711 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110053478 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093249795 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084225749 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.113310459 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085359754 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.096191389 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.114158543 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.098118707 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.096622703 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.113012526 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093537699 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100335529 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.106695273 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.097487482 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085782724 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.097104483 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.122594854 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.099602635 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098320388 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.113536687 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091147682 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.094477719 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119633189 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095588216 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092492754 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.112251069 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.088477395 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086653584 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.097912633 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.116340602 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.090410731 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.092683221 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113897665 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095770148 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.091056002 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.104837738 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.098399115 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096652136 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.108899248 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095275824 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.08907708 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.11027217 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10081414 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.08640817 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.108486264 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.09650726 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.096945195 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.092336153 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.11400053 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.095325863 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.098548729 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.115769323 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.096461865 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090226502 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120575646 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091971546 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.09252727 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.109024708 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.098345636 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086938861 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.094497883 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.113979579 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.091964047 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.089155082 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11656417 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100322839 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.098166334 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111675326 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.099134053 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.097743582 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.120061431 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091426649 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.097801223 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.107893765 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.089810857 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08997041 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.086327314 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.116145146 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090322548 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.097487039 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.111013962 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093649501 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.095439977 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115204328 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.092031105 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.098418522 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.12329691 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087949091 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085776658 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.120468712 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093736806 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.08951848 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.109669736 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.09446734 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094482766 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.11635609 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097121692 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.090024759 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.092705207 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.119586389 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090270336 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.097578848 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.118095309 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.098920904 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089736484 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.116278259 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.091140053 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09655516 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.107192769 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093453434 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092601237 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112988763 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.091658436 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.092060797 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.108067858 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087942745 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.089796739 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.098252449 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.113290214 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.097300577 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.101554223 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.111864505 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.091706003 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088878478 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.119704993 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.092525173 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.098215177 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.113189829 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.088332474 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08643826 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.098238147 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114689934 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.09937938 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.088854008 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.116160895 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100286569 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.096804245 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.115950158 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.103010971 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102239767 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.117056097 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100728556 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.086715421 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.110263071 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100607216 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09399011 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.095585401 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.115907111 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.089048633 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095760172 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.119347988 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096388539 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.090902025 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.106701738 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.096901706 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.099746015 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.115928008 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098535379 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.095705975 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094990185 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.1089706 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09795238 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.098803486 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.113858283 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099662158 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092986868 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.116451067 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.09239697 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.099657324 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.112830586 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.089098249 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08731279 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.090103028 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.120072537 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087740712 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.096761718 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.118429302 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091346116 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.093239147 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.117500963 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091355716 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096194423 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.117843028 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092916534 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102408063 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.093939328 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.111714375 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.098834943 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.098413925 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.107130975 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092965977 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091861876 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120747347 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092749417 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.097772453 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113695588 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100279177 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.0963543 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.097964909 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.120741728 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.100102731 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.087516741 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.119638414 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097414417 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.095194363 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.111733456 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093812509 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087686226 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.112303155 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.100768438 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.091272223 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120777972 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.102649597 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.092017467 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.090742288 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.121845802 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093194763 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099889957 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.111264465 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096076643 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.087516068 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.116075785 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.094233306 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.09955549 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.11103745 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.090005254 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099346505 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.118140898 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099458044 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.096970159 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.099044805 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.109509798 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.089328112 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.096709945 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.110896629 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103811725 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097876047 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.112669095 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093159453 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095602463 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.11421325 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102072561 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.089449537 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.090597215 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.117166956 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095084276 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.092025351 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.109716237 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098520855 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092375843 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115873286 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.09359685 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.088638103 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.113671724 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.100510883 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.092341079 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.110041735 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.093439175 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101015546 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.112209804 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.092702714 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089255728 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118920795 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.098038949 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100245781 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.109993154 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.097514982 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.091789737 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.095987839 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.120864981 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.092647752 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094764616 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.114136801 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100623276 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098286634 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.11105233 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.093355604 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103017185 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.119261764 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.096251141 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096370617 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.113250642 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102009018 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100404664 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.095522469 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.10922237 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.090249854 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.092587094 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.108928672 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097509961 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098036252 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.113624722 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.093558962 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099586303 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.118929635 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099107804 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097800079 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.088112289 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.12172319 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.093333391 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096187448 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.109680987 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.090454738 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097739459 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118859258 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095791155 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.095188937 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.095696859 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.118524947 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.089697951 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091411579 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.119484971 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09905526 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.099911802 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113900703 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.094500973 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.097811974 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.124218575 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097542969 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.093688787 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121041186 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102519824 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095612015 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.113638058 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099698273 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.10092533 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.095918427 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.122187476 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.093069486 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.093206005 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.121930778 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.100668652 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104600908 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114256178 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.091315795 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.098424621 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.113395647 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08973819 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.097546081 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.121647945 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102121546 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093717145 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.110521824 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.1052681 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099448235 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113566453 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.093587693 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092375014 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.098206014 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113959184 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099104558 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.091865568 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.122016251 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102271338 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100385358 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.124065167 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090332615 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100243094 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.118410354 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.104020424 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096674206 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.109986291 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.09182499 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.09845792 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.101021425 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.123129966 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099573499 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.098305947 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.119317915 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.098308229 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09559308 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.111845691 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.102699857 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100403103 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.09608328 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.119853189 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094785982 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095789887 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.117324724 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102694213 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102347321 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.117247774 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105951866 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.10104784 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.113047418 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094192054 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096303947 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.11758811 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.097938166 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099715979 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091999736 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.110562703 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102020183 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10117267 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115087523 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104882701 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100419337 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.11522915 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.099964029 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102551529 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.120400046 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.097694914 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.0954949 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.097528682 seconds)
  done (took 61.404556321 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14765518 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10337648 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.117891397 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098411879 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113835139 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12053359 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098022434 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098411541 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.119098006 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107329666 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097253471 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117149008 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113814611 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117919102 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135841345 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106152076 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118193079 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099794922 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097593418 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098891727 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132253642 seconds)
  done (took 3.283939677 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.119989373 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111027678 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129990444 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111773219 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104374527 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.130778733 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108673051 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.13102818 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112677317 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106390788 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.132812547 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10793587 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.125689633 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.10647821 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106588357 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.125825168 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112768134 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104239372 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130090893 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109474798 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.12718939 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.110823494 seconds)
  done (took 3.485977328 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.1338094 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10015838 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.09461579 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.118804217 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101480062 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.09759623 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.12081719 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.100097004 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.105134597 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.092180499 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.111408593 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093479572 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.095346821 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.117995041 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093203482 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.097427564 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.124500435 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102200991 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103121946 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.096581151 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.11024445 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098468878 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098716085 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.109082342 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103683095 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102375718 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.097264871 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.12214487 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.090621975 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.09953858 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.117962696 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093484745 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089284098 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.088844173 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.110499413 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101136425 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101704402 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.118275911 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099234556 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08892543 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.098365466 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.122895068 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089629226 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.09906233 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.11949636 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093165479 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100800116 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.09684938 seconds)
  done (took 5.886911841 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.130562621 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163102756 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103327057 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.135645674 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.133520022 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107491718 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.100593792 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.138581587 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.099545307 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123745906 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.11384775 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.110888545 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12611357 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.10563629 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.124833132 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103849941 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104115341 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101341369 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.127960209 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102867792 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.126140052 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.10477525 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.354960262 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.133290795 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104973542 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10136488 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122347803 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10717805 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.11009264 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.128385379 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105393256 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105284489 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.134742794 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104346586 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.122816723 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.10430223 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.112222019 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.124016414 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.105157534 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099761646 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.122793628 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.10527442 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103491049 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.133060062 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104410592 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103525971 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.122748053 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101015057 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.110869127 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.124585853 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.107859048 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.110336951 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.125599239 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102163432 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.103621079 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.133157735 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102532397 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.121456785 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106630223 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.111609824 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.120150538 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107777349 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.110603663 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.122369572 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107561448 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.110956408 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.124571387 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.103107638 seconds)
  done (took 9.095615493 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132579743 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.104204399 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133927473 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112840517 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104371449 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.126430423 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106199747 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.104819078 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.127004465 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109887818 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12538546 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.201187882 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.123440883 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.109313191 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104068665 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.126717764 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105282024 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104329235 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.126644305 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105162877 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.105500509 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.134209014 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105499701 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.13284386 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117337794 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101285562 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.125944142 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106515185 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112558113 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.126686242 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116289679 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.125503779 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10683526 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113259779 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.139049496 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.10661322 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100324673 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128025485 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106202836 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.104870472 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.123638382 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11424084 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.125879178 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103459576 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105972237 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.126547078 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115027218 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.11457475 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.132756035 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110627332 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.125976803 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11571014 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104645616 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.126165215 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113278224 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.138706267 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116236067 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113220916 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127476467 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11441597 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133676566 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.121444534 seconds)
  done (took 8.265325021 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099990432 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098591294 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097628892 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.120718315 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099164978 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098120247 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.097492829 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.121637392 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099926547 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09854983 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12090077 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100122736 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099321891 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098758231 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.120543604 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099874799 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098344166 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.120025027 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101741752 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098945969 seconds)
  done (took 3.027605773 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110683553 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.11648177 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.122744387 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108716544 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101573461 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.127023681 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103622564 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102565478 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101897716 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124322351 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110235463 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.129503554 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103689082 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108018579 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.129782887 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108258841 seconds)
  done (took 2.747074609 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.121592349 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11719511 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.1912351 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104358765 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.124813519 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109841369 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102496323 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.125428426 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101619091 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107611648 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104568477 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.127011329 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102109116 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102461436 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.12487691 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105867439 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100765298 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.127272691 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103462606 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.189284626 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106690264 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102999275 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.125253249 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106644445 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103243065 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.127911581 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109522666 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102804748 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.102958866 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.125088611 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104081562 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.108312144 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.123349659 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.1069854 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102599363 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.123483182 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10216156 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.102240748 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.125056008 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103578318 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103066841 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.123309226 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104550959 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104713876 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.099917073 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.124864624 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100600564 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.107433533 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.125423696 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105405549 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.101995813 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.13072475 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108219816 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.109337101 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.129340282 seconds)
  done (took 7.227484497 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114205189 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102153937 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.133345065 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101307987 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103704765 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102849109 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.125557016 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104988485 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10318354 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.122576689 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106096383 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103122543 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.123790272 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10506076 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103712835 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.12286562 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101981346 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103649357 seconds)
  done (took 2.922288112 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107946635 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102597632 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105539266 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.123119913 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101844122 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101658578 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.12258825 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101901283 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099840599 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100281525 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123972698 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101375465 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101562221 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.122705886 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103268447 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101572843 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.123467931 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102704639 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102327937 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099987799 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123576717 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101056499 seconds)
  done (took 3.320521536 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.114014217 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.182369396 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108572149 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.189306869 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099053579 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095843703 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.128764717 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099439346 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.112841111 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.119963862 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098286237 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.096834373 seconds)
  done (took 2.393775611 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129107473 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137101322 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12329553 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103777002 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109243834 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12792884 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107410494 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106340762 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136084078 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117578939 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126969862 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115198505 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113659586 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134747534 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110337733 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129849642 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107789163 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10610291 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123824894 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122113871 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105209094 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134001006 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106865647 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105431259 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127876412 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114268726 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134426024 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119216069 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105915589 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136739629 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111402237 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105381259 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135620596 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115961843 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125057332 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11498205 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105833566 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14272804 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110387116 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135708676 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104236229 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109573941 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136233646 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111595149 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134888207 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108789268 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111785477 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126767847 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107566546 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125646066 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1327983 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115397568 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130397421 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114112445 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113640713 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149227288 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116463653 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137101516 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111396779 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139067877 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115106534 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110067048 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136769099 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117653082 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132227068 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116032289 seconds)
  done (took 8.897234966 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14192493 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104504219 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130212136 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119147781 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136695612 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110624599 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109569587 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12742705 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108276222 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103611841 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171375659 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106996559 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114067322 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136551017 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106604686 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12834791 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108462721 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115405798 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125463622 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128344462 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127610596 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117361951 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114960478 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137729223 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118156825 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132451861 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108937501 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106883516 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129093289 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109163634 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111781008 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129090358 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115912887 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103690188 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13742998 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106864385 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106087618 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136009006 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106384939 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132067783 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117137026 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12000923 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130451151 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107514094 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140902384 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10977061 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107434234 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125815514 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108976144 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103715391 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140552738 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118831445 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140621479 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11636933 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106150131 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130591251 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108894773 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1070671 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130795537 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111955696 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137044659 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109542784 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127799914 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130344432 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108376255 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115221665 seconds)
  done (took 8.887863131 seconds)
done (took 168.853004368 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.152910234 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.190761182 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.145819073 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.177969061 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094163623 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.12810454 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.148099189 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.150539092 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.092365337 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.118420871 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.092918391 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.094381574 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.184831782 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.09432109 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.09363051 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.118562647 seconds)
  done (took 3.028100151 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.194486428 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.307584543 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106624957 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119331703 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100059398 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098045337 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.119331017 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100535639 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097775052 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127196576 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.098783198 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.093816715 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.125819882 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095234508 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098514482 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.097045283 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.128702102 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097871498 seconds)
  done (took 3.161769637 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.122682422 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.151092017 seconds)
  done (took 1.236515672 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.131336257 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.192730309 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.279743654 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.167982701 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.11953063 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.137829758 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.147908753 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131462983 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.186563097 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.131851487 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112569064 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096559036 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146190616 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104751377 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.113969743 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119940478 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126097164 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.112108001 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.136086766 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101392894 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.120093445 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.124886821 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103643845 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.133932737 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.17869012 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.109716691 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.124768707 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101832125 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.121778993 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113657195 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.104128776 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.137525794 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111737211 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.17669549 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101245037 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.174261127 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.104441356 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.121217605 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113250939 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.098517297 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.123720959 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103275212 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.111812528 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.11899976 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.10199215 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.104788705 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.125071212 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.101741064 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.104935072 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.128589517 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.105837861 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.12638476 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.148655973 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.127630199 seconds)
  done (took 7.873745247 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.858196111 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.140631377 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098478198 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.998753968 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.149599763 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112825301 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.847764989 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.145567203 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.257576802 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.878938154 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11620995 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.111873525 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.255035199 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.256078782 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.262415272 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.375417454 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.693973699 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.135128175 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.127731329 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.162932784 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107921202 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147112504 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120813905 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.514425498 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100357014 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09790332 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129610756 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112386219 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.175072253 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100833588 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.124694921 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172913255 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.289586603 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206050198 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120841851 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.101232641 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098953341 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.185017008 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266304767 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213796974 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.193205988 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097401683 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09951022 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130338187 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119549421 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096323066 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177825453 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.191038194 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.189176776 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104803183 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.132781222 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112435135 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.106986159 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.175629048 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.09851352 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.376972872 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.359466853 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09978019 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10656215 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.137495094 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262759392 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100543905 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229432672 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.149332622 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21012043 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099311732 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.827008266 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.182881387 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099159086 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.129250724 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107796753 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104832314 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129789203 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163925193 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.500808771 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.112248094 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126617253 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099150814 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229234501 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.100219054 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121691724 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.156284126 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124260249 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.108048719 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134308517 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.113547318 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.186621697 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.245272494 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.135149368 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.10880509 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.128022756 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11277955 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.099906244 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.22998433 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223466968 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.173717146 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.229388286 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109859296 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.180520794 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.182193581 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106919006 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.187251841 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106240804 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.139299404 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108849789 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219541794 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.15665845 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101657027 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104635511 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.132501796 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.135909982 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128342516 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.109125012 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.188295512 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.548672882 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.180766578 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.099317445 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10464947 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109010042 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.178198815 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128203301 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259362133 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111756459 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.183162475 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108987222 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.097490263 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.131647518 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.178669731 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110865876 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108408166 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132206009 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108786703 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.277738167 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216624639 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.111792479 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.248960216 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.201187878 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.107042107 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.191782317 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130202229 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.162579926 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133561645 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108685314 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100288208 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.838126138 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115172909 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.107162226 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129004292 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185061182 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122579266 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103277226 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100371334 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097166457 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.808382707 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126216582 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098586628 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101813105 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.13138478 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108825605 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130246006 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.107879415 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177462503 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240494647 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113139619 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.13071314 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100378282 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.177255697 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.101609644 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099870522 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123534266 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.101896972 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109452126 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.127899438 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10435002 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189855781 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.172876182 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.226767117 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.648548401 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101808658 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100418273 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.25715218 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102837556 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.319962245 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107969085 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.228139435 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183051761 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120247659 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.356752559 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.182692005 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.183822443 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10384165 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.18853722 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.097355356 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131608695 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.176882058 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101674172 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107071133 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.174993424 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.114498843 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.137373209 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.27311069 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100300483 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248609143 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.097823938 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.186753779 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123304564 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110230974 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.320507134 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100481374 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140887695 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.175387631 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106585514 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.100955877 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.646437453 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.100050128 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135186024 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107476557 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.228138649 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.181638542 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.131069985 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110678043 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113591853 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.180827257 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.229062616 seconds)
  done (took 47.501683343 seconds)
done (took 63.760449528 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.296151708 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.256986026 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.303913942 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.210758356 seconds)
  done (took 2.129406601 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.264530067 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.161805122 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.233397708 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097489741 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.242193506 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.096701335 seconds)
  done (took 2.085683945 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.490241513 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.366864833 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.302331856 seconds)
  done (took 2.153245373 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.252101694 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.237158115 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.330536196 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.401699373 seconds)
  done (took 2.334012416 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.267019509 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.124540419 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.123399216 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.209572676 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.230853202 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.211359231 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.128519883 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.176917098 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.128437972 seconds)
  done (took 2.643918707 seconds)
done (took 12.334100973 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.259707204 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.190088908 seconds)
    (3/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.265983992 seconds)
    (4/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.143321097 seconds)
    (5/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.253195813 seconds)
    (6/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.320501363 seconds)
    (7/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.236486274 seconds)
    (8/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.098802354 seconds)
    (9/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.202268972 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.193291171 seconds)
    (11/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.10371192 seconds)
    (12/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.223587327 seconds)
    (13/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.109738554 seconds)
    (14/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.192485327 seconds)
    (15/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.274769966 seconds)
    (16/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.100066776 seconds)
    (17/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.110313111 seconds)
    (18/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.182394087 seconds)
    (19/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.192959846 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.128132723 seconds)
    (21/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.123185073 seconds)
    (22/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.166678565 seconds)
    (23/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.275527741 seconds)
    (24/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.108595836 seconds)
    (25/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.310512571 seconds)
    (26/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.106895945 seconds)
    (27/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.274957515 seconds)
    (28/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.13027187 seconds)
    (29/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.141326174 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.193408679 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.156222846 seconds)
    (32/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.128108413 seconds)
    (33/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.19196392 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.130503251 seconds)
    (35/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.192634128 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.102871392 seconds)
    (37/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.233365033 seconds)
    (38/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.133109496 seconds)
    (39/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.137920166 seconds)
    (40/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.195431566 seconds)
    (41/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.124391353 seconds)
    (42/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.229550743 seconds)
    (43/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.158756664 seconds)
    (44/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111144145 seconds)
    (45/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.218878583 seconds)
    (46/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.163393512 seconds)
    (47/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.108075395 seconds)
    (48/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.141159872 seconds)
    (49/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.076623694 seconds)
    (50/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.109343328 seconds)
    (51/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.11143911 seconds)
    (52/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.134642392 seconds)
    (53/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.192926292 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.101395204 seconds)
    (55/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.196699479 seconds)
    (56/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.0844834 seconds)
    (57/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.233270943 seconds)
    (58/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.189164292 seconds)
    (59/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.127353443 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.127245257 seconds)
    (61/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.13133829 seconds)
    (62/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.122853534 seconds)
    (63/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.076065799 seconds)
    (64/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.168291685 seconds)
    (65/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.087017476 seconds)
    (66/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.1904632 seconds)
    (67/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.076701504 seconds)
    (68/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.106547891 seconds)
    (69/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.211443046 seconds)
    (70/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.076685331 seconds)
    (71/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.158490155 seconds)
    (72/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.184772179 seconds)
    (73/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.084027789 seconds)
    (74/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.155195153 seconds)
    (75/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.212234082 seconds)
    (76/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.075260157 seconds)
    (77/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.075775659 seconds)
    (78/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.127641708 seconds)
    (79/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.077371791 seconds)
    (80/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.160131724 seconds)
    (81/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.14709702 seconds)
    (82/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.110389946 seconds)
    (83/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.07743179 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.10145609 seconds)
    (85/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.099318549 seconds)
    (86/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.103519078 seconds)
    (87/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.140420374 seconds)
    (88/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.188244593 seconds)
    (89/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.200144922 seconds)
    (90/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.07822366 seconds)
    (91/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.133176128 seconds)
    (92/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.123219111 seconds)
    (93/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.078467106 seconds)
    (94/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.169771486 seconds)
    (95/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.124778555 seconds)
    (96/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.110239373 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.104942997 seconds)
    (98/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.100141194 seconds)
    (99/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.085917883 seconds)
    (100/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.123059834 seconds)
    (101/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.076506728 seconds)
    (102/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.083252331 seconds)
    (103/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.129508809 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.103096704 seconds)
    (105/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.180058713 seconds)
    (106/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.076784265 seconds)
    (107/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.099976138 seconds)
    (108/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.10860953 seconds)
    (109/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.164931243 seconds)
    (110/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.07765229 seconds)
    (111/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.107957564 seconds)
    (112/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.195565946 seconds)
    (113/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.13607541 seconds)
    (114/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.169232365 seconds)
    (115/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.149343354 seconds)
    (116/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.07893121 seconds)
    (117/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.17228714 seconds)
    (118/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.076205898 seconds)
    (119/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.126777897 seconds)
    (120/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.172114863 seconds)
    (121/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.104388285 seconds)
    (122/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.16626872 seconds)
    (123/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.077461494 seconds)
    (124/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.076728147 seconds)
    (125/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.076042528 seconds)
    (126/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.077712506 seconds)
    (127/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.162002347 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.104126991 seconds)
    (129/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.107825533 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.126600182 seconds)
    (131/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.07976543 seconds)
    (132/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.145896085 seconds)
    (133/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.076458604 seconds)
    (134/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.100205594 seconds)
    (135/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.077564218 seconds)
    (136/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.079626606 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.101808932 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.125490937 seconds)
    (139/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.161917852 seconds)
    (140/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.077358452 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.101572525 seconds)
    (142/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.109484618 seconds)
    (143/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.100151349 seconds)
    (144/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.140470545 seconds)
    (145/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.147893538 seconds)
    (146/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.085643706 seconds)
    (147/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.077282924 seconds)
    (148/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.087041838 seconds)
    (149/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.194654961 seconds)
    (150/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.110189932 seconds)
    (151/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.107563364 seconds)
    (152/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.123863831 seconds)
    (153/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.173153728 seconds)
    (154/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.111912525 seconds)
    (155/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.100417887 seconds)
    (156/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.08019004 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.103048118 seconds)
    (158/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.111777465 seconds)
    (159/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.165193151 seconds)
    (160/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.077315909 seconds)
    (161/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.188139096 seconds)
    (162/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.100880995 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.100949354 seconds)
    (164/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.086102532 seconds)
    (165/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.07687739 seconds)
    (166/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.078713025 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.13356521 seconds)
    (168/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.079497277 seconds)
    (169/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.098707363 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.12244477 seconds)
    (171/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.133635754 seconds)
    (172/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.103747001 seconds)
    (173/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.079087131 seconds)
    (174/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.076407723 seconds)
    (175/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.100786448 seconds)
    (176/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.079662408 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.102683363 seconds)
    (178/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.084117439 seconds)
    (179/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.0761823 seconds)
    (180/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.136192958 seconds)
    (181/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.077131291 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.120089389 seconds)
    (183/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.126380261 seconds)
    (184/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.104758838 seconds)
    (185/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.079013798 seconds)
    (186/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.077320047 seconds)
    (187/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.076273666 seconds)
    (188/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.108259934 seconds)
    (189/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.077188907 seconds)
    (190/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.079509883 seconds)
    (191/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.078939093 seconds)
    (192/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.078664673 seconds)
  done (took 26.350259974 seconds)
done (took 27.351425453 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.217349123 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.127310284 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.109880698 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.108980109 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.203638271 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.117031077 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.14861831 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111897079 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.118830264 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.132748876 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.10042067 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121430394 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.107849975 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.205849984 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111042289 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.12693481 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.10058792 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.119407146 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.149044692 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125807854 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.204514626 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102757581 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.119154292 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.126108107 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.178707411 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12906791 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.109239268 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.10937664 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.147204938 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.110921379 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.109249873 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.125499991 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.126876021 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.124404539 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100175962 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.136540298 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10198175 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.084449615 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.134171141 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111536022 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.122554442 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.134602107 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111349701 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.101647244 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.135973606 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111234072 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101865285 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.137204822 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.102043316 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.110362663 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10314577 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.151428646 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109635523 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.099028683 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.124769005 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102681707 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.12051632 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.127205351 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124402163 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101766257 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.126815179 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103182831 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.112283368 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102413064 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.136473263 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102547484 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.110443997 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.138090987 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110555279 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103758905 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.126269874 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.1115637 seconds)
done (took 9.911340922 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.112761966 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145916434 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.199433879 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.214845237 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.128596672 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.115200614 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.142375929 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.125439823 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.138809729 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.122030683 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.139202947 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.156987071 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.18193512 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.142927902 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.115465308 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.113359707 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.13818405 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.109247676 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.211322597 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.125888953 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.124558146 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.145157304 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128776162 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.142049955 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.105733921 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.125677689 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.133964644 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.11430097 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.105335064 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.147839538 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.1261437 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.104892712 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.134029072 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124455634 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.122598368 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.141654195 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.117223098 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.113587988 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.130680189 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.106691553 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.112559664 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.14699924 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106054227 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.139018773 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.116222831 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.119892647 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.111596414 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.144258722 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107449664 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11321482 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.131682799 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.13173548 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.140707111 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124082072 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.117165477 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.141824668 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120328533 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.117968436 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.132483302 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.120882132 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106702915 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.104430736 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.13221889 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.1265959 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.132496627 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121761611 seconds)
  done (took 9.627796653 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.130472616 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.13482842 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140732689 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.1181216 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110401299 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125276043 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.100186009 seconds)
  done (took 1.910592589 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.107443018 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.186903353 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.209721965 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.209225556 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.182086964 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.218472053 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148772853 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102998471 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.135876636 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.136584948 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.187092173 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.242140278 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.109904406 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.1428947 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.185765934 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.127624779 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.186909623 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.127341297 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.114797147 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.212097716 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118031678 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.155381501 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.115706452 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.101291641 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.208975126 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.101820001 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.262196488 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11914164 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.137527419 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.11661708 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115857419 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.205752361 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.209554561 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.115805647 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.109939133 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.209248702 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.207148687 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11640298 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.221991847 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.106628762 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.209091212 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.116665102 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117175441 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.142271248 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118112389 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.195134329 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.122752295 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.116373836 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.139812136 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.191077126 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.138433219 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.18780354 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.138752516 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.11761409 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.111562496 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.142334597 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12474108 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.116427917 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.21980741 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118731459 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.209885824 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.209957602 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.185498783 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.211402213 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124606223 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.214773739 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.206295119 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116164927 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109454746 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.143562683 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.186521695 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.141044662 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116557162 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.201025334 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119498492 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.212328388 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.18516996 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.139350037 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.115155849 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.104987119 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.140159495 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.103678327 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.199985836 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.1169882 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113137342 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.144036627 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116913486 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.116347196 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.132017448 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.126169307 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.11504224 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.138655477 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.12142744 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115966781 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.143167923 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.188550632 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.139600051 seconds)
  done (took 15.794728589 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.110838022 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.103727943 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.10747721 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130735354 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.104359573 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.103994443 seconds)
  done (took 1.728336508 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.146321682 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116407062 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.150479645 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119726593 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.161283524 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.218782648 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.224002852 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110165836 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.158440166 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127425053 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.219165451 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.194040984 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.220739122 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118497105 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.224095152 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118510585 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.224502669 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114719366 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.152349011 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113952283 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.14124171 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121337218 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114047214 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.211228453 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118088845 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.145887321 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.112227244 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.124378308 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.150021228 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.11415518 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.119682865 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.144053108 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.110921281 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.111441202 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.224946861 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.109255864 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141984895 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120259847 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.11787855 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.145570929 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.224498737 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115994461 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123659424 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.144827029 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.113317526 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.109262133 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.146161511 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.110908668 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.22496355 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120102044 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.1195999 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.144324593 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118512089 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.119650847 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.137206597 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112024177 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.119947518 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.22560001 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.145915998 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.112077807 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117749878 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.143953686 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112400606 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121759663 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.144348232 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121153258 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.109356543 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.144193808 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116354605 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.118875462 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.145911499 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119987704 seconds)
  done (took 11.307500317 seconds)
done (took 41.411288286 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.503598839 seconds)
  done (took 2.568981871 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.854932493 seconds)
  done (took 1.917877492 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.577549723 seconds)
  done (took 19.677870595 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.528167408 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.597297335 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.027645858 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.151271425 seconds)
  done (took 3.369494151 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.099508948 seconds)
  done (took 2.184797099 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.300522384 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.267385174 seconds)
  done (took 1.639997823 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.755453872 seconds)
  done (took 1.839123472 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.515302894 seconds)
  done (took 2.593228781 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.356699215 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.178092425 seconds)
  done (took 1.624005087 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.616314414 seconds)
  done (took 1.706195993 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.89172683 seconds)
  done (took 20.98189165 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.255476121 seconds)
  done (took 1.34820445 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.293640452 seconds)
  done (took 1.386319523 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.755647943 seconds)
  done (took 4.850008008 seconds)
done (took 68.766729474 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.119501441 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.116464401 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.115102425 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.141520591 seconds)
  done (took 1.57334844 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.127562851 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.11811083 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.120989228 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.163733805 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123761336 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.116546614 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.143750443 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.119399171 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116613809 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.146320318 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.11922741 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116502551 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.146930222 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118501339 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.11422065 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.145728468 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121548071 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.116727607 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.142580894 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120309202 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117509795 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.145036364 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121343686 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119356818 seconds)
  done (took 4.154681188 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.119410056 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.107785691 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.109098942 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.133317304 seconds)
  done (took 1.566227878 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.131589214 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.128569787 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153522644 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125246793 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.128167301 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.153354608 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117624602 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115256218 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.144004931 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127059376 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.132637564 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.157415847 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128297905 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.118036187 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.156130087 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112125241 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117829602 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.156000766 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124476487 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.124457572 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.145432778 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124520409 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.1215431 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.153217405 seconds)
  done (took 4.290156387 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.197080285 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.1283358 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.17431214 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.162049466 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.178357756 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.116112465 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.145691908 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.150179894 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.124021008 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.11772399 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.14688398 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.163657087 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.149190009 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121595426 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117619418 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.14948518 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.130929218 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.122582783 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.192549605 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.12156339 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.150651866 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.131542078 seconds)
  done (took 4.287233847 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.126588708 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108358128 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.102767197 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.137015448 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.119801234 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.109930953 seconds)
  done (took 1.808328345 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.113646114 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104067682 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.102877271 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.127980794 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.107082432 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.1025198 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.101271861 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.130823821 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103278485 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102600863 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.129242394 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103636552 seconds)
  done (took 2.431233925 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.341715726 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.113833663 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.136556086 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.110925122 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.113663467 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.104606203 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.146579161 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.108071031 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.273396482 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.103903429 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.144449296 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.197082224 seconds)
  done (took 2.997278014 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205343879 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146881085 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.293423747 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.340921521 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187314539 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186615722 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.266393154 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192300065 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.174364575 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164047111 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2146781 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160088944 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180196348 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184268229 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167193707 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.160349515 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195065325 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204613116 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167617946 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23549131 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157923847 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199333958 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188990698 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17668693 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137167111 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188247505 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119831017 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12659883 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191981784 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187826963 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170291023 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176433822 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139709784 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215137401 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252269673 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169859504 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287672693 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160498543 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.168822557 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.216432266 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258649842 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139050886 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212800958 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177287677 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129004367 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215142261 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150192163 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.209466154 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.133251996 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169610992 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178118285 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204532023 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.198302164 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13663898 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305237033 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134305209 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.168220106 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165167661 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213800544 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224082605 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177054968 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120971802 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205822814 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216056634 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237247677 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.140820833 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.189650585 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124636379 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190841966 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.205685795 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20580093 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184567266 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.226465226 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130866873 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166547705 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196984878 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178050612 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20021867 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194770373 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120879094 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176412141 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133270239 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124080628 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.216811184 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120151187 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24207901 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129104338 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.342578501 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20965019 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152601579 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186535037 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154644499 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189412275 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144498461 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.128487284 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141663545 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.188549656 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154679593 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1520354 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154817629 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136188519 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.15280723 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148502761 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.147960273 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166109131 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.158451218 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161531881 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193190575 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.130247788 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201946127 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147134274 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.18744039 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165203941 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217736085 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12882415 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156963838 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214515702 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194080391 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.133926796 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202054442 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.221845218 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.150481315 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158939822 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161306615 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219906444 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141493546 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226798654 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136361804 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160393573 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.136357781 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19665934 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156877296 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.18135326 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126049763 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.188358831 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189647753 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.154318132 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137920688 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205792508 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13210913 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122401096 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164486464 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134322817 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.170101899 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.147328311 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.163953611 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154376603 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188918231 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164258001 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181464725 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133117621 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195397922 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13057001 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.193261447 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147760552 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.116838808 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.200645192 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222909652 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128600782 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206227617 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.162165017 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211943017 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196783965 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12877057 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179448022 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155028001 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.118998648 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187507196 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166744492 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189434014 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.185617881 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208959742 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.191318882 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.185548424 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148260815 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190308827 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.184452136 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181671795 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.14203079 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196553781 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165202842 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.147457241 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122976958 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.126416578 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163136601 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129260203 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134396403 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202432368 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188775306 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206240925 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166494934 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135537998 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21817455 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.121823245 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186472697 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.198294614 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138200781 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.214062878 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189186798 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202702554 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138206478 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186731976 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119746594 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12416922 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.161330501 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159261264 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163874876 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133376519 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169128612 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188927718 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197766511 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144443682 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222145051 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190604015 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22583738 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120537764 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.159700692 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197068239 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163040725 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.210454216 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131527273 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.184564633 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192573406 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166779407 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189870401 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196175187 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202437245 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192049881 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.191702006 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129648343 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173628548 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161042559 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161594063 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163777434 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142725473 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158526144 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148858267 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.165206638 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138807617 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209066867 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140389338 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20368526 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.157739285 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195666004 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122380164 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1679817 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172449629 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171860081 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104742017 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194726772 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191832076 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175207612 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152368691 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199971533 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126691649 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.34510229 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211920602 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174507633 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160459275 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137955855 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19442277 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162056026 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187962137 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18336914 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166390129 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203828257 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195859927 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.140439982 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158084168 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146518926 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177184644 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.138066835 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.175981169 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.16000873 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.168570482 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179649578 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163347743 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168015936 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202746209 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.143636731 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.177454474 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137716451 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249999818 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163966947 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198317638 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.160049492 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.193410763 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208691199 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123370591 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124906542 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.16034631 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183300647 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155553997 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175042856 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.198960299 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212000403 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172733316 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189127222 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137583994 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.152872355 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165786045 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174945685 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186803025 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161711066 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.135041971 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218078393 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.127059223 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157791034 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158520707 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30154399 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146853605 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201029617 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107620581 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.295897334 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128160466 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158314734 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163601534 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194483236 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.13215968 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.179799542 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201374142 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138351827 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190019365 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133469034 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208533347 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214954594 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163813541 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196773472 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.141688656 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187719897 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156829571 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201873671 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143294642 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.174843181 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155472395 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221420397 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.206902672 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.132197212 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16614654 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196343237 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166979475 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197541803 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16417871 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182978857 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126039331 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189340415 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137813659 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152931259 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155987003 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.202162905 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129378406 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205268814 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194888277 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131030228 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125308786 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172455172 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162352907 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166022811 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128707577 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209354265 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127675384 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205557202 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203296709 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156698095 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164334092 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17269531 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128137826 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134630794 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169460324 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129002325 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.172295028 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207466845 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.128538232 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204925399 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189229026 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161181228 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183678462 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141614105 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.360172748 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.128193645 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215798671 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150800633 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224557026 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14839736 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201076513 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167452091 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177929301 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162061786 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173563624 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.219867432 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189044559 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.164011746 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158580598 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141001713 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135561299 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.161403392 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150489809 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194293568 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138506787 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.164213934 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.165204196 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170764108 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.144463679 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139808135 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22662543 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177150021 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182262466 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215762945 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134870723 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200972955 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168066484 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157726875 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.160061366 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198937276 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14131912 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178225768 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132270872 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.164497408 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208753012 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.152528434 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158097643 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199118792 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169176718 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198466275 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.133044714 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202777012 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139350157 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202344808 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1272471 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.150073988 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199791042 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132885005 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.155854504 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16851994 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185489465 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.162287886 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169349913 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.175930036 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225257414 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123528127 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131435165 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300385525 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186418529 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195113265 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.163675655 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137566382 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142254624 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18390393 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.161968466 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198954651 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.12808846 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157746435 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.146982994 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.181733035 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.143948475 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194433854 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171222122 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18539617 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186353537 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.131078768 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.286415424 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139252369 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19770222 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.114787065 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.156643033 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13994547 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13134539 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169792679 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209683262 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211955841 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.192408017 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.144352887 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165659823 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125940503 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129045165 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195644799 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149204697 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195967677 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144387694 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.131602617 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139643155 seconds)
  done (took 85.541808078 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176694184 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.167934213 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.187832302 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.24137765 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.209534448 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.309589266 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.243320353 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.264961109 seconds)
  done (took 2.989924965 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.125445051 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.159432912 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.140365131 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.144740925 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.109447947 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.445483776 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.130603177 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.148233245 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.159342498 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.151532821 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.136142813 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.62709681 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.116164782 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.145179594 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.120598486 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.135239486 seconds)
  done (took 4.176117089 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.633314416 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.553561479 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.993827964 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.300564068 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.255360997 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.204631191 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.771868133 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.192515151 seconds)
  done (took 13.095232267 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.151705902 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137819802 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.335731767 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.259482333 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.148206804 seconds)
  done (took 2.231678685 seconds)
done (took 132.22538023 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.129587227 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123930604 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121584732 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.154698022 seconds)
  done (took 1.710882957 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.182377424 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.090825322 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.093380557 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.119028182 seconds)
  done (took 1.680046371 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.414783247 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.09151329 seconds)
  done (took 1.727434609 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.155353519 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.140704608 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.167397719 seconds)
  done (took 1.669684335 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.146680946 seconds)
  done (took 1.339431401 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.134541677 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.120340854 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.2376494 seconds)
  done (took 1.692626361 seconds)
done (took 11.022373728 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.125888742 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.926855843 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.433192178 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131807783 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.709075562 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.427441158 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.449405002 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.174545477 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174059727 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.137517192 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131608825 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.688091804 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.462600772 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.873292821 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.41779866 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.90768649 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.696099073 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110268435 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.146211028 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111223908 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.429743685 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.137046195 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110823531 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110706506 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.723548213 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.419899125 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108592121 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.919809122 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109818372 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112763272 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.427438755 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111043131 seconds)
  done (took 21.140571937 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.124285525 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.165079105 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146762349 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111549765 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112945207 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.139968685 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123021325 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121912571 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20330575 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109735821 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.161106113 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.109299936 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.11488594 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.138537667 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.135681393 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109454244 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.141798743 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114484399 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117249761 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.139292173 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.131728911 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108460802 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.138780642 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113283607 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109098895 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.157887747 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.11149514 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121009568 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.137361444 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114786786 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115121968 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109578795 seconds)
  done (took 5.311391836 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.161222688 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173577576 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148157613 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146244778 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.185626039 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.112501301 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.223409562 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.149043481 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203459815 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11051657 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13025546 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.13887723 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.150772206 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.109546209 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.165031925 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111244576 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.11185594 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.141189981 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118618154 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110945204 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.160978929 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109851378 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111225479 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.141594867 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110172124 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132941256 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.139892308 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122568165 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108034177 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.1429658 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115591084 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.10985776 seconds)
  done (took 5.615414052 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.131390305 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125763513 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.130944516 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.163635423 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119585587 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.123238846 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.154516932 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12187687 seconds)
  done (took 2.279602332 seconds)
done (took 35.546002181 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.142416069 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.128944746 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.130250987 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.155231063 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.191585178 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.148287207 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.128661753 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.116599815 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.156433028 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.131982495 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.11041159 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.118122651 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.159808413 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.121917562 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.22336197 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.126280788 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.227665587 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.193417742 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.148119469 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.12538301 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.117940531 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.228133587 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.122190372 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.147215598 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.197638423 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.111786922 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.213491034 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.120166993 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.150514628 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.113095526 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.222944934 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123573987 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.118371523 seconds)
  done (took 6.164120277 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.216287197 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.119738649 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.149837976 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118730834 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.118882519 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.148462904 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.213686654 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.149488684 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.119205933 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117745154 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.11691386 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.227094133 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.123644446 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.145730412 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122080605 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.109929233 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.244896134 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.120410848 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.109706618 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.123335306 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.115031595 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.117811717 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.256350558 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.114481866 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.117483452 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.149602812 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.122600546 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.122365126 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.150591386 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.121880367 seconds)
  done (took 5.522900415 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.131007895 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132621867 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.135783772 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.217472453 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.148487844 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.161394083 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.139447009 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133373314 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.171093887 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.113488477 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.127291537 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.179991863 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129515596 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.122449458 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.146812871 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13143183 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133853389 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.144268604 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121781125 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129772973 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.164802548 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.130430008 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.135904916 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.151449369 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.112980791 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119836295 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.152048902 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.128420396 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121224336 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.126417034 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.145837702 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.117294844 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.11416365 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.178362086 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115182122 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.125403392 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.168166074 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125564798 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.125264879 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.175727419 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.116681083 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.112541772 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.170437741 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.165600978 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.11404044 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.157056583 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125364886 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.12710316 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.141961954 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131092159 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.154857596 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.144578889 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.133984218 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.11163673 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.142085162 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122805393 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.113475766 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.146931321 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129731878 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.116106399 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.167049867 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121548769 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.123728056 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.114096651 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.157592324 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.112931033 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.111395775 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.147373848 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.13971658 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.120036785 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.180635999 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.113995048 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124627083 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.156745296 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.124601973 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.125500346 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.142042002 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.125754268 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123154989 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.11856841 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.157748311 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.116555246 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.115652524 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.161231786 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.134332385 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.126663082 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.156123101 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128686262 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.116264353 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.145694509 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131745278 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.114382643 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.149027535 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.127380341 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.11231013 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.145193646 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128030999 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.123388851 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.109418483 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.17025566 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.11776989 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.111595492 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.169313427 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.117241517 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.117586573 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.15258573 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.155337378 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.112295798 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.154821674 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.128467981 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.112842965 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.149550055 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.118930514 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.11233743 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129043792 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.161039071 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.120240859 seconds)
  done (took 17.049509197 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.327411497 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.308285484 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.181706291 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.31291853 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.158015901 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.208333808 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.305608296 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.308095933 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.113141813 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.183981289 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.195505441 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.246689326 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.146318376 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.140880325 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.309293122 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.362275969 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.17585486 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.14982154 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.181553383 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.126456406 seconds)
  done (took 5.675667678 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.139838031 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.146982594 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.167331037 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.141205483 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.122855054 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.160327107 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.113239569 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13545586 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.156398961 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123362755 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.116453507 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.159113377 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126579543 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.129365924 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.158611293 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.145245278 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.121006572 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.148115794 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136784269 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118126248 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.132432801 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139727798 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122190962 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.166144296 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.132493765 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.123450984 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.143275672 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119065235 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.120066941 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.151967994 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120121793 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.130104512 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.149768806 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106721637 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125826189 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.126844035 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.150707246 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.117335728 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.117444716 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.146936062 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129970412 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.125754673 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.1523518 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.099651179 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.133314686 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.109721397 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.158193956 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126586828 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.106941793 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.131551694 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.157666686 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.127564189 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.120408019 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.165971246 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.120977741 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.129323718 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.156952763 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.129217553 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.118176647 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.14260062 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.114069587 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.117372858 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.150872738 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.129266007 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125650925 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.163061381 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.131149503 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.113550619 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.146986665 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.1190842 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.118207321 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.126533154 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.165182025 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.122217704 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.120095029 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.158434439 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.123298459 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.095558577 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.152601628 seconds)
  done (took 11.786645259 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.144701092 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.12411814 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131917311 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.181527454 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.127950791 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.118766072 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.156376151 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.132775349 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.130311261 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.164415709 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.130001537 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.126947082 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.166248066 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.12446541 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12307777 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.15989877 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128121299 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.150783811 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.163350515 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.140430198 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.12799027 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.152785539 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.126154 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.124819132 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.17362856 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.125538407 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.139659143 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.159965025 seconds)
  done (took 5.189836483 seconds)
done (took 52.595441662 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.392471091 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.573268507 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.338229789 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.33706724 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.365287439 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.354977055 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.336142974 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.338435278 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.883865065 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.311345909 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.337992141 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.347977228 seconds)
done (took 30.148640585 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.346950927 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.863755186 seconds)
    (2/2) benchmarking "String"...
    done (took 1.630051834 seconds)
  done (took 4.733923339 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.333670314 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.331569809 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.587730444 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.328053844 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.337653452 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.3277797 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.341165953 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.325998623 seconds)
  done (took 16.805568322 seconds)
done (took 27.443051968 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.362426411 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.737392585 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.618949543 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.331788911 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.343154972 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.330605727 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.328798877 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.346769179 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.357926814 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.342441993 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.764736969 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.691829495 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.335507493 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.846496219 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.33097818 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.345101947 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.345827377 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.81311447 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.330911004 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.372686632 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.306531383 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.327472451 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.351232963 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.332860345 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.348627579 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.343900331 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.334517919 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.328510085 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.645136496 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.343384848 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.369061809 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.330525319 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.334287187 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.346432146 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.340052359 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.339876941 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.649055222 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.348230785 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.312517843 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.352001269 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.629513557 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.33422135 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.329430728 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.332770491 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.335495868 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.405900029 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.336733643 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.444616844 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.358050651 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.330225816 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.393352218 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.717446612 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.333219901 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.336464044 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.341323245 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.675316997 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.360953736 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.430924228 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.362417115 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.33391743 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.332691063 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.329822197 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.378022208 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.340637397 seconds)
  done (took 153.389114977 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.334041816 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.333844595 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.335070847 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.339765859 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.333685422 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.335735695 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.335383663 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.335785637 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.337210778 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.357902003 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.336095483 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.333177397 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.335173189 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.294527377 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.343670981 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.358778583 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.337197039 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.332506117 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.357729989 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.335819763 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.342563103 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.336013698 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.33397806 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.33252412 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.345388901 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.425864112 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.380495736 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.349568484 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.34800144 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.338329517 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.341192241 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.34541837 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.983325491 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.208795722 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.345544089 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.371529394 seconds)
  done (took 85.099941625 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.335343747 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.336462223 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.335299042 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.373202958 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.33790489 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.945033075 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.950459957 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.400309076 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.454271711 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.844670502 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.597681902 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.334696061 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.433425128 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.34795609 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.335178664 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.354929815 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.36395852 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.339979399 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.338191863 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.948548442 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.354958789 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.346411383 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.523282388 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.35292733 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.373654062 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.728849543 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.335055555 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.371411225 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.678951077 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.387192358 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.339151956 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.718560467 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.598456453 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.339058845 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.338382374 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.451604445 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.338767252 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.374559768 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.342197632 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.628197832 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.336961712 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.341467683 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.343614622 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.00250116 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.344157747 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.950270566 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.339820692 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.329333222 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.337595034 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.33937203 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.340557574 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.143461811 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.337837405 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.339018373 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.343039868 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.338241997 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.339148878 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.376112634 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.30967411 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.436552913 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.342001072 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.342378262 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.377330764 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.342759485 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.342651791 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.340957623 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.469806441 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.402455147 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.441143068 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.953719189 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.340924062 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.437731542 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.459192513 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.338239432 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.34098749 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.340894586 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.342570954 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.454993267 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.337608489 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.061894185 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.522866572 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.35732767 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.876601249 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.342674553 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.441376901 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.336741815 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.721408018 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.342646745 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.344083554 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.096473368 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.437866078 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.338428729 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.344818515 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.341875476 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.343708861 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.064406656 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.953958563 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.651265414 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.34241471 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.962708885 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.343165341 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.246675543 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.957165512 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.027071668 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.345304221 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.45780675 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.521959692 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.360528295 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.339398215 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.876881415 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.34442104 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.402149425 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.346599959 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.748922778 seconds)
  done (took 391.126909031 seconds)
done (took 630.839629791 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.220597505 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.161969032 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.32196904 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.175951484 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.161225686 seconds)
  done (took 12.277440489 seconds)
done (took 13.512169676 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.549684188 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.550640484 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.413166876 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.554689797 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.379229917 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.566588989 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.531262041 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.363464034 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.462422705 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.43393271 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.469598292 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.404051295 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.380774382 seconds)
  done (took 20.294914271 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.644605622 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.35625993 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.409579971 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.6267099 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.391339468 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.646533966 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.674701129 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.356010318 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.505002747 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.36936227 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.366819992 seconds)
  done (took 19.585143814 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.644994422 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.360110032 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.415303137 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.635238491 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.391638577 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.651175002 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.676204665 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.361535523 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.507157527 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.369179238 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.366925574 seconds)
  done (took 19.617259889 seconds)
done (took 60.737084786 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.384348687 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.455489724 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.37938412 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.367840267 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.362624686 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.36172804 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.367784994 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.367183766 seconds)
  done (took 12.281441106 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.362139328 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.364231118 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.364366974 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.363656236 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.365980491 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.363084985 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.364033175 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.364380463 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.363521178 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.362491245 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.364422916 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.362668391 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.364832901 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.365997215 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.364152123 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.364331896 seconds)
  done (took 23.063378104 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.369234966 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.3641644 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.363032528 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.361890159 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.36464007 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.365792479 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.363175484 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.365764453 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.364655521 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.364363414 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.368228567 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.363576697 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.363274685 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.365107167 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.366411725 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.366050452 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.366888142 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.365013015 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.369115181 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.363802271 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.362946177 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.363426885 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.367020369 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.366708754 seconds)
  done (took 34.001865093 seconds)
done (took 70.584297775 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.351953301 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.363492838 seconds)
  done (took 5.952178993 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.420321407 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.425266213 seconds)
  done (took 4.087747588 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.367563216 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.367685079 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.36246908 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.367743899 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.36341259 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.368516211 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.365419372 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.365007221 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.366551662 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.366089986 seconds)
  done (took 14.904054047 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.367885487 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.368637144 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.367184211 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.368203428 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.366929701 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.364671354 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.368089018 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.369994414 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.366883347 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.36583902 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.366747139 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.367474689 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.367364893 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.368289983 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.368629612 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.365371402 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.366886497 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.366960101 seconds)
  done (took 25.855228738 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.384114187 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.383155242 seconds)
  done (took 4.010091371 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.497970579 seconds)
    (2/7) benchmarking "second"...
    done (took 1.410278275 seconds)
    (3/7) benchmarking "month"...
    done (took 1.472155798 seconds)
    (4/7) benchmarking "year"...
    done (took 1.462126271 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.413739304 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.388287138 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.410475759 seconds)
  done (took 11.296192376 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.368053547 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.573989618 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.702337999 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.956029777 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.369441481 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.371700867 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.230666378 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.374006934 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.372240623 seconds)
  done (took 15.560267645 seconds)
done (took 82.906946468 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.352427866 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.421720734 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.368787823 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.366861304 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.667435315 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.396119487 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.355266149 seconds)
done (took 17.172152358 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.337128317 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.335297238 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.334406708 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.365906473 seconds)
  done (took 10.616765671 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.360990779 seconds)
    (2/2) benchmarking "read"...
    done (took 1.677232438 seconds)
  done (took 5.284246358 seconds)
done (took 17.146485199 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.372013435 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.370490916 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.371713874 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.369976942 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.369909304 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.370423973 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.371861899 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.369854135 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.373065693 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.371215635 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.371999856 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.372649077 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.37206227 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.370199021 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.37309499 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.371461621 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.372304643 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.371852354 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.371096087 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.373159707 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.36986972 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.372924212 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.370614311 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.371001533 seconds)
  done (took 34.161086107 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.372128906 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.373676935 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.372145411 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.369817959 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.372147634 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.371926543 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.372166918 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.370374098 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.371475096 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.373715016 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.371006442 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.373035712 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.372797461 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.370195939 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.370501626 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.37501075 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.372191498 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.372243537 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.374763511 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.374435857 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.372487118 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.373648848 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.372818618 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.375386272 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.371516198 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.373909922 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.373767786 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.374678882 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.371638354 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.37139992 seconds)
  done (took 42.423400921 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.374866511 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.374812847 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.372655507 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.374043227 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.372292878 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.373383431 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.373062456 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.372296534 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.374882922 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.376076488 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.373084044 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.373886537 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.371438018 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.372679491 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.375817281 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.372749495 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.375153644 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.374504831 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.375128644 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.372848386 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.371982319 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.374521532 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.373795015 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.37457643 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.374810743 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.374788066 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.375525036 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.374699326 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.373701983 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.375229847 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.375176545 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.375110255 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.377681964 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.376476424 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.377122131 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.374634591 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.377776008 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.376683938 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.374554454 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.372935137 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.375805709 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.375022484 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.374628208 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.375969978 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.376374217 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.375860777 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.37599995 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.37745814 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.374484833 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.378741146 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.378543422 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.373708098 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.377656587 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.376517918 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.376712352 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.376312021 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.376561501 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.37881983 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.380241604 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.376091863 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.378967043 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.377592604 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.377278374 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.376533938 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.37793698 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.378599382 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.376001338 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.378455891 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.376513428 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.379891538 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.377584863 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.377032204 seconds)
  done (took 100.292079222 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.377545438 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.378246565 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.375750223 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.376931801 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.377814854 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.379072096 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.377810495 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.377950186 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.378471829 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.379290638 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.379480796 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.379724927 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.379004111 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.377172353 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.378096878 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.377081855 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.37818686 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.378561238 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.378362239 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.378454897 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.379476919 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.37829159 seconds)
  done (took 31.57313956 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.378598143 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.378603484 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.377128261 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.379996865 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.380258862 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.378320372 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.379197111 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.380470233 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.381040703 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.380603611 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.380469502 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.378196364 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.382570898 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.377893388 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.378087644 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.382750303 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.380369967 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.381732499 seconds)
  done (took 26.089999345 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.378797218 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.379602647 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.378736579 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.381480111 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.38121027 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.3825284 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.379799142 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.382281438 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.38240105 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.380459575 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.382894069 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.378511246 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.382068236 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.381380951 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.379705933 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.382476824 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.382051317 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.380870179 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.38421225 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.381542706 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.379871777 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.38340183 seconds)
  done (took 31.640033805 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.383454334 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.382467431 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.383318853 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.381893673 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.381594712 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.383537541 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.381237193 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.38278427 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.381924017 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.382742361 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.383824615 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.384536263 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.382245624 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.382709714 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.383353985 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.383269071 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.38250481 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.383323588 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.38337322 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.382164337 seconds)
  done (took 28.911605822 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.382118567 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.383718266 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.383244768 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.382702617 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.382659186 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.384005639 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.383633032 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.383941825 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.383534621 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.385054446 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.383872046 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.383664715 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.38608868 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.384829482 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.384888767 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.382829888 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.383332548 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.385151432 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.383582144 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.382690971 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.38285663 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.384091266 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.384663727 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.383749624 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.383492818 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.383744315 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.383308079 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.384038354 seconds)
  done (took 40.000941382 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.385088734 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.383711427 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.385600919 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.391334292 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.384217349 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.384238783 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.38776976 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.38266774 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.384868942 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.385026384 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.38517551 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.385373416 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.385879955 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.384439426 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.38431962 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.385810078 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.384305321 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.386447025 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.385505416 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.385200794 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.383803404 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.384827449 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.383902318 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.381065006 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.385997822 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.385269121 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.38564037 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.385982281 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.387716882 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.385768893 seconds)
  done (took 42.817045467 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.406766796 seconds)
    (2/2) benchmarking "in"...
    done (took 1.402369588 seconds)
  done (took 4.067035021 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.388116258 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.38820138 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.385758695 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.386659456 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.385106384 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.387779184 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.38714556 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.38690079 seconds)
  done (took 12.355187835 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.380106253 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.387107037 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.388545568 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.388007622 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.388272561 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.378300828 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.387539544 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.392200207 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.380167508 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.381711248 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.379746739 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.380342967 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.385870442 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.382888968 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.381390045 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.386047372 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.392724483 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.390052423 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.388334407 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.386823493 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.387934123 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.383719784 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.389462391 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.392756343 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.381436681 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.389779816 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.389181683 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.391334006 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.381207462 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.389894219 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.383122188 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.392633358 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.390836035 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.389847419 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.391676022 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.390876446 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.392267998 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.389720163 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.394617674 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.392247328 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.391747336 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.389669762 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.383278864 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.389574127 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.387324344 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.394448389 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.39400646 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.391738285 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.384545353 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.385371843 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.392145868 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.383045609 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.3918583 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.388050026 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.387001294 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.39262113 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.395701012 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.386741199 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.384390859 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.394043872 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.402440697 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.393643056 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.39099983 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.393843103 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.391681628 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.392658327 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.397783063 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.399194923 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.395722002 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.390368419 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.390424262 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.401125189 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.397356836 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.396660025 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.394238324 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.391532678 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.386529732 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.396438875 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.395038352 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.398086906 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.396050324 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.393571459 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.391677164 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.392758145 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.386664016 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.396769209 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.392871466 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.393342593 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.385329949 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.39462243 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.400029495 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.395446963 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.386432564 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.389205774 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.389573465 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.396605039 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.384354273 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.391067764 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.397492807 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.395757603 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.395914677 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.388744461 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.393461358 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.399916151 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.395594635 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.397075177 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.401370201 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.389258611 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.397839105 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.404282094 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.39650648 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.38861369 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.394127845 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.400845136 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.390795186 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.394884973 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.401771537 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.39362091 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.402690969 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.396697755 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.393419808 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.40057965 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.40202407 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.394657806 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.391064574 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.401264085 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.395277883 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.395381919 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.404005131 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.39730873 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.397054978 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.393303414 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.401894763 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.390673682 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.39973692 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.388725783 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.401208198 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.39760118 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.396185243 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.391970908 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.39904652 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.396187908 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.395658559 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.40186313 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.40274657 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.393521117 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.403780385 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.395898041 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.394918705 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.399342925 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.402886918 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.398927348 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.390876999 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.402188895 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.38906048 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.401430631 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.393834313 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.402757873 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.398807352 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.400487686 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.397165174 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.389850634 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.393775297 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.401034116 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.3955792 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.395899613 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.401022239 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.395697188 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.400838675 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.390500592 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.399990206 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.389795233 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.394499252 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.403343578 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.398904863 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.399707799 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.396308676 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.405398984 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.398588425 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.400287215 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.391344556 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.393656178 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.404454418 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.404857213 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.407614252 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.401960812 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.400840111 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.393214948 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.39415836 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.403181542 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.393933639 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.403454197 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.405568761 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.407110417 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.397915717 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.402592432 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.395767699 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.404746083 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.400422319 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.410168956 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.402257304 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.398048729 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.394671277 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.405268268 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.399697549 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.406744005 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.392866281 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.404283124 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.400140495 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.402087943 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.402365505 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.397641894 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.40081626 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.406042707 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.400911071 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.401667757 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.396898284 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.405230662 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.396556802 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.399620235 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.405640956 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.401709712 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.406422648 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.410251788 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.402273468 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.40653704 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.404953552 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.399100386 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.406554665 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.402454773 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.402054523 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.40899577 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.40327168 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.400763413 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.409663652 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.406855535 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.397507773 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.406765422 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.410217252 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.403964757 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.397560394 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.408170852 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.403866674 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.405712439 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.40464099 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.39925473 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.408452427 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.408300236 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.413631748 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.399741485 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.407566991 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.400523151 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.408139856 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.401383919 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.408607728 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.404340213 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.408587463 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.414124975 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.402905745 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.402107993 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.409505007 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.40673438 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.407344571 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.400052393 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.409275464 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.408442171 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.408077105 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.40728627 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.404925337 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.408988601 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.398321051 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.408347665 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.40008715 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.415387355 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.422200067 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.410251508 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.410148779 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.409495698 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.410747862 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.408940321 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.403852157 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.404023928 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.403744445 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.40260831 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.402372952 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.412644605 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.404243865 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.410963905 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.408616805 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.409157242 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.41009685 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.406161011 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.402049156 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.410572678 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.407529519 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.409244977 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.400356794 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.414526358 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.403940853 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.409774562 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.408483706 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.404215565 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.415415099 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.41440597 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.40732765 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.407718833 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.4053258 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.401114075 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.405243495 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.415222468 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.404143993 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.411295995 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.403923102 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.407543008 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.404395674 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.414702312 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.417621454 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.404521149 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.413854156 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.411403292 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.402587544 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.40433662 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.414257211 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.414331636 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.421403176 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.403279226 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.413897637 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.413022675 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.409971213 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.412944532 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.411532891 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.413131127 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.412225415 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.416564075 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.416330262 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.410016923 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.414062255 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.420777551 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.411192014 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.409619398 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.401283072 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.416648455 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.420534434 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.406048254 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.409932166 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.406755774 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.413013159 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.410357171 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.412689635 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.412496822 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.410911936 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.416767521 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.41857564 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.414200969 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.413037015 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.417750073 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.422170056 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.417107732 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.424517183 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.409573563 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.417068034 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.414453744 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.407157404 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.408395154 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.410687543 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.416605683 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.406350986 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.417886457 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.411999726 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.4083823 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.414112673 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.421390212 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.406366444 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.41459984 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.421112626 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.403645043 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.416813644 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.412348436 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.407155266 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.416543321 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.413061717 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.404299156 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.410517776 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.410744775 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.415790553 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.410351585 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.417921036 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.407946191 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.420257057 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.41294461 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.414666094 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.415132757 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.416723821 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.408755672 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.416934179 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.41610249 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.424650183 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.410196236 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.414343972 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.413125825 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.421685616 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.424384027 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.411121907 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.420444499 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.416501182 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.413659399 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.414098084 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.420828223 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.409427743 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.418601383 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.408931545 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.411750862 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.413373634 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.418260805 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.421415835 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.420352326 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.409631136 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.411860577 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.419355539 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.416488287 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.415529415 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.414170761 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.42357232 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.409796629 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.413403987 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.417453241 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.412447002 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.425119167 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.411460733 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.414807691 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.413967348 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.421896352 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.418905382 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.417700177 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.407583534 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.409982744 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.423732114 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.420659249 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.413205782 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.414433147 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.419919665 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.410566575 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.415844604 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.417042778 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.413966858 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.413744383 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.42136041 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.412025693 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.412385319 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.413005613 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.418854358 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.42285126 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.421406324 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.415778073 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.426187268 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.427636794 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.422508369 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.412229674 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.413014023 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.414950176 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.421364523 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.420870507 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.413769191 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.426820517 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.4263733 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.421778042 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.419717467 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.422326856 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.411459778 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.423111435 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.420164313 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.41502579 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.426623559 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.416426546 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.426480618 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.419624265 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.420551665 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.413393234 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.414896289 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.417484887 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.416702651 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.425149555 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.42098245 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.424539457 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.419952403 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.425753736 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.420790907 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.421106123 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.419182146 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.41315135 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.424096433 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.413627962 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.421844914 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.425116852 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.413564874 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.425511265 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.421573817 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.416978617 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.419074487 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.423548733 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.420953322 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.415521294 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.421889946 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.429031071 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.43261268 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.423909064 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.416205952 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.419610882 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.423732921 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.421357407 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.422519402 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.415131678 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.43310828 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.436967907 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.417635482 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.423003517 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.426445343 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.435425275 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.422350244 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.423149769 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.418984666 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.422329894 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.426119949 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.425513038 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.428296678 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.429970383 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.419008796 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.430415597 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.417421305 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.421881596 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.426649188 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.433849641 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.424579301 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.41734231 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.431242431 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.433913703 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.423389088 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.437342741 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.431299725 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.422505343 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.43098965 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.418771168 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.424073071 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.420664931 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.432375468 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.425314155 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.425796367 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.424631529 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.417753153 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.426793885 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.434234403 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.431666928 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.423886645 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.416172222 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.423008455 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.427463741 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.426409366 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.43017499 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.427059324 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.425177934 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.42671466 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.420656186 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.437732245 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.442107169 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.431718884 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.42549526 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.424037821 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.428516059 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.430450605 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.423410623 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.429272825 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.42732583 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.426917248 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.426058158 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.43504708 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.428106326 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.419583988 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.423979485 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.419179985 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.429741811 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.435872646 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.447743085 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.43361901 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.43157629 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.430698273 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.429654561 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.424673918 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.430702811 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.428173445 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.422232777 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.422615463 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.430510513 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.430961987 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.429122116 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.424016861 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.433092203 seconds)
  done (took 840.587465 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.428661522 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.42939121 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.428709727 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.427344554 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.428463072 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.428040295 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.428923548 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.429655099 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.426997443 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.430130856 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.429445745 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.428476971 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.429174761 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.429777091 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.428990582 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.426241226 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.43020733 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.430016298 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.430035519 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.429865093 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.428486283 seconds)
  done (took 31.303240274 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.4300263 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.429131381 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.429699348 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.428585552 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.429194674 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.43018772 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.430036072 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.429241067 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.43207487 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.430875521 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.430309679 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.432779978 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.430908715 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.429158303 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.429135568 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.432922885 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.431153435 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.429213706 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.429962739 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.43058748 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.43287476 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.433328693 seconds)
  done (took 32.767300655 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.431786993 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.431102409 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.424017787 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.434763897 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.431095475 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.42969013 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.430214017 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.430380547 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.428007256 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.426136726 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.425410701 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.426231234 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.428836375 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.436503794 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.429029203 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.434053347 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.429274141 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.43037188 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.431007626 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.43182734 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.436636032 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.444562608 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.431625716 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.422221677 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.431852754 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.433030175 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.433292603 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.431127303 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.423602172 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.434695393 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.430147391 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.426597398 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.436867501 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.434146675 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.427563611 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.437016945 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.431536389 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.43029186 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.430901675 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.43101687 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.441771338 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.432741843 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.437213602 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.446886982 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.431159591 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.4289634 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.439447966 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.434953152 seconds)
  done (took 70.028054636 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.435593806 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.43336756 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.434794576 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.434294837 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.433728904 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.433820187 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.434056596 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.432174512 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.430254007 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.43287505 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.432835163 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.433388998 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.433348162 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.43603663 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.434189446 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.433789942 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.434287903 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.434465504 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.434709298 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.434198094 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.432896245 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.433734346 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.43719173 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.433751576 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.439328414 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.434723383 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.434612416 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.436102426 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.43780114 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.436619953 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.431107934 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.433975264 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.43346469 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.436945385 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.433282956 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.434677805 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.436885409 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.435606691 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.436625792 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.433390751 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.436370822 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.436244371 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.436982618 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.43513528 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.436531763 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.435897421 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.437126495 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.434138412 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.436231549 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.437445756 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.435251191 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.438291133 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.43553491 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.435472662 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.436219838 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.436801425 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.43449152 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.436106563 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.437715438 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.439048095 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.437627086 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.434917378 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.436573573 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.438206485 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.438562353 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.436800257 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.438315743 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.436159664 seconds)
  done (took 98.903698209 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.438829811 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.439995017 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.438000145 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.438479917 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.437118586 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.437984907 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.438868273 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.440776382 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.44036072 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.439820919 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.438237488 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.440161897 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.438845522 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.438479799 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.438130805 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.436763658 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.439803971 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.437984151 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.437324584 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.441490395 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.439093913 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.439066006 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.439830163 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.439552292 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.443237012 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.439807399 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.439250338 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.439659667 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.440757602 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.440305322 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.439794397 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.439942092 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.441802061 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.441052722 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.442492544 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.441015536 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.441545757 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.441704741 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.443073631 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.441304625 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.439793171 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.440898063 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.442026676 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.441597774 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.442917288 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.440872821 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.440919391 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.44068173 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.44257762 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.440970612 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.441129136 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.440686063 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.442316352 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.441400346 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.442545542 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.439738467 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.441959752 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.440939224 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.442680921 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.442609289 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.443318189 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.444641482 seconds)
  done (took 90.613007128 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.441305084 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.44308891 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.443803326 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.441434197 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.442679912 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.444093425 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.439773888 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.442365494 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.444188755 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.444630567 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.443728019 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.442875786 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.44377795 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.441788115 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.443787282 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.4449635 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.443118405 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.44179772 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.443721193 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.444801648 seconds)
  done (took 30.165798816 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.443695808 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.44347962 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.441859632 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.443849126 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.445352194 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.444085861 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.444226636 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.443079797 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.443451916 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.443295728 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.442765154 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.445161742 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.44426603 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.445250724 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.44473927 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.442383803 seconds)
  done (took 24.407638656 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.442789385 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.446342595 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.443742376 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.444824689 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.445680312 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.442111422 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.444502589 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.443676425 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.444537522 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.442971565 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.444483423 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.446139208 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.445579508 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.444817083 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.446003731 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.446565308 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.44288653 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.446821699 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.445276888 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.445275312 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.448094298 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.444434727 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.447449108 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.447522334 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.4466303 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.445958716 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.44467405 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.4475291 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.444976902 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.445039408 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.443729755 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.445582411 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.446343778 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.445319516 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.4460112 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.448280432 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.445758839 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.447792818 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.445877463 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.447012128 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.446929168 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.44691172 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.448809298 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.447846054 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.448365059 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.446560366 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.447946419 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.4482403 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.444987762 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.444974713 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.449776204 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.447810791 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.445540728 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.448009054 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.445976689 seconds)
  done (took 80.838063442 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.446147274 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.447743551 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.447717967 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.448046577 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.446088594 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.447398447 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.448966693 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.449269599 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.44977292 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.447156381 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.446481921 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.44903096 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.446801653 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.44651802 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.448925845 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.447428869 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.446368168 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.447142922 seconds)
  done (took 27.366282513 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.44730272 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.448100658 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.449254021 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.448119122 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.448634671 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.447330721 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.448294496 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.448635959 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.451174825 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.448010515 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.450019831 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.449459852 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.449673386 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.451125877 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.449883915 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.449810935 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.451466466 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.447493652 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.449645188 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.449290151 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.449539916 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.450065057 seconds)
  done (took 33.19129524 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.441547646 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.441431128 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.441610006 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.454936083 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.4508756 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.442514236 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.444104777 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.440940841 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.459424893 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.466632468 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.462901082 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.449024701 seconds)
  done (took 18.7066001 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.452364971 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.451250945 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.450913098 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.452274724 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.448864855 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.451323168 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.452517197 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.450443128 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.453021229 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.450761101 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.451806006 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.450162552 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.45154587 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.450679629 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.450136835 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.452449686 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.451007157 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.454187161 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.45105488 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.451694317 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.455991058 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.451559462 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.452425662 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.451048193 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.453386619 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.452438254 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.454073293 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.453575036 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.452438455 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.451652702 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.452055877 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.45487128 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.45409859 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.453855231 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.453619971 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.453412751 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.45311609 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.453618432 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.452921299 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.453126923 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.454469456 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.454125753 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.455095131 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.456184803 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.453116046 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.453316186 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.455159206 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.453338246 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.454115008 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.453874906 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.455464513 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.453025857 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.454396213 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.455926137 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.454872017 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.454942847 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.453089417 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.455444792 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.45380531 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.4527327 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.45520638 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.454722925 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.455214102 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.453360672 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.455622791 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.454954969 seconds)
  done (took 97.219935113 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.457076951 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.45611703 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.455108652 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.455217619 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.455412254 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.456651726 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.456450963 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.455257122 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.457956054 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.454884502 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.456458496 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.453067863 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.457157837 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.457678983 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.457442843 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.456092477 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.457008723 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.457033504 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.459256428 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.457539684 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.458337467 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.457537723 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.457919718 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.45837911 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.45857856 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.457364978 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.457267588 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.459625602 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.459122329 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.457548381 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.458553998 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.457683245 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.458023722 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.458242435 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.457461095 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.457138711 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.457724508 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.459426671 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.457240818 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.458076086 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.460404332 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.459427705 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.456781599 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.458093902 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.460238596 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.460285382 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.456799995 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.459358814 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.457685294 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.458120135 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.459722283 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.458953773 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.457385552 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.459980209 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.459675919 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.460961863 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.458096895 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.462550275 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.459888673 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.459654295 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.459994038 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.459577706 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.460721288 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.459438396 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.459812629 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.458475339 seconds)
  done (took 97.55337311 seconds)
done (took 1969.228850338 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.625033805 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.572286596 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.451114882 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.468143277 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.445997484 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.455027275 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.460328342 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.444548543 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.450912439 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.451233059 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.450839772 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.698447633 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.486566812 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.446014449 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.450515267 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.550502325 seconds)
  done (took 29.22757133 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.481021798 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.459244697 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.586725325 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.455854409 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.480802572 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.663828537 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.519421984 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.457788344 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.653074605 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.473110644 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.458133282 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.47801153 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.457509773 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.456129049 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.476456723 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.666462484 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.754839906 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.455921936 seconds)
  done (took 31.757629501 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.975359262 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.468849317 seconds)
  done (took 5.768962599 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.476007057 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.455764212 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.457945353 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.455419717 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.446703 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.446581432 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.456804557 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.454108506 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.459345833 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.60047585 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.459001307 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.466123816 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.457199776 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.460255185 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.465856662 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.506002638 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.608700764 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.465350545 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.465178879 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.461277047 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.455096997 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.561301981 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.50548185 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.466726514 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.603367362 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.465421409 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.460803022 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.46328402 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.579607245 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.465496938 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.455992069 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.45795056 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.458128371 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.452770477 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.026918083 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.457660937 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.483162211 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.468919497 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.466993149 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.61229649 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.460823106 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.465874084 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.452036581 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.015835608 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.57875447 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.591811004 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.46035027 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.458305356 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.458727034 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.531441723 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.457596671 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.460634402 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.519836667 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.327452558 seconds)
  done (took 92.462602566 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.505234685 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.449385779 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.637437943 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.471259324 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.449947176 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.453470031 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.470329934 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.788831846 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.453318386 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.449631778 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.793613191 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.144249675 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.456108783 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.517614574 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.49112615 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.51617721 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.469258353 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.453008602 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.474472597 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.455346705 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.078268661 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.451026423 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.467876818 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.527661287 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.492054448 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.046134242 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.451391451 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.455870697 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.455342525 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.452896699 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.100459152 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.462717696 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.509145974 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.453064668 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.767085986 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.900061897 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.853304117 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.458669605 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.479891627 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.45319211 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.486610305 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.036263334 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.878817685 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.45091637 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.452077094 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.054413456 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.449805741 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.455424556 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.457005776 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.729098405 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.455401929 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.456410281 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.456760526 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.455679633 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.457322108 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.534401198 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.527575388 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.044741914 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.462204522 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.45542732 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.49758264 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.454319755 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.455040673 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.457272759 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.46066152 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.877792212 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.690689368 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.463679112 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.886061896 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.091780885 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.458522998 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.159053439 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.460049073 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.46768512 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.488582074 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.456633589 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.452535624 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.046735874 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.455806967 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.452932231 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.861082819 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.459037541 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.782918781 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.474920465 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.45540116 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.098146401 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.470132481 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.505920052 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.456577096 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.455882543 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.474304589 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.460934864 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.777637867 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.503561364 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.456499345 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.458268375 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.495472888 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.453374594 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.455652616 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.469175784 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.163089081 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.472772197 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.457215755 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.481575392 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.458757056 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.460331304 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.461212919 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.462363073 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.754002542 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.460987458 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.460886981 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.460953594 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.454281707 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.465878074 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.544789382 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.463630727 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.823229272 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.458193732 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.458230859 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.474880515 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.462016595 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.473627654 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.457075402 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.481118265 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.459652546 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.757598277 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.480965957 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.454710484 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.458895697 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.459395348 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.455245466 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.457412077 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.516107873 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.464595467 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.389893861 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.504290435 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.460216039 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.462267555 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.473243775 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.463136745 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.462185254 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.461143449 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.776409193 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.777027779 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.684626287 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.468221303 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.459754973 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.371929605 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.49879929 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.645176366 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.48344552 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.46437911 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.748504532 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.689763981 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.464326634 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.458441017 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.464979094 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.750292861 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.463386257 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.796842622 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.13536306 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.464927081 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.461814578 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.400125272 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.312447279 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.459084917 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.464324772 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.785992468 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.480143039 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.463909018 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.461517527 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.464434509 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.463156922 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.468215859 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.464928743 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.462722174 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.463060974 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.803624052 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.6644788 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.482545497 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.471029298 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.062921403 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.487437987 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.470139326 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.475178728 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.464596732 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.462772696 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.528375675 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.467598529 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.493369443 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.46043585 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.465537208 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.083918834 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.465065902 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.46132869 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.660122908 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.307234656 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.465237273 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.463245492 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.465448427 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.518268697 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.093835832 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.493738545 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.835624359 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.475382963 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.50869635 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.477216538 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.481111087 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.09398636 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.471645696 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.483228793 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.265192464 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.46744197 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.905964976 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.46077952 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.468472586 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.205422837 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.467449536 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.46406583 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.465208048 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.462974505 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.79561494 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.468256355 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.48113337 seconds)
  done (took 529.862802369 seconds)
done (took 690.400870803 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.466282372 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.461830593 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.445856697 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.461952874 seconds)
  done (took 11.172411101 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.486399852 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.473176791 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.484123226 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.473853442 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.483957796 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.475536271 seconds)
  done (took 10.217976203 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.466336996 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.465128352 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.470970767 seconds)
  done (took 8.741468023 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.724620755 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.497386163 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.884751678 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.468778792 seconds)
  done (took 9.914792763 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.482516147 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.484880012 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.486963322 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.484595922 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.485031869 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.486787401 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.484230495 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.483677098 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.485559727 seconds)
  done (took 14.701201693 seconds)
done (took 56.086142936 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.630614544 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.636891138 seconds)
    (3/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.348071048 seconds)
    (4/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.505198536 seconds)
    (5/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.676828794 seconds)
    (6/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.446670166 seconds)
    (7/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.572691961 seconds)
    (8/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.353570613 seconds)
    (9/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.710510259 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.545494839 seconds)
    (11/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.597796107 seconds)
    (12/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.591482191 seconds)
    (13/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.508428882 seconds)
    (14/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.532033666 seconds)
    (15/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.448537942 seconds)
    (16/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.569260424 seconds)
    (17/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.502425401 seconds)
    (18/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.560635463 seconds)
    (19/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.567245553 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.578073544 seconds)
    (21/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.556512457 seconds)
    (22/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.449727395 seconds)
    (23/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.370467741 seconds)
    (24/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.589172021 seconds)
    (25/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.587388318 seconds)
    (26/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.510380918 seconds)
    (27/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.501226167 seconds)
    (28/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.549416768 seconds)
    (29/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.494778092 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.739662117 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.582818746 seconds)
    (32/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.550701288 seconds)
    (33/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.324537041 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.6063271 seconds)
    (35/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.334069069 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.598133487 seconds)
    (37/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.449342941 seconds)
    (38/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.498210876 seconds)
    (39/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.458892175 seconds)
    (40/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.156768559 seconds)
    (41/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.557353719 seconds)
    (42/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.463057303 seconds)
    (43/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.622702183 seconds)
    (44/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.543900172 seconds)
    (45/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.451081194 seconds)
    (46/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.468785652 seconds)
    (47/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.49933497 seconds)
    (48/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.4752691 seconds)
    (49/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.69723063 seconds)
    (50/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.509509554 seconds)
    (51/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.618179685 seconds)
    (52/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.509516285 seconds)
    (53/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.546698315 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.753465457 seconds)
    (55/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.387783554 seconds)
    (56/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.475754228 seconds)
    (57/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.653874229 seconds)
    (58/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.172014195 seconds)
    (59/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.541364142 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.582450244 seconds)
    (61/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.471230408 seconds)
    (62/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.615565855 seconds)
    (63/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.163270691 seconds)
    (64/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.451209375 seconds)
    (65/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.467866786 seconds)
    (66/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.626670323 seconds)
    (67/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.364074572 seconds)
    (68/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.660648933 seconds)
    (69/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.209708111 seconds)
    (70/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.574917548 seconds)
    (71/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.464985208 seconds)
    (72/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.611778973 seconds)
    (73/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.716156552 seconds)
    (74/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.774189828 seconds)
    (75/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.539839459 seconds)
    (76/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.589413128 seconds)
    (77/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.452188002 seconds)
    (78/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.520460037 seconds)
    (79/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.452619635 seconds)
    (80/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.467637071 seconds)
    (81/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.566618062 seconds)
    (82/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.513351942 seconds)
    (83/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.461115729 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.640967883 seconds)
    (85/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.673430839 seconds)
    (86/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.477100381 seconds)
    (87/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.729665062 seconds)
    (88/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.452536161 seconds)
    (89/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.45882373 seconds)
    (90/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.44878507 seconds)
    (91/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.590348919 seconds)
    (92/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.563997479 seconds)
    (93/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.452751178 seconds)
    (94/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.270914693 seconds)
    (95/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.601846846 seconds)
    (96/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.509381259 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.600378029 seconds)
    (98/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.632781227 seconds)
    (99/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.473893376 seconds)
    (100/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.574756324 seconds)
    (101/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.171903913 seconds)
    (102/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.602770462 seconds)
    (103/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.686790619 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.74758359 seconds)
    (105/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.454871882 seconds)
    (106/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.297298864 seconds)
    (107/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.609373772 seconds)
    (108/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.510902044 seconds)
    (109/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.662261743 seconds)
    (110/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.456834381 seconds)
    (111/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.518339817 seconds)
    (112/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.474703126 seconds)
    (113/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.501167949 seconds)
    (114/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.216604565 seconds)
    (115/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.552325477 seconds)
    (116/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.475227477 seconds)
    (117/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.742937596 seconds)
    (118/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.35961662 seconds)
    (119/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.50607138 seconds)
    (120/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.458681381 seconds)
    (121/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.606075224 seconds)
    (122/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.601632308 seconds)
    (123/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.298864379 seconds)
    (124/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.486591468 seconds)
    (125/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.464087156 seconds)
    (126/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.457257578 seconds)
    (127/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.58974439 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.585394685 seconds)
    (129/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.519876545 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.651534401 seconds)
    (131/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.467085623 seconds)
    (132/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.877666008 seconds)
    (133/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.636442018 seconds)
    (134/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.467179192 seconds)
    (135/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.57147986 seconds)
    (136/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.456357831 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.591442145 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.658114075 seconds)
    (139/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.45599551 seconds)
    (140/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.458696654 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.597184879 seconds)
    (142/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.760998185 seconds)
    (143/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.552451938 seconds)
    (144/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.616779748 seconds)
    (145/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.571688096 seconds)
    (146/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.50820227 seconds)
    (147/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.619002594 seconds)
    (148/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.459016801 seconds)
    (149/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.637010896 seconds)
    (150/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.547109615 seconds)
    (151/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.509729997 seconds)
    (152/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.602333476 seconds)
    (153/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.621363318 seconds)
    (154/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.559788673 seconds)
    (155/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.458147152 seconds)
    (156/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.528399395 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.606584794 seconds)
    (158/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.47825585 seconds)
    (159/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.722939024 seconds)
    (160/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.672978652 seconds)
    (161/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.246065842 seconds)
    (162/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.641275206 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.54240979 seconds)
    (164/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.761727185 seconds)
    (165/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.629126847 seconds)
    (166/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.457785443 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.559548681 seconds)
    (168/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.456993275 seconds)
    (169/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.693732068 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.594960528 seconds)
    (171/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.512340351 seconds)
    (172/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.479802352 seconds)
    (173/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.516699299 seconds)
    (174/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.245710908 seconds)
    (175/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.28665712 seconds)
    (176/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.696096616 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.652825336 seconds)
    (178/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.759203192 seconds)
    (179/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.332810483 seconds)
    (180/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.562047957 seconds)
    (181/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.338433467 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.682250437 seconds)
    (183/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.481526415 seconds)
    (184/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.492037856 seconds)
    (185/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.583463403 seconds)
    (186/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.472455737 seconds)
    (187/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.462152236 seconds)
    (188/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.603397505 seconds)
    (189/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.71721049 seconds)
    (190/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.575522681 seconds)
    (191/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.556939572 seconds)
    (192/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.459064341 seconds)
  done (took 369.1494416 seconds)
done (took 370.488897695 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.509938942 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.57344841 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.490078408 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.488747465 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.490459598 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.492135272 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.511343875 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.489272883 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.505631407 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.507489094 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.494231071 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.494548702 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.508613126 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.504185164 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.525564604 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.491400951 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.491633788 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.502586148 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.505462816 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.508615588 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.49337848 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.494067229 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.520964924 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.491782447 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.501954926 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.500470171 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.496365178 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.499846776 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.49652493 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.507296393 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.483267654 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.494874842 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.507658176 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.503150039 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.493582134 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.502816794 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.493994145 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.577176198 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.514132104 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.503453129 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.500492839 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.510342706 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.496113264 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.497490366 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.504274566 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.519886207 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.502004044 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.506273935 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.482612295 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.492560821 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.508349722 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.505531935 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.502745334 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.49229331 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.480678584 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.507314749 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.501526911 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.511466678 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.502555909 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.495655142 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.527961441 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.512603052 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.506414697 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.502581472 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.500502409 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.508599351 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.503501116 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.510262748 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.502213084 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.495302494 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.495718692 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.502877247 seconds)
done (took 117.606121227 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.619224979 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.489974237 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.65146115 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.503294607 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.665261854 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.61702131 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.504319068 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.501537717 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.50324213 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.295788213 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.501491693 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.503497072 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.491743456 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.503129454 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.613856617 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.502542327 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.503515589 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.194572185 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.504673582 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.633638547 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.489842962 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.503814452 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.501778502 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.3020516 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.492481446 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.489000114 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.636051785 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.503847053 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.201679463 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.487533956 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.491429383 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.201384982 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.638455448 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.519794791 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.513253457 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.511425082 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.663181625 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.507909806 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.622126976 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.62100959 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.654587078 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.533860135 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.490189808 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.494401309 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.510150468 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.506589488 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.506736284 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.535592947 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.493778193 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.506831441 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.197653205 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.51504327 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.505595508 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.504767049 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.503775586 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.534678213 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.5055091 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.504975697 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.636928317 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.507590097 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.621593379 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.304666471 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.302171993 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.506189121 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.491321158 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.508324341 seconds)
  done (took 119.442507232 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.567669279 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.571148778 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.620683195 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.499063235 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.54582069 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.624199067 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.498664869 seconds)
  done (took 12.28539094 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.502858281 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.506909366 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.544477481 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.54592822 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.50785656 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.672268579 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.505676006 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.507484589 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.504179919 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.548563558 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.508149206 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.509580536 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.517319845 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.498740104 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.546692806 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.5102758 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.61721943 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.499278723 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.508742894 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.651733001 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.50905565 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.517783268 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.550413145 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.509843094 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.509215973 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.506447537 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.282679122 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.507943163 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.509498225 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.507249025 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.509058806 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.565230924 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.508367043 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.499305989 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.510737544 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.612899025 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.510800537 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.509135165 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.510915663 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.50162403 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.509385647 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.508235298 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.509658881 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.508899543 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.511478905 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.525558362 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.509007998 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.508815003 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.509529796 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.511573581 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.552298084 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.510662915 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.50818204 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.508897273 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.553115878 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.518941185 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.510252402 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.512133126 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.509789817 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.510219742 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.653430813 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.550550497 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.509682946 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.548843684 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.510089294 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.51189542 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.50953487 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.511158425 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.592272918 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.51003651 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.547305673 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.511098127 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.680326276 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.527356691 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.512328258 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.505979679 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.505745147 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.512000713 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.501309746 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.507523825 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.511790016 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.50452349 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.511176467 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.514035801 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.510071646 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.663168395 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.608787701 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.511057527 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.519185084 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.510917434 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.510273422 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.551285441 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.511437017 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.510802596 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.554583432 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.622635819 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.554352521 seconds)
  done (took 154.429695555 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.51567016 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.517972359 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.508112865 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.529811584 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.505336962 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.50555426 seconds)
  done (took 10.447340945 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.507992098 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.515645112 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.5123882 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.511877731 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.513425247 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.515361358 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.514973857 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.506696288 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.518540257 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.515569926 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.5146561 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.515337856 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.514285557 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.515244728 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.513243279 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.515211921 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.515134513 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.512054419 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.515906343 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.517491316 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.504263364 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.51426018 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.513125156 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.504336551 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.520789945 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.511425252 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.528774141 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.515564087 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.515219369 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.512989442 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.520349709 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.520239903 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.507667846 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.513625634 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.518724218 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.508817125 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.518037073 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.52001962 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.517549237 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.519699671 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.520655884 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.513756303 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.517932629 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.521015053 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.51033861 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.51277605 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.521678662 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.529576692 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.518680702 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.522474311 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.519771486 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.515545087 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.517496726 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.521194026 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.510320241 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.513247997 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.522190391 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.518970407 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.519452101 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.511510181 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.518726155 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.520306688 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.5099544 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.523344066 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.517137568 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.520170043 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.509833 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.521877702 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.518700297 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.519895582 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.52222539 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.515054445 seconds)
  done (took 111.531843717 seconds)
done (took 409.492210142 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.99776932 seconds)
  done (took 4.366033699 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.623633458 seconds)
  done (took 3.992017867 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.600006866 seconds)
  done (took 26.976194094 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.553825529 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.52632215 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.529951073 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.503022041 seconds)
  done (took 11.482021309 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.076582446 seconds)
  done (took 4.44895063 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.513638221 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.523168592 seconds)
  done (took 6.404727907 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.836900876 seconds)
  done (took 4.206265306 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.87211076 seconds)
  done (took 4.248576347 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.512447473 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.533206557 seconds)
  done (took 6.425687841 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.482224661 seconds)
  done (took 3.853225539 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 21.349738537 seconds)
  done (took 22.719598469 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.526214795 seconds)
  done (took 3.902458915 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.546786262 seconds)
  done (took 3.919661756 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.675613542 seconds)
  done (took 7.046648822 seconds)
done (took 115.359685304 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.50357101 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.505880652 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.50782763 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.506377999 seconds)
  done (took 11.395883589 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.583610735 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.582623523 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.593464012 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.577572356 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.579341916 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.585325244 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.547019882 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.544752173 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.574515769 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.571035684 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.588033639 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.576478172 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.586254709 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.545163006 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.572508266 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.590179115 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.575897137 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.591159384 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.546148617 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.578201991 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.520779225 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.578766405 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.570800275 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.518870344 seconds)
  done (took 39.051117632 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.011482431 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.586082818 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.673898547 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.569621578 seconds)
  done (took 8.214098848 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.625468322 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.625249148 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.649897695 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.685616732 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.728355754 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.639467222 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.545724318 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.542583708 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.530251089 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.628920241 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.710311153 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.624707561 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.847713302 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.520539337 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.839891915 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.52265632 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.521761415 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.625794729 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.674044981 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.707344934 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.520620707 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.624205814 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.633739228 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.62634382 seconds)
  done (took 40.574535877 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.531734101 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.539101223 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.524032731 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.538315729 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.524810439 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.522688968 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.527120217 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.532157189 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.524522651 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.527082388 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.525259601 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.537905198 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.52343512 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.524023623 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.530795364 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.525515335 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.526552527 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.531377562 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.533379365 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.525112706 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.522108074 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.532778521 seconds)
  done (took 35.004618501 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.509051371 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.508188136 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.857956908 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.7635786 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.510985725 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.510890111 seconds)
  done (took 15.034557816 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.598356921 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.761120174 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.517738254 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.948328424 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.036786362 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.518939425 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.516308405 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.805133887 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.172291842 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.180164612 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.577388381 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.599288359 seconds)
  done (took 22.608415493 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.524623561 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.513032772 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.520506846 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.527248401 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.581917717 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.521763678 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.522241949 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.512398363 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.58152425 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.5889196 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.519473619 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.584160667 seconds)
  done (took 23.873061681 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.604026477 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.520215235 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.536792083 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514041952 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516900509 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.518387252 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.535090097 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.304065931 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.522555738 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.79612906 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.534254602 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.601870919 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.769205991 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524198004 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.523266582 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.49622433 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.743150103 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.119581876 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524134652 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.522861574 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.551143992 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.538355593 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.523706989 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.774285246 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.524821084 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.523930842 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.782778342 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.522931114 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872333023 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.850876645 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847499816 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.524030478 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.799976869 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.237993861 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.624649309 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776859186 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.535658175 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.524232572 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.502977338 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.520927928 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.522448987 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.525946743 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847710413 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.528064527 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.523684702 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.529126069 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312676275 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.524863575 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.5248797 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.523881896 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.850084328 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.606599974 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.528408319 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.524140179 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.564356367 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520796495 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.528558414 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.65722195 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.166923161 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523846209 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529046401 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.525713137 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.540029168 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.531988283 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.285276303 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.528352993 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.530013265 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.531754163 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52509147 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.520321695 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.542219456 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527656393 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.540864415 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524087047 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434248892 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.540625567 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.529324938 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174910903 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528341668 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.527453806 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.753321767 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.528967365 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52753909 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.528054965 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.525446025 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.398630416 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.530249529 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.49406692 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56214614 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.316721172 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.776496646 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.547040818 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.555130373 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.750313773 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.493774443 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.528075642 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.528799207 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.553502259 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.546055521 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.309444261 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524775524 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.527705678 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.774287927 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.734789348 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52801913 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.504340432 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076385862 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.529041122 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.551626405 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.528628241 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.784930413 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.268457466 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.853622263 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.546812226 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.561598378 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.530476585 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.46683709 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526712623 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.534049457 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.544280563 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.849160474 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.498273857 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52592422 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.604900227 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.541153456 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.531332693 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.531960559 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52997819 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.529963612 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.764692245 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.536913623 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.859615353 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.53560059 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531124858 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.523913955 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.529176907 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.531424985 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.75404763 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531115218 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.804374717 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529073295 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52933081 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527324697 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.746175141 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.541266216 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.533705149 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.872987644 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.537487511 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.540471082 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86065373 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.564975218 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.647884659 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.569806982 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.542526011 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.787052942 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.534840241 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.53857107 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.532360422 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.529858628 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533915488 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.540704231 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.543442614 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283612524 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4984314 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.533720399 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.534782382 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.546067514 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.606885429 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.540607287 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.789328982 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.532220713 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.545468086 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.539256762 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.537411468 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.758212649 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86361022 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.534942941 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.702604832 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.093610259 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.283637095 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.543581557 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.531704463 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.535589638 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.532858843 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533760846 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533229779 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.533414136 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79059854 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866500367 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.525265547 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.283575076 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.53454827 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.531906675 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.535635437 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.859572645 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.542494033 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.535581075 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.552382654 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.547774305 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.535612023 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.862084706 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.754263404 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.553144438 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.537180731 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.053630833 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.544510047 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.534264529 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.536022274 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.563396823 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.535753247 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472326763 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.87309728 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.531195978 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863683535 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.537172668 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.548571193 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.53617225 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534953463 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536884078 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.54220551 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.559172761 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.793002262 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.537572457 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.53662337 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172758993 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471380295 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.231216059 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.543141112 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.534193643 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.558972147 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.32704176 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533231624 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.537826888 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.824850322 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.328776021 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.532235793 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093270923 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.54167605 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.436795016 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867557001 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.765406347 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.544087425 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.53360436 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.87455188 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.752836968 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.562473434 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.541899101 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.53931264 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.502446872 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167557879 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.537156078 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.722940641 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33572975 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.538418051 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.542601979 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.602012726 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.53576906 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997037935 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.537374917 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.540872729 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.549409121 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.540043411 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468081344 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.541783276 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.539232715 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.304308216 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.550457448 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.091869407 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53585939 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.794812859 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.87038146 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.844261862 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.549702696 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.540591296 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.780725291 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867178962 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.54073884 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.555227485 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.239231072 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.39570104 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.547484401 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.54228125 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.47112052 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536412788 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.896512768 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.544538843 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.541631921 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.549657296 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.542438234 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.540213436 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.540049595 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.550680783 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513630873 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.143699263 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.534595137 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.58026361 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.545434804 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.543470535 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.789192798 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.558335363 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.310858732 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.767130953 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.541818824 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.575243692 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.547772273 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544715872 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.511460863 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.541335091 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.544909401 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.593516691 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.758457386 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.561205703 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.507333432 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.551605954 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.747423066 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.542531679 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.54248683 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.813302 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.542847143 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.545049887 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475695427 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.569896741 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.544272418 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.558951658 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.53164817 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582962805 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.615683483 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.799822514 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.873722297 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.872709524 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010823775 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.541041546 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.544986909 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.55826695 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.625821065 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.543998441 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.541011592 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.546540693 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296063096 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45989903 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.291849802 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.870990056 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.547694084 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.556072606 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545150862 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.78071969 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.544236977 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.819932768 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.540342609 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.541527884 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.566827758 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545989782 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547720232 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.758191721 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.819291955 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.545772638 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.545577616 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.549773418 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.545479525 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881509447 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.759500713 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154647276 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.2105205 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.546871214 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.543723858 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.335546658 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.816929849 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545757236 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.548405266 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545665415 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.55528149 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.543476455 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.549419926 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.547835469 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.768316108 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875253539 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.275902651 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.873423687 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.730699362 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.478832011 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.56164207 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.788221221 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388921531 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.805901784 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.302488291 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.423848543 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.79696921 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.621221468 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.807616918 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.549424982 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.783923976 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.561703909 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.551224004 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.548878333 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547119903 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.549557006 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.879429093 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302865082 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.796815014 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.553782722 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.562019 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.579902376 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.80437352 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.772936715 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.429949071 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.763786742 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881676541 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.55705571 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.550514324 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.324240543 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.882447843 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.550053258 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.549163327 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.818590368 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.549906253 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.582881565 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.427329258 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.547865452 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209204451 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.763003691 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.570518384 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.552553917 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.428226321 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299208777 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.54697499 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.157963522 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.552119414 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.551621783 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.82692105 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.557202332 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.564694728 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.833115932 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.555800528 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.565974255 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.811091374 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.307771326 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.4568438 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.563076286 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.549220863 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.550368911 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.55226845 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.561538688 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547970469 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.555893469 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.022641491 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.550401255 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.55186383 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.560798799 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.569031946 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.567538749 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.552650121 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.553317669 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.555933231 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.519366827 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.523079185 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.571056647 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.678659784 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185082779 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.549165818 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.168904067 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.888659896 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.802832702 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.556157354 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.524053719 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.558613171 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.552168361 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.555711622 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.548610067 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.539581739 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221682899 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.563165832 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.887313396 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.560074144 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.764074365 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.765389293 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.570301872 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.80994374 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.565334289 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.573938252 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.522632317 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.553702134 seconds)
  done (took 1069.370008082 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.567848939 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.554607248 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.570495627 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.632784426 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.579059207 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.555480823 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.554103641 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.551456395 seconds)
  done (took 21.973453475 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.557040628 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.549620567 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.550033359 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.549539387 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.547504935 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.108197433 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.549365023 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.550916224 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.568055317 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.549464261 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.548174782 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.348741126 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.576347399 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.552372883 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.547353035 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.554058652 seconds)
  done (took 35.620406773 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.765471633 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.768111863 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.072965434 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.627693772 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.56909592 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.54433923 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.929381037 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.570672297 seconds)
  done (took 29.254789926 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.558643496 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.558086142 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.55976393 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.561349726 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.561870136 seconds)
  done (took 9.205285919 seconds)
done (took 1362.550970384 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.560823549 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.563119533 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.563529023 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.562096075 seconds)
  done (took 7.654491413 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.526785129 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.51994275 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.522343829 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.535190836 seconds)
  done (took 10.513292567 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.392939537 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.274857729 seconds)
  done (took 6.076350338 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.122363636 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.116147586 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.111023176 seconds)
  done (took 7.756927559 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.856713253 seconds)
  done (took 3.266930707 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.548279196 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.549959355 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.291818379 seconds)
  done (took 8.799497804 seconds)
done (took 45.476352876 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.566321481 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.313593369 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.777670007 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.559281846 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.708834936 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.704720197 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.852590395 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.545742509 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.552012348 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.565545413 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.556507895 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.70728309 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.8385618 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.316431628 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.838119815 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.318509739 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.71412419 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.550920618 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.546598953 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.553852331 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.847083722 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.557679042 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.55968946 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.55875103 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.709502557 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.696237409 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.56390783 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.314619591 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.565100199 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.544133414 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.690978313 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.549671644 seconds)
  done (took 88.653058546 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.551290183 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.55878398 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.544730802 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.56605537 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.562710713 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.546733338 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.566365983 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.54660835 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.550031045 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.561564856 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.547434094 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.565233509 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.550082004 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.547275944 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.568893524 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.545739986 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.574620473 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.55621212 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.548816271 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.568883945 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.550362211 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.560725837 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.558450938 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.545985734 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.568249416 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.549400867 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.567470559 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.546368449 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.548355453 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.567432605 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.54871098 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.553896474 seconds)
  done (took 83.204136293 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.565929908 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.54990662 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.550210775 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.583249749 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.549152745 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.554148463 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.574539702 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.552552901 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.54971542 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.553111157 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.551662122 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.549253169 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.569980205 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.550472092 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.550134198 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.550208541 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.549061883 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.554461933 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.569346024 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.548104445 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.551002763 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.560698674 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.551445553 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.550830242 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.569062433 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.551088689 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.55050662 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.558339867 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.569876991 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.551881013 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.55422522 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.556339062 seconds)
  done (took 83.215084978 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.795532673 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.568705996 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.572409142 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.565801284 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.575132808 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.570675228 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.564425835 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.803942418 seconds)
  done (took 16.430594887 seconds)
done (took 272.912293302 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.574543261 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.153987246 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.595290786 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.573030772 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.583108512 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.593316128 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.821869011 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.594434274 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.823274838 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.582182133 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.577397747 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.567400591 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.521660802 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.723657468 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.467853442 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.568957048 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.572815488 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.558211198 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.244710932 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.880147353 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.589224067 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.574851991 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.453962671 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.563702824 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.532940193 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.660735706 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.679926992 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.812946602 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.747630646 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.657888522 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.153033298 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.581636135 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.569706952 seconds)
  done (took 71.570489781 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.564000247 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.574113567 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.57282539 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.574422422 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.572665125 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.572363323 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.565276866 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.571130134 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.5756716 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.574317923 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.574197592 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.574764329 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.575487866 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.573524097 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.575830623 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.549745834 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.564837747 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.57396193 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.566669933 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.547754178 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.573708618 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.576726315 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.576888817 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.577447502 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.575885278 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.573870278 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.574725969 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.578473761 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.575519998 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.573567629 seconds)
  done (took 48.56787176 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.572641674 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.230055497 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.413331578 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.57007992 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.564717152 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.570780495 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.926887574 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.574191004 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.571007909 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.572607303 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.112193773 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.575212865 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.606139434 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.435320691 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.567072407 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.577574042 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.577359047 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.567989625 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.241647715 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.573623471 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.925426615 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.57578451 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.927136389 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.577617536 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.570651767 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.568674519 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.574016843 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.475271334 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.5908756 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.125625859 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.549784794 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.919274203 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.409385306 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.480938113 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.545181719 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.579990387 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.578498761 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.122992569 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.570164066 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.569546151 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.920924958 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.567921848 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.435785538 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.30394526 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.587432035 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.579285325 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.511204559 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.118576961 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.866576897 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.577622551 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.47258679 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.569262288 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.579624527 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.571901656 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.87012397 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.569774693 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.571473358 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.528209201 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.571804091 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.924657044 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.577261305 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.573657603 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.253642636 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.572613795 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.238064225 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.569498433 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.580442149 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.572806826 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.436156652 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.570645153 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.327848306 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.585601728 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.576878477 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.120748264 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.243957171 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.57625532 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.570581694 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.246595323 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.433274447 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.942366323 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.57762398 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.454039976 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.949629973 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.576282021 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.582497851 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.58082707 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.582966952 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.64714821 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.925103217 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.233404196 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.330281249 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.544335855 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.925624557 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.583624279 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.571358432 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.535580521 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.577241685 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.58235325 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.450779353 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.336687524 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.590566284 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.582946719 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.303984158 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.592897502 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.931150082 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.582072384 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.497734641 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.576353881 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.648634948 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.582272948 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.580832336 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.577996346 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.931133899 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.580892573 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.583722839 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.299032293 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.168087167 seconds)
  done (took 220.486607184 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.569406954 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.564968861 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.56981896 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.586412181 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.568482182 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.575765948 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.568572249 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.569128325 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.573390198 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.567976685 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.568363428 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.57850283 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.574504559 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.571014435 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.576005603 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.567564264 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.571731342 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.573290205 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.566832393 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.570408342 seconds)
  done (took 48.859202434 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.585941091 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.266494988 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.227221811 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.587457149 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.583221978 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.577063407 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.646291415 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.587064263 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.584270313 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.942557174 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.789389258 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.589489397 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.5853674 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.587394545 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.233414035 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.558830303 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.952742711 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.278627594 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.587550525 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.276182841 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.55873596 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.585892564 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.578175032 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.277699334 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.965336842 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.934876936 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.649843093 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.278083478 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.590262211 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.586798198 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.278798615 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.588700698 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.58070375 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.267987429 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.589206981 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.602381477 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.587613269 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.648622171 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.645700186 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.950329841 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.287445307 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.946949761 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.601233324 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.761160865 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.588937028 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.558632465 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.29325011 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.590125455 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.559141529 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.588441258 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.594039791 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.251958214 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.581300787 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.248727063 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.591656226 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.590346648 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.282172584 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.253325635 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.239835994 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.793300958 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.57678817 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.933932135 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.592237891 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.295486874 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.589910204 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.589438658 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.591624586 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.79523522 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.279995251 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.939682806 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.95889606 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.954183733 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.589849827 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.661487933 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.585665668 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.951752697 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.657993939 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.009298708 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.956479053 seconds)
  done (took 144.912296818 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.898758048 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.71021519 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.027053917 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.243611012 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.163059869 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.737646795 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.713434869 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.857761938 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.599949413 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.688299732 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.38803347 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.685863453 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.440208745 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.663434279 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.70378246 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.716773626 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.054383795 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.596649812 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.310129476 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.357597908 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.585561349 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.697037023 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.136211757 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.815351161 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.585042499 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.19317513 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.594205964 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.201525048 seconds)
  done (took 59.796026404 seconds)
done (took 595.60679806 seconds)
SAVING RESULT...
DONE!
